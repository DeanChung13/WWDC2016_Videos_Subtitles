00:00:20.587 --> 00:00:24.324
迭代的UI设计

00:00:28.529 --> 00:00:30.664
大家早上好 哇 这掌声真热烈

00:00:30.898 --> 00:00:32.198
感谢你们的到来

00:00:32.499 --> 00:00:34.101
我们非常开心能来到这里

00:00:34.301 --> 00:00:36.170
我是Ryan Olshavsky

00:00:36.236 --> 00:00:38.572
和我一同前来 坐在下面的是
Jonathan Cho

00:00:39.072 --> 00:00:41.074
我们是Apple iWork
团队的设计师

00:00:41.141 --> 00:00:46.547
我们为Mac、iOS及iCloud开发了
Numbers、Pages和Keynote应用

00:00:47.848 --> 00:00:52.786
Jon和我设计软件界面
已经有很长一段时间了

00:00:52.853 --> 00:00:54.621
为Apple和其它公司都设计过

00:00:54.922 --> 00:00:59.927
若总结出一点来概括我们多年工作经验
那一定是...

00:01:00.827 --> 00:01:02.763
“做出好设计不容易”

00:01:03.697 --> 00:01:06.266
我知道这听起来好像是
每一个设计师都会讲的话

00:01:06.433 --> 00:01:09.603
因为它有利于我们的工作稳定性
如果每一个人都相信这个说法

00:01:10.637 --> 00:01:15.342
也许你们见过一些设计师的作品
觉得看上去也不是很难

00:01:16.009 --> 00:01:21.648
你是对的 很多时候优秀的设计
看上去会是显而易见或者毫不费力的

00:01:22.282 --> 00:01:24.051
但是真正让设计变得困难的

00:01:24.384 --> 00:01:26.720
是所有优秀设计
都必须回答的问题

00:01:27.287 --> 00:01:30.157
类似这样的问题
“我们将设计什么？”

00:01:31.124 --> 00:01:32.326
“我们为谁设计？”

00:01:33.260 --> 00:01:34.661
“它能像预想的那样工作吗？”

00:01:34.728 --> 00:01:36.563
“我们真的做对了吗？”

00:01:39.032 --> 00:01:42.069
这些问题没有显而易见的答案

00:01:42.202 --> 00:01:46.139
它们总是很困难
即使对于那些最富有经验的设计师

00:01:46.373 --> 00:01:50.410
如果你是一个独立开发者
或者你是团队里唯一的设计师

00:01:50.611 --> 00:01:53.180
或者你从未设计过任何东西

00:01:53.447 --> 00:01:56.216
回答这些问题会是一项艰巨的任务

00:01:56.416 --> 00:02:00.854
但是我们必须要回答
因为我们知道 设计很重要

00:02:00.921 --> 00:02:03.557
设计是如此重要
它会深刻影响到

00:02:03.991 --> 00:02:07.361
应用程序的质量
和用户的使用感受

00:02:09.329 --> 00:02:12.566
一个糟糕的设计
可以让基本又明显的交互体验

00:02:12.633 --> 00:02:18.038
变成一次不堪忍受
甚至令人尴尬的用户体验

00:02:19.072 --> 00:02:21.008
一个优秀的设计 相反地

00:02:21.074 --> 00:02:24.278
能把一个令人望而生畏
充满困难的任务

00:02:24.811 --> 00:02:27.848
变得简单 友好 并且优雅

00:02:28.949 --> 00:02:33.320
即使它内部构造极其复杂

00:02:35.389 --> 00:02:38.792
很不幸 优秀的设计永远没有捷径

00:02:39.326 --> 00:02:43.463
也从来没有神奇的按钮
可以把各种截然不同的功能

00:02:43.530 --> 00:02:45.766
一键整合成用户满意的成功产品

00:02:46.466 --> 00:02:47.901
设计不是毫不费力的

00:02:47.968 --> 00:02:52.139
它需要时间、努力、
专注和严谨的工作

00:02:53.073 --> 00:02:56.610
但是好消息是
让设计变得更简单的方法是存在的

00:02:57.044 --> 00:03:01.415
你可以使用不同的工具、技巧以及方法
来消除设计中的不确定因素

00:03:02.516 --> 00:03:05.319
帮助你尽快完成一项优秀设计

00:03:06.153 --> 00:03:10.190
所以今天 Jon和我将会和大家分享
一些技巧和方法

00:03:10.257 --> 00:03:12.693
我们团队在日常设计工作中所使用的

00:03:13.126 --> 00:03:16.530
来帮助你找到这些基本问题的答案

00:03:16.597 --> 00:03:19.399
尤其是“我们将设计什么？”

00:03:20.934 --> 00:03:22.035
“我们从哪开始？”

00:03:22.569 --> 00:03:24.137
“怎样才是正确的设计？”

00:03:25.472 --> 00:03:29.209
首先 “我们将设计什么？”

00:03:29.276 --> 00:03:32.179
我们从这个问题开始
因为如果你可以回答这个问题

00:03:32.246 --> 00:03:34.948
它能让其它问题都变得简单很多

00:03:36.083 --> 00:03:38.919
也许你计划打造一大堆强大的功能

00:03:38.986 --> 00:03:41.955
但是你不知道哪一些真正值得投入精力

00:03:42.189 --> 00:03:45.259
或者你已经确定了
某一类潜在用户

00:03:45.559 --> 00:03:49.463
但是不确定哪一类功能
是这些用户希望得到的

00:03:49.897 --> 00:03:52.332
或你已经开发了一个非常棒的应用程序

00:03:52.399 --> 00:03:54.168
但是不确定它将要面向的用户

00:03:54.601 --> 00:03:58.438
一个行之有效的方法可用来
回答这些问题 那就是定义你的应用

00:03:58.906 --> 00:04:03.076
也就是说 找出所有你的应用能做的事

00:04:04.811 --> 00:04:08.815
从用户立场出发
分析出对他们最有用的功能

00:04:10.784 --> 00:04:14.888
以及那些最符合你
开发应用初衷的功能

00:04:15.923 --> 00:04:18.425
以此来决定应用的功能

00:04:20.160 --> 00:04:23.230
为了演示方便 在这次演讲中

00:04:23.297 --> 00:04:25.632
Jon和我会假装设计一款应用

00:04:25.933 --> 00:04:29.269
有多少人去过Caffe Macs？

00:04:30.337 --> 00:04:31.205
很好

00:04:31.271 --> 00:04:36.043
若没有 Caffe Macs是一家
位于Cupertino的Apple总部的餐厅

00:04:36.677 --> 00:04:38.078
它拥有一份轮换的菜单

00:04:38.145 --> 00:04:42.149
展示了所有新鲜准备的食物
方便每天在那里就餐的Apple员工

00:04:42.382 --> 00:04:46.053
但是有一些人会走去餐厅

00:04:46.119 --> 00:04:50.724
排队 点餐 付款
然后回到自己的办公室就餐

00:04:51.258 --> 00:04:55.028
为了让这些人就餐更方便
我们将设计一款应用

00:04:55.095 --> 00:04:59.166
让这些员工预定自己的工作餐
然后我们帮助递送到他们的办公室

00:04:59.433 --> 00:05:00.434
非常棒的想法

00:05:00.734 --> 00:05:02.703
首先 善意地提醒大家

00:05:03.036 --> 00:05:05.405
你们即将看到许多的食物图片

00:05:05.472 --> 00:05:08.375
如果你还没来得及吃早餐或者零食的话

00:05:08.442 --> 00:05:09.610
我为此向你道歉

00:05:10.777 --> 00:05:13.213
所以 让我们开始
定义我们的这款应用

00:05:13.280 --> 00:05:17.284
首先 我们需要确定哪一些功能

00:05:17.518 --> 00:05:19.586
是这个应用需要具备的

00:05:20.754 --> 00:05:23.056
首先需要包括所有显而易见的功能

00:05:23.123 --> 00:05:25.893
我们非常确定需要一份主菜的菜单

00:05:26.727 --> 00:05:29.830
关于主菜的细节
和预定食物的功能

00:05:30.531 --> 00:05:33.400
但同时 我们需要包括其它基本的功能

00:05:33.467 --> 00:05:34.902
收集所有的功能

00:05:35.068 --> 00:05:38.472
你认为用户可能想在应用里看到的

00:05:38.739 --> 00:05:43.343
也许应用功能还包括
安排送餐时间 查看食物评级

00:05:45.012 --> 00:05:48.815
快速下单 宴席承办服务
等等

00:05:48.882 --> 00:05:50.817
在这个阶段 所有的想法没有好坏之分

00:05:50.884 --> 00:05:53.887
所以 请发挥想象力
记录一切你想要的功能

00:05:54.555 --> 00:05:55.989
一旦你拥有了功能列表

00:05:56.256 --> 00:05:59.693
先把它放在一边
接下来我们要做的是

00:05:59.760 --> 00:06:03.363
找出应用面对的用户
以及他们的具体需求

00:06:03.730 --> 00:06:06.033
这会是所有环节里最困难的一步

00:06:06.233 --> 00:06:09.536
因为很难让同一个团队的所有人

00:06:09.937 --> 00:06:14.408
在确定目标用户的问题上达成共识

00:06:15.742 --> 00:06:22.649
但若缺少一致性意见
我们就无法确定目标用户及他们的需求

00:06:22.850 --> 00:06:26.153
最终的产品也只会是一个
集合了众多无用功能的大杂烩

00:06:26.386 --> 00:06:29.523
或者更糟糕
它花费了大量时间和精力

00:06:29.957 --> 00:06:33.327
最后却无人问津
因为定位了错误的目标用户

00:06:33.794 --> 00:06:36.129
所以给大家介绍一些简单的技巧

00:06:36.196 --> 00:06:38.799
首先 你不等于用户

00:06:40.234 --> 00:06:43.670
你只是其中之一
但是如果你只考虑自己的喜好

00:06:43.904 --> 00:06:46.440
这种先入为主的想法可能引发偏见

00:06:46.640 --> 00:06:50.244
你对用户体验的理解
可能是完全错误的

00:06:50.811 --> 00:06:55.249
举例 我是Apple的员工
将成为Caffe Macs应用用户

00:06:55.315 --> 00:06:59.653
但是我几乎只吃芝士汉堡

00:07:00.687 --> 00:07:03.657
如果让我来设计这个应用的话
只考虑自己的意愿

00:07:03.724 --> 00:07:06.226
我会把当日汉堡
放到首页

00:07:06.293 --> 00:07:08.562
我一定会这么做
因为我只关心这个

00:07:09.129 --> 00:07:13.333
对我来说这就是完美的功能
对其他人却未必如此

00:07:13.400 --> 00:07:18.005
有人喜欢沙拉 或者鱼
或者其它任何食物

00:07:20.307 --> 00:07:24.778
为自己设计应用
会让你忽略了其他用户的需求

00:07:25.612 --> 00:07:27.548
当然 它的对立面也是成立的

00:07:28.448 --> 00:07:31.685
你的用户不可能是所有人
因为这样的定位太模糊

00:07:31.752 --> 00:07:34.988
不能引导你得出
任何有意义的结论

00:07:35.055 --> 00:07:38.225
你无法得知
对于用户最重要的功能

00:07:38.292 --> 00:07:40.093
和最具价值的功能

00:07:40.594 --> 00:07:45.566
相反的 你更应该去了解
目标用户最基本的特征

00:07:46.400 --> 00:07:51.471
其中一个方法是
设想你正在面试一个用户

00:07:51.905 --> 00:07:55.542
试图找出他喜欢的功能 不喜欢的
以及他们真正关心的

00:07:56.376 --> 00:07:59.913
在这个例子中
我们也许会这样问用户

00:07:59.980 --> 00:08:02.683
他们更喜欢现做的食物 还是现成的？

00:08:02.816 --> 00:08:06.720
他们更喜欢悠闲的午餐
还是会议间隙的就餐？

00:08:07.354 --> 00:08:09.122
他们每天都吃一样的食物？

00:08:09.189 --> 00:08:11.925
还是喜欢尝试不同的？

00:08:12.125 --> 00:08:14.394
他们更喜欢健康的食品

00:08:14.461 --> 00:08:16.997
还是一切看上去好吃的食物？

00:08:18.165 --> 00:08:22.536
试着利用这类问题
找到一些实用的用户特征

00:08:23.437 --> 00:08:26.707
然后 从这些答案中找出

00:08:27.808 --> 00:08:30.377
最符合你的目标用户的特征

00:08:31.345 --> 00:08:33.780
你可以通过直觉或者经验
来帮你完成选择

00:08:34.114 --> 00:08:36.049
此外 若你有用户调查或市场调查的数据

00:08:36.116 --> 00:08:38.118
你也可以用它们来帮助你做出选择

00:08:39.586 --> 00:08:42.688
在我们的例子中
用户可以很方便地走去餐厅

00:08:42.756 --> 00:08:44.491
然后挑选一份现成的沙拉或三明治

00:08:44.658 --> 00:08:47.494
所以 我们的目标用户是那些

00:08:47.561 --> 00:08:52.699
需要快速新鲜而又健康的食物的人

00:08:55.769 --> 00:08:57.971
一旦你确定了用户的基本特征

00:08:58.038 --> 00:09:00.240
你可以把它们改述为用户需求

00:09:00.874 --> 00:09:06.513
所以 我们的用户需求是食用新鲜食物
快速地吃完... 对不起

00:09:06.580 --> 00:09:11.451
享受一份新鲜的午餐 快速地解决
尝试不同的种类 以及做出健康的选择

00:09:12.052 --> 00:09:14.188
像这样清楚地表达出用户需求

00:09:14.388 --> 00:09:17.558
能够帮助你在设计过程中
专注于他们的需求

00:09:19.693 --> 00:09:20.561
可是 你的需求怎么办？

00:09:20.627 --> 00:09:24.531
作为一个应用开发者 或者产品拥有者
你的需求是什么？

00:09:24.998 --> 00:09:27.734
你可能会想要用户依赖于你的应用
日复一日

00:09:27.801 --> 00:09:32.206
或你想让它成为一个非常好玩的产品？

00:09:32.272 --> 00:09:35.609
或者你想让它效率极高？

00:09:35.742 --> 00:09:38.979
你也需要记录下这些特征
作为你的应用程序目标

00:09:39.513 --> 00:09:45.452
它们阐述了
你对应用程序的定位

00:09:45.652 --> 00:09:49.923
它们的使用体验
以及如何区别于其它产品

00:09:51.658 --> 00:09:56.864
所以我们的应用目标是
提供方便的外卖递送服务

00:09:56.930 --> 00:10:00.334
使用户免于亲自去到餐厅

00:10:00.601 --> 00:10:02.803
我们将要突出每日主菜

00:10:02.870 --> 00:10:06.173
这样用户能够知道
他们拥有哪些选项

00:10:06.974 --> 00:10:10.911
同时我们希望Caffe Macs
的顾客感到满意 这样他们会经常光顾

00:10:12.145 --> 00:10:14.348
请注意这个列表不包括另外一些条目

00:10:14.414 --> 00:10:21.255
提高利润 提高投资回报
或者控制食物成本之类

00:10:21.722 --> 00:10:24.625
不可否认 从商业角度来看
这些都是很重要的目标

00:10:24.958 --> 00:10:28.762
但是对于我们的设计
并不提供任何有意义的方向

00:10:29.229 --> 00:10:32.332
这是因为商业目标描述的是

00:10:32.499 --> 00:10:35.169
你希望在应用发布后取得的成果

00:10:36.503 --> 00:10:39.339
然而应用设计目标描述的是

00:10:39.406 --> 00:10:41.875
你想打造的用户体验的质量

00:10:43.043 --> 00:10:45.746
你需要同时了解这两种目标

00:10:46.180 --> 00:10:48.482
但是 只有应用设计目标才能启发你

00:10:48.549 --> 00:10:51.118
以及鼓励你设计出伟大的产品

00:10:52.986 --> 00:10:56.890
好的 最后
为了决定应用的具体功能

00:10:56.957 --> 00:11:00.127
我们需要参考第一步提出的所有功能

00:11:00.928 --> 00:11:03.797
站在客户目标和应用目标的角度来考虑

00:11:05.232 --> 00:11:06.667
我们再来看一下这个列表

00:11:07.434 --> 00:11:10.504
浏览每一条功能时
把它们放入这些目标的语境

00:11:11.271 --> 00:11:15.175
你能很快地挑选出适合我们应用的条目

00:11:15.242 --> 00:11:17.978
所以 除了这些基本的功能

00:11:18.378 --> 00:11:21.548
我们还可以添加一个主菜评级系统

00:11:21.615 --> 00:11:26.053
来达成我们的客户目标
寻找新颖有趣的食物

00:11:26.587 --> 00:11:31.692
用户反馈链接
属于应用目标 它能让顾客更加满意

00:11:31.758 --> 00:11:34.228
因为用户能够提出意见
让我们了解他们的满意度

00:11:36.330 --> 00:11:40.234
使用同样的方法我们可以排除
那些不满足目标要求的功能

00:11:41.001 --> 00:11:43.036
这并不是说它们不好

00:11:43.103 --> 00:11:44.972
或者永远不值得被考虑

00:11:45.038 --> 00:11:47.674
它们只是不符合当下
我们对应用的定位

00:11:47.908 --> 00:11:51.879
所以我们可以暂时忽略它们
在将来的新版本中再作考虑

00:11:53.747 --> 00:11:54.781
好 看看我们的成果

00:11:54.848 --> 00:11:58.519
现在我们拥有了功能列表

00:11:58.685 --> 00:12:01.622
这些简洁明了的产品功能

00:12:01.688 --> 00:12:05.993
是基于我们对应用目标的深刻理解

00:12:06.059 --> 00:12:09.530
和对客户目标的全面认识

00:12:10.163 --> 00:12:14.134
接下来我们将给大家介绍
如何开始进行应用设计

00:12:14.368 --> 00:12:15.636
我将把讲台交给Jon

00:12:22.309 --> 00:12:23.243
谢谢 Ryan

00:12:24.545 --> 00:12:28.448
我们知道了要设计怎样的应用
现在就开始吧

00:12:29.249 --> 00:12:30.450
但我们从哪里开始呢？

00:12:31.118 --> 00:12:34.755
我个人的喜好是
从我已经知道的部分开始

00:12:36.223 --> 00:12:39.693
也许你还并不知道
完整的应用是什么样

00:12:39.760 --> 00:12:42.529
但是也许有一两种功能
你确信将被需要

00:12:42.596 --> 00:12:44.264
你可以从它们开始设计

00:12:44.631 --> 00:12:48.202
举个例子 如果你要设计一个聊天应用

00:12:48.402 --> 00:12:51.305
你可以从对话界面开始设计

00:12:51.371 --> 00:12:54.341
因为你知道 许多用户将会
长时间使用这个界面

00:12:54.741 --> 00:12:56.677
或者 如果你在设计一款约会应用

00:12:56.743 --> 00:12:59.413
你可以从个人资料页开始设计

00:12:59.513 --> 00:13:02.082
因为你知道 它占据了用户体验的
一个很大的部分

00:13:04.151 --> 00:13:07.855
在我们的例子中
我在设计一个外卖应用

00:13:08.121 --> 00:13:10.290
我不知道它拥有哪些功能

00:13:10.490 --> 00:13:13.794
但是我知道
我需要设计一份菜单

00:13:13.861 --> 00:13:15.329
方便用户订餐

00:13:16.597 --> 00:13:18.699
所以我将从菜单页面开始设计

00:13:21.068 --> 00:13:24.705
在这次演示中
我将在Keynote里设计UI

00:13:25.239 --> 00:13:28.442
你肯定知道Keynote是一个
演示文稿应用

00:13:28.509 --> 00:13:30.511
其实它同样是非常实用的UI绘制工具

00:13:32.179 --> 00:13:36.583
它能方便地创建界面布局
拥有不同的动画效果

00:13:36.650 --> 00:13:40.087
甚至可以生成交互原型
导入到手机上

00:13:40.787 --> 00:13:45.792
我们团队尤其喜爱Keynote
我们用它设计几乎所有的应用

00:13:46.293 --> 00:13:49.496
事实上 Keynote本身
就是用Keynote设计的

00:13:50.831 --> 00:13:51.665
仔细想想

00:13:55.869 --> 00:13:57.604
好像根本不可能

00:13:58.405 --> 00:14:00.807
但事实是这样
因为Keynote实在太出色了

00:14:01.475 --> 00:14:04.011
让我们开始绘制UI

00:14:07.814 --> 00:14:11.552
UI是由几个简单元素构建的

00:14:11.752 --> 00:14:15.322
它是由形状和线条构成
从顶部的选项栏里插入

00:14:15.389 --> 00:14:19.226
我能插入一个形状
插入一根线条

00:14:20.093 --> 00:14:21.495
UI也包含文字

00:14:21.562 --> 00:14:25.098
我可以插入文字
点击生成文本框

00:14:26.200 --> 00:14:28.468
UI还包含了图片

00:14:29.069 --> 00:14:34.208
我有一个美食图片文件夹
直接把它拖拽到Keynote里

00:14:35.008 --> 00:14:36.410
我可以调整它的大小

00:14:38.512 --> 00:14:39.446
很好

00:14:39.613 --> 00:14:43.584
我将从形状开始
复制粘贴一个形状

00:14:43.984 --> 00:14:48.655
改变它的大小
到375x667像素

00:14:48.722 --> 00:14:51.058
因为这就是iPhone 6屏幕像素

00:14:52.359 --> 00:14:55.429
把它变成白色
然后居中

00:14:56.663 --> 00:15:00.501
所以在短短30秒钟内
我就设计了一个简单iPhone应用

00:15:01.568 --> 00:15:02.870
一个手电筒

00:15:03.470 --> 00:15:04.304
哈哈

00:15:05.305 --> 00:15:06.206
开个玩笑

00:15:07.608 --> 00:15:09.743
我将要绘制一个菜单界面

00:15:09.810 --> 00:15:14.047
我有一个习惯
使用其它应用的截图

00:15:14.114 --> 00:15:15.449
来作为参考

00:15:15.516 --> 00:15:19.620
这里有一张截图
来自短信应用

00:15:19.820 --> 00:15:21.021
把它拖拽进去

00:15:21.889 --> 00:15:25.425
尺寸稍大 因为是retina分辨率
所以我要调整一下大小

00:15:27.294 --> 00:15:31.665
然后把它放在我正在绘制的界面旁边

00:15:32.933 --> 00:15:34.935
现在这个屏幕截图就在我的界面旁边

00:15:35.002 --> 00:15:37.104
我可以用它作为参考

00:15:37.237 --> 00:15:39.973
所以我先选择一个形状

00:15:40.040 --> 00:15:42.843
来勾勒出我界面的布局

00:15:43.210 --> 00:15:47.581
调整这个方框的大小
使它贴合顶部

00:15:47.748 --> 00:15:51.318
我在系统偏好里开启了辅助放大功能

00:15:51.385 --> 00:15:55.689
所以我可以快速地放大屏幕
确定所有绘制都是像素级准确

00:15:57.391 --> 00:16:00.093
很好 现在对线条进行同样的操作

00:16:03.697 --> 00:16:05.732
我知道这条线细度为1

00:16:11.104 --> 00:16:12.673
再一次放大

00:16:13.340 --> 00:16:15.676
确保它处在准确的位置上

00:16:18.579 --> 00:16:19.413
非常好

00:16:19.913 --> 00:16:23.183
现在我将要多次拷贝这根线条

00:16:24.218 --> 00:16:27.621
我暂时不会在意它们所处的位置

00:16:27.688 --> 00:16:31.325
我偷个懒
等一下再整理它们

00:16:33.393 --> 00:16:36.296
我唯一关心的是最后这一根线

00:16:37.631 --> 00:16:40.567
我要确保最后这根线条
正好在我想要的位置上

00:16:42.102 --> 00:16:42.936
非常好

00:16:43.470 --> 00:16:46.840
现在我可以全选线条

00:16:47.574 --> 00:16:51.078
使它们间距等分
向左对齐

00:16:51.445 --> 00:16:54.081
这是一条捷径
调整所有线条的位置

00:16:55.616 --> 00:16:59.086
噢 好的
这还不是最令人印象深刻的部分

00:17:00.687 --> 00:17:02.556
我想改变线条的颜色

00:17:02.623 --> 00:17:05.058
可以在这里完成
让它变成灰色

00:17:05.224 --> 00:17:08.694
如果要选择某种特定的颜色
可以使用颜色选择器

00:17:08.929 --> 00:17:10.230
使用滴管工具

00:17:10.998 --> 00:17:13.400
它让我的光标变成了一个放大镜

00:17:13.467 --> 00:17:16.569
点击屏幕上的某种特定的颜色

00:17:16.803 --> 00:17:19.006
这种颜色将被用作线条的颜色

00:17:19.239 --> 00:17:21.541
对标题栏采用同样的操作

00:17:21.842 --> 00:17:23.242
我将得到淡灰色

00:17:24.344 --> 00:17:27.881
现在我已经画好了界面的大致轮廓

00:17:28.315 --> 00:17:30.951
下一步我将要匹配这些文字

00:17:31.118 --> 00:17:33.320
选择一个文本框

00:17:33.987 --> 00:17:37.357
匹配短信应用里的字体

00:17:37.424 --> 00:17:42.362
先输入我想要匹配的文字

00:17:42.563 --> 00:17:45.365
你会发现字体和大小都不正确

00:17:46.066 --> 00:17:50.704
我知道iPhone的系统字体
是San Francisco

00:17:50.838 --> 00:17:52.739
所以现在设置它为
San Francisco

00:17:52.906 --> 00:17:55.676
然后缩小字体

00:17:56.410 --> 00:18:00.247
好像我想要匹配的文字是半粗体

00:18:01.381 --> 00:18:05.719
我可以放大屏幕
确保它们完全相同

00:18:06.053 --> 00:18:08.155
很好 看起来非常接近

00:18:08.222 --> 00:18:11.725
接着对次级文字采用相同操作

00:18:21.368 --> 00:18:22.302
足够接近了

00:18:22.536 --> 00:18:23.437
好的

00:18:24.771 --> 00:18:29.142
现在我的文字跟截图的文字几乎相同了

00:18:29.843 --> 00:18:31.211
这个看起来好像是

00:18:32.179 --> 00:18:35.115
有点偏灰色
调整一下透明度

00:18:38.585 --> 00:18:42.389
接下来我将给UI添加内容

00:18:42.789 --> 00:18:47.628
这里有一份文档
里面包含了各种主菜的名字和具体描述

00:18:47.794 --> 00:18:49.863
复制粘贴一部分到这里

00:18:56.970 --> 00:18:57.838
调整它的大小

00:18:59.006 --> 00:18:59.873
非常好

00:19:00.174 --> 00:19:04.545
我们再给界面添加一个标题

00:19:04.611 --> 00:19:06.313
匹配这个

00:19:09.316 --> 00:19:12.219
看起来它们的大小正合适

00:19:12.619 --> 00:19:13.453
非常好

00:19:13.887 --> 00:19:15.722
让它居中显示

00:19:18.225 --> 00:19:20.194
把它改名为Caffe Macs

00:19:22.429 --> 00:19:26.233
好的 现在我已经有适合的文字了

00:19:26.800 --> 00:19:29.369
接下来我想要添加一些图片

00:19:29.736 --> 00:19:33.373
选择我的青花鱼图片 调整它的大小

00:19:35.309 --> 00:19:39.580
必须确保它的大小和形状完全正确

00:19:39.646 --> 00:19:43.817
所以我将使用一个形状 把它作为蒙板

00:19:44.218 --> 00:19:48.188
调整方块 使它符合我想要的大小

00:19:49.389 --> 00:19:50.257
接着

00:19:50.924 --> 00:19:56.964
同时选择它们
依照蒙板的形状剪切图片

00:19:59.132 --> 00:20:00.434
再微调一下

00:20:02.302 --> 00:20:03.170
非常好

00:20:04.304 --> 00:20:07.708
现在我的青花鱼图片
尺寸正合适了

00:20:08.542 --> 00:20:11.845
我还有其它使用蒙版的方法

00:20:12.012 --> 00:20:15.616
我想要跟截图一样状态栏

00:20:15.682 --> 00:20:16.783
但我不想绘制它

00:20:16.850 --> 00:20:20.721
只需要复制这张图片
双击使用蒙板

00:20:20.954 --> 00:20:23.457
拖拽状态栏然后置于顶部

00:20:24.324 --> 00:20:26.093
我为自己节省了几分钟的时间

00:20:26.660 --> 00:20:29.663
最后是这个小箭头

00:20:30.631 --> 00:20:31.899
我有另外一个小技巧

00:20:31.965 --> 00:20:35.135
截取我当前屏幕的一部分图片

00:20:35.335 --> 00:20:40.240
使用快捷键 Command、
Ctrl、Shift 4

00:20:40.541 --> 00:20:42.276
有一点难记 但它很实用

00:20:42.409 --> 00:20:45.379
我的鼠标变成了一个照相机

00:20:45.746 --> 00:20:48.849
在这个箭头周围截取一个方框

00:20:49.183 --> 00:20:52.319
它就被复制到我的剪切版
只要粘贴它

00:20:53.854 --> 00:20:57.391
这是一个不太知名的快捷键

00:20:58.625 --> 00:21:00.594
很好 现在我得到了一排内容

00:21:00.827 --> 00:21:02.129
把这些集合到一起

00:21:03.897 --> 00:21:07.067
同样的 我将对它们进行操作
就像我对线条做的那样

00:21:07.668 --> 00:21:10.938
我只关心最后一个的正确位置

00:21:11.638 --> 00:21:14.141
因为我可以全选它们

00:21:16.777 --> 00:21:19.079
间距等分 向左对齐

00:21:20.180 --> 00:21:21.014
很好

00:21:21.248 --> 00:21:25.152
接下来我只要替换这些图片

00:21:25.219 --> 00:21:30.557
复制粘贴更多的内容进去
使它看上去像一个真正的界面

00:21:31.058 --> 00:21:34.261
为了节省时间
我在这之前已经画好了界面

00:21:34.595 --> 00:21:39.900
所以最后的效果看起来是这样的

00:21:40.634 --> 00:21:44.004
所以在仅仅3分钟内 我就画好了界面

00:21:51.245 --> 00:21:55.983
我想简单谈一谈
我在这几分钟里涉及的具体步骤

00:21:56.283 --> 00:21:58.752
首先我使用了手机截屏作为参考

00:21:58.819 --> 00:22:01.822
匹配界面的色彩 大小 和文字

00:22:02.055 --> 00:22:05.559
我同时也把截屏剪切下来
用作我自己的UI的贴图

00:22:06.159 --> 00:22:09.196
我绘制了一些方框和线条
调整它们的尺寸

00:22:09.263 --> 00:22:12.799
多次放大界面 保证像素级完美

00:22:13.166 --> 00:22:17.171
我添加了令人信服的UI内容
使用了真实的图片和文字

00:22:17.237 --> 00:22:21.041
使得UI看起来更真实

00:22:22.075 --> 00:22:25.479
我认为只要多一点练习和投入

00:22:25.712 --> 00:22:28.916
任何人都能完成我刚才的简单步骤

00:22:29.416 --> 00:22:31.852
现在我把演讲台交还给Ryan

00:22:38.192 --> 00:22:41.228
谢谢你Jon
一如既往的好

00:22:42.462 --> 00:22:47.634
好的 这即是我们
Caffe Macs的菜单设计

00:22:48.035 --> 00:22:49.870
我们已经完成了 对吗？

00:22:49.937 --> 00:22:51.104
看起来已经够好了

00:22:51.238 --> 00:22:54.041
满足了菜单的各种功能要求

00:22:54.174 --> 00:22:55.108
看上去也不错

00:22:55.175 --> 00:23:00.113
我们干脆就此打住
继续设计下一个功能 下一张界面？

00:23:00.714 --> 00:23:05.752
但是我们怎么能确定
第一份设计就是正确的设计呢？

00:23:06.787 --> 00:23:10.190
经验告诉我 它可能不是最好的

00:23:10.691 --> 00:23:15.562
如果你不尝试其它的设计
你永远不会知道它是否正确

00:23:16.763 --> 00:23:19.633
事实上你需要从不同的角度来看待问题

00:23:19.933 --> 00:23:26.473
在迭代设计中寻找新的想法和突破口

00:23:26.540 --> 00:23:28.041
你也许错过了它们

00:23:29.710 --> 00:23:32.346
基本上 你需要不断审视
自己的应用设计

00:23:32.412 --> 00:23:34.515
然后问自己
我们怎样才能做得不一样？

00:23:34.982 --> 00:23:38.452
再来看看之前的设计
我们怎样才能做得不一样？

00:23:39.052 --> 00:23:42.422
在这个例子中
我们的设计是基于显示行的

00:23:42.489 --> 00:23:45.158
有件事我们可以做
那就是改变每一行的尺寸

00:23:45.359 --> 00:23:48.128
增加每一行的高度
可以显示出更少的主菜种类

00:23:48.195 --> 00:23:49.930
但是我们能让主菜的图片更大

00:23:50.430 --> 00:23:52.733
你也可以增加或减少

00:23:52.799 --> 00:23:56.003
界面显示的信息
我们添加了价格

00:23:57.538 --> 00:23:58.939
你还可以考虑不同页面布局

00:23:59.006 --> 00:24:01.775
调整内容显示之间的留白

00:24:01.842 --> 00:24:05.679
也就是调整屏幕显示内容周围的空间

00:24:05.746 --> 00:24:09.082
我们在图片周围添加了一些空白
让UI看起来更开放

00:24:10.083 --> 00:24:11.985
你也可以尝试不同的字体

00:24:12.219 --> 00:24:17.057
举个例子
我们使用大号细体字作为菜名

00:24:17.124 --> 00:24:18.725
给价格增加了一点色彩

00:24:18.792 --> 00:24:20.761
让它在屏幕上更加突出

00:24:22.563 --> 00:24:24.431
充分发挥你的想象力

00:24:24.498 --> 00:24:28.368
我们还想 如果菜单里没有图片会怎样
为什么不呢？

00:24:28.602 --> 00:24:29.670
这值得一试

00:24:29.903 --> 00:24:34.208
但是我们发现
如果每一行没有一个视觉重点的话

00:24:34.274 --> 00:24:37.244
我们需要把主菜的名字加大加粗

00:24:37.311 --> 00:24:39.279
让菜单给人不同的感觉

00:24:40.147 --> 00:24:42.983
请注意我并没有在评判任何一个设计

00:24:43.250 --> 00:24:47.087
我们只是在头脑风暴
试图找出新的思路

00:24:47.521 --> 00:24:50.591
我们还可以使用另外一个技巧
180度逆向思维

00:24:50.657 --> 00:24:56.663
目前为止所有设计都是面向文字的
如果我们面向图片呢？

00:24:56.730 --> 00:24:58.165
我们得到了一个图片网格

00:24:58.232 --> 00:25:00.133
看起来就像一个完全不同的应用对吧

00:25:01.168 --> 00:25:03.670
你还可以考虑图片的比例

00:25:03.737 --> 00:25:06.907
哪种形状最能适合你的内容

00:25:06.974 --> 00:25:11.378
所有图片都是方形的
也许加宽的效果会更好呢

00:25:12.212 --> 00:25:14.948
你还可以尝试不同的内容呈现方式

00:25:15.015 --> 00:25:17.451
这里每种主菜都显示在
一块磁贴或是一张卡片上

00:25:17.518 --> 00:25:20.754
这样能让它们区别于彼此

00:25:22.789 --> 00:25:24.958
回想一下你都是如何利用屏幕空间的

00:25:25.025 --> 00:25:28.762
这些图片都是边缘相接的
最有效地利用了iPhone屏幕

00:25:29.196 --> 00:25:31.465
在这个布局中
为了更好地显示文字

00:25:31.532 --> 00:25:36.503
我们把它们叠加在图片上
创造了一种完全不同的视觉风格

00:25:40.841 --> 00:25:44.845
请记住 没有人限制你使用
整齐的网格或者行列

00:25:45.078 --> 00:25:47.714
你可以调整内容的尺寸和比例

00:25:47.781 --> 00:25:49.883
来生成完全不同的效果

00:25:51.218 --> 00:25:52.886
可以结合不同创意创造全新的方案

00:25:52.953 --> 00:25:55.055
看看这个照片边缘相接的样式

00:25:55.122 --> 00:25:58.025
把它和列表布局的样式结合在一起

00:26:01.728 --> 00:26:04.198
思考一下应用的沉浸感

00:26:04.264 --> 00:26:06.934
这些大图片主导了屏幕

00:26:07.000 --> 00:26:10.003
鼓励用户花费更多时间来浏览它们

00:26:11.738 --> 00:26:15.542
如果你的文字非常重要
请确保它们的易读性

00:26:15.676 --> 00:26:18.445
确保那些拥有视力障碍或者色盲的人

00:26:18.512 --> 00:26:19.880
能够看到每个重要的细节

00:26:21.481 --> 00:26:26.653
最后 把这个大图片的想法发挥到极限

00:26:26.720 --> 00:26:30.157
这样它就几乎占满了整个屏幕

00:26:31.191 --> 00:26:33.126
现在竖直滚动会让人不舒服

00:26:33.193 --> 00:26:37.130
相反的我们使用左右滑动

00:26:37.197 --> 00:26:39.066
只需要滑动切换主菜种类

00:26:39.900 --> 00:26:43.237
思考一下内容浏览可以使用
哪些不同的导航规则

00:26:45.038 --> 00:26:49.042
好的 除了最早的设计
这里还有11个可供替代的

00:26:49.209 --> 00:26:51.011
它们都是由Keynote绘制的

00:26:51.478 --> 00:26:55.349
你需要做的只是不停的问
我们还能怎样做得不同？

00:26:55.516 --> 00:26:57.851
直到你尽可能想到所有的

00:26:57.918 --> 00:27:00.821
有趣的替代方案为止

00:27:02.856 --> 00:27:07.160
你可以尝试使用不同的布局
来规划你的内容

00:27:07.227 --> 00:27:09.963
调整文字的大小、颜色、
粗细以及字体

00:27:10.531 --> 00:27:12.833
调整内容的显示比例

00:27:12.900 --> 00:27:16.336
增加或者减少屏幕的显示内容

00:27:16.770 --> 00:27:19.873
使用180度逆向思维
以及把想法推至极致

00:27:20.140 --> 00:27:23.510
考虑使用不同的内容导航规则

00:27:24.978 --> 00:27:26.213
所以 下一个问题是

00:27:26.413 --> 00:27:29.616
这些设计里有适合我们应用的吗？

00:27:30.117 --> 00:27:31.018
我们还不知道

00:27:32.286 --> 00:27:36.990
这一步需要你和你的团队
一起来评判这些设计

00:27:37.057 --> 00:27:38.425
这会是很有趣的过程

00:27:38.926 --> 00:27:40.861
你需要暂时抛开骄傲和自尊

00:27:40.928 --> 00:27:43.397
忘记你绘制这些原型花费的时间

00:27:43.597 --> 00:27:46.567
让自己站在第三方的位置上

00:27:46.633 --> 00:27:48.735
来评价和批判你的设计

00:27:48.802 --> 00:27:52.072
寻找它们的长处和短处
找到最好的那一个

00:27:52.639 --> 00:27:57.377
要做到这一点
你需要细察每一个设计

00:27:57.444 --> 00:27:59.479
提出一些困难的问题

00:28:00.314 --> 00:28:05.319
比如说 这个设计多大程度上
满足了用户的目标？

00:28:05.552 --> 00:28:07.821
多大程度上
满足了你自己的应用目标？

00:28:07.955 --> 00:28:09.923
它满足你对这个应用的定义吗？

00:28:11.425 --> 00:28:14.761
它能为用户提供正确的信息吗？

00:28:14.962 --> 00:28:17.030
有没有足够的内容支持用户进行操作？

00:28:17.331 --> 00:28:18.198
它方便阅读吗？

00:28:19.867 --> 00:28:21.201
互动性强吗？

00:28:21.268 --> 00:28:24.571
应用的交互方式
用户熟悉吗？

00:28:24.872 --> 00:28:28.075
应用界面上的术语
用户理解吗？

00:28:28.141 --> 00:28:30.177
基于他们的经验和知识

00:28:31.712 --> 00:28:33.981
最后 这个设计让你感觉正确吗？

00:28:34.581 --> 00:28:38.552
即便它满足了所有的标准
并且客观上来说是一个好的设计

00:28:38.619 --> 00:28:40.254
但是它真的是你想要的那样吗？

00:28:40.654 --> 00:28:43.357
它拥有你想要的个性和外观吗？

00:28:43.423 --> 00:28:45.792
这和其它所有标准同样重要

00:28:47.160 --> 00:28:49.096
这些问题都非常主观

00:28:49.263 --> 00:28:51.298
你很可能遭遇各种反对

00:28:51.365 --> 00:28:54.701
来自你的的同事们 甚至是你自己的

00:28:54.835 --> 00:28:57.938
但是提出这些问题
并且诚实地回答它们

00:28:58.105 --> 00:29:01.341
能够帮助你找到正确的设计

00:29:02.876 --> 00:29:06.446
Jon和我将给大家演示一下这个过程

00:29:06.513 --> 00:29:09.216
我们将在你们的面前
批判这些设计

00:29:10.017 --> 00:29:12.085
从而找到最适合的那一个

00:29:12.786 --> 00:29:16.423
我们先花点时间思考一下

00:29:17.991 --> 00:29:19.193
Jon你怎么认为？

00:29:19.626 --> 00:29:21.128
横向地比较它们

00:29:21.195 --> 00:29:23.530
很明显有一些设计更出色

00:29:23.597 --> 00:29:26.600
所以我认为我们应该先清除其中几个

00:29:26.667 --> 00:29:27.501
好的

00:29:28.068 --> 00:29:29.870
让我们去掉A 第一个设计

00:29:29.937 --> 00:29:32.406
它很好 但还是不如其它的设计优秀

00:29:32.472 --> 00:29:33.340
好的

00:29:33.407 --> 00:29:34.575
让我们再去掉D

00:29:34.908 --> 00:29:36.476
它没有任何图片
看起来有点奇怪

00:29:36.543 --> 00:29:37.411
对的

00:29:37.644 --> 00:29:39.046
一个美食应用
我们需要图片

00:29:41.248 --> 00:29:42.816
我们再去掉E

00:29:42.883 --> 00:29:44.351
它的图片太多了

00:29:44.651 --> 00:29:48.021
看起来非常拥挤
并且给出的信息也不足

00:29:48.355 --> 00:29:49.189
是的

00:29:49.623 --> 00:29:52.960
我认为我们可以去掉F
它呈现的信息有点太多了

00:29:53.227 --> 00:29:55.362
并且它的视觉布局有些太匆忙

00:29:55.529 --> 00:29:57.631
主菜的名字被裁掉一部分
这很不好

00:29:57.698 --> 00:29:59.967
-很好的观点
-我认为我们可以去掉I

00:30:00.100 --> 00:30:03.303
这些图片的比例很有趣

00:30:03.370 --> 00:30:07.140
但是你并不能看到足够的食物细节
来判断它到底是好是坏

00:30:07.207 --> 00:30:08.909
-好的
-接下来是L

00:30:08.976 --> 00:30:10.410
尽管我喜欢大尺寸图片

00:30:10.477 --> 00:30:13.680
但是翻阅12到15份不同的菜品

00:30:13.747 --> 00:30:15.115
有一点令人乏味

00:30:15.182 --> 00:30:16.383
我认为我们也该去掉它

00:30:16.550 --> 00:30:17.417
我同意

00:30:18.552 --> 00:30:20.921
很好 现在我们只剩下6个了
进度不错

00:30:23.690 --> 00:30:24.558
是的

00:30:26.560 --> 00:30:27.628
没有用到很长时间

00:30:28.595 --> 00:30:31.865
好的
我们再从细节方面看看剩下的这些

00:30:31.932 --> 00:30:33.634
对比这两个

00:30:33.700 --> 00:30:36.170
它们其实很相似
它们的功能非常相似

00:30:36.970 --> 00:30:39.973
我认为选项B更常规一些

00:30:40.040 --> 00:30:43.477
也许用户更希望
在iPhone上看到这样的菜单

00:30:44.478 --> 00:30:47.748
而且我喜欢边缘相接的图片
我觉得非常好看

00:30:48.415 --> 00:30:49.983
事实上我更喜欢选项C

00:30:50.317 --> 00:30:55.088
它更有趣一些
我喜欢它偏细的字体

00:30:55.455 --> 00:30:56.757
我认为它符合当下的潮流

00:30:57.558 --> 00:31:01.461
所有信息都居左显示 这一点也很棒

00:31:01.528 --> 00:31:04.565
用户很容易就能滚动页面
查看名字和价格

00:31:05.199 --> 00:31:10.971
我喜欢它带来的感觉
更加开放 更加新鲜

00:31:11.038 --> 00:31:13.040
是的 我认为这都是很好的观点

00:31:13.106 --> 00:31:13.941
-谢谢你
-谢谢

00:31:14.007 --> 00:31:15.008
你说服了我

00:31:15.075 --> 00:31:17.077
好吧我们去掉选项B

00:31:18.145 --> 00:31:21.215
顺便说一下 我们都在即兴发挥

00:31:22.449 --> 00:31:24.518
这两个看起来也非常相似

00:31:24.818 --> 00:31:26.486
它们都有边缘相接的图片

00:31:26.854 --> 00:31:31.425
G拥有网格布局
然而H更像一个便当盒

00:31:32.025 --> 00:31:34.261
我非常喜欢 我非常喜欢H

00:31:34.328 --> 00:31:36.597
它有许多不同的尺寸和多样性

00:31:36.663 --> 00:31:37.764
让人感觉很有趣

00:31:39.333 --> 00:31:42.202
是的 H看上去很酷
但是我认为它有一个致命缺陷

00:31:42.269 --> 00:31:44.605
也就是
某些菜式看上去比其它的更重要

00:31:44.671 --> 00:31:48.041
就好像 我们特别希望
你会购买烤青花鱼

00:31:48.342 --> 00:31:50.744
事实上并非如此
这些都应该是平等的选项

00:31:51.044 --> 00:31:53.914
我认为如果我们喜欢这样的风格的话
G会是更好的选择

00:31:53.981 --> 00:31:58.952
它很好地平衡了这种边缘相接的风格
和应用本身的功能倾向性

00:31:59.753 --> 00:32:04.258
我还是很喜欢H
但是我认为你的观点很有道理

00:32:04.458 --> 00:32:05.626
-是的
-我们该选择G

00:32:05.692 --> 00:32:06.860
非常公平

00:32:10.631 --> 00:32:12.999
好的 在这两个之间
我个人非常喜欢J

00:32:13.066 --> 00:32:15.936
我对这种边缘相接的风格
情有独钟

00:32:16.003 --> 00:32:18.705
同时它还让我想起了美食杂志

00:32:18.772 --> 00:32:20.607
我认为这是一个很酷的风格

00:32:21.208 --> 00:32:25.479
Ryan 我们不是在设计美食杂志
我们在设计一个外卖应用

00:32:25.646 --> 00:32:27.281
在J上你甚至都不能看到文字

00:32:27.614 --> 00:32:30.751
我喜欢K 更好地平衡了
图片和文字

00:32:31.018 --> 00:32:34.555
它看上去跟主题更有关联性
也更加开胃

00:32:35.522 --> 00:32:36.757
好的我知道你的意思了

00:32:36.823 --> 00:32:40.060
你给了我H 我也给你K

00:32:40.127 --> 00:32:42.229
-是的
-好的

00:32:42.462 --> 00:32:43.297
妥协

00:32:47.634 --> 00:32:49.636
好了现在我们只剩下前三名了

00:32:50.671 --> 00:32:51.605
你怎么看？

00:32:51.939 --> 00:32:54.541
它们看起来都很棒
但是把它们横向比较的话

00:32:54.608 --> 00:32:57.778
我认为很明显能看出
G就没有那么优秀了

00:32:58.779 --> 00:33:03.550
这些文字描述非常有用
告诉用户这是什么食物

00:33:03.917 --> 00:33:06.453
G在这一方面十分欠缺

00:33:06.854 --> 00:33:10.224
是的 把它们放在一起看
我觉得你是正确的

00:33:10.424 --> 00:33:13.360
即使我喜欢边缘相接的图片
我认为拥有文字描述

00:33:13.427 --> 00:33:15.495
更多的信息会让体验更好

00:33:15.562 --> 00:33:16.897
我觉得我们应该去除G

00:33:17.064 --> 00:33:17.898
好的

00:33:18.065 --> 00:33:20.067
我们现在只剩C和K了

00:33:20.133 --> 00:33:24.238
短短几分钟内我们成功缩减到两个选项
非常棒

00:33:24.972 --> 00:33:27.341
这两个从功能上看很类似

00:33:27.708 --> 00:33:29.276
它们看起来都很棒

00:33:29.810 --> 00:33:33.413
同时也有不同的风格

00:33:33.914 --> 00:33:37.384
它们之间我并没有一个特别的偏好
你觉得呢？

00:33:37.851 --> 00:33:43.056
是的 我也没有
它们看起来都很棒

00:33:43.223 --> 00:33:45.826
好吧 我们事先也担心出现这样的情况

00:33:46.093 --> 00:33:48.428
也许你们能帮助我们

00:33:48.595 --> 00:33:50.964
有了这些标准...

00:33:51.031 --> 00:33:54.434
你们已见过我们如何批判自己的设计了

00:33:54.501 --> 00:33:57.905
对照这些标准
请用掌声

00:33:57.971 --> 00:34:00.841
告诉我们谁更喜欢C的设计？

00:34:03.744 --> 00:34:04.645
好的

00:34:05.078 --> 00:34:08.916
接下来 谁更喜欢K的设计？

00:34:12.719 --> 00:34:17.224
我认为K是赢家 很明显
这就很好办了

00:34:19.659 --> 00:34:23.630
恭喜K最终获选
干得漂亮

00:34:23.697 --> 00:34:27.367
所以我们整个设计团队都认可这个选择

00:34:27.434 --> 00:34:32.239
K融合了功能性

00:34:32.306 --> 00:34:34.975
高效率
以及我们希望这个应用所拥有的特质

00:34:35.542 --> 00:34:37.978
我们终于找到了最适合的设计方案

00:34:38.512 --> 00:34:42.014
是的 我们已经上路了
但是一张界面还不是一个完整的应用

00:34:42.282 --> 00:34:45.319
我们还需要弄清楚
这个应用应该怎样工作

00:34:45.585 --> 00:34:48.121
为了给大家更详细地介绍
我将请回Jon上台

00:34:49.755 --> 00:34:50.591
谢谢

00:34:53.226 --> 00:34:55.228
我们需要设计出一个工作流程

00:34:55.495 --> 00:34:58.498
一个工作流程是
完成任务所需要的一整套步骤

00:34:59.032 --> 00:35:02.636
在这个例子中 应用的任务是预定午餐

00:35:03.537 --> 00:35:06.507
所以让我们回到刚选好的设计方案

00:35:09.476 --> 00:35:13.313
我需要遵循之前的建议
从我了解的开始做起

00:35:13.614 --> 00:35:15.449
我不太清楚这个应用可以做什么

00:35:15.516 --> 00:35:19.386
但是有一件事我很确定
如果我点击任何一种主菜

00:35:19.453 --> 00:35:21.655
我希望能看到关于它的更多信息

00:35:21.922 --> 00:35:24.858
所以我要设计一个信息界面

00:35:26.026 --> 00:35:27.761
看起来大概像这样

00:35:28.629 --> 00:35:29.463
好的

00:35:30.063 --> 00:35:33.433
接下来
我可能还要添加一种订餐方式

00:35:33.767 --> 00:35:35.969
我添加一个预订按钮

00:35:36.336 --> 00:35:39.273
暂时先把它放在屏幕的底部

00:35:39.840 --> 00:35:40.674
非常棒

00:35:41.241 --> 00:35:44.244
如果点击了这个预定按钮会发生什么？

00:35:44.745 --> 00:35:46.413
我不知道

00:35:47.414 --> 00:35:50.751
也许我能直接完成预订
然后让用户知道这已经完成了

00:35:51.451 --> 00:35:53.420
这就是我设计的工作流程

00:35:55.489 --> 00:35:56.490
看起来很不错

00:35:56.690 --> 00:35:59.359
我认为它很好的完成了订餐的任务

00:36:01.161 --> 00:36:03.997
但是当我再看它的时候
我发现了一些问题

00:36:04.431 --> 00:36:08.468
它缺少了一些我们谈及的功能

00:36:08.535 --> 00:36:12.773
你不能改变订单内容
递送地址

00:36:12.840 --> 00:36:15.576
或者递送时间
感觉有点奇怪

00:36:15.976 --> 00:36:19.813
现在重新看它
我认为下单动作完成得太突然了

00:36:20.080 --> 00:36:23.450
当我点击了预定按钮
我就已经花了10美元

00:36:23.784 --> 00:36:26.687
在这期间应该有一个选项
让我可以撤销订单

00:36:27.955 --> 00:36:30.591
所以我认为这个工作流程还可继续优化

00:36:30.657 --> 00:36:31.825
我们再试一次

00:36:33.560 --> 00:36:37.464
在许多应用中我都见过
一个购物车模式

00:36:37.731 --> 00:36:39.566
我将要在我的应用里借鉴它

00:36:39.800 --> 00:36:43.871
在右上角添加一个购物车图标

00:36:44.204 --> 00:36:48.108
现在如果我点击食物
我将看到一个加入购物车的按钮

00:36:48.575 --> 00:36:52.246
点击它 这个按钮会反馈说
已经被添加到购物车

00:36:52.613 --> 00:36:55.549
图标也会相应地告诉我
里面新加入了订单

00:36:56.350 --> 00:36:58.819
这看上去是一个很常规的操作
非常棒

00:36:58.886 --> 00:37:00.454
我认为用户会知道怎么使用它

00:37:00.787 --> 00:37:03.657
现在如果我点击购物车图标

00:37:04.424 --> 00:37:07.060
我可以给用户展示订单汇总

00:37:07.127 --> 00:37:11.465
在这里他们可以更改选择

00:37:11.765 --> 00:37:15.769
以及得到确认信息
他们将花费11.68美元购买食物

00:37:16.436 --> 00:37:18.238
如果我点击下单

00:37:19.106 --> 00:37:22.342
我可以向用户显示订单完成
并展示相关信息

00:37:24.111 --> 00:37:26.446
现在 我的工作流程看起来像这样

00:37:27.414 --> 00:37:29.516
它解决了我刚才提出的问题

00:37:30.817 --> 00:37:33.053
它让我知道订单的细节

00:37:33.120 --> 00:37:35.689
它也不会让下单过程太突然

00:37:35.989 --> 00:37:39.159
用户知道正在发生什么
我认为这非常棒

00:37:40.694 --> 00:37:43.163
但是我认为这个流程还没有做到最好

00:37:43.430 --> 00:37:47.234
它包含了太多的步骤
仅仅只为了简单地预定一份三明治

00:37:47.301 --> 00:37:49.002
我认为我还能把它变得更简单

00:37:49.469 --> 00:37:52.239
我发现 我重复了一个步骤

00:37:52.306 --> 00:37:55.542
菜单界面可以很好地

00:37:55.609 --> 00:37:58.278
向用户展示食物信息

00:37:58.345 --> 00:38:01.215
也许用户完全不需要再进入细节页面

00:38:01.281 --> 00:38:03.550
来决定他们要预订的食物

00:38:03.617 --> 00:38:09.289
用户也许可以直接从菜单界面
决定他们要预定的主菜

00:38:09.823 --> 00:38:12.159
所以让我们来把工作流程变的更简短

00:38:14.428 --> 00:38:18.298
我把购买键直接放到菜单界面上

00:38:18.365 --> 00:38:20.167
因为它已经包含了足够的信息

00:38:20.467 --> 00:38:22.703
现在如果用户点击这其中一个按键

00:38:23.570 --> 00:38:26.840
我们依然保留购物车模式
但是不同于在右上角显示购物车图标

00:38:26.907 --> 00:38:28.942
它现变成了这个
从屏幕下方浮出的小托盘

00:38:29.543 --> 00:38:32.179
在这里显示出订单信息

00:38:32.246 --> 00:38:35.649
甚至于让用户直接在菜单页完成订餐

00:38:36.283 --> 00:38:38.852
他们还可以向上呼出托盘页面

00:38:38.919 --> 00:38:42.022
查看订单的全部细节和其他选项

00:38:42.289 --> 00:38:45.125
很大程度上我们已经完成了任务
用户可以看到足够的信息

00:38:45.192 --> 00:38:48.195
来决定是否完成订餐

00:38:49.096 --> 00:38:55.135
事实上我还能继续优化
如果用户点击了预订键

00:38:55.636 --> 00:38:58.872
我可以利用同样的托盘栏
显示订单确认状态

00:39:02.009 --> 00:39:04.144
现在 我们的工作流程是这样的

00:39:04.711 --> 00:39:07.047
它包含三个步骤
但是让人感觉更加简单

00:39:07.114 --> 00:39:09.550
因为所有的操作都能在菜单页完成

00:39:11.185 --> 00:39:15.923
它依然拥有之前设计的所有功能

00:39:15.989 --> 00:39:18.592
但是所有的选项都被移到托盘栏里

00:39:18.659 --> 00:39:21.295
而不是将这些步骤强加给用户

00:39:21.461 --> 00:39:22.462
看起来非常棒

00:39:24.364 --> 00:39:27.067
我认为这个工作流程非常成功

00:39:27.134 --> 00:39:30.704
它成功完成了订餐任务
还缩短了订餐时间

00:39:31.305 --> 00:39:34.007
请注意我设计的思路

00:39:34.074 --> 00:39:36.610
我遵循了相同的原则
如我之前提及的那样

00:39:36.810 --> 00:39:40.848
我从自己知道的开始做起
然后不断地评估和迭代

00:39:40.914 --> 00:39:43.283
直到我自己满意为止

00:39:44.318 --> 00:39:46.787
现在让我们来总结今天的演讲
让我们请回Ryan

00:39:51.859 --> 00:39:54.361
谢谢你 Jon
我等不及想用上我们的虚构应用了

00:39:55.562 --> 00:39:58.098
好的 我们只有几分钟时间来总结

00:39:58.232 --> 00:40:01.301
我希望我们向大家成功阐述了
几个重要观点

00:40:01.568 --> 00:40:04.438
首先 “做出好设计不容易”

00:40:04.571 --> 00:40:09.376
不可否认它们充满乐趣
但会耗费时间精力以及不断的自我审视

00:40:09.877 --> 00:40:12.179
使用我们分享的这些方法和技巧

00:40:12.246 --> 00:40:13.714
能让这一切变得简单一些

00:40:14.448 --> 00:40:17.017
如果你正在确定应用的设计方案

00:40:17.518 --> 00:40:20.521
请先定义你的用户目标
以及你的应用目标

00:40:20.587 --> 00:40:24.391
参照它们来选择需要的功能

00:40:25.993 --> 00:40:26.860
若你知道了应用设计方案

00:40:26.927 --> 00:40:30.631
但却不知道UI应该怎么设计
没有关系

00:40:30.964 --> 00:40:32.833
先从你知道的做起
在此基础上不断增加

00:40:32.900 --> 00:40:35.802
如果你在开始前不知道全部系统的设计
这没有关系

00:40:36.136 --> 00:40:38.906
这可能是我们的偏见
试一试Keynote

00:40:38.972 --> 00:40:40.040
你们也许会喜欢上它

00:40:41.375 --> 00:40:44.778
要找出最合适的设计
请尝试尽量多的思路

00:40:45.312 --> 00:40:49.383
不要在第一份设计后止步
它可能还不够好

00:40:49.983 --> 00:40:52.019
批判你的设计

00:40:52.085 --> 00:40:56.890
寻找最能满足你用户的目标
和应用目标的设计

00:40:57.057 --> 00:41:00.561
不断地评估和迭代
直到你感到满意

00:41:02.129 --> 00:41:05.265
我们希望你们能运用这些技巧和方法
在你们的日常工作中

00:41:05.399 --> 00:41:10.237
给自己充分的时间来
计划 完成 和批判自己的设计

00:41:11.138 --> 00:41:12.773
它值得你的投入

00:41:14.608 --> 00:41:16.710
你可在此处找到本场演讲的更多信息

00:41:18.011 --> 00:41:19.713
也请大家查阅这些相关演讲

00:41:19.780 --> 00:41:21.715
它们非常精彩
我想现在已经上线了

00:41:22.115 --> 00:41:23.150
谢谢大家的到来