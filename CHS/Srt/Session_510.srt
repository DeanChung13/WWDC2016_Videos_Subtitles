00:00:19.600 --> 00:00:24.033 
大家好
欢迎来到“验证HTTP直播流”会话

00:00:24.500 --> 00:00:25.500 
我是Eryk

00:00:25.567 --> 00:00:27.300 
是一名Apple的媒体工程师

00:00:27.433 --> 00:00:28.367 
现在就开始吧

00:00:28.733 --> 00:00:29.600 
验证确定完善性或准确性

00:00:29.667 --> 00:00:31.767 
我们验证流的目的是什么

00:00:32.100 --> 00:00:34.267 
是要确保该流的正确性

00:00:34.333 --> 00:00:36.067 
至少是结构的正确

00:00:36.667 --> 00:00:39.500 
结构检测并不能发现所有潜在问题

00:00:39.567 --> 00:00:41.467 
但可以消除大部分的

00:00:42.500 --> 00:00:44.067 
为了更准确

00:00:44.400 --> 00:00:47.900 
首先要确保播放列表和片段的格式正确

00:00:48.200 --> 00:00:51.500 
那么软件可以解析流吗

00:00:51.567 --> 00:00:52.467 
HLS验证

00:00:52.533 --> 00:00:54.933 
第二 我要有些额外要求

00:00:55.000 --> 00:00:59.033 
例如 HLS规格不需信息帧播放列表

00:00:59.100 --> 00:01:00.733 
但我们需要

00:01:00.800 --> 00:01:03.133 
因为想要改善用户体验

00:01:04.000 --> 00:01:08.367 
第三
我们希望这些流来反映既定的最佳实践

00:01:08.967 --> 00:01:09.833 
一切正常

00:01:09.900 --> 00:01:12.267 
最终都是为了

00:01:12.333 --> 00:01:15.533 
确保流在设备上运行正常

00:01:17.800 --> 00:01:20.233 
现在让我们谈谈规格

00:01:21.433 --> 00:01:24.767  
最重要的是HLS规格本身

00:01:25.533 --> 00:01:28.067  
如果你有过使用HLS的经验

00:01:28.133 --> 00:01:30.300  
你可能看过这份文档几次

00:01:31.400 --> 00:01:36.767  
这是因特网工程作业推动
（IETF） 网络草案

00:01:37.433 --> 00:01:40.967  
搜索“draft pantos”
就能找到

00:01:41.733 --> 00:01:44.400  
几年前发布了第一版

00:01:44.933 --> 00:01:47.000  
我们一年更新两到三次

00:01:47.300 --> 00:01:49.733  
文档详细说明了播放列表结构

00:01:49.800 --> 00:01:52.133  
存在何种标签 格式是什么

00:01:52.500 --> 00:01:55.800  
并向客户和服务器解释职责

00:01:56.733 --> 00:01:57.567 
HLS编辑规范

00:01:57.633 --> 00:02:00.000 
这是我们最新推出的一个文档

00:02:00.067 --> 00:02:02.267 
HLS编辑规范

00:02:03.800 --> 00:02:06.167 
可以在参考库中找到

00:02:06.233 --> 00:02:09.500 
我们一开始在去年秋天推出tvOS版

00:02:09.967 --> 00:02:14.867 
在 WWDC
我们已经升级覆盖iOS和OS

00:02:15.333 --> 00:02:19.900 
这份文件试图涵盖构成HLS的内容

00:02:22.700 --> 00:02:26.800 
规范要求有几个来源

00:02:27.433 --> 00:02:30.900 
一些来自HLS规范的回波规范

00:02:30.967 --> 00:02:33.833 
例如 不连续性点位置

00:02:33.900 --> 00:02:36.333 
播放列表持续时间

00:02:36.900 --> 00:02:38.733 
一些必须要有设备的支持

00:02:38.833 --> 00:02:42.667 
例如 你的视频都需要是H.264

00:02:42.733 --> 00:02:45.800 
或者每秒内容不能超过60帧

00:02:46.933 --> 00:02:49.533 
其他一些来自期望的用户体验

00:02:49.600 --> 00:02:53.367 
例如我们期望的I-Frame间隔

00:02:53.433 --> 00:02:55.833 
或者我们希望
大家来支持trick play

00:02:57.367 --> 00:03:02.500 
一些是根据我们过去七年的经验和分析

00:03:02.867 --> 00:03:06.900 
我要说的是我们的传送建议

00:03:07.200 --> 00:03:08.633 
我们推荐的比特率

00:03:08.967 --> 00:03:12.233 
我们对隐私和安全的建议

00:03:14.933 --> 00:03:17.967 
我列出来的要求仅仅只是几个例子

00:03:18.033 --> 00:03:20.500 
让大家对这个文档有个概念

00:03:21.033 --> 00:03:23.867 
规范本身分成各种类别

00:03:23.933 --> 00:03:25.300 
例如视频编码

00:03:25.400 --> 00:03:26.233 
Trick Play

00:03:26.300 --> 00:03:27.533 
媒体分解

00:03:27.633 --> 00:03:29.200 
传送等等

00:03:31.767 --> 00:03:35.000 
现在我们不会让大家手动验证

00:03:35.067 --> 00:03:37.400 
所以来看看我们提供的工具

00:03:38.000 --> 00:03:40.867 
但首先 你需要获得工具

00:03:41.033 --> 00:03:44.033 
你能在开发人员流页面
developer.apple.com/streaming

00:03:44.100 --> 00:03:48.633 
找到所以关于HLS的重要信息

00:03:49.667 --> 00:03:51.233 
如果我们往下滚动

00:03:51.300 --> 00:03:52.833 
大概右边一半的位置

00:03:52.900 --> 00:03:54.800 
有一个链接“工具”下载

00:03:55.467 --> 00:04:00.700 
请注意你必须注册成为
开发人员激活Apple ID

00:04:00.767 --> 00:04:02.233 
才能进入页面

00:04:02.567 --> 00:04:05.033 
但记住开发人员账户是免费的

00:04:06.033 --> 00:04:08.900 
一旦注册了 就可以进入下载页面

00:04:10.100 --> 00:04:14.033 
下载本身是个磁盘映像包含一个安装包

00:04:14.633 --> 00:04:16.666 
现在截图有点过时了

00:04:16.733 --> 00:04:21.132 
你应该看到一个2016年6月
或更新的磁盘映像

00:04:21.767 --> 00:04:24.567 
我们一年会更新几次工具

00:04:25.400 --> 00:04:28.567 
顺便说句 若在 WWDC 期间查看

00:04:28.633 --> 00:04:31.233 
新版本可能还没有发布

00:04:32.367 --> 00:04:33.900 
运行安装程序后

00:04:33.967 --> 00:04:36.000 
出现了服务器工具

00:04:36.067 --> 00:04:39.800 
我要提醒大家
这些工具只在OS X上运行

00:04:39.867 --> 00:04:41.100 
HTTP直播流工具

00:04:41.167 --> 00:04:45.133 
头两个是验证工具 会在后面介绍

00:04:46.033 --> 00:04:51.333 
接下来三个是文件
流和字幕的分割工具

00:04:51.767 --> 00:04:55.733 
想要简要介绍下字幕分割工具

00:04:55.800 --> 00:04:59.333 
对于分割大型网页VTTT

00:04:59.400 --> 00:05:04.600 
非常有用

00:05:05.167 --> 00:05:06.600 
最后两个

00:05:07.567 --> 00:05:10.933 
是Variant Playlist Creator
用于创建主要播放列表

00:05:11.467 --> 00:05:16.600 
最后一个用于设置定时元数据格式

00:05:16.867 --> 00:05:19.233 
你可以插入使用分割工具

00:05:19.800 --> 00:05:21.867 
现在所有工具已经载入

00:05:22.233 --> 00:05:25.800 
你可以通过这些H选项获得帮助

00:05:28.367 --> 00:05:30.667 
在我们介绍验证工具前

00:05:30.733 --> 00:05:33.333 
我想简单介绍下mediafilesegmenter

00:05:33.833 --> 00:05:36.533 
调用很简单 只要传到电影文件

00:05:37.167 --> 00:05:40.467 
就能生成媒体播放列表和片段

00:05:40.933 --> 00:05:44.700 
而这个工具有许多选项
但并没有看起来那么复杂

00:05:45.300 --> 00:05:47.467 
选项可以分成几类

00:05:48.633 --> 00:05:50.533 
选项必须进行命名文件

00:05:50.600 --> 00:05:52.133 
构建播放列表

00:05:53.000 --> 00:05:56.833 
如何进行加密等等

00:05:57.533 --> 00:05:59.800 
甚至不用使用该介绍

00:06:00.067 --> 00:06:02.267 
mediafilesegmenter
可以很好进行交叉检查

00:06:02.333 --> 00:06:04.700 
你对片段做的所有处理

00:06:06.967 --> 00:06:08.633 
进行验证

00:06:09.233 --> 00:06:11.867 
媒体流验证器是关键工具

00:06:12.500 --> 00:06:15.167 
你可以在主播放列表调用

00:06:17.100 --> 00:06:21.200 
在终端和json文件上生死输出

00:06:21.567 --> 00:06:25.200 
json文件包含输出所有的重要信息

00:06:25.267 --> 00:06:27.300 
还有更多数据

00:06:30.200 --> 00:06:32.300  
我想要调用几个选项

00:06:32.867 --> 00:06:35.900  
首先你可以调整
json文件的名字和路径

00:06:37.633 --> 00:06:39.233  
还可以调整超时

00:06:39.667 --> 00:06:40.900  
那么什么是超时？

00:06:41.267 --> 00:06:43.067  
默认情况下 验证器超时

00:06:43.133 --> 00:06:45.800  
就是 5分钟后停止处理

00:06:46.533 --> 00:06:50.533  
现在可能时间不够
在要求流上处理一个大视频

00:06:51.033 --> 00:06:55.467  
对于实时内容
5分钟足够进行初步检查

00:06:55.533 --> 00:06:57.767  
你希望在更长的时间段进行检查

00:06:57.833 --> 00:07:00.833  
来确定流的基本正确性

00:07:03.733 --> 00:07:06.767 
这个就是媒体流验证器输出

00:07:08.067 --> 00:07:11.700 
我们调出媒体流验证器的URL

00:07:12.600 --> 00:07:15.933 
首先显示版本号

00:07:16.000 --> 00:07:20.233 
然后输出一些下载播放列表
和文件的痕迹

00:07:21.600 --> 00:07:25.300 
再输出每个发现变量

00:07:25.367 --> 00:07:27.633 
复制和I-Frame变量的信息

00:07:28.267 --> 00:07:30.967 
现在很难进行

00:07:31.033 --> 00:07:33.800 
所以我们创建了HLS报告

00:07:34.767 --> 00:07:40.133 
这是个python
脚本采用json并进行总结提取

00:07:41.233 --> 00:07:44.067 
再生成HTML文件作为输出

00:07:45.300 --> 00:07:48.000 
文件名与json文件相同

00:07:48.067 --> 00:07:50.100 
除了拓展名不同

00:07:51.367 --> 00:07:54.067  
我还想调用几个选项

00:07:54.633 --> 00:07:57.100  
我们可以改变HTML文件的名字

00:07:58.200 --> 00:08:02.433  
dash I或dash ID
选项很有用

00:08:02.500 --> 00:08:07.033  
在你想要匹配HTML输出
和json文件选项时

00:08:07.100 --> 00:08:09.633  
当我说到例子时会

00:08:09.700 --> 00:08:11.333  
更详细介绍工作原理

00:08:12.967 --> 00:08:16.033  
现在Verbose选项非常有用

00:08:16.100 --> 00:08:20.133  
可以告诉你许多关于变量和复制的信息

00:08:20.200 --> 00:08:23.700  
很遗憾 今天没足够时间详细介绍输出

00:08:23.767 --> 00:08:26.567  
但我想调用演示下

00:08:28.133 --> 00:08:29.333 
提交到App Store

00:08:29.400 --> 00:08:30.633 
快速放在一边

00:08:31.167 --> 00:08:35.332 
你可以在提交
App Store前验证流

00:08:36.000 --> 00:08:38.433 
也可以在提交时

00:08:38.500 --> 00:08:42.100 
在你的注释域内
要包括一个测试流URL

00:08:42.167 --> 00:08:45.467 
这样查看人就有可以查看的流

00:08:46.933 --> 00:08:47.767 
嗯 这个演示

00:08:47.833 --> 00:08:49.600 
我要运行一些演示

00:08:49.800 --> 00:08:52.200 
但不是在屏幕上运行全部

00:08:52.267 --> 00:08:55.133 
大家要尝试跟着理解这些小文本

00:08:55.200 --> 00:08:57.767 
我拿到输出会带着大家浏览

00:08:59.700 --> 00:09:01.633 
首先 一个小命令行实例

00:09:03.267 --> 00:09:04.900 
运行媒体流验证器

00:09:04.967 --> 00:09:07.767 
注意我给json文件的命名

00:09:08.833 --> 00:09:11.767 
我刚才拿到个假URL 大家来试试

00:09:13.200 --> 00:09:16.367 
现在我们之前看到了输出 就跳过

00:09:16.433 --> 00:09:19.200 
但记住运行可能需要几分钟

00:09:22.267 --> 00:09:25.500 
一旦完成 我们就能运行HLS报告

00:09:25.567 --> 00:09:28.733 
传到验证器创建的json文件

00:09:30.433 --> 00:09:34.233 
如果HLS报告运行正常
我们就不会有输出

00:09:34.300 --> 00:09:36.333 
就只有HTML文件

00:09:37.233 --> 00:09:39.167 
如果我们查看当前目录

00:09:39.667 --> 00:09:41.733 
就只有两个文件

00:09:41.800 --> 00:09:44.400 
验证器创建的json文件

00:09:44.467 --> 00:09:47.800 
和HLS报告创建的HTML文件

00:09:49.433 --> 00:09:52.033 
让我们看一些示例报告

00:09:52.800 --> 00:09:56.567 
首先来看看有几个常见问题的播放列表

00:09:58.467 --> 00:10:00.233  
这个就是报告

00:10:01.000 --> 00:10:03.967  
第一个要检查的是流类型

00:10:06.233 --> 00:10:10.167  
一般会是VOD LIVE
或EVENT

00:10:11.300 --> 00:10:17.467  
这些反应了三种HLS支持的
基本流类型

00:10:18.167 --> 00:10:20.267  
但也有可能拿到
值为“UNKNOWN”

00:10:20.333 --> 00:10:24.333 
这就意味着我们无法识别播放列表

00:10:24.667 --> 00:10:27.400 
更糟的话 可能拿到混合值

00:10:27.567 --> 00:10:31.200 
现在这说明有一些未知因素

00:10:31.267 --> 00:10:35.567 
就是有些媒体播放列表无法识别

00:10:35.767 --> 00:10:38.667 
或者更糟 有发生冲突的类型

00:10:38.733 --> 00:10:42.900 
例如 有些变量为EVENT

00:10:42.967 --> 00:10:44.467 
而一些却是LIVE

00:10:47.200 --> 00:10:51.100 
现在报告下一项就是变量概览表

00:10:51.600 --> 00:10:54.200 
有一个视频变量条目

00:10:55.433 --> 00:10:59.267 
如果我们刚好有混合流

00:10:59.333 --> 00:11:03.233 
就会成为表内的
增加列说明播放列表类型

00:11:03.300 --> 00:11:05.200 
往右看就能

00:11:05.733 --> 00:11:07.867 
看到有更多的列

00:11:07.933 --> 00:11:09.333 
特别是

00:11:09.400 --> 00:11:13.167 
当我们要给VOD一个处理百分比列时

00:11:14.833 --> 00:11:19.400 
如果少于100％就说明
超时设置不够长

00:11:19.767 --> 00:11:24.267 
如果有实时内容
就不会看到处理百分比

00:11:24.333 --> 00:11:26.000 
相反 会看到两列

00:11:26.233 --> 00:11:29.000 
平均分段计数和平均播放列表时长

00:11:30.133 --> 00:11:33.700 
下一项要检查的是差异百分比列

00:11:34.500 --> 00:11:37.167 
这列说明测量比特率相比

00:11:37.233 --> 00:11:40.033 
主播放列表显示的值超过多少

00:11:40.700 --> 00:11:42.533 
现在这些值都太高了

00:11:42.600 --> 00:11:48.233 
注意变量超过了40％

00:11:49.533 --> 00:11:54.700 
现在这些值都应在
-10％-+10％范围内

00:11:55.400 --> 00:11:58.133 
如果值为正

00:11:58.200 --> 00:12:00.867 
就说明你申报的值应该增加

00:12:01.400 --> 00:12:02.867 
如果值为负

00:12:03.067 --> 00:12:05.367 
申报的值就应减少

00:12:07.133 --> 00:12:08.600 
现在请注意我们有两个

00:12:08.667 --> 00:12:13.800 
原因是我们播放列表中
申报了带宽和平均带宽

00:12:13.867 --> 00:12:18.067 
我们可以对比两个的申报值和测量值

00:12:19.400 --> 00:12:24.067 
现在从百分比项很难

00:12:24.133 --> 00:12:26.300 
看出真正的区别

00:12:26.667 --> 00:12:32.133 
如果你添加--pl选项
意味播放列表

00:12:32.667 --> 00:12:38.933 
到HLS报告命令行 将看到两个新列

00:12:39.633 --> 00:12:42.333 
播放列表率和播放列表平均率

00:12:43.233 --> 00:12:46.600 
从这个 我们可以看到例如变量1

00:12:46.833 --> 00:12:50.033 
申报值是392kb每秒

00:12:50.500 --> 00:12:53.933 
但测量值是551kb每秒

00:12:55.567 --> 00:12:59.267 
现在我们切换回没-p选项的版本
向下滚动

00:13:00.000 --> 00:13:02.700 
有另一张表 复制概述

00:13:04.000 --> 00:13:07.267 
在主播放列表我们将音频作为独立流

00:13:07.800 --> 00:13:10.467 
作为复制 就在这儿报告

00:13:13.667 --> 00:13:17.233 
根据这张表 必须要修复的问题就是

00:13:17.667 --> 00:13:22.667 
要正确播放必须修复的问题

00:13:22.733 --> 00:13:26.600 
或者是我们认为硬性要求的重要问题

00:13:28.367 --> 00:13:33.267 
请看项目#2和#4
就是我们刚才提的问题

00:13:33.467 --> 00:13:35.700 
申报和测量的最高和平均比特率

00:13:35.933 --> 00:13:38.633 
相互不匹配

00:13:40.133 --> 00:13:43.367 
后面再解决项目3

00:13:44.867 --> 00:13:48.233 
向下滚 发现必须修复的问题

00:13:48.467 --> 00:13:52.267 
对于必须修复的问题我们强烈建议修复

00:13:54.233 --> 00:13:57.133  
现在就是根据报告信息

00:13:57.200 --> 00:14:01.700  
可以对报告信息进行回溯

00:14:02.100 --> 00:14:06.067  
找到媒体流验证器和HLS报告的版本

00:14:06.133 --> 00:14:13.033  
这对大家给我们发生错误报告
和HLS报告输出

00:14:13.633 --> 00:14:16.633  
很重要或者是让大家
在下载更新版工具后

00:14:16.833 --> 00:14:20.800  
可以返回查看老版本

00:14:21.667 --> 00:14:23.600 
现在是项目5

00:14:23.667 --> 00:14:28.900 
显示我们的播放列表中没有字幕或标题

00:14:29.333 --> 00:14:31.100 
我们在下一个示例中修复

00:14:31.867 --> 00:14:33.567 
让我们看看项目7

00:14:34.800 --> 00:14:39.267 
项目7说默认视频变量

00:14:39.333 --> 00:14:42.600 
不是我们建议的

00:14:44.000 --> 00:14:47.200 
说的是变量#8

00:14:48.800 --> 00:14:51.267 
让我们返回到变量概述

00:14:51.633 --> 00:14:55.400 
可以发现项目8高亮了项目数字

00:14:55.800 --> 00:14:57.933 
说明这个就是默认变量

00:14:58.000 --> 00:14:59.300 
记住这个默认变量

00:14:59.367 --> 00:15:02.167 
就是客户最初播放的第一个变量

00:15:03.367 --> 00:15:05.700 
也是主播放列表的第一个变量

00:15:06.300 --> 00:15:10.100 
请注意这个最大速率是每秒8M

00:15:10.167 --> 00:15:12.767 
作为默认值太高了

00:15:16.133 --> 00:15:19.300 
好了 这些都是我们会遇到的常见问题

00:15:20.033 --> 00:15:21.433 
我们第二个例子

00:15:22.200 --> 00:15:25.467 
之前已经在第一个例子修复指出的问题

00:15:28.767 --> 00:15:33.500  
调整了申报值
现在差异百分比是接近0

00:15:34.267 --> 00:15:36.033  
我们已经修复默认变量

00:15:36.167 --> 00:15:39.100  
变得更合理 在#4变量下

00:15:39.167 --> 00:15:44.300  
将不同的媒体播放列表
移到主播放列表的第一位

00:15:45.933 --> 00:15:47.967  
再看右侧

00:15:48.200 --> 00:15:52.400  
我们修复超时设置
现在正在处理整个播放列表

00:15:55.033 --> 00:15:57.733 
现在我们已经修复了关于标题的问题

00:15:58.000 --> 00:16:00.500 
通过添加字幕播放列表修复的

00:16:01.367 --> 00:16:05.133 
现在注意字幕的复制 #12复制

00:16:05.400 --> 00:16:07.933 
没有最大或平均率

00:16:09.067 --> 00:16:12.000 
原因是字幕播放列表没有经过处理

00:16:12.367 --> 00:16:15.500 
我们把n/a放在已处理百分比栏上

00:16:15.567 --> 00:16:17.900 
提醒这个正在处理中

00:16:19.833 --> 00:16:25.167 
但还有个大问题要修复
就是没有I-Frame播放列表

00:16:27.933 --> 00:16:32.333  
当我们添加I-Frame播放列表时
报告有哪些改变呢

00:16:32.500 --> 00:16:34.200  
第一部分看起来一样

00:16:34.500 --> 00:16:35.733  
当往下滚动

00:16:36.600 --> 00:16:39.000  
除了其他的概述表外

00:16:39.067 --> 00:16:41.233  
还有个I-Frame变量概述

00:16:42.300 --> 00:16:45.767  
现在注意我们的差异百分比值有点不够

00:16:45.833 --> 00:16:47.700  
但这些都在范围内

00:16:48.033 --> 00:16:50.100  
记住范围是+/-10％

00:16:51.600 --> 00:16:54.233  
现在看看这边的两列

00:16:54.500 --> 00:16:56.600  
比例平均数和乘数

00:16:57.167 --> 00:17:02.567  
比例平均数是I-Frame播放列表
影响最大的平均数据

00:17:03.633 --> 00:17:05.133  
就是有点拗口

00:17:05.567 --> 00:17:08.233  
记住测量平均比特率

00:17:08.300 --> 00:17:12.800  
指的是数据速率为
1 X playback速率

00:17:13.767 --> 00:17:16.032  
但Trick Play的
I-Frames整点

00:17:16.099 --> 00:17:19.000  
的播放速率大于1 X speed

00:17:20.300 --> 00:17:23.700  
现在乘数告诉我们最低的播放速率

00:17:23.867 --> 00:17:26.166  
在该速率下会达到最差情况值

00:17:27.433 --> 00:17:29.100  
值高些会有改善

00:17:29.167 --> 00:17:31.400  
原因是我们放慢帧速率是为了

00:17:31.467 --> 00:17:35.267  
将实际显示帧速率保持在一个固定值

00:17:36.133 --> 00:17:38.000  
对于这些值我们要做的

00:17:38.067 --> 00:17:41.433  
就是与这儿的比例平均数据进行对比

00:17:41.500 --> 00:17:45.300  
与分辨率相同的正常变量数据速率对比

00:17:46.367 --> 00:17:48.100  
应该要接近值

00:17:48.167 --> 00:17:51.433  
或者I-Frame变量低于值

00:17:51.933 --> 00:17:55.933  
否则 Trick Play
可能会造成分辨率下降

00:17:59.133 --> 00:18:02.967  
在报告中 我已经有了一个新栏

00:18:03.367 --> 00:18:07.267 
这是因为我在HLS报告中
添加了——ID选项

00:18:08.933 --> 00:18:10.100 
正如我之前所说

00:18:10.167 --> 00:18:12.967 
能帮助你找到json文件中
相同的数据

00:18:13.700 --> 00:18:17.533 
所以让我们看看第一个
数据ID 16

00:18:17.600 --> 00:18:20.333 
哪个是我们分辨率最低的
I-Frame播放列表呢

00:18:20.467 --> 00:18:21.933 
在json文件找找

00:18:24.233 --> 00:18:27.800 
这是json的简短文本视图

00:18:27.867 --> 00:18:30.200 
json 的最高级别是字典

00:18:30.633 --> 00:18:33.033 
我们对变量值感兴趣

00:18:33.400 --> 00:18:35.400 
哪个是字典的数组呢

00:18:38.000 --> 00:18:42.067 
那些字典中某一个会有数据ID 16

00:18:42.733 --> 00:18:48.200 
我想说这里并不是按照数据ID排列的

00:18:50.500 --> 00:18:52.967 
这个有数据ID 16

00:18:53.033 --> 00:18:57.700 
那个是json变量条目
其数据与报告中的行匹配

00:18:57.767 --> 00:18:59.800 
那是最低的I-Frame变量

00:19:00.533 --> 00:19:02.300 
现在 我们已经跳过许多的数据

00:19:02.367 --> 00:19:05.333 
信息比这张幻灯片上显示的多得多

00:19:05.967 --> 00:19:08.533 
用自己喜欢的工具
在json文件周围寻找

00:19:08.600 --> 00:19:10.700 
或者自己编写一些特殊工具

00:19:11.233 --> 00:19:13.400 
这些json可以变得很大

00:19:13.467 --> 00:19:17.300 
它们超过100,000行是很正常的

00:19:19.733 --> 00:19:21.767 
我们最后一个例子

00:19:22.267 --> 00:19:26.000 
我们选择播放列表
再添加不同类型的音频

00:19:27.133 --> 00:19:29.133  
顶部看起来很类似

00:19:29.200 --> 00:19:30.167  
往下滚动

00:19:31.500 --> 00:19:33.000 
看看我们的复制

00:19:33.467 --> 00:19:35.967 
现在 不再只是单一的立体声音频

00:19:36.033 --> 00:19:39.767 
我们添加了两个多声道音频复制

00:19:40.300 --> 00:19:43.100 
一个是AC-3的杜比数字

00:19:43.167 --> 00:19:45.000 
叫做aud2

00:19:45.667 --> 00:19:49.267 
另一个是EC-3的杜比数字升级

00:19:50.100 --> 00:19:51.167 
叫做aud3

00:19:51.500 --> 00:19:54.233 
让我们去看看变量部分

00:19:56.400 --> 00:20:02.900 
注意到因为AE-3
和EC-3无法替代

00:20:02.967 --> 00:20:06.100 
也不能替换AAC

00:20:06.167 --> 00:20:09.400 
每个都有自己的默认变量

00:20:10.867 --> 00:20:17.400 
也就是说一旦选择了AC-3的
aud3 就默认变量#12

00:20:17.467 --> 00:20:20.700 
原因是该变量是aud2组中第一个

00:20:20.767 --> 00:20:22.567 
出现在主播放列表中的

00:20:23.833 --> 00:20:29.500 
同样 如果选择EC-3
默认变量为#20

00:20:30.367 --> 00:20:35.000 
注意aud2和aud3变量之间的
比特率差异

00:20:35.267 --> 00:20:39.533 
例如变量#9和变量#17

00:20:39.833 --> 00:20:42.967 
这是因为音频不同的比特率

00:20:43.133 --> 00:20:45.100 
我们看到的变量比特率

00:20:45.167 --> 00:20:49.500 
是包括复制的组合比特率

00:20:51.133 --> 00:20:53.600 
好了 以上就是我举的例子

00:20:53.967 --> 00:20:56.800 
那么在哪儿可以找到自己想看的示例呢

00:20:57.467 --> 00:20:58.300 
HTTP直播流示例

00:20:58.367 --> 00:21:02.167 
好 这个直播流网页上
有三个现成的例子

00:21:02.233 --> 00:21:05.533 
如果前往
developer.apple.com/streaming

00:21:05.600 --> 00:21:07.400 
可以看到示例网页指示

00:21:07.467 --> 00:21:10.400 
你可以找到该网页的URL

00:21:11.833 --> 00:21:14.233 
或者也可以阅读幻灯片上的内容

00:21:15.667 --> 00:21:18.400 
头两个在你验证的时候会有意见

00:21:18.467 --> 00:21:21.667 
原因是这些流是在很久以前创建的

00:21:21.733 --> 00:21:24.200 
我们决定不对其进行升级

00:21:24.267 --> 00:21:27.967 
但第三个变量是新的 几乎完美

00:21:28.033 --> 00:21:29.433 
示例流

00:21:30.300 --> 00:21:32.233 
好了 该结束了

00:21:32.300 --> 00:21:33.167 
总结

00:21:33.233 --> 00:21:36.567 
有三件事希望大家能记住

00:21:37.200 --> 00:21:38.700 
服从编辑规范

00:21:39.333 --> 00:21:42.100 
验证 验证 再验证媒体流

00:21:42.500 --> 00:21:46.500 
包括在提交应用时测试流URL

00:21:49.033 --> 00:21:50.833 
更多信息

00:21:50.900 --> 00:21:55.633 
请前往 WWDC 网站
使用该会话编号510

00:21:57.167 --> 00:21:58.467 
相关会话
“HTTP实时总结的新特性”

00:21:58.533 --> 00:22:02.633 
今年在HTTP直播流有许多新改变

00:22:02.700 --> 00:22:07.700 
我建议大家参加或观看会话

00:22:07.767 --> 00:22:10.033 
“HTTP直播流的新特性”

00:22:10.600 --> 00:22:12.700 
谢谢 祝大家在会议中有所收获