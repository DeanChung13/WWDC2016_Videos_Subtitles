00:00:20.287 --> 00:00:27.294
ResearchKit有何新特性？

00:00:31.698 --> 00:00:32.533
早上好

00:00:33.033 --> 00:00:34.168
早上好

00:00:34.234 --> 00:00:35.169
谢谢

00:00:35.936 --> 00:00:39.773
欢迎今天来此的医生兼编码员

00:00:40.474 --> 00:00:44.511
和从事研究工作
提供伟大研究应用的开发人员

00:00:45.012 --> 00:00:47.314
当然 包括今天在此的学生

00:00:48.081 --> 00:00:50.217
我知道他们已在用
ResearchKit

00:00:50.651 --> 00:00:51.752
欢迎你们所有人

00:00:52.619 --> 00:00:55.122
你们想看到一款伟大的
ResearchKit应用吗？

00:00:55.189 --> 00:00:56.123
是的

00:00:56.790 --> 00:00:59.993
好 我很高兴在昨晚的派对后
至少还有部分人清醒着

00:01:02.196 --> 00:01:04.798
Duke Medicine的
Autism & Beyond

00:01:04.864 --> 00:01:08.235
是的 我们有Duke开发商在此
所以 谢谢

00:01:09.503 --> 00:01:12.072
Duke Medicine的
Autism & Beyond

00:01:12.139 --> 00:01:17.044
是旨在识别和理解
儿童发展风险的研究

00:01:18.679 --> 00:01:20.314
在ResearchKit应用

00:01:20.881 --> 00:01:23.217
一个年轻的孩子观看视频

00:01:23.951 --> 00:01:27.321
前置摄像机记录他们的反应

00:01:27.921 --> 00:01:28.856
让我们一起来看看

00:01:34.628 --> 00:01:38.632
有一只蜘蛛爬上水管子

00:01:39.433 --> 00:01:44.071
应用程序分析了孩子的情绪反应的视频

00:01:44.137 --> 00:01:46.306
提取面部表情

00:01:47.541 --> 00:01:50.377
有一天 这样的视频可能会被使用

00:01:50.444 --> 00:01:53.680
在她自己的家的孩子的自闭症

00:01:53.747 --> 00:01:56.717
和其他心理健康的问题 如焦虑

00:01:57.684 --> 00:01:59.419
如果研究成功了

00:01:59.887 --> 00:02:05.058
Duke将能够使用科学为基础的工具
帮助家长了解

00:02:05.125 --> 00:02:07.060
支持孩子的成长

00:02:07.661 --> 00:02:09.429
我认为这是很神奇的

00:02:10.764 --> 00:02:15.035
它只是去年开发的许多应用程序之一
使用ResearchKit的应用

00:02:16.069 --> 00:02:19.706
今天 我和同事Yuan Zhu
希望我们可以激发你们

00:02:19.773 --> 00:02:23.210
创建另一个同样伟大的
ResearchKit应用

00:02:24.411 --> 00:02:27.381
今天
我们将ResearchKit新特性

00:02:28.415 --> 00:02:30.617
我们将谈一点

00:02:30.684 --> 00:02:33.387
从开源社区以及你如何贡献

00:02:34.188 --> 00:02:37.124
但首先我想先回顾一下
ResearchKit

00:02:37.691 --> 00:02:41.128
一年多前推出ResearchKit

00:02:41.261 --> 00:02:44.598
其目的是采取基本临床研究的组成部分

00:02:44.665 --> 00:02:47.000
并将他们转移到移动世界

00:02:47.334 --> 00:02:50.637
这些基本组成部分都是需要知情同意

00:02:51.104 --> 00:02:54.274
调查任务和主动任务

00:02:55.475 --> 00:02:58.212
考虑到iPhone的数量很惊人

00:02:58.278 --> 00:03:03.350
在世界范围内 像你我这些用户
可以研究做出贡献

00:03:04.318 --> 00:03:06.486
但有一些显著的差异

00:03:06.553 --> 00:03:09.089
临床研究和移动世界

00:03:09.790 --> 00:03:12.192
特别是在临床研究

00:03:12.559 --> 00:03:14.361
参与者就在那里

00:03:14.428 --> 00:03:17.130
研究人员可看到并告诉他们要做什么
且和他们在一起

00:03:17.698 --> 00:03:21.702
所以当你移动到移动空间
有一些事情要考虑

00:03:22.236 --> 00:03:26.073
我想每个组件并向你展示
ResearchKit怎么工作

00:03:27.140 --> 00:03:28.108
知情同意

00:03:28.175 --> 00:03:32.179
知情同意是必要的
对于所有使用人类主题的研究

00:03:33.280 --> 00:03:36.917
研究人员需要告诉
参与者是什么研究

00:03:36.984 --> 00:03:39.586
他们要收集的数据
他们将如何使用这些数据

00:03:39.653 --> 00:03:43.390
他们将如何确保隐私
怎样的人可以拿走研究

00:03:43.457 --> 00:03:44.491
和许多其他事情

00:03:45.993 --> 00:03:50.531
所以通常像在Autism & Beyond
研究中的人

00:03:50.597 --> 00:03:53.700
会得到这样的一个内容

00:03:54.134 --> 00:03:54.968
这是相当长

00:03:55.035 --> 00:03:57.871
因为如果你把它端到端的它会比我高

00:03:58.105 --> 00:04:01.041
所以这是一个很多人需要通过文本

00:04:01.808 --> 00:04:05.779
所以这个叫做ResearchKit

00:04:05.846 --> 00:04:08.081
我们开发了一个知情同意书模块

00:04:08.148 --> 00:04:12.452
我们所做的是把这个大的形式
分割成一系列的屏幕

00:04:13.053 --> 00:04:15.856
在每一个屏幕上它描述特别部分

00:04:15.923 --> 00:04:18.926
给出了一个概述
提供了一个学习更多的链接

00:04:19.326 --> 00:04:23.997
若参与者希望的话 他们可以向下钻
并获得更多的信息

00:04:24.064 --> 00:04:25.966
他们可以在这里撤回信息

00:04:26.400 --> 00:04:31.305
然后在一切结束时都被
放到一起给出最后的评论

00:04:31.371 --> 00:04:35.042
然后用户可以决定参与研究与否

00:04:36.310 --> 00:04:38.278
如果他们决定参加这项研究

00:04:38.345 --> 00:04:43.116
然后他们会被要求提供他们的名字
签署电子同意书

00:04:43.183 --> 00:04:46.453
正如我们最有名的用户
Johnny Appleseed在此做的

00:04:47.821 --> 00:04:49.189
现在我想指出的是

00:04:49.256 --> 00:04:52.693
若你是一个开发人员
做第一个ResearchKit应用

00:04:52.759 --> 00:04:57.164
你不能只是在这里剪切和粘贴本文
Duke或者其他研究拥有的

00:04:57.865 --> 00:05:00.801
知情同意书文本批准

00:05:00.868 --> 00:05:03.737
通过一个机构审查委员会或伦理委员会

00:05:03.804 --> 00:05:05.973
你需要使用他们给的文本

00:05:06.039 --> 00:05:09.743
而你也必须抵制成为
一个有创造力的作家的冲动

00:05:10.511 --> 00:05:12.746
而且喜欢 你知道我看这些东西和思考

00:05:12.813 --> 00:05:15.949
我可以简单地说
我可以让这个变成非常激动人心的阅读

00:05:16.016 --> 00:05:16.917
但你不想这么做

00:05:16.984 --> 00:05:21.188
你想得到研究员给你的东西
并确保它已被批准

00:05:21.255 --> 00:05:22.856
这就是知情同意书

00:05:24.691 --> 00:05:26.560
在临床研究中

00:05:26.627 --> 00:05:29.363
研究人员通常有一个参与者

00:05:29.696 --> 00:05:33.033
至少做一个调查 如果只要求人口数据

00:05:33.567 --> 00:05:37.304
但这也是很常见的研究
使用像这样的标准调查

00:05:37.371 --> 00:05:40.307
病人健康问卷
或PHQ-9

00:05:41.041 --> 00:05:44.845
现在很容易将一篇书面调查
变成一个移动的调查

00:05:44.912 --> 00:05:47.414
ResearchKit
试图使这一点更加优化

00:05:47.481 --> 00:05:49.950
在大多数情况下 每一页有一个问题

00:05:50.684 --> 00:05:53.187
当然 我们可以支持任何书面调查

00:05:53.253 --> 00:05:55.422
比如填空 多项选择

00:05:55.856 --> 00:05:58.926
但因为移动ResearchKit
可以做的更多

00:05:59.293 --> 00:06:00.460
你可以选择

00:06:00.527 --> 00:06:03.463
它可以有一个真正的滑动
在那里你必须滑动你的手指

00:06:03.530 --> 00:06:08.068
你可以位置作为一个答案
或日期和时间或图像

00:06:08.368 --> 00:06:13.240
ResearchKit
有许多丰富的回答格式

00:06:14.575 --> 00:06:16.310
好 日期现很适合我

00:06:17.911 --> 00:06:19.479
所以这是我们的调查任务

00:06:20.447 --> 00:06:21.415
现在活跃的任务

00:06:21.481 --> 00:06:24.952
在临床环境中的参与者可能
被要求做一些事 像散步

00:06:25.018 --> 00:06:27.554
因此研究人员可以观察他们的步态

00:06:28.655 --> 00:06:33.260
或者解决一个难题或讲一个故事
作为心理学研究

00:06:33.794 --> 00:06:37.965
甚至他们可能被要求做的事情
如需要精细动作协调

00:06:38.999 --> 00:06:42.169
在临床上有人来告诉你怎么做

00:06:42.236 --> 00:06:44.037
并确保你做的正确

00:06:44.238 --> 00:06:47.174
所以我要告诉你两个任务
这样你才能知道

00:06:47.274 --> 00:06:49.843
ResearchKit
如何处理主动任务

00:06:51.745 --> 00:06:53.647
首先是一个语音任务

00:06:53.714 --> 00:06:58.118
这里的参与者被要求
对着麦克风说“啊”

00:06:58.552 --> 00:07:01.421
然后应用程序收集音频

00:07:01.488 --> 00:07:05.392
并以任何适合于特定研究的方式分析

00:07:06.093 --> 00:07:09.796
因此本课题的所有组件
可以在一个主动任务

00:07:09.863 --> 00:07:11.098
让我们通过他们

00:07:11.431 --> 00:07:14.268
有一个页面描述任务是什么

00:07:15.669 --> 00:07:18.572
这给用户说明如何执行任务

00:07:19.306 --> 00:07:21.675
很多主动任务有一个倒计时

00:07:23.377 --> 00:07:25.412
然后反馈给用户

00:07:25.479 --> 00:07:27.814
在这种情况下 这是说她太大声了

00:07:27.881 --> 00:07:30.551
这样可以确保你正确地完成这项任务

00:07:31.318 --> 00:07:35.155
所有你看到的屏幕 动画
该屏幕导航

00:07:35.222 --> 00:07:36.890
都由ResearchKit提供

00:07:37.157 --> 00:07:41.795
为得到该任务 只需使用
ResearchKit 就这么简单

00:07:42.763 --> 00:07:43.864
这里还有一个任务

00:07:44.364 --> 00:07:48.235
这是一个点击速度的任务
用户需要来回地敲

00:07:48.302 --> 00:07:50.637
在一个给定的时间内以最快的速度

00:07:51.205 --> 00:07:55.576
但ResearchKit
也有许多其他的任务 包括行走任务

00:07:55.776 --> 00:07:58.078
空间记忆任务 还有其他一些

00:08:00.981 --> 00:08:02.449
所以这些都是主动任务

00:08:04.284 --> 00:08:06.954
从ResearchKit发布第一天开始

00:08:07.454 --> 00:08:08.889
就与HealthKit合成

00:08:09.756 --> 00:08:13.560
它很容易在Xcode添加
HealthKit的权利给应用程序

00:08:14.061 --> 00:08:17.164
它不需要太多的代码行
得到这样的屏幕

00:08:17.531 --> 00:08:20.934
在那里你可以询问用户
要获得在HealthKit的数据

00:08:21.835 --> 00:08:26.940
当你这样做时你需要指定所要的数据
读和写的健康应用程序

00:08:28.408 --> 00:08:31.912
用户可以选择提供你所需要一切的权限

00:08:31.979 --> 00:08:34.780
或者她可以给你特定的许可

00:08:35.982 --> 00:08:39.720
所以我建议当你要请求访问数据的时候

00:08:39.785 --> 00:08:43.390
你只询问绝对在研究中使用的数据

00:08:44.224 --> 00:08:45.425
所以不要请求一切

00:08:45.859 --> 00:08:49.496
你将更容易得到用户的许可

00:08:52.332 --> 00:08:55.369
过去一年间我们被问到的大问题之一是

00:08:55.769 --> 00:08:59.473
ResearchKit对数据
做了什么及数据存放何处

00:09:00.040 --> 00:09:03.944
这对我来说很容易回答
因为ResearchKit不对数据做处理

00:09:05.112 --> 00:09:08.048
若你出席去年的
ResearchKit演讲

00:09:08.849 --> 00:09:12.085
John Earl解释的
ResearchKit架构

00:09:12.152 --> 00:09:14.354
他还谈了很多结果对象

00:09:15.189 --> 00:09:16.456
简单地说

00:09:16.857 --> 00:09:20.661
ResearchKit
在任务视图控制器上有一个结果属性

00:09:21.295 --> 00:09:23.830
它会将该属性的结果交给你

00:09:23.997 --> 00:09:26.934
但取决于你的应用程序来维持本地数据

00:09:27.868 --> 00:09:31.438
同时也为研究将数据发送到安全服务器

00:09:31.505 --> 00:09:33.640
在那里你可以汇总和分析

00:09:35.275 --> 00:09:38.312
如果你没有看过
John Earl去年的演讲

00:09:38.378 --> 00:09:40.047
我建议你去看

00:09:40.113 --> 00:09:43.450
因为在里面
他也展示了如何编码知情同意

00:09:43.517 --> 00:09:45.619
调查任务和主动任务

00:09:46.286 --> 00:09:49.389
今天我不会将编码重复一遍

00:09:49.456 --> 00:09:51.191
因为你们可以观看视频

00:09:51.258 --> 00:09:53.994
我想邀请同事Yuan Zhu上台

00:09:54.061 --> 00:09:56.730
详细介绍
ResearchKit的新特性

00:09:56.797 --> 00:09:58.999
并向你解释如何使用它们来编码

00:10:00.000 --> 00:10:00.934
Yuan

00:10:07.341 --> 00:10:08.275
谢谢你 Bunny

00:10:09.142 --> 00:10:13.514
开源社区发现移动研究需要更多的特性

00:10:13.614 --> 00:10:15.148
与研究提供的相比

00:10:15.649 --> 00:10:18.318
我们一直与社区合作

00:10:18.385 --> 00:10:20.254
为ResearchKit
添加更多特性

00:10:22.022 --> 00:10:26.260
所以今天 我真的很兴奋
向你们展示三个特性

00:10:27.194 --> 00:10:29.229
首先 分支任务

00:10:29.396 --> 00:10:31.598
在书面上可能会费解

00:10:31.665 --> 00:10:35.002
但在移动设备上
这是真的为用户而设

00:10:36.236 --> 00:10:37.971
第二 应用程序访问

00:10:38.472 --> 00:10:41.608
它保护用户的隐私和数据

00:10:41.675 --> 00:10:44.511
这对于大部分的研究应用很重要

00:10:45.145 --> 00:10:46.380
最后 图表

00:10:47.414 --> 00:10:50.017
以视觉方式将数据呈现给用户

00:10:50.517 --> 00:10:53.086
然后你的用户可以更好地理解数据

00:10:54.021 --> 00:10:58.625
首先 我要谈谈第一个
分支任务

00:11:01.562 --> 00:11:03.564
你的应用程序是否给予指示

00:11:03.931 --> 00:11:07.234
提出一个调查或运行主动任务

00:11:07.568 --> 00:11:10.671
一切在ResearchKit
是一个步骤的集合

00:11:11.104 --> 00:11:15.375
共同构成一个任务
并可以将任务提交给用户

00:11:16.109 --> 00:11:20.647
有了这个模型
创建一个线性任务相当简单

00:11:20.714 --> 00:11:23.984
但分支任务如何创建却没那么明显

00:11:24.685 --> 00:11:25.953
让我给你展示一个例子

00:11:28.722 --> 00:11:31.758
你在这里看到的是
一项有三个问题的调查

00:11:32.693 --> 00:11:36.797
显然 问第二个问题是有意义的

00:11:36.864 --> 00:11:39.032
对于回答“是”的用户

00:11:39.199 --> 00:11:42.035
回答第一个问题 你有车吗

00:11:42.736 --> 00:11:45.739
以及最后一个问题
你拥有自行车吗？

00:11:45.806 --> 00:11:47.774
应该是最后问

00:11:47.841 --> 00:11:50.344
无论前两个问题答案如何

00:11:51.278 --> 00:11:54.848
你可能想知道我是如何在
ResearchKit创建这项调查

00:11:55.482 --> 00:11:59.186
为了帮你 我给你介绍一个新类

00:12:00.687 --> 00:12:03.390
ORKNavigableOrderTask

00:12:03.824 --> 00:12:08.228
因为这是一个任务
所以它有一系列步骤

00:12:08.629 --> 00:12:12.966
但除此之外 它还拥有集合导航规则

00:12:13.834 --> 00:12:18.338
导航规则定义了任务中的分支逻辑

00:12:19.206 --> 00:12:22.543
下一步我要向你展示如何使用这个新类

00:12:22.609 --> 00:12:24.678
来呈现调查

00:12:25.145 --> 00:12:26.780
它真的很容易使用

00:12:29.249 --> 00:12:33.187
在代码中 首先我需要创建问题的步骤

00:12:33.887 --> 00:12:35.689
一旦我有问题的步骤

00:12:35.756 --> 00:12:38.926
我可用这些步骤创建可导航的命令任务

00:12:39.493 --> 00:12:43.263
正如你所看到的
这和创建一个线性任务一样容易

00:12:43.597 --> 00:12:47.334
但之后 我需要为它创建导航规则

00:12:49.069 --> 00:12:51.271
我想在此创建的导航规则

00:12:51.338 --> 00:12:54.074
是展示拥有自行车的问题

00:12:54.141 --> 00:12:58.579
此后紧接着是对于没车的人

00:12:59.346 --> 00:13:04.251
我想让你知道导航规则有三个要素

00:13:04.751 --> 00:13:06.954
首先 触发步骤

00:13:07.020 --> 00:13:09.890
它触发了要被评估的导航规则

00:13:10.791 --> 00:13:12.960
第二 预期的答案

00:13:13.493 --> 00:13:18.498
对于第一个问题 我们有一辆车吗
这里我们的答案是“否”

00:13:19.466 --> 00:13:23.103
最后 它需要一个指定的步骤

00:13:23.170 --> 00:13:27.040
现在你已学会了导航规则中的三个元素

00:13:27.541 --> 00:13:28.809
闲杂让我给你展示代码

00:13:31.078 --> 00:13:34.815
在代码中 首先
我用resultSelector

00:13:34.882 --> 00:13:36.884
定位结果所在处

00:13:37.751 --> 00:13:41.421
然后我以预期的答案为基础
创建predicate

00:13:42.489 --> 00:13:45.726
有了predicate后
我可以创建导航规则

00:13:45.792 --> 00:13:47.728
与目标步骤

00:13:49.029 --> 00:13:53.166
最后 我会添加第一个问题
你拥有车吗

00:13:53.233 --> 00:13:54.368
作为触发步骤

00:13:55.169 --> 00:13:56.003
正如你所看到的

00:13:56.069 --> 00:14:00.174
这是很容易的
一 二 三我创建这个导航规则

00:14:00.774 --> 00:14:04.811
而且任务已经准备好向用户展示

00:14:08.215 --> 00:14:11.285
现在你已经学会了如何使用分支任务

00:14:11.852 --> 00:14:14.121
下一步 让我向你们展示应用程序访问

00:14:18.792 --> 00:14:23.931
用户帐户是应用中管理用户
非常重要的方面

00:14:24.331 --> 00:14:27.000
应用程序访问提供了这项必要功能

00:14:29.269 --> 00:14:32.639
在应用程序中支持帐户的两个基本操作

00:14:33.273 --> 00:14:35.976
帐号注册和帐户登录

00:14:36.743 --> 00:14:41.715
帐户注册允许你的用户
登录注册你的应用程序

00:14:41.782 --> 00:14:43.483
通过密码和用户名

00:14:44.284 --> 00:14:46.820
注册用户可以使用帐号登录

00:14:46.887 --> 00:14:50.691
继续参与到你的应用
即使在新的设备上

00:14:51.725 --> 00:14:52.726
这就是帐户

00:14:53.961 --> 00:14:55.062
你可能知道

00:14:55.462 --> 00:15:00.634
对于大多数研究应用
用户的隐私和数据的安全性非常重要

00:15:01.368 --> 00:15:05.072
为了帮你做到这点
我们建议你的应用允许用户

00:15:05.138 --> 00:15:07.474
设置一个密码[听不清]

00:15:07.541 --> 00:15:09.943
然后使用它来解锁你的应用程序

00:15:10.944 --> 00:15:14.681
这里有两个基本密码运算

00:15:15.215 --> 00:15:17.117
首先 创建密码

00:15:17.551 --> 00:15:20.354
它让用户选择理想的密码

00:15:21.221 --> 00:15:25.759
一旦密码被创建
然后应用可以帮助用户

00:15:25.826 --> 00:15:28.962
输入正确的密码
进入应用程序

00:15:29.296 --> 00:15:31.565
使用密码认证

00:15:32.666 --> 00:15:37.404
现在你们已经学会了应用程序访问
有两个部分 帐户和密码

00:15:38.739 --> 00:15:40.507
首先让我向你们展示帐户

00:15:43.744 --> 00:15:47.447
这是帐户注册的截图

00:15:48.815 --> 00:15:52.953
它让用户通过提供邮箱地址
来注册你的应用

00:15:53.020 --> 00:15:56.623
两次输入 避免输错

00:15:58.025 --> 00:15:59.927
下面 我将向你们展示如何编写此代码

00:16:01.828 --> 00:16:06.300
我只需创建一个步骤
ORKRegistrationStep

00:16:06.834 --> 00:16:09.102
具有标识符 标题和文本

00:16:09.937 --> 00:16:13.240
最后一个参数选项可以用来提供

00:16:13.307 --> 00:16:17.778
额外的输入字段
如性别或出生日期

00:16:18.645 --> 00:16:23.984
这一步一旦完成
我可把它放入任务并展示它

00:16:25.619 --> 00:16:27.588
步骤完成后

00:16:27.654 --> 00:16:31.859
我需要从对象结果里检索用户名和密码

00:16:32.559 --> 00:16:33.627
这很容易

00:16:34.494 --> 00:16:38.165
我只需使用预定义的标识符来获取它们

00:16:39.099 --> 00:16:41.535
一旦我有了用户名和密码

00:16:41.602 --> 00:16:44.071
我可以安全地将其发送至远程服务器

00:16:44.538 --> 00:16:46.874
创建用户帐户

00:16:48.041 --> 00:16:49.943
这就是帐户注册

00:16:52.412 --> 00:16:54.381
接下来 帐户登录

00:16:55.215 --> 00:16:59.553
对于已注册用户想继续使用你的应用

00:17:02.589 --> 00:17:05.659
在这里可以看到
一个帐户登录截图

00:17:06.292 --> 00:17:10.030
它允许用户通过用户名和密码来登录

00:17:10.931 --> 00:17:14.434
此外 如果用户忘记他的密码

00:17:14.501 --> 00:17:17.704
在底部有一个按钮

00:17:19.473 --> 00:17:23.176
我们只需几行代码
就能在你的应用中创建这个

00:17:24.611 --> 00:17:28.182
同理
我们要一步ORKLoginStep

00:17:28.815 --> 00:17:32.719
我通过标识符、标题和文本创建这一步

00:17:33.187 --> 00:17:39.159
你可能注意到我需要提供一个
ViewControllerClass的最后一个参数

00:17:39.860 --> 00:17:40.694
为什么？

00:17:41.128 --> 00:17:46.900
因为我需从ResearchKit中
将视图控制分子类

00:17:46.967 --> 00:17:51.772
提供我自己的自定义
忘记密码行为的处理程序

00:17:52.172 --> 00:17:55.542
万一用户忘记密码 点击那个按钮

00:17:56.743 --> 00:17:57.811
我这样做之后

00:17:58.145 --> 00:18:01.281
然后该登录步骤就会呈现

00:18:03.450 --> 00:18:06.987
现在我展示帐户注册和帐户登录

00:18:07.921 --> 00:18:11.191
接着 让我展示你的用户如何创建帐户

00:18:11.258 --> 00:18:14.895
创建密码 然后用它来解锁你的应用

00:18:20.968 --> 00:18:23.470
在密码创建过程

00:18:24.238 --> 00:18:27.307
用户将被要求先输入密码

00:18:27.908 --> 00:18:29.610
然后确认该密码

00:18:30.677 --> 00:18:33.914
（可选）
若设备已启用Touch ID

00:18:33.981 --> 00:18:37.818
用户之后可选择使用Touch ID
来解锁你的应用

00:18:38.819 --> 00:18:43.123
在这里看到几个步骤
但在代码中 很容易做到

00:18:45.325 --> 00:18:48.462
同样 我需要一步
ORKPasscodeStep

00:18:49.429 --> 00:18:55.169
创建之后
我建议你为用户提供解密文本

00:18:55.235 --> 00:18:58.238
解释设置密码的目的

00:18:59.039 --> 00:19:00.407
这就是我需要做的一切

00:19:01.975 --> 00:19:03.443
你们中的一些人可能想问

00:19:03.877 --> 00:19:05.913
密码被存储在哪里

00:19:05.979 --> 00:19:07.114
好问题

00:19:07.347 --> 00:19:08.649
让我来展示一下

00:19:10.083 --> 00:19:12.853
从这个图表中 你可以看到

00:19:12.920 --> 00:19:16.990
密码被存储在iOS的钥匙链
因此是安全的

00:19:17.758 --> 00:19:22.229
也告诉你密码编写和密码读取

00:19:22.296 --> 00:19:26.733
都由ResearchKit管理
因此你根本不需要担心

00:19:27.000 --> 00:19:27.835
是不是很酷呢？

00:19:28.535 --> 00:19:29.703
-是的
-谢谢

00:19:31.638 --> 00:19:34.875
学会这个后
让我展示一下密码身份验证

00:19:37.845 --> 00:19:39.813
密码认证允许用户

00:19:39.880 --> 00:19:43.550
输入正确的密码
在访问该应用之前

00:19:43.951 --> 00:19:45.118
让我给你们展示代码

00:19:47.054 --> 00:19:48.755
我只需要一个视图控制器

00:19:49.289 --> 00:19:51.491
我可以很容易地创建该视图控制器

00:19:51.558 --> 00:19:55.262
我也需要记住
最后给它指派一个代理

00:19:56.230 --> 00:19:59.299
接下来
我将展示如何实践此代理

00:20:01.635 --> 00:20:04.805
密码认证的
视图控制器代理

00:20:04.905 --> 00:20:07.941
给开发者提供了机会

00:20:08.008 --> 00:20:11.411
处理可能身份验证的不同结果

00:20:12.246 --> 00:20:15.983
例如 如果密码认证成功

00:20:16.183 --> 00:20:18.385
我可将该功能呈现给用户

00:20:19.119 --> 00:20:22.089
但如果密码验证失败

00:20:22.589 --> 00:20:24.057
我要显示警报

00:20:24.825 --> 00:20:27.427
或是取消密码认证

00:20:27.628 --> 00:20:30.364
我可向用户显示默认的欢迎屏幕

00:20:31.632 --> 00:20:33.467
所以就是这个代理

00:20:33.534 --> 00:20:37.538
而且这个新控制器已准备向用户显示

00:20:39.173 --> 00:20:42.743
现在我已经向你们展示了
应用程序访问的所有部分

00:20:43.076 --> 00:20:44.578
我希望你们觉得有用

00:20:46.013 --> 00:20:47.648
我可以给你们看看图表

00:20:47.948 --> 00:20:50.484
有了图表 你可以向用户呈现你的数据

00:20:51.385 --> 00:20:53.987
在ResearchKit中
有三种类型的图表

00:20:54.054 --> 00:20:56.089
从这些截图中你可以看到

00:20:57.024 --> 00:21:00.694
有饼图 线图和离散图

00:21:01.528 --> 00:21:03.864
让我们将第一个放大 饼图

00:21:09.837 --> 00:21:13.740
饼图[听不清]环并且分为段

00:21:14.274 --> 00:21:17.110
其中每一段代表整体的一部分

00:21:17.711 --> 00:21:22.216
每一段都有其自身的数值 颜色和名称

00:21:23.050 --> 00:21:25.419
一旦你学会了饼图的基本知识

00:21:25.485 --> 00:21:27.521
我可以向你们展示其背后的代码

00:21:29.323 --> 00:21:33.427
要编写代码 首先我需要创建
pieChartView

00:21:33.894 --> 00:21:36.563
然后我将分配一个数据源对象给它

00:21:37.464 --> 00:21:40.400
因为数据源对象提供图表中

00:21:40.467 --> 00:21:42.169
显示的所有信息

00:21:43.370 --> 00:21:46.206
现在我需要实践这个数据源

00:21:47.040 --> 00:21:49.676
但在我提到这些函数前

00:21:49.910 --> 00:21:53.780
首先我需要花一些时间建立数据对象

00:21:55.716 --> 00:21:59.453
为了做到这些
我首先定义一个基本结构

00:21:59.520 --> 00:22:02.956
携带图表中每一段的基本信息

00:22:04.892 --> 00:22:10.664
从这里你可看到我用标题 数值和颜色
来定义基本结构

00:22:11.198 --> 00:22:13.066
所有需要的基本信息

00:22:14.168 --> 00:22:18.972
完成后 我可用那些结构创建数据对象

00:22:20.174 --> 00:22:22.976
接着 我会把它们放回函数里

00:22:24.745 --> 00:22:27.714
因为我已经准备好了这些对象

00:22:27.781 --> 00:22:30.450
我可以很容易地创建函数

00:22:32.286 --> 00:22:34.955
首先 我返回段的总数

00:22:35.956 --> 00:22:38.625
然后我返回每段值

00:22:38.959 --> 00:22:42.663
和将计算环中比例使用的值

00:22:43.830 --> 00:22:47.868
之后是颜色和标题

00:22:49.169 --> 00:22:50.938
完成后

00:22:51.505 --> 00:22:54.274
然后这个饼图就能显示了

00:22:56.844 --> 00:23:00.347
现在你们已学会了如何
使用ResearchKit创建饼图

00:23:01.481 --> 00:23:05.152
线图和离散图的使用很相似

00:23:05.719 --> 00:23:10.524
你只要上GitHub网站就行
下载我们的简单项目来学习

00:23:10.991 --> 00:23:13.560
你可以看到屏幕上的URL

00:23:16.830 --> 00:23:21.268
分支任务 应用程序访问和图表
是三个新特性

00:23:21.335 --> 00:23:22.803
今天我向你们介绍的

00:23:23.203 --> 00:23:27.941
有了它们 我相信你会发现做
一个研究应用程序将更容易

00:23:31.945 --> 00:23:34.281
现在再次有请我的同事Bunny

00:23:34.715 --> 00:23:36.850
谈论对ResearchKit
作出贡献

00:23:44.458 --> 00:23:47.227
ResearchKit如此多新特性
的原因是

00:23:47.294 --> 00:23:49.196
是因为我们的开源社区

00:23:49.730 --> 00:23:52.799
我们的许多贡献者今天在这里
我想感谢他们

00:23:53.267 --> 00:23:57.237
但任何人都可以和我们一起工作
让ResearchKit更好

00:23:57.771 --> 00:23:58.772
让我来告诉你如何实现

00:24:00.040 --> 00:24:02.609
对ResearchKit作出贡献

00:24:02.676 --> 00:24:04.378
就像对任何其他开源项目作出贡献一样

00:24:05.078 --> 00:24:06.947
去我们的GitHub报告

00:24:07.014 --> 00:24:09.583
选择或打开一个问题
请给我们留言

00:24:09.650 --> 00:24:10.984
让我们知道你在做什么

00:24:11.885 --> 00:24:13.654
然后提交一个拉出请求

00:24:13.887 --> 00:24:17.958
Apple的工程师和活跃
ResearchKit社区成员

00:24:18.025 --> 00:24:19.660
将看看你的代码

00:24:19.726 --> 00:24:22.996
毫无疑问 他们会有一些
关于如何改进它的建议

00:24:23.530 --> 00:24:26.533
所以我们想让你和审查团队一起工作
直到每个人都满意

00:24:27.501 --> 00:24:30.671
然后你的修改会被合并进入主分支

00:24:32.706 --> 00:24:34.975
有时我们会分支合并

00:24:35.542 --> 00:24:40.447
在那个时候你的代码将被本地化成
iOS支持的所有语言

00:24:41.215 --> 00:24:42.850
可访问性的更新

00:24:43.217 --> 00:24:47.221
并各种设备和方案上得到测试

00:24:47.654 --> 00:24:50.991
我们也会从隐私和安全角度看你的代码

00:24:52.392 --> 00:24:56.563
现在这个开源过程对你而言
可能有点以Apple为中心

00:24:56.964 --> 00:25:00.367
但我们要确保你的代码
可以在世界各地使用

00:25:00.434 --> 00:25:03.337
被不同能力层面的用户使用

00:25:03.403 --> 00:25:06.039
在一系列设备上使用

00:25:06.874 --> 00:25:08.642
所以现在你们知道如何贡献

00:25:08.709 --> 00:25:10.878
你们中的一些人可能已有贡献的想法

00:25:10.944 --> 00:25:14.381
其他人也许还没有
所以我想给你们一点灵感

00:25:16.617 --> 00:25:20.487
但在我做此之前
我们先在某个点标记一个新的稳定版本

00:25:20.554 --> 00:25:24.458
我们的最后一个稳定版本
是一月标记的Win.3

00:25:26.093 --> 00:25:27.628
好的 你能做什么贡献？

00:25:27.694 --> 00:25:29.563
当然你能贡献主动任务

00:25:29.630 --> 00:25:31.131
我已经展示了一些

00:25:32.165 --> 00:25:35.903
今年我们已经有了
一个NHPT测试

00:25:35.969 --> 00:25:39.173
我要感谢Julian Therrier
为此作出的贡献

00:25:39.873 --> 00:25:43.143
这个任务应该是一个数字版本

00:25:43.210 --> 00:25:46.246
在诊所为康复医学做的一个测试

00:25:46.313 --> 00:25:48.482
测试上肢功能

00:25:49.283 --> 00:25:53.720
现在 这项任务正在进行研究的验证

00:25:53.787 --> 00:25:56.657
因为我们不知道这个数字版本是否

00:25:56.723 --> 00:25:58.692
与诊所的版本等效

00:25:58.759 --> 00:26:00.327
所以验证是非常重要的

00:26:00.394 --> 00:26:02.362
当你开发一个新任务

00:26:02.629 --> 00:26:05.365
研究人员想知道
你所说这项任务测量的对象

00:26:05.432 --> 00:26:06.834
确实是这项任务测量的对象

00:26:06.900 --> 00:26:10.804
因此你可能需要参与验证研究
以证明这点

00:26:12.139 --> 00:26:16.243
河内塔是心理学研究中常用的一个难题

00:26:16.310 --> 00:26:18.912
我要感谢James Cox
对此的贡献

00:26:19.847 --> 00:26:21.849
我相信还有很多其他任务

00:26:21.915 --> 00:26:23.617
事实上 研究人员经常给我写信

00:26:23.684 --> 00:26:27.020
并说他们喜欢 比如Stroop

00:26:27.087 --> 00:26:31.291
这是颜色测试或精神运动警觉任务

00:26:31.358 --> 00:26:33.794
所以若你问研究人员
你会发现还有很多其他任务

00:26:33.861 --> 00:26:36.430
我相信你们能开发这些任务

00:26:38.732 --> 00:26:42.102
我确定除了ResearchKit
还有许多其他答案格式

00:26:42.169 --> 00:26:46.773
我要感谢Quintiles
给我们位置答案格式

00:26:49.810 --> 00:26:52.045
正如你们从Yuan这里获得的信息

00:26:52.112 --> 00:26:54.748
ResearchKit的基础
就是一步

00:26:55.649 --> 00:26:58.252
总有更多的步骤有待贡献

00:26:58.318 --> 00:27:02.689
我想再次感谢Quintiles
贡献了等待一步

00:27:03.223 --> 00:27:05.158
这一步已证实是非常重要的

00:27:05.225 --> 00:27:07.361
当你在做一个非常冗长的计算时

00:27:07.427 --> 00:27:08.862
你想把结果给用户

00:27:08.929 --> 00:27:11.698
在他们继续任务中的其他步骤之前

00:27:14.101 --> 00:27:18.672
功能模块封装件有助于研究人员

00:27:19.006 --> 00:27:21.008
Yuan刚向你们展示了图表模块

00:27:21.475 --> 00:27:23.043
这是一项伟大的贡献

00:27:23.410 --> 00:27:28.081
感谢Ricardo Sanchez
和James Cox为此作出的贡献

00:27:28.482 --> 00:27:31.185
几乎每个新ResearchKit
应用都使用该模块

00:27:31.251 --> 00:27:33.453
事实证明 用户喜欢看图表

00:27:33.520 --> 00:27:38.392
获取他们的研究数据和进度
以及有关研究的东西

00:27:41.061 --> 00:27:44.798
条件的遗传学基础
是许多研究人员的兴趣所在

00:27:44.865 --> 00:27:48.202
现在有两个关于遗传学的
ResearchKit应用

00:27:48.702 --> 00:27:54.007
PPD Act正在寻找
妇女产后抑郁症的遗传基础

00:27:54.908 --> 00:27:57.811
MyHeart Counts
最近增加了遗传因素

00:27:57.878 --> 00:28:00.914
以便他们研究遗传学中的心血管健康

00:28:02.216 --> 00:28:05.118
事实证明 若你想收集某人的遗传物质

00:28:05.185 --> 00:28:07.487
有一个知情同意的过程

00:28:07.554 --> 00:28:10.257
这超越了你的应用程序所需

00:28:11.258 --> 00:28:13.560
因此我想感谢23andMe

00:28:13.627 --> 00:28:18.432
提出ResearchKit模块
展示了如何做...

00:28:18.498 --> 00:28:20.868
在知情同意的情况下

00:28:21.668 --> 00:28:24.304
而现他们在自己的网站上放着

00:28:24.371 --> 00:28:27.741
若你想用23andMe收集遗传数据

00:28:27.808 --> 00:28:30.777
你可以去他们的网站
获取这个ResearchKit模块

00:28:31.311 --> 00:28:33.780
很棒的是他们有完整文档

00:28:33.847 --> 00:28:35.349
记录如何将该模块添加到你的应用

00:28:35.415 --> 00:28:37.284
以及你的应用中需作出的调整

00:28:37.351 --> 00:28:39.219
为了确保该模块顺利运行

00:28:39.586 --> 00:28:41.922
我肯定还有其他你们可以贡献的模块

00:28:43.991 --> 00:28:47.828
正如之前提到ResearchKit
不用你的数据做任何事

00:28:47.895 --> 00:28:50.030
所以你需要将它连接至数据服务

00:28:50.597 --> 00:28:53.300
若你是提供数据服务者

00:28:53.634 --> 00:28:57.571
我建议你下载我们的示例
ORKSample

00:28:57.638 --> 00:29:00.007
对其进行修改并使用你的数据服务

00:29:00.073 --> 00:29:02.609
然后在GitHub repo上
放置调整后的应用

00:29:02.676 --> 00:29:03.810
人们可以去那里看看

00:29:03.877 --> 00:29:06.880
如何将自己ResearchKit
应用连接到你的数据服务

00:29:06.947 --> 00:29:08.749
这将对研究人员有很大的帮助

00:29:08.815 --> 00:29:11.618
那些正努力试图把这些数据
连接到服务器的研究人员

00:29:13.053 --> 00:29:17.324
所以在你已贡献出这些代码后
也许你想做更多的贡献

00:29:18.492 --> 00:29:19.693
我可看到你们中的一些人

00:29:20.994 --> 00:29:23.263
若你最近去过
ResearchKit.org

00:29:23.330 --> 00:29:25.365
你会看到我们将一些教程置顶

00:29:25.432 --> 00:29:27.234
一些开源社区写的教程

00:29:27.301 --> 00:29:31.071
具体地说
我要感谢[听不清]在法国的博客

00:29:31.705 --> 00:29:33.507
与Raywenderlich.com网站

00:29:35.409 --> 00:29:38.745
我们喜欢看到开发者
教其他开发人员如何编写代码

00:29:38.812 --> 00:29:41.849
如果你是这稀有的群体之一
知道如何编写代码和写教程

00:29:42.816 --> 00:29:46.153
请在ResearchKit找个
你认为需要解释的主题

00:29:46.220 --> 00:29:49.790
写一个教程
然后告诉我们 我们会帮你传播

00:29:51.058 --> 00:29:55.062
现在ResearchKit社区
一直忙于写作 Apple亦如此

00:29:56.096 --> 00:29:58.432
我们已经更新了
ResearchKit编程指南

00:29:58.498 --> 00:30:00.834
以及今年早些时候的参考文档

00:30:01.101 --> 00:30:05.138
我们还为iOS Human Interface
Guidelines增加了一个章节

00:30:05.205 --> 00:30:07.941
指导如何写一个好的
ResearchKit应用

00:30:08.208 --> 00:30:11.879
如果你还没有读过 请尽早阅读

00:30:14.147 --> 00:30:15.549
我有一些作业布置给你们

00:30:15.983 --> 00:30:17.317
这是你们的行动号召

00:30:17.651 --> 00:30:21.688
若你还没下载ResearchKit
框架 请今天下载

00:30:21.755 --> 00:30:24.625
你会获得Yuan提到的
所有伟大的新特性

00:30:25.592 --> 00:30:27.794
在框架内 你会看到样本文件夹

00:30:27.861 --> 00:30:31.698
在那里面有个ORKSample应用
我们今年补充的

00:30:32.032 --> 00:30:34.635
我建议你构建并运行它
这是一个很好的应用

00:30:35.002 --> 00:30:35.936
在Swift里

00:30:36.003 --> 00:30:39.206
它不仅对Swift和
ResearchKit使用最佳实践

00:30:39.273 --> 00:30:40.507
而且对于iOS也如此

00:30:41.275 --> 00:30:43.877
对于ResearchKit应用
它有很大的体系结构

00:30:43.944 --> 00:30:45.479
你甚至可从那个应用开始

00:30:45.546 --> 00:30:49.116
你的研究将会有一个很好的开始

00:30:50.117 --> 00:30:53.453
另外构建和运行
ORKCatalog应用

00:30:53.820 --> 00:30:57.558
正如其名字所暗示
它是ResearchKit功能目录

00:30:57.991 --> 00:31:01.094
当你运行它时
你会看到每个主动任务做什么

00:31:01.161 --> 00:31:02.996
你会看到所有的答案格式

00:31:03.063 --> 00:31:06.200
你甚至可以看到资格调查是什么样的

00:31:07.467 --> 00:31:09.970
最后 请做出贡献

00:31:10.037 --> 00:31:13.540
ResearchKit是开源的
它将变成什么取决于你对它做了什么

00:31:15.576 --> 00:31:17.778
开始ResearchKit
所需的一切

00:31:17.845 --> 00:31:22.916
都在这页上
developer.apple.com/WWDC16/234

00:31:23.217 --> 00:31:24.885
有GitHub repo的链接

00:31:24.952 --> 00:31:27.788
教程的链接 文档的链接

00:31:29.189 --> 00:31:30.257
所以请看看吧

00:31:31.625 --> 00:31:35.295
今天下午我想你们来参加
“开启CareKit”的演讲

00:31:35.362 --> 00:31:39.499
CareKit是一个新的开源框架
我们在3月份推出

00:31:39.867 --> 00:31:43.704
这将帮助你建立好的应用
为人们管理自己的护理

00:31:45.005 --> 00:31:48.242
所以 谢谢大家
希望各位在余下的WWDC过得愉快