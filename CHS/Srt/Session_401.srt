00:00:19.953 --> 00:00:23.223 
Xcode应用签名的新特性

00:00:23.290 --> 00:00:25.025 
早上好

00:00:26.260 --> 00:00:27.094 
谢谢

00:00:30.531 --> 00:00:33.300 
欢迎来到“Xcode应用签名的
新特性”介绍

00:00:34.067 --> 00:00:36.770 
Xcode给应用程序签名可能很麻烦

00:00:36.837 --> 00:00:38.172 
我们理解这一点

00:00:38.338 --> 00:00:41.241 
但是现在你们需要知道的是
在Xcode 8里面

00:00:41.308 --> 00:00:45.112 
我们极大地简化了应用签名的管理

00:00:45.412 --> 00:00:46.847 
事实上
它现在是自动完成的

00:00:47.247 --> 00:00:50.551 
另一方面
若你要100%地掌控Xcode

00:00:50.651 --> 00:00:53.353 
来完成你的应用签名

00:00:53.420 --> 00:00:55.489 
你现在也能做到这一点了

00:00:55.689 --> 00:00:59.226 
Xcode不会修改或者
创建新的用户配置

00:01:06.867 --> 00:01:09.770 
应用签名能让你的身份被用户辨识

00:01:09.903 --> 00:01:12.439 
一旦打开应用 他们就会知道

00:01:12.506 --> 00:01:15.742 
这个应用由你开发
并且没有被第三方修改过

00:01:16.977 --> 00:01:19.847 
数字签名同样能防止
（第三方的）应用诈骗

00:01:19.947 --> 00:01:23.483 
因为当你用自己的bundle ID
到开发者网站绑定注册之后

00:01:23.784 --> 00:01:27.454 
其他的开发者团体
就不能使用这个bundle ID了

00:01:28.455 --> 00:01:32.025 
签名同样能授权你访问系统服务

00:01:32.092 --> 00:01:34.795 
比如iCloud网络支付

00:01:37.030 --> 00:01:38.999 
今天我们将介绍4项内容

00:01:39.633 --> 00:01:43.670 
让我们从签名的原理
和一些基础知识开始

00:01:44.271 --> 00:01:47.207 
比如怎样给你的应用程序签名

00:01:48.475 --> 00:01:51.578 
在那之后
我们会介绍一些激动人心的改进

00:01:51.645 --> 00:01:55.148 
包括如何给新的(开发)设备

00:01:55.215 --> 00:01:56.783 
配置签名证书

00:01:56.950 --> 00:02:00.220 
现在 你们需要同步个人密钥

00:02:00.287 --> 00:02:03.190 
或者撤销然后重新生成证书

00:02:03.457 --> 00:02:04.925 
这种情况已经成为过去了

00:02:06.660 --> 00:02:09.630 
是的 你们会喜欢我们的改进的

00:02:11.164 --> 00:02:13.100 
在这之后
我们会介绍一些新的工作流程

00:02:13.166 --> 00:02:17.704 
它们让应用签名变得格外简单

00:02:18.672 --> 00:02:22.009 
最后 我们会介绍一些最佳做法

00:02:22.075 --> 00:02:23.844 
来实现新项目配置

00:02:25.712 --> 00:02:27.447 
我们从应用签名原理和基础讲起

00:02:28.048 --> 00:02:31.251 
当Xcode部署你的应用
以及对它签名时

00:02:31.318 --> 00:02:34.821 
这一切的背后都是它通过一个叫
codesign的工具来实现的

00:02:35.789 --> 00:02:38.959 
现在如果你是新手的话
你可以完全不用考虑这一点了

00:02:39.059 --> 00:02:41.728 
Xcode能自动帮你完成签名

00:02:41.895 --> 00:02:43.597 
若你已经有一定经验 你也许会想

00:02:43.664 --> 00:02:48.168 
签名？它是怎么实现的？
我们使用了codesign这个工具

00:02:48.535 --> 00:02:51.772 
codesign所做的就是
它将应用程序的源码包

00:02:51.839 --> 00:02:54.074 
进行加密封装

00:02:54.474 --> 00:02:57.211 
这样能让系统识别

00:02:57.277 --> 00:03:00.814 
签名后的应用程序是否有被修改过

00:03:01.615 --> 00:03:06.386 
所以如果有任何人修改过你的应用
它就不能被安装或者启动

00:03:07.487 --> 00:03:12.059 
除此以外codesign还赋予
应用程序独特的加密签名

00:03:12.292 --> 00:03:13.961 
所以它能够被识别

00:03:14.027 --> 00:03:17.464 
用户也能知道这个应用来自何处

00:03:20.367 --> 00:03:24.404 
如果你想给应用程序签名
你需要准备3个东西

00:03:24.771 --> 00:03:27.374 
首先是一个签名证书

00:03:27.574 --> 00:03:32.012 
签名证书能确定你软件开发者的身份

00:03:33.380 --> 00:03:36.350 
用户配置跟你的应用程序关联

00:03:36.416 --> 00:03:37.918 
它们被用于设备授权

00:03:39.620 --> 00:03:43.190 
应用权限确定了
应用程序所支持的功能范围

00:03:43.257 --> 00:03:44.958 
比如iCloud和Wallet

00:03:46.894 --> 00:03:50.397 
签名证书都是由Apple签发

00:03:50.464 --> 00:03:55.135 
这一点尤为重要
因为设备需要和Apple建立信任链

00:03:55.202 --> 00:03:56.904 
这样才能安装应用

00:03:58.238 --> 00:04:00.707 
证书有两种类别

00:04:00.774 --> 00:04:04.978 
一种是应用开发证书
被用于部署和运行应用

00:04:05.045 --> 00:04:07.314 
一种是应用发布证书

00:04:07.514 --> 00:04:10.984 
被用于发布应用到iTunes
Connect时的身份验证

00:04:11.185 --> 00:04:16.557 
或者 如果这些是企业证书的话
它们是用来发布给用户的

00:04:18.791 --> 00:04:22.663 
所有的签名证书都需要个人密钥

00:04:22.796 --> 00:04:25.532 
个人密钥必须保存在
Apple的keychain

00:04:25.599 --> 00:04:27.601 
如果你想要给应用签名

00:04:28.068 --> 00:04:30.437 
跟证书匹配的个人密钥

00:04:30.504 --> 00:04:33.507 
也会在证书生成的同时被创建

00:04:33.974 --> 00:04:36.743 
所以拥有这枚个人密钥就显得尤为重要

00:04:37.578 --> 00:04:42.015 
值得一提的是
Apple从来不会保存你的个人密钥

00:04:42.082 --> 00:04:45.586 
你也不能去开发者网站下载它们

00:04:46.854 --> 00:04:49.189 
好消息是 在Xcode 8里面

00:04:49.256 --> 00:04:51.091 
你的应用开发证书

00:04:51.158 --> 00:04:53.227 
再也不是一个烦恼了

00:04:53.293 --> 00:04:55.329 
我们等下会展开讲解这一部分

00:04:57.097 --> 00:05:00.267 
用户配置也是由Apple签发的

00:05:00.868 --> 00:05:02.870 
同证书相反的是

00:05:02.936 --> 00:05:05.939 
证书被用于确认你的开发者身份

00:05:06.006 --> 00:05:08.242 
而用户配置跟你的应用程序关联

00:05:11.144 --> 00:05:15.182 
它允许你的应用被运行在特定设备上

00:05:15.249 --> 00:05:18.418 
在配置里面有一个身份列表

00:05:18.485 --> 00:05:20.621 
在应用程序被安装到设备的时候

00:05:20.687 --> 00:05:24.992 
设备会检索这个身份列表
确认你的身份是包括在里面的

00:05:25.058 --> 00:05:27.794 
如果是的话
你就能安装这个应用

00:05:29.062 --> 00:05:33.100 
配置同时也授权应用使用应用权限

00:05:33.600 --> 00:05:36.670 
一个配置里面包含一个权限白名单

00:05:36.737 --> 00:05:40.674 
如果你想使用一个权限
那么它必须在这个白名单里面

00:05:41.308 --> 00:05:43.010 
同样的 如果你是新手的话

00:05:43.076 --> 00:05:44.545 
你不需要考虑这些

00:05:44.611 --> 00:05:46.380 
Xcode会自动为你处理这些

00:05:46.780 --> 00:05:48.215 
如果你有一定经验

00:05:48.282 --> 00:05:51.318 
你也许会问
为什么你需要一个新的用户配置？

00:05:51.385 --> 00:05:54.021 
当你在添加一个新的应用权限
到应用程序的时候

00:05:54.288 --> 00:05:56.790 
这都是因为权限白名单的存在

00:05:58.025 --> 00:05:59.459 
说到应用权限

00:05:59.826 --> 00:06:02.930 
权限定义了应用程序
对系统功能的支持范围

00:06:03.730 --> 00:06:06.834 
本质上来说权限
只是一个被赋予特殊值的字符串

00:06:07.201 --> 00:06:10.637 
就像一条链子或者一个碗状物

00:06:12.005 --> 00:06:13.740 
权限具体数值由其系统功能来定义

00:06:14.041 --> 00:06:17.110 
所以如果你的应用
需要实现一个系列的功能

00:06:17.177 --> 00:06:19.580 
但是应用扩展需要实现另外一个系列的

00:06:19.646 --> 00:06:20.480 
没有问题

00:06:22.082 --> 00:06:26.153 
Xcode有内置的功能编辑器

00:06:26.220 --> 00:06:28.021 
我们称之为功能选项卡

00:06:28.589 --> 00:06:32.426 
功能选项卡可以在配置详情里面

00:06:32.492 --> 00:06:34.361 
管理你的权限PLIST

00:06:34.428 --> 00:06:37.064 
所以你完全不需要访问开发者网页

00:06:37.130 --> 00:06:39.666 
一切都可以在Xcode里面完成

00:06:40.767 --> 00:06:44.838 
这些就是你给应用签名时
所需要用到的一些东西

00:06:44.905 --> 00:06:48.208 
我们现在来看看当Xcode
给应用签名时都发生了什么

00:06:48.275 --> 00:06:50.177 
Xcode需要知道使用哪一个证书

00:06:50.244 --> 00:06:51.879 
以及哪一个配置文件

00:06:52.679 --> 00:06:55.249 
实际情况中
Xcode会首先部署你的应用程序

00:06:56.350 --> 00:07:00.153 
然后开始检索你电脑里的证书列表

00:07:00.254 --> 00:07:03.991 
它会使用最新的
并且跟你开发组匹配的那一个证书

00:07:05.425 --> 00:07:08.061 
Xcode接下来会检索你的配置列表

00:07:08.295 --> 00:07:11.999 
然后选择那一个最新的
并且跟bundle ID匹配的配置

00:07:12.466 --> 00:07:16.970 
这样证书和配置就被整合在了一起
其中配置会被内嵌到应用程序里面

00:07:17.704 --> 00:07:21.642 
而证书会被codesign用来
加密封装应用程序

00:07:23.043 --> 00:07:24.444 
以上就是一个快速回顾

00:07:24.811 --> 00:07:27.915 
应用签名原理和基础

00:07:29.550 --> 00:07:32.186 
现在我们来讨论一下我们

00:07:32.252 --> 00:07:35.389 
为新设备配置签名证书
所做的改进

00:07:36.423 --> 00:07:38.959 
谁之前见过这个？

00:07:39.626 --> 00:07:42.896 
是的 你的账户已经拥有一个证书

00:07:42.963 --> 00:07:45.299 
Xcode帮助你重置它

00:07:45.465 --> 00:07:47.534 
如果你按下重置按钮后会怎样？

00:07:49.136 --> 00:07:51.738 
是的 你现有的证书会被清除掉

00:07:51.805 --> 00:07:54.708 
一个新的证书会被创建
为什么会这样？

00:07:54.942 --> 00:07:59.813 
事实上 你的应用开发账户
只能使用一个签名证书

00:08:01.014 --> 00:08:03.750 
若你只有一台开发设备
它能很好地胜任（开发工作）

00:08:03.917 --> 00:08:07.588 
证书被成功创建
个人密钥也同时被生成

00:08:07.654 --> 00:08:10.591 
并且保存在你的keychain里面
万事俱备了

00:08:11.425 --> 00:08:14.127 
现在如果你有另外一台Mac呢？

00:08:14.928 --> 00:08:18.131 
好吧 如果你想从第二台Mac
部署应用并且签名的话

00:08:18.298 --> 00:08:21.134 
你需要一个证书以及个人密钥

00:08:22.269 --> 00:08:27.107 
你可以通过keychain
把它们同步过去第二台Mac

00:08:27.174 --> 00:08:29.610 
然后在Xcode上导入证书和密钥

00:08:30.110 --> 00:08:32.846 
或者你可以创建新的签名证书

00:08:33.113 --> 00:08:36.283 
但是首先它需要你废除旧的证书

00:08:36.616 --> 00:08:38.852 
然后你就可以在
第二台Mac上部署应用了

00:08:39.052 --> 00:08:41.455 
但这也意味着
你无法在第一台Mac上部署了

00:08:41.587 --> 00:08:44.658 
然后很容易就会陷入这个死循环

00:08:44.725 --> 00:08:47.094 
在一台上能开发

00:08:47.160 --> 00:08:49.463 
在另一台就不能

00:08:49.563 --> 00:08:52.199 
这真的很繁琐并且令人沮丧

00:08:52.733 --> 00:08:55.369 
现在 好消息是 在Xcode 8中

00:08:55.435 --> 00:08:58.805 
你可以同时拥有多个应用开发证书了

00:08:59.806 --> 00:09:00.641 
是的

00:09:03.677 --> 00:09:05.145 
你的每一台设备

00:09:05.212 --> 00:09:08.448 
都能拥有独立的证书和个人密钥了

00:09:08.615 --> 00:09:11.818 
你再也不需要为了应用开发
而同步个人密钥了

00:09:12.486 --> 00:09:14.254 
当然你再也不需要看到这个了

00:09:16.323 --> 00:09:19.993 
这些改进只对应用开发证书有效

00:09:20.360 --> 00:09:23.297 
应用发布证书依然

00:09:23.363 --> 00:09:24.531 
被限制在一个的数量

00:09:26.433 --> 00:09:30.537 
以前签名证书是在Xcode
或者开发者网站上生成的

00:09:31.872 --> 00:09:34.675 
现在它们是在Xcode 8
或者更新的版本上生成

00:09:36.076 --> 00:09:39.680 
如果你的Mac上有旧版的Xcode

00:09:39.847 --> 00:09:42.349 
然后你生成一个新的签名证书

00:09:42.416 --> 00:09:45.519 
它依然可以使用
新的证书100%向后兼容

00:09:48.055 --> 00:09:53.493 
以上就是Xcode 8里
关于签名证书所做的改进

00:09:54.328 --> 00:09:56.797 
现在我想把舞台交给我的同事Itai

00:09:56.864 --> 00:10:00.133 
他将会跟大家介绍Xcode 8里的
一些新的工作流程

00:10:04.438 --> 00:10:05.606 
大家早上好

00:10:06.874 --> 00:10:09.309 
Joshua给我们讲解了
一些应用签名的原理

00:10:09.376 --> 00:10:11.411 
和基础

00:10:12.613 --> 00:10:15.916 
你需要一个证书和一个配置

00:10:15.983 --> 00:10:18.886 
与你的设备和权限匹配

00:10:19.019 --> 00:10:21.855 
但是很多人都同时拥有扩展应用

00:10:21.922 --> 00:10:24.358 
如Apple Watch应用
或者应用内的嵌入式框架

00:10:24.925 --> 00:10:27.861 
每一个部分都会有各自不同的签名需求

00:10:28.929 --> 00:10:31.265 
这些需求综合起来
能让签名变得异常复杂

00:10:31.331 --> 00:10:33.300 
签名将会变成一个难题

00:10:34.168 --> 00:10:38.305 
而且管理好每一个签名需求
也会异常困难

00:10:39.673 --> 00:10:41.508 
所以Xcode在许多版本发布中

00:10:41.575 --> 00:10:43.944 
都致力于简化这些(工作流程)

00:10:45.045 --> 00:10:48.415 
在Xcode 7里
“Fix Issue”按钮将会出现

00:10:48.482 --> 00:10:52.152 
当Xcode检测到
你的签名配置出现错误的时候

00:10:53.587 --> 00:10:57.291 
有时候点击这些按钮能够修复问题

00:10:57.357 --> 00:10:59.393 
然后你就能回到应用开发

00:10:59.626 --> 00:11:01.595 
但是 很多时候这并不能解决问题

00:11:01.662 --> 00:11:06.533 
或者你需要点击很多次 直到问题解决
并且 在任何时候

00:11:06.600 --> 00:11:10.170 
Xcode都不会让用户了解问题所在

00:11:10.938 --> 00:11:13.574 
问题为什么能得到解决
并且是如何得到解决的

00:11:13.640 --> 00:11:16.343 
事实上
若Xcode知道怎么解决这样的问题

00:11:16.410 --> 00:11:18.412 
为什么还要让它打断你的应用开发

00:11:18.478 --> 00:11:19.813 
让你点击一个修复按钮呢？

00:11:21.114 --> 00:11:23.350 
在应用签名时和Xcode 7的交互

00:11:23.550 --> 00:11:25.752 
很多时候会让你觉得
是在跟一个黑匣子对话

00:11:25.819 --> 00:11:28.722 
你不能看到里面
但是你能疯狂地点击红色修复钮

00:11:28.789 --> 00:11:30.257 
尤其当你陷入抓狂的时候

00:11:30.557 --> 00:11:32.626 
这样看来它的工作机制并不是很理想

00:11:33.126 --> 00:11:35.863 
所以 在Xcode 8中
我们取消了修复键

00:11:36.797 --> 00:11:38.532 
但是同时我们也做了更多的工作

00:11:43.270 --> 00:11:45.939 
我们完全重新设计了
Xcode 8的签名机制

00:11:46.840 --> 00:11:49.076 
我们现在拥有了全新的签名基础架构

00:11:49.343 --> 00:11:52.012 
比以往的更快并且更稳定

00:11:52.980 --> 00:11:55.582 
此基础上 我们重新构建了新工作流程

00:11:55.649 --> 00:11:58.218 
在常规选项卡下设计了新的用户界面

00:11:58.285 --> 00:12:00.888 
这样你就能预览和管理你的签名配置

00:12:01.255 --> 00:12:02.689 
所有功能高度集成

00:12:04.391 --> 00:12:06.860 
接着我们着手改进了
Xcode和用户的沟通机制

00:12:06.927 --> 00:12:08.362 
当签名问题发生的时候

00:12:09.496 --> 00:12:13.066 
许多的错误信息晦涩难懂让人无从下手

00:12:13.333 --> 00:12:15.302 
所以在Xcode8中我们修订了它们

00:12:15.702 --> 00:12:18.639 
因此你会看到更清晰明了的信息

00:12:18.705 --> 00:12:20.040 
当任何异常情况出现时

00:12:21.208 --> 00:12:23.110 
如果你很好奇

00:12:23.177 --> 00:12:25.279 
Xcode是怎样替你

00:12:25.345 --> 00:12:27.281 
修复签名问题

00:12:27.381 --> 00:12:28.649 
我们增加了状态报告功能

00:12:28.715 --> 00:12:31.952 
这样你就能实时了解
Xcode如何修复问题

00:12:34.788 --> 00:12:36.523 
如Joshua在开始提到的一样

00:12:36.590 --> 00:12:40.594 
Xcode 8新增了两种签名机制

00:12:40.727 --> 00:12:43.463 
第一种是自动签名

00:12:44.531 --> 00:12:47.401 
现在自动签名功能被完全重新设计

00:12:47.467 --> 00:12:50.604 
它能满足你的一切签名需求

00:12:52.005 --> 00:12:55.442 
你再也不需要创建配置
或者更新app ID

00:12:55.509 --> 00:12:57.477 
这一切Xcode都能在后台自动完成

00:12:57.544 --> 00:12:59.713 
所以当你在开发应用的时候

00:12:59.780 --> 00:13:01.815 
Xcode会确保你拥有最新的签名

00:13:05.085 --> 00:13:08.522 
如果你需要掌控
你应用签名的每一个细节

00:13:08.589 --> 00:13:10.490 
你可以开启自主签名功能

00:13:11.291 --> 00:13:14.695 
在这种模式下
Xcode不会创建或者修改

00:13:14.761 --> 00:13:16.563 
你的任何配置

00:13:16.830 --> 00:13:19.099 
它也不会更改你的签名配置

00:13:20.234 --> 00:13:22.336 
我们来进一步看看
这一切都是怎样工作的

00:13:22.402 --> 00:13:24.404 
首先 自动签名

00:13:26.473 --> 00:13:28.041 
当你创建一个新的项目时

00:13:28.108 --> 00:13:30.611 
自动签名是默认选项

00:13:31.144 --> 00:13:34.915 
但是如果你是一个有经验的开发者
或者你正在打开一个已有项目

00:13:34.982 --> 00:13:37.251 
你可以在常规选项卡下开启它

00:13:37.317 --> 00:13:38.719 
在这个全新的签名UI

00:13:40.020 --> 00:13:42.389 
你需要做的只是勾选

00:13:43.490 --> 00:13:46.193 
然后告诉Xcode你的应用开发组

00:13:47.094 --> 00:13:50.430 
在那之后Xcode会
自动完成配置的创建

00:13:50.497 --> 00:13:52.232 
以及应用程序的签名

00:13:52.299 --> 00:13:54.768 
它会告诉你部署应用时会用到的

00:13:54.835 --> 00:13:57.037 
配置和证书

00:13:58.906 --> 00:14:01.475 
所以具体来说
自动签名能为你做些什么？

00:14:01.575 --> 00:14:04.978 
没错 它会创建你的签名证书

00:14:05.179 --> 00:14:06.880 
这样 当你在开发iOS应用时

00:14:06.947 --> 00:14:10.250 
它能帮助你创建iOS应用开发证书

00:14:10.617 --> 00:14:14.421 
它也能创建以及
更新你的应用ID和配置

00:14:14.488 --> 00:14:17.958 
这一切都在你开发的同时在后台完成

00:14:18.058 --> 00:14:20.227 
这样你就能专心于应用开发

00:14:22.429 --> 00:14:26.099 
但是也有一些情况
Xcode 8会提示你

00:14:26.166 --> 00:14:29.570 
尤其在你连接一台新设备
到Mac的时候

00:14:30.204 --> 00:14:33.207 
你的Mac发现这台设备
并没有在开发组注册

00:14:33.640 --> 00:14:36.143 
Xcode会在注册前询问你

00:14:36.243 --> 00:14:38.278 
因为我们知道授权设备是有数量限制的

00:14:38.345 --> 00:14:41.281 
你需要完全掌控它们的分配

00:14:42.349 --> 00:14:43.183 
最后

00:14:44.051 --> 00:14:47.855 
如果你想知道Xcode
替你在后台做了什么

00:14:47.921 --> 00:14:49.423 
你可以查看签名报告

00:14:50.090 --> 00:14:52.092 
来了解Xcode的工作记录和原理

00:14:52.893 --> 00:14:55.596 
接下来让给大家演示一下
这一切都是如何工作的

00:14:57.865 --> 00:15:00.567 
我将要演示的是
Xcode 8如何自动签名

00:15:00.634 --> 00:15:03.003 
在全新的iOS应用上

00:15:05.672 --> 00:15:06.573 
点击继续

00:15:07.474 --> 00:15:09.243 
给它命名

00:15:10.377 --> 00:15:13.180 
我不是一个出色的厨师
我喜欢简单的菜谱

00:15:14.781 --> 00:15:17.050 
第一点需要大家注意的是

00:15:17.117 --> 00:15:18.519 
在新的项目助手中

00:15:18.919 --> 00:15:20.721 
有一个新的弹出选项“团队”

00:15:21.922 --> 00:15:24.458 
当你创建项目的时候
你可以直接选择

00:15:24.525 --> 00:15:27.327 
你希望用来签名的开发组

00:15:27.694 --> 00:15:30.898 
在那之后 你的应用就将会

00:15:30.964 --> 00:15:33.634 
使用这个开发组来进行自动签名

00:15:35.702 --> 00:15:37.070 
点击继续

00:15:39.740 --> 00:15:41.408 
我会在桌面创建它

00:15:42.910 --> 00:15:44.311 
Xcode刚做了些什么？

00:15:44.745 --> 00:15:46.413 
它创建了一个全新的项目

00:15:46.480 --> 00:15:49.216 
并且开启了自动签名作为默认选项

00:15:50.217 --> 00:15:51.552 
当我创建项目的时候

00:15:51.852 --> 00:15:54.354 
它直接就生成了签名证书

00:15:54.421 --> 00:15:56.356 
和一个配置给我

00:15:57.424 --> 00:16:00.160 
我可以放大这里 来看得更清晰

00:16:03.997 --> 00:16:05.966 
如果我希望修改我的应用开发组

00:16:06.333 --> 00:16:07.601 
我可以在这里完成

00:16:11.238 --> 00:16:14.608 
创建一个新项目就是这么简单

00:16:15.075 --> 00:16:17.177 
我可部署项目
并且让它直接运行在设备上

00:16:17.244 --> 00:16:21.548 
我再也不需要点击修复键
或者修改我的配置了

00:16:21.615 --> 00:16:25.118 
我所需要做的只是创建一个新项目
然后告诉它我的开发组

00:16:25.519 --> 00:16:27.721 
但是我们还可以让这一切变得更有趣

00:16:29.289 --> 00:16:32.826 
就如Joshua之前所说
你可以使用功能选项卡

00:16:33.260 --> 00:16:36.930 
来开启你需要的系统功能
比如说Cloud Kit

00:16:36.997 --> 00:16:39.166 
我们用这个应用来尝试

00:16:40.801 --> 00:16:42.436 
我们进入功能选项卡

00:16:43.370 --> 00:16:46.607 
这里我能看见
我的应用支持的全部系统功能

00:16:46.974 --> 00:16:50.511 
我需要做的只是轻触这个开关
来开启其中一项

00:16:51.478 --> 00:16:55.849 
我想要使用Cloud Kit
以及信息推送

00:16:58.218 --> 00:17:01.588 
当我们做这些的时候
Xcode会相应地更改我的项目

00:17:01.655 --> 00:17:04.758 
它关联了系统框架
它也修改了我的权限文件

00:17:04.992 --> 00:17:07.861 
它甚至还联系了开发者网站

00:17:08.028 --> 00:17:09.463 
下载了一个新的配置

00:17:11.064 --> 00:17:12.633 
我现可直接部署并运行我的应用

00:17:12.900 --> 00:17:15.269 
我能立刻开始使用这些系统功能

00:17:15.335 --> 00:17:17.771 
重申一次 我从来没有点击任何修复键

00:17:17.838 --> 00:17:19.940 
或者输入任何权限

00:17:20.907 --> 00:17:23.544 
现在 我偶然知道了
Xcode下载了一个新的配置

00:17:23.609 --> 00:17:25.112 
我是Xcode软件工程师

00:17:25.512 --> 00:17:27.314 
可是你们大部分人可能都不是

00:17:27.714 --> 00:17:30.217 
所以如果你好奇
Xcode都做了哪些工作

00:17:30.717 --> 00:17:33.387 
你只需点击进入“报告导航”

00:17:34.054 --> 00:17:37.224 
那里你能看到一个叫
“更新签名”的新报告

00:17:37.691 --> 00:17:41.662 
任何时候只要
Xcode替你修复一个签名问题

00:17:41.862 --> 00:17:44.198 
这样的一个报告就会被创建

00:17:44.264 --> 00:17:46.133 
让我们看看最新的一个

00:17:46.200 --> 00:17:48.135 
看看里面都有什么内容

00:17:50.170 --> 00:17:52.206 
我们放大来让现实更清晰

00:17:53.373 --> 00:17:56.243 
这里我们能看到
Xcode检测到了一个问题

00:17:56.743 --> 00:17:59.246 
我能看到问题更多的详细信息

00:17:59.513 --> 00:18:02.015 
只要点击那一行并且展开

00:18:03.083 --> 00:18:05.586 
所以Xcode在说我已有的配置

00:18:05.819 --> 00:18:07.154 
并不支持iCloud

00:18:08.422 --> 00:18:09.857 
紧接着在这下面

00:18:09.923 --> 00:18:12.526 
它创建了一个新的配置给我的应用

00:18:13.827 --> 00:18:15.562 
一切都如此简单

00:18:15.629 --> 00:18:19.299 
你就知道Xcode在替我修复问题时
具体做了哪些工作

00:18:29.776 --> 00:18:32.946 
关于自动签名你还需要知道几件事

00:18:33.814 --> 00:18:36.617 
第一是它只适用于应用开发签名

00:18:36.984 --> 00:18:39.386 
应用发布签名
是由另一个工作流程完成的

00:18:39.453 --> 00:18:41.822 
Joshua稍后会聊到这个话题

00:18:43.357 --> 00:18:46.660 
并且它只适用于
Xcode生成的用户配置

00:18:47.094 --> 00:18:49.963 
这些当然都是
Xcode替你创建的配置

00:18:50.030 --> 00:18:53.700 
并保证它们
在你应用开发过程中实时更新

00:18:55.402 --> 00:18:58.805 
这样的好处是
你可以使用自动签名

00:18:58.872 --> 00:19:02.576 
不需要担心应用发布证书

00:19:02.643 --> 00:19:04.344 
被Xcode使用

00:19:05.045 --> 00:19:07.848 
你的应用发布证书和用户配置

00:19:07.915 --> 00:19:10.284 
绝对不会被自动签名修改

00:19:13.353 --> 00:19:16.890 
在Xcode 8里
自动签名被重新设计了

00:19:17.257 --> 00:19:20.861 
它不会出现在你的视线里
同时它也帮助你管理签名

00:19:21.061 --> 00:19:23.063 
所以你能真正集中精力在重要的事情上

00:19:23.130 --> 00:19:24.698 
也就是应用开发

00:19:27.167 --> 00:19:29.203 
现在我们来看一看围栏的另一面

00:19:29.269 --> 00:19:30.537 
自主签名

00:19:31.405 --> 00:19:33.106 
如果你还记得的话
这是一个模式

00:19:33.173 --> 00:19:35.876 
在里面你能控制应用签名的每一步工序

00:19:39.012 --> 00:19:40.714 
你可以开启自主签名功能

00:19:41.081 --> 00:19:43.750 
只需要在常规选项卡里
取消勾线自动签名

00:19:44.785 --> 00:19:46.053 
在那之后

00:19:46.186 --> 00:19:49.323 
Xcode就会
让你选择不同的用户配置

00:19:49.389 --> 00:19:51.391 
来搭配你不同的开发配置

00:19:52.392 --> 00:19:55.395 
这会非常有用
当你拥有持续集成系统

00:19:55.462 --> 00:19:59.299 
或者当你需要给免费和
付费版应用不同的配置

00:19:59.366 --> 00:20:01.101 
现在你有了实现它们的工具

00:20:01.168 --> 00:20:04.238 
这一切配置
你都能在常规选项卡里面完成

00:20:04.304 --> 00:20:06.940 
不需要再访问“构建设置编辑器”

00:20:09.009 --> 00:20:13.113 
这是一个功能强大的UI
来帮助你配置应用签名

00:20:13.213 --> 00:20:15.315 
但是我们想要它的功能更进一步

00:20:16.016 --> 00:20:19.186 
你们当中有人需要手动选择配置时

00:20:19.386 --> 00:20:23.290 
肯定遇到过一些奇怪的安装或运行报错

00:20:23.357 --> 00:20:25.459 
这通常跟权限有关

00:20:25.826 --> 00:20:29.530 
我们希望Xcode
能提供给大家更有用的信息

00:20:29.796 --> 00:20:31.598 
在你陷入问题之前

00:20:32.299 --> 00:20:36.303 
为此我们在常规选项卡里
加入了一些新的错误报告机制

00:20:36.503 --> 00:20:39.106 
它就在你设置的旁边

00:20:39.173 --> 00:20:41.575 
这样选择正确的配置就会更加简单

00:20:42.409 --> 00:20:44.344 
这里我能看见我的配置

00:20:44.411 --> 00:20:47.214 
并不支持我应用的功能

00:20:47.414 --> 00:20:50.584 
我能清楚了解如何解决这个问题

00:20:53.420 --> 00:20:54.254 
另外

00:20:57.257 --> 00:21:00.194 
我可以看见用户配置的更多信息

00:21:00.260 --> 00:21:02.129 
只要点击配置信息

00:21:03.263 --> 00:21:05.566 
就能看到很多细节

00:21:05.632 --> 00:21:09.736 
比如配置的创建日期
以及它支持的系统功能

00:21:09.803 --> 00:21:12.573 
并且 它也更方便我们排查错误

00:21:12.639 --> 00:21:14.641 
以及了解如何修复问题

00:21:18.378 --> 00:21:22.382 
自主签名仅限于手动创建的配置

00:21:22.482 --> 00:21:25.485 
这些配置是由
你或者你的开发组成员创建

00:21:25.719 --> 00:21:28.188 
在开发者网页上

00:21:28.422 --> 00:21:30.490 
Xcode一定不会修改它们

00:21:32.326 --> 00:21:34.261 
你可以选择任何种类的配置

00:21:34.328 --> 00:21:35.229 
如我之前提到的

00:21:35.295 --> 00:21:38.899 
如果你想用
应用开发的配置来做开发部署

00:21:38.999 --> 00:21:40.968 
用应用发布的配置做其他用

00:21:41.268 --> 00:21:42.369 
这是可行的

00:21:45.839 --> 00:21:47.007 
这真是很棒的事情

00:21:47.074 --> 00:21:49.776 
尤其对于那些经验丰富的开发者

00:21:49.843 --> 00:21:52.212 
他们以前手动选择过配置

00:21:52.813 --> 00:21:56.817 
Xcode 8里又一个新的开发设置
名为“用户配置区分符”

00:21:57.618 --> 00:22:01.021 
它的作用是根据名字来引用配置

00:22:01.955 --> 00:22:04.625 
为什么这是一个很大的进步

00:22:05.325 --> 00:22:06.560 
因为在Xcode 8前

00:22:06.860 --> 00:22:09.663 
Xcode只能根据
独特ID来引用配置

00:22:10.564 --> 00:22:12.232 
不管是有一新开发者加入你的团队

00:22:12.299 --> 00:22:13.867 
或者你添加了一个新的设备

00:22:14.034 --> 00:22:16.537 
你都需要相应地更新你的配置

00:22:16.603 --> 00:22:19.339 
在这个过程中
也会生成一个新的独特ID

00:22:19.406 --> 00:22:21.542 
然后你就需要更新你的项目配置

00:22:22.643 --> 00:22:26.513 
好了 在Xcode 8
因为我们使用名字来引用配置

00:22:26.747 --> 00:22:29.249 
你所需要做的只是更新配置

00:22:29.550 --> 00:22:33.420 
Xcode就能自动识别它
你再也不需要更新你的项目配置了

00:22:35.889 --> 00:22:36.723 
谢谢

00:22:39.660 --> 00:22:42.729 
现在让我们看看自主签名是怎样

00:22:42.796 --> 00:22:43.964 
在演示机上工作的

00:22:49.503 --> 00:22:50.337 
好的

00:22:52.573 --> 00:22:56.076 
我将给大家演示我的另外一个
正开发的应用——Scrapbook

00:22:58.011 --> 00:22:59.379 
这里放大

00:23:00.480 --> 00:23:03.150 
所以Scrapbook已被
设置成为自主签名

00:23:04.017 --> 00:23:08.021 
我选择了不同的配置
给我的免费和付费版本应用

00:23:08.889 --> 00:23:10.524 
这真的很容易配置

00:23:10.591 --> 00:23:11.859 
在常规选项卡里

00:23:11.925 --> 00:23:13.227 
这就是我需要做的一切

00:23:13.527 --> 00:23:16.029 
只需要从选项栏里选择不同的配置

00:23:16.597 --> 00:23:19.066 
因为我没有看到任何报错信息

00:23:19.166 --> 00:23:21.902 
我就已经确定
我可以部署和运行这个应用了

00:23:21.969 --> 00:23:23.237 
一切都会顺利工作

00:23:25.205 --> 00:23:26.573 
但是就如之前的演示里面

00:23:26.640 --> 00:23:28.742 
让我们把事情变得更有趣一点

00:23:28.976 --> 00:23:30.744 
我想要使用这个功能选项卡

00:23:30.811 --> 00:23:34.448 
这样我就能把iCloud和消息推送
包括在我的应用功能里

00:23:35.349 --> 00:23:38.185 
如果你在之前已经使用过功能选项卡

00:23:38.318 --> 00:23:41.021 
使用一个手动设置的用户配置的时候

00:23:41.421 --> 00:23:44.625 
你大概也已经注意到
它会更改你的签名设置

00:23:44.691 --> 00:23:46.827 
或者进行一些你并不需要的改变

00:23:47.628 --> 00:23:51.365 
在Xcode 8里
功能选项卡可以很安全地被使用在

00:23:51.431 --> 00:23:52.833 
自主签名模式了

00:23:53.333 --> 00:23:56.170 
它能判断你做的本地设置改变是否安全

00:23:56.236 --> 00:23:59.106 
比如更新你的权限PLIST

00:23:59.439 --> 00:24:01.141 
但是它不会接触到你的配置

00:24:01.208 --> 00:24:04.244 
我将告诉你
怎样通过手动的步骤

00:24:04.311 --> 00:24:06.113 
来解决这些问题

00:24:06.513 --> 00:24:07.848 
我们来看看这个

00:24:11.652 --> 00:24:13.187 
我会点击“功能”

00:24:14.855 --> 00:24:18.158 
然后开启iCloud和推送通知

00:24:21.895 --> 00:24:24.064 
现在Xcode会给

00:24:24.131 --> 00:24:26.633 
能正常运行的步骤旁边打勾

00:24:26.733 --> 00:24:28.836 
给其它一些

00:24:28.902 --> 00:24:31.638 
需要另外在开发者网站上
完成的步骤标打叉

00:24:32.206 --> 00:24:35.342 
我能在常规选项卡里
看到更多的详细信息

00:24:37.744 --> 00:24:38.745 
让我把这里放大

00:24:42.883 --> 00:24:44.418 
如果你看见这个报错信息

00:24:44.484 --> 00:24:46.720 
Xcode在告诉我我选择的配置

00:24:46.787 --> 00:24:49.389 
不支持iCloud和推送通知

00:24:49.556 --> 00:24:52.059 
这很明显 因为我刚开启了它们

00:24:52.326 --> 00:24:53.460 
这一切都很清晰明了

00:24:53.527 --> 00:24:56.530 
我明确的知道如何解决这些问题

00:24:56.597 --> 00:24:58.932 
但是在过去
如果我试着部署和运行

00:24:58.999 --> 00:25:02.169 
我的应用要么不能安装
要么不能成功运行

00:25:03.904 --> 00:25:06.240 
最后 如果我想看更多信息的话

00:25:06.306 --> 00:25:08.175 
我可以点击配置信息钮

00:25:09.610 --> 00:25:12.446 
Xcode告诉我配置的更多信息

00:25:12.513 --> 00:25:15.849 
比如它支持或者不支持的系统功能

00:25:15.916 --> 00:25:17.751 
重申一遍
这一切都非常简单

00:25:17.851 --> 00:25:20.087 
我清楚的知道如何解决这些问题

00:25:20.888 --> 00:25:22.523 
让我们来修复这一个

00:25:23.290 --> 00:25:26.226 
如我之前所说
在自主签名模式里

00:25:26.293 --> 00:25:28.829 
Xcode不会修改我的配置

00:25:28.996 --> 00:25:31.798 
我需要去到开发者网站上自己修改

00:25:33.033 --> 00:25:34.968 
所以我要打开开发者网站

00:25:35.836 --> 00:25:38.572 
点击证书——标识符——配置

00:25:39.173 --> 00:25:42.809 
我需要做的第一件事就是更新应用ID

00:25:43.410 --> 00:25:45.112 
所以我要选择应用ID

00:25:45.512 --> 00:25:49.049 
选择我为这个应用已创建好的应用ID

00:25:49.316 --> 00:25:52.452 
它告诉我所有支持的系统功能

00:25:52.586 --> 00:25:54.054 
点击修改

00:25:54.621 --> 00:25:57.324 
向下滚动开启iCloud

00:25:58.358 --> 00:26:00.494 
我看到的这个警告信息

00:26:00.661 --> 00:26:03.363 
在提醒我 当我更新了应用ID之后

00:26:03.430 --> 00:26:06.900 
我还需要下载一个新版本的用户配置

00:26:06.967 --> 00:26:08.468 
点击确定

00:26:09.703 --> 00:26:13.507 
然后我想开启更新版本的iCloud

00:26:13.707 --> 00:26:14.808 
我将开启它

00:26:15.275 --> 00:26:17.945 
它再一次提醒我需要一个新配置

00:26:18.011 --> 00:26:19.179 
点击确定

00:26:21.682 --> 00:26:24.151 
向下滚动开启推送通知

00:26:24.952 --> 00:26:25.886 
一切都完成了

00:26:27.354 --> 00:26:29.456 
下一步是更新我的配置

00:26:29.556 --> 00:26:31.358 
点击“开发”

00:26:32.326 --> 00:26:34.494 
然后你看到
两个scrapbook的配置

00:26:34.561 --> 00:26:35.963 
被标注为无效

00:26:36.396 --> 00:26:38.732 
那是因为我已对我的应用ID作了修改

00:26:38.799 --> 00:26:40.968 
可是我还没有重新生成新的配置

00:26:41.335 --> 00:26:42.569 
所以它们就过期了

00:26:43.170 --> 00:26:45.672 
让我们来更新Scrapbook
免费版的配置

00:26:47.074 --> 00:26:48.675 
点击然后修改

00:26:49.476 --> 00:26:51.111 
我能向下滚动

00:26:51.178 --> 00:26:54.948 
我不会修改证书或者设备信息

00:26:55.449 --> 00:26:56.783 
点击生成

00:26:57.518 --> 00:26:59.219 
然后下载新的配置

00:27:00.220 --> 00:27:03.090 
现在最后一个步骤是安装配置

00:27:03.156 --> 00:27:04.625 
这样Xcode就能使用它了

00:27:05.058 --> 00:27:08.228 
我可以在下载文件夹里面点击它

00:27:10.097 --> 00:27:11.265 
所以这里发生了什么？

00:27:11.965 --> 00:27:12.966 
让我放大看看

00:27:14.034 --> 00:27:16.870 
当我点击配置的时候
Xcode安装了它

00:27:17.905 --> 00:27:20.307 
然后立刻更新并开始使用它了

00:27:20.374 --> 00:27:23.944 
所以我们能看到
免费版应用的部署设置页面的报错信息

00:27:24.011 --> 00:27:24.945 
已经消失了

00:27:26.780 --> 00:27:28.615 
你可能也已经注意到

00:27:28.715 --> 00:27:30.984 
在这期间我并没有修改任何的项目配置

00:27:31.285 --> 00:27:34.821 
这是用户配置区分符
在后台帮我们完成了一切工作

00:27:34.988 --> 00:27:37.357 
一旦我安装了新版的配置

00:27:37.591 --> 00:27:40.360 
Xcode就能直接自动使用它

00:27:40.761 --> 00:27:43.597 
现在我可以部署和安装我的免费版应用

00:27:43.697 --> 00:27:46.533 
一切都能正常工作
我能使用iCloud和推送通知

00:27:47.601 --> 00:27:50.771 
但是好像我还需要更新我的付费版应用

00:27:50.838 --> 00:27:53.340 
有人想看
我在开发者网站上再做一遍吗？

00:27:53.407 --> 00:27:54.875 
还是我们已经知道怎么做了？

00:27:55.509 --> 00:27:56.343 
好的

00:27:56.743 --> 00:27:58.212 
这有一点枯燥

00:27:59.246 --> 00:28:02.683 
如果你注意看我刚才演示的步骤
这实际上是

00:28:02.983 --> 00:28:04.484 
重复了一边我刚才所做的

00:28:04.551 --> 00:28:07.588 
以及Xcode为我所做的一切步骤

00:28:07.654 --> 00:28:08.856 
在自动签名里

00:28:10.490 --> 00:28:13.861 
以上就是自主签名
Xcode 8里一个新的签名模式

00:28:13.961 --> 00:28:16.897 
你将能完全掌控应用签名

00:28:17.064 --> 00:28:21.335 
Xcode不会扰乱你的设置
或者修改你的配置

00:28:22.703 --> 00:28:25.305 
但是我还是鼓励大家使用自动签名

00:28:26.507 --> 00:28:28.442 
它在Xcode 8里被重新设计了

00:28:28.509 --> 00:28:30.911 
并且提供了无缝高效的开发流程

00:28:30.978 --> 00:28:32.613 
我希望你们能够喜欢

00:28:33.914 --> 00:28:37.684 
现在我们重新请回Joshua
给大家讲解一些最佳做法

00:28:39.853 --> 00:28:40.687 
谢谢你 Itai

00:28:43.690 --> 00:28:47.594 
我们刚才看到了
Xcode 8的新流程

00:28:47.661 --> 00:28:51.164 
能让大家很方便并且快捷地管理签名

00:28:51.765 --> 00:28:54.468 
现在我想跟大家谈谈一些最佳做法

00:28:54.535 --> 00:28:56.870 
来管理你的项目签名

00:28:58.505 --> 00:29:00.908 
第一件事是
使用自动签名

00:29:01.074 --> 00:29:04.845 
自动化的设计
是希望大家的生活越来越容易

00:29:06.313 --> 00:29:09.149 
它很好的胜任了这一点
不管是对独立开发者

00:29:09.316 --> 00:29:10.884 
或是大型团队

00:29:11.118 --> 00:29:14.788 
所以你应该把你应用的所有开发人员

00:29:14.855 --> 00:29:16.223 
加入到一个开发组

00:29:18.125 --> 00:29:21.261 
你应该使用功能选项卡来管理权限

00:29:21.328 --> 00:29:23.664 
这样就能避免使用开发者网站

00:29:23.730 --> 00:29:26.700 
来配置功能
比如iCloud容器

00:29:28.235 --> 00:29:33.373 
如果你是用自主签名 不要设置
CODE_SIGN_IDENTITY

00:29:33.707 --> 00:29:35.976 
因为你有一个独特的签名证书

00:29:36.043 --> 00:29:37.911 
和你的帐户关联

00:29:38.178 --> 00:29:41.281 
所以如果你给你的签名证书设置了这个

00:29:41.348 --> 00:29:43.383 
一旦有人想使用你的项目

00:29:43.617 --> 00:29:45.152 
他们就不能部署了

00:29:45.219 --> 00:29:47.821 
所以你应该让它设置为默认值

00:29:49.122 --> 00:29:51.658 
避免使用构建设置编辑器

00:29:51.725 --> 00:29:55.596 
你应该使用目标编辑器下面的
常规选项卡这一新UI

00:29:56.063 --> 00:29:59.900 
它能让你看到配置的详细信息

00:30:00.200 --> 00:30:04.671 
并且它能正确使用名字引用配置

00:30:04.872 --> 00:30:07.374 
这样你就能保证项目信息的准确性

00:30:09.142 --> 00:30:11.311 
你还应该使用功能选项卡

00:30:11.378 --> 00:30:14.848 
在自主签名模式下
来管理你的权限PLIST

00:30:16.350 --> 00:30:21.488 
并且如果你是用开发签名
来配置你所有的项目

00:30:21.922 --> 00:30:23.657 
你应该试用自动签名

00:30:23.724 --> 00:30:25.192 
当你回去打开Mac的时候

00:30:25.259 --> 00:30:27.628 
看一看目标编辑器的勾选项

00:30:27.694 --> 00:30:28.529 
然后试一试

00:30:31.665 --> 00:30:34.001 
当你想发布你的应用时

00:30:34.134 --> 00:30:37.404 
Xcode有一个专门的工作流程

00:30:37.771 --> 00:30:40.741 
一切都建立在创建一个归档的基础之上

00:30:42.109 --> 00:30:44.678 
应用归档里包括了你的应用程序的拷贝

00:30:45.612 --> 00:30:49.483 
很重要的一点是
你应该使用开发签名

00:30:50.184 --> 00:30:53.487 
如果你用发布证书
给应用签名的话

00:30:53.720 --> 00:30:56.256 
你将不能完整地测试

00:30:56.356 --> 00:30:57.925 
你开发的应用

00:30:58.258 --> 00:31:00.394 
所以必须使用开发签名

00:31:01.562 --> 00:31:03.697 
当你准备好要发布

00:31:03.797 --> 00:31:05.432 
当你使用organizer

00:31:05.499 --> 00:31:07.835 
Xcode会给应用重新签名

00:31:07.901 --> 00:31:11.605 
使用你的开发证书和用户配置

00:31:12.306 --> 00:31:15.642 
若你点击上传 它会直接被上载到
iTunes Connect

00:31:16.076 --> 00:31:19.246 
或者 你点击导出
你会得到一个IPA文件

00:31:19.680 --> 00:31:22.482 
或是一个被发布签名过的应用

00:31:23.584 --> 00:31:27.120 
以上就是发布应用的最佳做法

00:31:29.223 --> 00:31:33.961 
我们今天介绍了几项内容
我们讲到了签名证书的新改进

00:31:34.027 --> 00:31:37.364 
能让你很容易配置新的开发机器

00:31:37.831 --> 00:31:40.434 
我们谈到了新的自动工作流程

00:31:40.634 --> 00:31:44.171 
能解决你应用开发过程中
的很多痛点

00:31:44.738 --> 00:31:47.708 
我们还谈到了
新的自主签名模式

00:31:47.808 --> 00:31:51.044 
所以你能手动配置项目

00:31:51.111 --> 00:31:52.479 
按照你自己的意愿

00:31:54.214 --> 00:31:56.717 
如果你想了解更多
进入这个链接

00:31:57.718 --> 00:32:00.721 
如果你想了解更多
Xcode或者安全机制的信息

00:32:00.888 --> 00:32:02.456 
你可以参加这些会话

00:32:03.056 --> 00:32:04.525 
谢谢大家