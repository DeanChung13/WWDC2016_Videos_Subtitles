关于国际化的实践
好的
大家好
大家好
你们好 欢迎大家来到 WWDC
这应该是你们今早的第一个会话
如果你听不懂我刚开始所说的
那你就来对了
那么
我们会讨论一些关于国际化的问题
你应该知道
Apple面向全世界发售其产品
三分之二Apple用户是不在美国的
这也是为什么它这么重要的原因
为了确保你应用中的语言体验没有问题
我们的用户涵盖了从旧金山到米兰再到迪拜
还有像是从新德里到香港
当然了
这些用户很可能是使用你的或者Apple的应用
通过他们的母语
他们也可能会使用这些应用
用你想象不到的跟那个地区根本无关的语种
例如英语
你可能会感到奇怪这可是个相当全球化的语言
今天我会跟你们谈谈有什么新的东西
我们近年关于国际化的探索
一些关于本地化的基础知识
还有国际化你的应用
有些技巧令你将代码稍作修改就能变成一个不错的应用
对于全球的用户
最后是一些设计层面的东西
还有就是
从心理层面分析你该怎么做你的应用
我们从新的特性开始讲起吧
我很兴奋的向你们介绍
iOS 10中新加入的多语言键盘
如果你们左右环顾一下
你可能正好挨着
会讲多种语言的人
美国是个十分多语种的地方
加州尤其如此
在iOS10中我们提供了多语言键盘来处理这种环境
你们从这若干种语言中任选出两种
或是屏幕这边的任意两种
你可以在同样的布局中打字了而不需要用地球键来切换
你还有自动改错功能
以及两种语言的预测拼写功能
我们所做的另一个改进是加入了拉美西班牙语
其被加入了iOSwatchOS还有tvOS
这可能是头一次
你的应用会碰到语言变体
其不是给特定国家设计的
我待会儿会从代码层面来解释下这有多重要
另一个很棒的改进是新的计量格式器
其被加入到foundation中
它会处理一种语言中的单位转换
以及在后台处理该区域要注意的风俗习惯问题
它已经支持了超过20种不同的单位
像是温度 能量 压力等等
在此
我不会深入展开来讲
周五有个专门讲这个专题会话
请去参加那个会话吧
我们近年也本地化了数字键盘
因此当你请求数字键盘的时候
你会自动得到
支持不同编号体系的键盘
例如支持阿拉伯数字和印度语数字
当你处于当前状态时
你会看到键盘的左下角有一个123键
来让你在不同的计数系统间进行切换
在这些情况下
你可能想要能带ASCII数字的键盘
当你确定你要进行的输入
必须限定为ASCII数字时
比如要输入信用卡号和IP地址时
这些是特殊的例子但是你应该考虑到这些情况
在macOS Sierra中的一个重要新特性
就是支持像是阿拉伯语和希伯来语本地化从右向左输入
macOS重新设计了从右向左读写的语言
当然macOS加入了我们已有的家庭
其中像是iOS和watchOS这类产品已经支持了
本地化的从右向左读写的语言
这个是挺大的主题 我不会就此展开
有个专门讲这个主题的演讲
会在中午上午九点举行叫做国际用户界面的新特性
你们应该去听一下
我们从一些基本概念开始讲起吧
都是关于国际化所需要知道的概念
让我们看一个iOS预装的应用时钟应用
它的界面重新设计了不过你们应该看着还会眼熟
那么有哪些方面
你需要进行国际化
来让这个应用适应不同的语言和国家呢
首先 你需要本地化所有的字符串
也就是任何有字符串的按钮标签或是视图
你得保证它被翻译成
所有你要支持的语言
接下来还有另一类的字符串需要被本地化
但它是格式化的内容因此你应该使用格式器
来实现
这会节省你大量的工作
最后 你需要国际化整个布局
以便它可以在从右向左的语言环境下运转良好
而对于会产生更长或更短翻译结果的语言
这是与源语言相比较而言
如果我们所有都弄对了那么我们就把这个英文应用
翻译成中文应用吧 它看起来不错
注意在中文环境下上午/下午标示是在
数字之前而英文环境下正好相反
它在诸如阿拉伯语这类从右向左读写的语言环境下效果也不错
注意看现在整个应用的布局是如何呈现从右向左的
在这个例子中 看看在阿拉伯语环境下是如何使用阿拉伯-印度语数字的
这和英语环境下的运行是不同的
如果你用的是格式器这些就不用你操心了
这些就是开发方面的一些基础知识
让我们也来看看用户角度的基础知识
当用户获得一个新的Apple设备像是iPhone 他会做什么呢
当你打开每个Apple设备
首次都会让你选择一种语言
深入探究的话其实就是
每种语言都有与其对应的编码
当然了 每个区域也有相应的编码
我们假定一个用户选择的是西班牙语 美国
其实最后生成的语言编码是es-US
你可能不知道的是
语言编码也是有体系结构的
例如 西班牙语 美国
实际上是继承于拉美西班牙语
而其又继承于原生西班牙语
这非常的重要
因为不是每个应用都会被本地化为西班牙语 美国
所以我们想要知道
用户倾向的次选语言是什么
如果我们不支持他们最喜欢的语言
显示在系统上
而且这个体系结果不仅是针对西班牙语
甚至是像英语都是有这样的体系结构的
例如 印度英语
其拼写体系是要更接近于英式英语 相比美式英语来说
因此它就是继承于英式英语的体系结构的一部分
英语和西班牙语只不过是其中两种语言对于这种体系结构来说
我们还有其他语言像是汉语法语 葡萄牙语
也有类似的体系结构
所以我希望你们把这些要点都记下来
当然不用了
我提到这些点的原因就是
因为我们会帮助你们解决这类问题
而你根本就不用操心这个
我会在下面告诉你们要怎么实现
我们首先要做什么呢
我们需要本地化所有的字符串
还要进行一些设置
这些设置挺简单的 不过确实要做
我不打算在这细说
因为有很多的文档可供参考
而且还有另外一个讲座专门是讲如何设置你的应用的
假设你已经完成了你的本地化设置
那么此时你的应用里就有了一些本地化的字符串
若你使用storyboard
并使用其中的国际化基板 你就完成了
你不用再做什么 启动你的应用吧
字符串成功加载
你都完成啦
如果你要在代码中创建或载入字符串
你需要调用NSLocalizedString
NSLocalizedString会运用非常好的逻辑
来处理我刚才提过的体系结构
它会为你加载最恰当的字符串
注意给你的翻译器加上个注释
因为根据不同的语境同样的单词经常会有不同的意思
而注释会帮助理清它
让我们看个更复杂些的场景
假如说你是从远程服务获取字符串的
像是从服务器或是另一个进程
在这种情况下 你可能想让服务器
或是其他进程知道
这就是我的应用的启动语言
请给我相匹配的字符串
为了实现这个功能
你可以在你启动的Bundle上调用喜欢的本地化
以此获得第一种语言并将其发给你的远程服务
如果你还有更多参与的设置
出于某种原因你有一个列表的可选语言
而在服务器上没有正好匹配
你在客户端上列表里的语言
假如说你在服务器端有一个更大的集
那么你可以调用preferredLocalizations方法
并传给它你所拥有的备选集
它会给你匹配最合适的语言
我提到Bundle语言匹配逻辑
在上面几张幻灯片好多次了
那它到底是什么呢
Bundle在底层为你做了什么呢
Bundle为你做的就是它在思考一些事情 比如
恩 用户喜欢英语 美国
但是我们没有英语 美国的本地化配置
不过我们有英语的配置在此它就会给你英语的配置
它会弄明白 你想要印度式英语
我们有英式的而不是印度式的那我们就给你英式的
在拉美西班牙语的例子中
如果你说我喜欢墨西哥式英语
它会试着给你最好的匹配结果
从列表中看就是拉美西班牙语
类似的 有关于汉语还有很多其他语言
这种本地化的语言体系逻辑非常复杂
你应该不想在你的应用中执行
如果你的代码是可以实现
使用语言识别器
通过连字符分割它或者诸如此类的代码
请把代码删除 因为你不应该这么做
现在你已经本地化了你的所有字符串也使用了正确API
你应该再检查一下你所做的
是否真的把应用本地化了
为了实现这个目的你可使用Xcode 8新静态分析器
它会帮你找到本地化中出现的任何问题
你把非本地化的字符串放到UI的位置
这就是所有关于本地化字符串的内容了
接下来我们谈一下格式器
现如今你能看到很多这类应用
关于送达服务的
但是你这里看到的这个可不怎么样
它上面写着AM9:41
英语用户会觉得这写的根本不对
但相信我我在实际的应用中看到过这种格式
你可能会发现在中文里是正好相反的
中文里把a.m./p.m.记号放在数字后面的话
是完全错误的
那我们应该如何避免这样的错误呢
其实问题是在于我们使用了一个方法
方法叫做formatter.dateFormat还通过它设置了一个固定的格式
似乎看上去这么做是对的
其在代码中很整洁但实际上是错的方法
尽管在英语环境下它显示的是正确的结果
它会显示9:41 a.m.
但如果你是在中文环境下结果就是错误的
为什么呢因为它设定的是固定的格式
而不管你运行的是哪种语言
正确的方法应该是
在日期格式器上使用预定义的短风格
它会为你显示正确的结果无论是在英语环境
汉语环境还是你应用可能本地化的其他语言
当然还有其他更多风格供选择
有我刚刚演示给你的短风格
也有稍微长一点的风格 它带有秒数
还有带时区的风格
或带完整时区名显示的
对于不同的需要有着对应的不同风格
当然了 不仅仅是有关于时间的
也有关于日期的
从短期到长期的风格一应俱全
你可能会找到我说
这些是挺好的但是没有一种风格是我的设计师想要的
他们只想要整年的或者光要这个 光要那个
没问题
你可以用一个格式
重要的是要使用它的话
要用到setLocalizedDateFormatFromTemplate方法
这会保证它接受你的格式
解释当前引号中的语言
然后给你该语言对应的正确本地化格式
还有两个你可能没有用过的类
尽管不是今年刚出的不过还是很新
日期控件 它可以让你生成格式
一个区间段 像是4小时25分钟
或是日期间隔 像是这个讲座的时间上午9点到9点40
使用这些类的优势在于
它会为你负责所有的本地化工作
接下来我们谈谈另一种你可以格式化的数据类型
名称
现在...
如果你是这么显示你的用户名字的
或者是他们朋友的名字当他们打开你的应用时
这会让他们对你的应用留下一个非常坏的印象
我们不该这么做
你应该正确显示这些名字
为给定的语言和脚本
我们应该怎么做呢
其实挺简单的
你需要创建一个PersonNameComponents对象
将其填入一些名字的组件然后就像其他的格式器
你就从组件中请求字符串即可
你想要什么风格都可以
我们有很多的风格可供选择从长的 像是全名
到缩略的 你可以用首字母缩写
当然了 它也支持多语种
近年所出的新特性是名称语法分析支持
你既能分析一个全名也能分析一系列的部件
而且实现它就像创建一个格式器那样容易
发给它一个字符串 然后看下组件
如果返回nil 那么就没有成功分析
组件构造
有个挺酷的事是
这不是个检查某个静态规则集合的静态API
它其实是个统计数据模型
所以即使你是以相反的顺序传入名字的
它也知道在John Appleseed中
John更可能是名
而Appleseed是姓
而它仍将正确分析语法
它也支持多个语种
有很多个格式器
我着重说了
Date和PersonNameComponents格式器
简单说明了关于日期的components和interval格式器
有些格式器我没有提到
它们都是系统中现有的格式器
这个是全新的measurement格式器
这也是新发布的一个格式器
请用下这些格式器
无论在你代码的哪个地方因为使用它们是正确的
你也会减少使用本地化字符串
这是你在这些例子中应该避免使用的
那么
就是这么多了
在字符串方面你整个的UI就是本地化的
那么让我们来看下在布局方面应该做些什么
以确保UI是和那些字符串正常工作的
这里的关键字是Auto Layout
它要做的正如其名
就是要实现自动布局
不管你是在左还是右优先的应用
若你使用“自动布局”你都会得到
自动生成一个基于从右向左语言的用户界面
自动布局是一个重要的话题
我不会展开讲你应该如何使用自动布局
因为有很多的会话 不仅是今年
还有往年的 介绍了其相当多的细节
你应该使用UIStackView
和NSStackView 尽量多用因其是非常容易使用的API
是用自动布局的API这会让你的视图
跳转为从右向左语言显示
并且当它们得到长和短的字符串时会进行恰当的调整
我们会给你们一些示例代码
向你展示如何使用Stack Views来实现一个时钟应用
对于布局你要牢记一点
就是有时候你得有点创造性
当前的屏幕内容是以英文显示的
你确定你不想用Apple ID么
你在这有两个选项用或者不用Apple ID
你可以想象在某些语言环境中
翻译可能会长一点就放不到这两个紧挨着的按钮中
那你该怎么做呢
在这种情况下你会发现整个视图进行了切换
从左右适应变成了上下适应
诸如此类的创造性UI元素是你应该记住的
在你的应用中
你向翻译器请求缩短一个字符串
甚至在该语言环境下都不能明确表意时
接下来要介绍的是竖直灵活性
你们的应用可能以前都没有考虑过这点
恩
我们在OS中有很多的脚本
为了支持像是越南语 泰语阿拉伯语和印地语
或高或低或兼有
与书写英文所用的基础拉丁字母相比
我们经常会碰到一个错误
就是有人可能把标签的clipsToBounds设为true
它会将两边的文本剪切
这会让布局变得很丑
在那种语言环境下看起来很糟糕
你会丢失重要的语义信息
像是变音符
在这个例子中右边所有词的发音都变了
当你像这样剪切它们的时候
想要修复它很容易
如果有标签的话不要将clipsToBounds设为true
这样就能解决这个问题
更有趣的是 如果你有个多行的标签
你也需要考虑行内间距
我们来看下这里
左侧有印地语 而右侧有英语
抱歉这里弄反了是英文在左边 印地语在右边
不过
看看如果我们挤占的话会怎么样
将印地语挤占到跟英语有着相同的竖直空间
这看起来很难认
任何一个印地语读者都会告诉你
这简直太难读了 看起来一点都不好
因此你要做的就是
给予每个脚本充足的空间
使其在屏幕看起来既美观又易读
好消息是这很容易实现
当你用多行标签的时候
其实大部分情况都是默认的不过你还是确认
你正确设置了定制的字体
也就是你通过UI字体API获得了想要的字体
你也许会说
我有一个定制字体但是我用不了
这其实是可以解决的 你应该
你应该看下周三关于字体和排版的讲座
它深入的讲了如何保证
定制字体如何贴合动态类型
接下来对于table views我们所做的很巧妙
如果你所选的语言是带有较高的书写字母
我们会把表格的行高给调大
比起其在其他语言中的效果 像是英语
这是给了书写字母足够的空间
这会让那些语言整体看上去更加自然
要发挥这个优势的话你要在代码中使用
标准UITableViewCell风格
你可能会说 我用的是定制的cell
这样就不能正常工作了
这可不是有个标签就能实现的
它不像你想的那么简单
好吧
我同意 不过
至少我发现若你使用UITableViewCell
它是可高度定制化的
它有很多的过载方法可供你使用
总能得到你想要的外观效果
所以先试试它吧在你实现一个完全定制的
UITableViewCell之前
我想介绍的小的代码改进就是这么多
它们会让你的应用面向国际用户时表现更加出色
让我们谈一些别的吧更抽象 更以设计为基础的东西
还有些从心理层面你要记住的东西
继而做出很棒的应用
首先就是图标学
当你进入App Store想要找一款应用时
头一个你会注意到的东西就是图标
很多时候 至少对于我来说
如果图标不好看我就不会买因为它会显示在我的主屏幕上
我可不想在那显示一个不好看的应用
所以图标是很重要的
还有一点也很重要就是你所选择的图标
要对于不同的语言都适用
还有对于不同布局方向的语言
不管是从左向右的还是从右向左的
Photos有一个不错的图标
这就是一个不错的图标案例
它不包含文字或者数字使其拘泥于某种特定的语言
它也没有从左往右或是从右往左的方向性
所以它在日语 英语阿拉伯语下都表现出色
如果你要做一个从右向左的本地化
而且你想保证你的UI看起来不错
对于从右向左的语言来说
你就得检查一下你所用的插图
如果你所使用的插图是带有方向性的
你需要把它变为适配从右向左语言的
你可能需要创造专门的插图
为从右向左的语言来使用
这里有个例子是你不能直接水平翻转这个插图
如果你要用从右向左语言的话你需要创作专门的插图
不过如果你有只需要翻转的插图的话
有一个API可以实现
而你就不需要再单独做一张插图了
对此更多的信息
在“国际用户界面的新特性”的会话中有
这个会话将在周五举行但是关键是资源目录
另一个你可能想到 可能想不到的
是你应用的名字
当你看全世界不同的App Store时
我们最习以为常的就是
用户更喜欢买的应用
就是用母语写的应用
这点对于应用的名字来说同样适用
因为如果他们能够一目了然的
通过一行应用的名字和描述就知道这个应用是干什么用的
那他们就更有可能
点进应用界面去看一下
当然了 这个世界
全世界用户越来越会多种语言
或者他们至少会双语
因此你的应用不应该假设
UI所用的语言以及其与内容的关联
用户所输入的
例如 一个常见的例子是
像亚洲的国家 比如印度和东南亚地区
人们会把手机语言设为英文
但是他们也会用当地语言写成的内容
就像是本例子中的印地语
因此当你的应用运行在英文环境时
不要想当然的认为用户会输入英文
特别是要用中文和日文键盘来测试你的应用
确保其是正常工作的
在此我想给你们展示一个应用
我们觉得完全证明我刚才所说的
那就是Evernote
首先你看下程序图标
它没有任何的字母 符号或是其他什么
可能与单一语种有关联的东西
这很不错
他们还将应用的名字本地化成了中文
如果你讲中文的话
你就会发现他们做了一个很棒的双关语
因为他们所选择的中文词汇
同时也包含了他们的图标中象这个字
这挺酷的
你会发现他们也本地化了程序截图
这些截图做的非常的细致
例如你会发现 在这张本地化的截图中
他们要创建一个note
屏幕上显示的是中文键盘
所以用户所看到的
从截图中所看到就是他们能得到的当他们下载这个应用的时候
而这正是用户所希望看到的
所以充分利用这些优势吧你可以上传
本地化的名字 描述 截图到App Store
最后 我想要谈下惊喜和亮点
你想做出伟大产品的加分项
为使用特定语言的人
或是特定国家的人
我会举几个例子
一个就是如果你有任何预定义的内容
像是模板和页面
你就可以创建
不同的定制化内容来给不同的语言
例如 在Pages中
你有针对几种语言定制的卡片模板
我要举的另外一个例子是
对于更高级的特性 假如说你要支持
你要做个日历应用 你想把它做好
专门给中东和大量的亚洲国家使用
像是使用农历的中国
你就可以支持农历显示
在你的日历应用中就如iOS和OS X所做的那样
因为这样做会给那些用户带来更加丰富的用户体验
你能改进的地方取决于你的应用是做什么的
你需要审视一下你自己的应用
来看看你能在哪里给用户带来惊喜
这就是我今天想说的全部内容
总结一下就是
本地化你的应用
使用标准系统API如Formatter和Bundle
确保应用的布局是具有灵活性的
让不同的语言完美的工作不管是有更短翻译
更长翻译
标准尺寸 不标准尺寸英文的书写字母
还是更高的书写字母
当为你的应用设计图标时
要确保它是基于世界的设计
不要太为某个特定语言服务
最后
恰当的本地化你的应用名称
还有截图
更多的内容 你可以点击这条链接
来获得其它有用的链接
关于国际化和本地化的
还有其他一些很酷的讲座
就是我在演讲中提到过的
例如“国际用户界面的新特性”
还有“自动布局的新特性”
还有一个我想特别提一下的是内嵌式应用设计
它讲的都是我最后提到的那些内容
如何考虑包容性设计因素
既是为了国际化
也是为了需要特殊支持的用户
要说的就是这些了
非常感谢