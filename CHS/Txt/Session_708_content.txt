高级通知推送 演讲708
早上好
欢迎来到“高级通知推送”
我是Michele今天我们的话题
包括在iOS X系统上的新通知
我们会从新通知的用户界面开始
我们会先介绍一下本次演讲的大致内容然后会讲iOS X系统中的改动
之后我们会介绍如何把媒体附件
插入新通知我们会给大家介绍
如何在新的iOS X系统通知中定制用户界面
我们先来聊一聊用户界面的概况
iOS X的用户通知设计十分精美
大家可以看到这个锁屏界面
看这动画制作以及抬起唤醒
这个是横幅
可以看出相比以往版本可读性更高了
里面的内容量也更大了
上面显示了标题 副标题这个是Notification Center
在这三个不同模块里每一条通知样式相同
在iOS 8中 我们引入了动作通知
你可以给通知添加动作
互动性也因此变得更高
也让用户处理推送消息更快捷方便
我们在iOS 9引入了快速回复来增强可操作通知
这项功能使用户通过在推送消息中输入
用文字来回复
在iOS X推送功能比以往更加强大
因为现在推送功能对我们的设备而言更加重要
因为我们每时每刻都在使用推送
它是我们与设备互动的重要方式
同时也是用户与你的应用互动的重要方式
所以在iOS X系统中你可以点击一条推送消息
消息栏会展开
显示更具体且有针对性的用户界面
针对你的应用为你的内容服务
它显示更多细节对用户来说更实用
用户可以点击不同操作
用户界面会更新且显示出变化
以及操作的结果
日历就是一个简单的例子
还有“找朋友”
当你的朋友跟你共享位置
你可以立即在推送中看到他们的位置
你就可以估计这次会面他们会迟到多久
还有用于“照片分享”的通知
当你在iCloud上分享一张照片时你可以直接看到这张照片
在推送栏中 而不用打开应用
你还可以点赞或者回复而不用打开应用
专门查看那张照片
最后 消息
这还不是所有的
从iOS 8起 消息开始支持快速回复
但每次只能看到一条消息而且也只能回复一条
现在你可以看到整个对话
当你打开通知回复
你可以等待朋友的回复也可以发送更多消息
这就是新版的iOS X中通知的力量
但是如果这就完了的话
我就不用在这里站半个小时了
并给你演示iOS X里所有新通知了
所以我今天想介绍给大家最重要的功能是
刚才我演示的所有那些
都是用iOS X中我们扩展的新的API实现的
你也同样可以像我们这样做到这些
并把所有这些功能添加到你自己的应用和通知中
第一个可以做的是媒体附件
媒体附件
我从朋友那里最经常收到的通知
是他们分享的照片或视频
所以很重要的是把这些内容
这些已经分享的内容放到通知中
以便能更快看到
而不用打开应用下载
不过这样做的问题是 你也知道
推送通知是通过推送负载消息来传送的
尽管我们去年将大小增到了4KB
这依然远不够发送一整张照片
即使添加到通知的是很小的一张照片
我们该如何解决呢？
我们使用新的服务扩展
在今天早些时候的演讲中介绍过
从服务扩展下载附件时
你需要先将通知设为可变的
就像这里的消息负载
我发送一个可变的内容标注然后添加一个引用
指向需要推送的附件
在这个例子里我用了一个简单的链接
你也可以使用一个标识符
只要你的程序知道如何从你的服务器中下载即可
做完这些后
推送成功发送到设备
系统会自动运行你的服务扩展
在服务扩展中
你可以通过各种方式下载附件
比如你可以使用URL会话
这样系统就可以帮你管理资源
随后通知就会和附件一起被推送到设备
我们来看看一小段关于如何实现的代码
这只是服务扩展最基本的一个例子
在最上方 我实现了didReceive请求
withContentHandler
它会在收到通知时被调用
然后就要下载附件了
我可以使用URL会话下载附件
或其它你喜欢的技术
当文件下载到本地时
我可以创建一个通知附件对象
创建完成后把它添加到通知的内容里
然后传给系统 准备发送给用户
完成这些之后 这就是我的通知
附带精美的图片用户可以直接看到
而不需等待下载或者打开应用
而且你可以看到 通知附件
同样支持可操作通知
你可以直接在这里点赞或评论
媒体附件 简单回顾一下
它支持本地或远程通知
我们只谈到了本地的
我们只谈了远程的 因为本地的简单
你只需创建通知附件对象
在安排通知时创建 就可以了
附件支持图片 音频 或者视频
系统会为这三种类型提供可自定义的UI
你需要在服务扩展中下载附件
但是一定要记住
服务扩展的运行时间是有限制的
附件大小也是有限制的
因为它们的目的是和通知一起发送
而不是为了把完整内容发送给用户
你可能希望发送一个缩小版的图片
然后让用户打开应用下载高清图片
或者你也可以发送一个短的视频剪辑
如果发送的是视频内容
然后让用户打开程序来下载完整视频
当你下载它时 把它添加到通知
这时系统会接管
帮你管理这个文件
你不用操心这个文件
系统会把它放到一个单独的区域
处理所有数据
哦对 我差点忘记了
当然了 我们支持GIF格式
附件功能非常棒
并且为通知提供了丰富的界面
最开始的时候我说过你可以实现所有的
所有我演示过的新的通知功能
以及日历 消息
它们肯定不用附件
它们用的是自定义用户界面
这就是我们现在要说的
创建自定义用户操作界面时
你要用到我们给标准通知添加的第二个扩展点
它就是NotificationContentExtension
NotificationContentExtension允许你
添加自己的自定义视图
你可以随心所欲地设计
但是最重要的限制在于
你的视图是不可交互的
它不接受点击事件 用户不能点击
但是通知依然是可交互的因为你可以使用通知动作
扩展可以处理这些动作
我们一会儿会演示如何做到
自定义用户界面
我说过我们可以实现
和系统相同的功能
我们先看看日历的行为
然后再来看我们如何模仿
这是一个日历通知
在最上方有一个页眉
页眉上有通知图标点击它会打开应用
应用名和关闭按钮
这是系统为所有类型通知提供的标准UI
页眉下方是自定义内容
这是你的通知扩展存在的地方
是你绘制内容的地方
显示所有你希望用户看到的细节
在它们下面
是系统显示的默认内容
和负载一起发送的内容
它是iOS 9之前版本通知里的可见信息
在最下方
是通知中用户可点击和交互的动作
用户点击后 用户界面会更新
显示操作结果
来看看我们自己怎么实现
通知内容扩展
首先以派对邀请为例
派对很有趣 我们周四就有对吧？
这是要展示的基本通知
当你推送通知用户就会看到它
和你期待的很像
咱们看看如何扩展
让它显示我们想要的自定义界面
首先要做的是
在你的应用里添加新的目标
通过使用Xcode提供的模板
NotificationContentExtension模板
这个模板会在新目标里创建三个文件
一个视图控制器主界面的StoryBoard
以及info.plist你可以在它里面自定义扩展
这是NotificationContentExtension的视图控制器
如你所见它不过是一个UI视图控制器的子类
就是你熟悉的普通视图控制器
它还实现了NotificationContentExtension协议
通过它系统就会知道
你想把这个视图控制器应用于通知
这个协议只有一个强制方法
这个强制方法是didReceive notification
如你所见
这个方法
会和视图控制器的生命周期方法一起被调用
在通知被发送出去
发送到扩展的时候
所以当用户展开通知
你会接收到所有视图控制器的调用
以及额外的这个方法
所以你可以接收通知对象
更新UI 显示不同的东西
下一步是告诉系统
如何找到你的内容扩展
内容扩展使用的通知类别
和你用来注册通知动作的相同
在这个例子里我使用的是event-invite
为我的派对邀请函
扩展也可以关联
多个类型 以便你想把同样的UI
应用到类型不同但界面类似的通知
在这个例子里 我使用的是event-invite或event-update
它们的UI非常相似
我可以使用不同的种类因为它们的动作不同
我都设置好了
我有了视图控制器
现在我想添加些自定义视图绘制我自己的UI
这是个视图控制器我在Storyboard里加入了一些标签
我在此没把标签显示出来
收到通知时 我从内容中抽取信息
获取我需要的信息 然后设置内容
设置我刚刚创建的标签
你可以看到 我还有些自定义信息
而不只有随负载传递的标准信息
因为我想展示些负载的标准信息之外的内容
在这个例子里 我展示了位置
因为知道派对在哪儿至关重要
这就是我的通知了
可以看到 有一些自定义内容
我用不同风格的自定义标签绘制了自己的UI
但这个通知有两个问题
第一个是内容区域太大
我不需要那么多空间 全都是空的
我需要展示的内容小得多
第二个问题就是默认内容重复了
我并不需要它因为已经展示过了
同样的信息在我自定义样式的最上方
这两个问题都可以解决
我们先解决第二个因为它更简单
这是你info.plist里一个附加属性
你可以把隐藏默认信息
设置为“是”这样就看不到默认信息了
系统不会再添加
第二个问题是我的通知尺寸
但因为这只是视图控制器的问题
我可以像重设视图控制器尺寸一样重设通知尺寸
在这个例子中 我重设内容大小
你也可以抛开布局设置约束
你也可以用Storyboard两个方法都可行
处理完这两个问题之后
我的推送就是这个样子
看起来好了不少
大小正合适
没有重复内容
但你发现新问题了吗？
通知刚出现时尺寸不对
所以系统不得不显示动画并重设通知大小
让它达到合适的尺寸
我再来演示一遍
看到了吗？我们可以改进它
发生这个的原因在于系统需要知道
最终展示的通知尺寸在一开始显示时就要知道
这样动画才会正常
但你的扩展还没有加载
当系统开始显示通知的时候
所以你需要提前告诉系统
你最终想要的尺寸在你的代码运行之前
问题在于这些通知
运行在不同设备上环境不同尺寸不同
所以我们的解决方法就是设定内容尺寸比例
这里定义了长宽比
你希望把它应用于内容部分
但是 当然了这个办法并不一定可行
因为不同内容的尺寸不同
你不知道接收的内容会是什么
但你依然需要显示所有内容
所以有的时候这个方法不可行
但是如果你可以找到适用于你的通知的尺寸的话
用这个方法足矣
使用这个方法后的结果
就是现在这个新的通知
它从展示最初就是合适的尺寸
回顾一下刚才的内容
我们想创建自定义通知UI
我们从自定义UI开始
非常基础但包括了我所有的自定义内容
还包括了负载以外的附加信息
但是尺寸不对
所以我们修改了显示尺寸通过设置初始长宽比
然后我们解决了重复内容
通过设置隐藏默认信息标志
从最初到现在这个样子
这看起来比最初好得多
仍然不算完美但是我今天确实打算
接着改进它
我还知道另一个让通知看起来更好的技巧
我们可以添加图片
图片总是好的尤其是发派对邀请函的时候
同样我们使用媒体附件
就是在NotificationContentExtensions里用过的
因为它们会被添加到通知内容里去
你可以在内容扩展里看到它们
所以当你收到通知的时候
在didReceive:notification方法里
你可以从内容中抽取附件
我刚才说过
附件是系统管理的
被移动到了一个单独的区域
所以你是访问不到的
所以你需要告诉系统你想开始使用它
并告诉系统什么时候完成
当你可以访问了就如同文件一样使用
在这个例子里我要把它加到图片视图中
这就是我现在的通知
你能看出这个人准备来派对了
比最初的好多了
而且是我们的自定义UI
我们想让用户看到额外信息
就添加了它们
我们想添加图片也做到了
现在我们就差最后一步了
我们想让它具有交互性
我们想实现动作
我们现在就做
动作
默认动作在默认情况下的工作方式
和你在iOS 8里用的一样
它们会传送给应用当用户点击按钮之后
应用会接收到请求
然后这条推送就立即关闭了
非常方便 因为这种行为
你经常会用到实现起来也很简单
但有时 你想让用户知道动作的结果
就像刚才的日历邀请例子里那样
就是当用户点接受之后
内容里会高亮显示我接受的邀请
你可以在NotificationContentExtensions里做到
你需要在通知扩展里拦截这个动作
之后动作会传给扩展
它可以决定延迟通知的关闭
这样就有时间处理动作 更新UI
结束之后再关闭
这很简单
你通过NotificationContentExtension协议中的第二个方法
这个办法是可选的
你不必实现它
如果你不需要拦截动作的话
但如果你确定要实现它
那你就要自己处理所有动作
通知里的全部动作
你不能只管其一不管别的
当你收到通知时
你可以给服务器发送一条回应
更新服务器上的信息
当收到来自服务器的回应
你需要更新UI 表示用户会参加派对这是当然的啦
完成之后 你就可以关闭通知了
这样界面就在关闭之前得到了更新
如果你想把动作转发给应用的话
也是可以的
如果你需要进行额外处理
或者你想要把代码集中到一起
你只需使用不同参数调用completionHandler
我们这样做话 当我们收到推送
点击它 然后可以更新UI
然后再关闭
你在我的示例代码中也看到了
我们实现了接受和拒绝两个动作
最下方还有第三个动作
因为有时当你回复派对邀请你想要知道
我们想告诉你的朋友能去参加有多兴奋
或者不能去参加有多遗憾
你可以点击评论按钮
文字输入动作
评论动作是文字输入动作
就像我们在iOS 9引入的那个
用法是一样的
除了全新的非常棒的构架
这一个文字输入动作
它的新一点的API
你可以在文本区设置占位符
当你创建动作时你可以把它加入到你的类别里
这样它就会和通知一起显示了
所以当用户点击评论按钮时
文字会显示出来
由于它是个动作 和其它一样
你可以以同样方式处理
你可以在你的扩展里拦截它
在那里进行处理
下面是做法
你收到通知
你检查看它是不是文字输入动作
你抽取用户输入的文字并发送到服务器
结束之后 关闭通知
流程就是这样
你点击 然后打字
这个通知也有个需要处理的问题
我想要回复邀请但是上面只有一个发送按钮
我没法选择是接受还是拒绝
我们想要保留文本区
但同时增加两个按键这样我就可以选择是接受还是拒绝
比如这样
可以吗？
没有新的API能做到这一点
没有新的API是因为已有的就可以做到
你可以使用已有的UIKit自定义输入辅助视图API
给通知中的文字区添加自己的自定义视图
为了做到这一点首先要做的是
确保你的控制器可以成为第一响应器
这会让UIKit系统知道
它是事件响应链中的一环同时也让通知系统知道
你不想使用默认的文字区
然后你创建一个自定义的inputAccessoryView
在这个例子里我添加了一个文本区和两个按钮
然后当我接收到用户的回复也就是动作
来自用户的评论动作
我可以将它设置成第一响应器这样我的文字区
以及键盘就都出现了
这两个调用都要进行
因为第一个把视图控制器设置成第一响应器
这样文字区就显示出来了
第二个将文字区设置成第一响应器
这样键盘也显示出来了
你会发现在这个例子中
我不关心它是否是可编辑的动作
你可以使用常规操作
因为我会从自己的inputAccessoryView中获取来自用户文本
所以我可以访问那个UI
这样做的结果就是当你点击评论之后
你可以输入你的回复
同时还能同意或拒绝这次邀请
关于NotificationContentExtensions今天就说这么多
还有一些别的小API
若有兴趣 可在这周稍后的实验室与我们探讨
我们今天讲了如何在自定义UI中使用附件
在iOS X系统中的通知内容扩展中
我们学习了如何下载以及在通知中插入附件
通过使用服务扩展程序
我们了解了如何自定义UI彻底自定义UI
使用内容扩展加入你的特别内容
可以使用媒体附件也可以处理用户的交互
想了解更多的话有一个专门有关这次演讲的网页
今天早些时候我们办了另一场演讲没有参加的话建议看看
了解更多新用户通知框架
以及更多的有关服务扩展的细节
谢谢