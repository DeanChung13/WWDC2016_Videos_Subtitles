在网页中使用Apple Pay
大家好
欢迎回来参加去年Apple Pay会议的人
我是Nick
今天我与同事Anders会在这里
我们将会讲述一个新的特性
在网页中使用Apple Pay
首先 我想先问大家一个问题
你们当中有多少人举起你们的手或者对着屏幕喊出来
如果你在楼下或者在线观看的话
你们当中有多少人尝试过网上购物
但是发现过程太复杂然后放弃了购物
我看到了很多人举手了
毫无疑问 这是一个大问题
这是我昨天访问的一个网站非常的传统
无视这名字Honest Bob他是一个很棒的家伙
但他在结账的时候遇到了一些困扰
为了举例我将我的名字改变一下
改成了Johnny Appleseed避免重名
然后我开始输入卡号
获得了令人迷惑的错误信息
提示说卡号必须是一连串的数字
这样我就会心里想我觉得没有空格是错误的
并且我的卡上就是有空格的
于是我做了修改
然后我又得到了一个错误信息比较明显 月份不符合
而不是提示我没有选择月份
这样很令人困扰
希望大家不会遇到像这样糟糕的场景
但是因特网支付真的还非常的落后
且我们希望能解决这种问题
认为可通过Apple Pay解决这种问题
并且我们今天将会讲述
如何解决这些问题
可以通过在网页中使用良好的接口
及Apple Pay带来的好处
我们将会讲到很多内容让我们首先开始做一个介绍
我们将会通过一些事例来讲述Apple Pay
你们可能还不熟悉它还不了解它能做什么
然后我们会讲述一些具体的API
我们将这些新JavaScriptAPI添加进了Safari
然后我们会讲述支付处理的过程以及如何获得付款
最后是关于Apple Pay的设计
如何让你的网站变的出众而且实用
及拥有比较好的Apple Pay体验
所以 让我们开始吧
Apple Pay是什么？
希望你们大多数人都比较熟悉Apple Pay
它是一种简单安全以及私密的支付方式
你可以在商店中使用
也可以在iOS应用中使用
也许你们已试过了若没有 请放心的去尝试一下
有很多非常好的应用比如Lyft Uber DoorDash
即便在参加会议 你也可以使用它们
且应用中的Apple Pay提供了
一流的商业体验
这些应用真的非常突出
现在已经有非常多的应用采用了Apple Pay
它们在世界范围内得到了使用在中国 英国以及美国
这些应用有着良好的发展
它们看上去有着更高的转化率
那些使用Apple Pay的用户
有着更高的消费倾向
并且再次消费的概率也更高
在消费之外 他们也会花费更多的时间
在这些应用上
最后 这些用户会感到更加快乐
Apple Pay用户满意度最高的
支付手段之一
它非常好用所以用户喜欢它
Apple Pay在应用中表现优秀但我觉得应该需要注意的是
大量的电子商务
没有发生在应用当中
应用是很好的我喜欢各种应用
但是部分人仍然会在网页上进行支付
绝大部分情况下 在网页上进行的支付是非常缓慢的
是很繁琐的并且也不透明
每一个商户的付款流程都不一样
同样 每个网站付款流程也不一样
现在我们正在尝试解决这个问题
我们正通过向更多的场景以及更多的人引入Apple Pay来解决这问题
我们称之为Apple Pay Everywhere
我们现在主要在三个地方引入Apple Pay
第一是WatchKit
你可能在昨天的主题中已经见过了
且Kevin已提到过把Apple Pay引入到WatchKit的应用中
当然我们也会在所有的新扩展中引入Apple Pay
就像你看过的那些：SiriKit地图以及信息
但最大的场景也就是你们今天来这的理由
是网络和Safari
我们稍后会讨论WatchKit以及扩展
那将是下个会议的主题
若你喜欢我的嗓音待会继续留在这里就好了
现在让我们关于Safari
让我们关注在网页上使用Apple Pay
前面我已经谈论了当今的电子商务有多么糟糕
然而非常多的商品都是通过网页销售的
但是支付流程却很冗长它们太复杂了
以致于很难使用
手机上这个问题更严重
因为屏幕更小但是繁琐的流程并没有减少
用户会希望在网页上有着与应用一样的体验
使用起来非常简便
并且在安全与隐私方面也没有区别
有多少人不得不去办理一张新的卡片
因为一封邮件告诉你你曾经在上面买过东西的网站
早在三年前就已经被黑掉了
我就有过这种经历
然而Apple Pay可避免这种事情发生
且通过网页上使用Apple Pay功能
已可支持任何带Apple Pay的设备
也就是iPhone与iPad
并可通过Safari或者SafariViewController来使用它
它与现有的Apple Pay体验是一样的只不过形式是通过网页而已
同样的UI界面同样的使用方式
若你熟悉应用中的Apple Pay
你会感觉有熟悉的感觉
但是需要注意的是
这些设备并没有包括台式机
现在在一些国家 比如中国手机电子商务
已是主流的电子商务方式了
但是在美国大部分人还是习惯于
通过台式电脑来买东西
你可能是通过Mac电脑购买了 WWDC 门票
我们认为Apple Pay应该可以在任何地方使用
我们在Mac OS Sierra中引入Apple Pay
你们可在Mac电脑上通过Apple Pay支付了
并且具有同样的安全性
与在你的iPhone或者Apple Watch使用Apple Pay的情况相比话
你可以简单的触摸一下就可以进行授权了
这样用起来非常的简单与直接
它支持在任何使用Handoff的Mac上使用
并且操作系统需要是Mac OS Sierra
这对于四年内销售的Mac电脑都不是问题
Safari浏览器是完全支持Apple Pay的
你可以在手机上通过授权来进行支付
在Apple Watch也是一样
因为Mac OS上使用Apple Pay是非常快速的
可能有人之前没有看过我们昨天的演示
现在我来展示另外一个演示
不用担心这次演示会很快
让我们转到这里来
在左边 我访问了一个网站
在右边是一部iPhone手机
现在Craig通过网络预定了一些门票
好在周四去观看海底总动员
让我修改一下日期 改到周五我们会和他一起去
我会和十个工程师一起去他们是我的同事
好 向Craig打招呼
好了 让我来点击下Apple Pay来进行支付
这一切都是即时发生的
让我们来再做一次这次我会取消它
可以看到 当我取消了之后在我的手机上也自动的取消了
当我点击Apple Pay支付按钮的时候
一切都是立刻发生的
它立刻出现了
然后在我的手机上进行了Touch ID的匹配
这样就完成了
几秒内完成了整个支付
在这两个设备之间反应都是即时的
然后我获得了一个消息告知我完成了一次支付
在Mac OS上使用Apple Pay就这么简单和快速
这个过程真的非常快速
希望我说服了你们Apple Pay是那么优秀
让我们讲述一下在网页上集成Apple Pay的细节
在我们讨论网页API之前
让我们来简单看一下Apple Pay的基本知识
因为很多人还没将Apple Pay集成到应用之中的经历
可能有人是一个纯粹的网页端开发者
Apple Pay提供具有唯一性的支付token给你
你将这个token发送给网银平台比如Stripe
比如Braintree还有Chase Paymentech
对于一次交易来说token是唯一的
该token只能使用一次
若需多次交易同样需请求相应数量token
无论你在应用或者网页上使用Apple Pay
t对商家来说token都是唯一的
token经过加密
即便token被盗取了
比如用户处于一个不安全的Wifi连接的时候
这个token仍然是安全的
因为它使用了商户的证书以及商户的标识符进行了加密的编码
商户的标识符
以及商户的证书能够代表你是一个商户
它们比较像标准的反向域名解析
如果你是一个iOS开发者你会非常熟悉这种格式
它们是通过我们的开发者中心生成的
并且是唯一的
因为只有你能够解码这些tokens
只有你才能读取用户Apple Pay的token
让我们来看一下在实际的应用中是什么样的工作流程
在一个iOS的应用中
当Apple Pay按钮点击后就开始了用Apple Pay的支付
当点击了Apple Pay按钮之后
iOS系统允许了这次支付
然后出现了Apple Pay表单页面
然后用户使用Touch ID或者密码
这样支付信息会通过手机的安全信息单元芯片产生
这些芯片专门为Apple Pay打造
能够安全持有你的银行卡信息
然后你的手机会做什么呢
它会把数据发送给苹果的服务器
服务端重新包装这些数据该处理过程为Rewrap
也就到时候对于商户来说这些数据是再次加密过的
该处理过程不会显示在手机
当应用获取再次加密的支付数据的时候它同时可以进行一个回调操作
然后你就可以连接商户的服务器
或者网银支付的服务器
只要交易完成了 表单就会关闭
在网页上使用Apple Pay与此非常类似
稍有几处不同
发生在与验证商户有关的地方
因为在iOS中应用都是从App Store上获取的
它们是已签名二进制文件
在我们继续讨论这些之前先让我们来看一下
Apple Pay的一些要求
任何网站都可使用Apple Pay
前提是需要拥有一个苹果开发者帐号
并且站点需要支持HTTPS
最后 站点需要遵守Apple Pay的指导方针
这些指导方针都非常的明确
大多数的网银平台都有着相关的条款
关于那些商品可进行出售那些商品禁止出售
现在已经有一些电子商务平台
已支持Apple Pay
我们还将会谈到一些具体的电子商务平台
的网银支付处理
如果你已经加入了某个电子商务平台
你就不需要一个开发者帐户了
它可以帮你处理这些
假设你的站点符合所有的要求
那么为了使用Apple Pay首先需要为你的站点注册
为你的站点注册是非常简单的
你只需要在开发者中心创建一个商户标识符以及证书
然后注册你的域名
并且让它与商户标识符对应
域名需要是全称
比如store.apple.com
你想在哪站点支付就需要填写相应的域名
当你通过域名注册之后我们会前往该域名进行验证
然后你会获得一个证书
一个苹果公司发行的TLS证书
我们称之为Session证书我需要重新说一下
在注册Apple Pay中使用了三种信息
商户表识符以及商户证书
通过这两项证明我们商户的身份
然后还有Apple Pay的Session证书
代表了我们的域名
在开发者中心注册Apple Pay非常简单和直接
应该现在就已经可以注册了就像这样做
首先添加一个域名
然后我们会检查这个域名上
是否有我们要求放置的文件
这样就可以了
来看一下它为什么更适合使用
让我们来看看在网页上使用Apple Pay的流程
就像在应用中使用Apple Pay一样
首先需要点击进行Apple Pay支付的按钮
在网页上有一个关键的地方不同
当你创建了一个支付请求的时候
也就是通知我们你想对什么收费
然后有一些额外的处理
需要进行一次验证你创建了一个商户的session
然后从你的网页服务器发送到了Apple服务器
当Apple服务器有响应时
你再将这个支付请求发送给Apple服务器
这就是唯一的区别了
这是与在应用中进行Apple Pay相比
在网页中进行Apple Pay的唯一的区别了
商户有效性验证
让我们看下商户验证的细节
让我们来谈下为什么我们要这么做
我在一分钟前提过
那就是网页与应用之间有一些不同之处
在iOS应用中
类似Apple Pay或位置安全性被签署授权所保护着
如果你对此不是很熟悉
签署授权就是 App Store中你应用的二进制文件部分签名信息
签署授权同时保护着用户和开发者
以及Apple Pay中的商户
我们需要注意的是在网页上并不存在app store
所以我们并没有这些签署授权
我们使用了一个商户验证的处理用替代签署授权
它保护了用户也同时保护了像你一样的商户
举例来说如果你的网站被攻破了
你可方便停掉该站点Apple Pay
商户验证非常的简单和直接
它并不复杂
你拿到一个Apple Pay服务器的URL
这个URL是Safari提供的
你让你的网页服务器使用这个URL
在请求商户的session中会用到
现在开始请求商户的session
你需简单提供一TLS证书这证书是我们之前为网站域名得到的
这是个有挑战的回应
如果这个证书看上去很好是有效的
并且它与这个域名匹配
就是你提交支付请求网站对应的域名
我们会收到一个session
这个session中的内容无法获得
你们不需要关注它的内容
它是一个具有唯一性的token
代表了一次Apple Pay的请求
它被用来确认你的网站依然是安全的
每一次的Apple Pay你都需要请求一次session
但是这种请求的开销比较少
且这过程不会占用太多的时间
在你会通过你的网页服务器来请求它
你并不是从你的用户那里来获得它
对于商户效验我有一些建议
首先 让客户端发出获得session的请求
因为请求速度可能会有比较大的差别
取决于用户所在的国家
Apple Pay有很多服务器部署在世界各地
我们会使用
离用户当前位置最近的服务器
对于有些人来说
需要预先知道这些服务器的IP地址
用来让连接通过防火墙
我们会提供一份列表
放置在developmentalapple.com上这样你们就能看到了
你应该只请求一次session
当用户点击Apple Pay按钮时
别在加载页面时就请求那样是没有必要的
只需在用户点击了相应按钮后才去请求session
当请求session时我们会展示Apple Pay表单
用户会觉得这种情况是即时出现的
当他们点击了Apple Pay按钮后
他们会看到这个表单我们也会让它处于加载状态
直到效验完成
在下个部分你们会看这些如何工作
即在我们讲述JavaScript API时
最后一个建议 别在客户端生成一个商户的session
这是因为你需要提供一个session证书
而这个证书与你的域名对应
你是不想把这证书也嵌入到你的网页页面中的
将这个证书保密是很重要的
因此你会在网页服务端来进行这种验证
好吧 让我们来概述一下
我们先需建立个网站
我们需要保证我们的网站遵守Apple的要求
我们创建了虚拟的标识符以及商户证书
我们将它与我们的域名相对应
然后我们了解到了如何进行验证
如何为每一个Apple Pay支付进行效验
所以说这样覆盖了部分同样的流程
这个部分是什么？
就是我说过的与应用中使用Apple Pay相一致的部分
但显然它们是不同的API
因为我们无法在服务端调用Swift
所以接下来我们会谈论到
如何用JavaScript API来支持这个新特性
下面请Anders来进行介绍
他是WebKit团队中的一员
Anders
谢谢 Nick
今天在这里我非常的兴奋
我会告诉大家使用Apple PayJavaScript API多简单
Nick已提到过Apple PayJavaScript API
已可以在iOS 10的Safari中
和那些通过SafariViewController的应用中使用
现通过Mac OS Sierra系统可让你在Mac的safari中使用Apple Pay
同时需要使用AppleWatch或者iPhone
来进行实际的授权
这些API非常的简单
它有一个单一的入口叫做ApplePaySession
它受到了PassKit API影响只是将场景切换到了应用中使用Apple Pay下
如果你熟悉PassKit API那么你会发现两者很类似
在我们进行深入的了解之前
我需要介绍一个朋友先
她经营了一个商店
售卖高端的衣服
这些衣服是给狗穿的
在几个月之前她运行了一个网站
在上面可以买衣服
你可以在网上进行支付
然后店家就会发货了
但是不幸的是现在这个生意有个困境
有很多人访问这个网站
但是却没有多少订单
让我们来看下这个网站
找一下原因
这就是我们的网站了
比如我们想买一条可爱的围巾
首先将它添加到购物车里面
然后我需要去付款
这时候打开付款的页面
输入收货地址
这时候到信用卡这一栏了
输入信用卡号以及账单地址
然后我就可以提交订单然后我的围巾也就会被运送了
让我们看一下应该如何使用Apple Pay API
让这个流程变得更加简单合理
举例来说如果我们为购物车增加一个
Apple Pay的按钮
那样在产品页面就可以下单了
现在我们想增加这个按钮
但仅限那些能够使用Apple Pay的用户
为了做成那样
我们可以使用函数ApplePaySession.canMakePayments
这是一个用起来非常简便的函数
在代码中它看起来是这样的
注意 我检查了当前的window.ApplePaySession
在使用之前需要进行这样的检查
我不是检查WebKit或者Safari的版本
我是在检查window.ApplePaySession对象是否存在
如果它存在的话我就会调用它
它会返回一个Boolean然后我会检查这个值
如果返回true我就调用showApplePayButtons
这样显示出相应的按钮
值得注意的是
window.ApplePaySession只会告诉你
这设备是否支持Apple Pay
如果你使用的是iPhone或者iPad
它会返回是否存在一个安全部件的结果
如果你在Mac上使用
它会告诉你
是否存在一个iPhone或者Apple Watch能为这次交易授权
它不会告诉你用户是否已经为Apple Pay添加过银行卡
如果需要检查这一点的话
我们可以使用
ApplePaySession.canMakePaymentsWithActiveCard
你需要传递你的商户标识符给这个函数
然后它会向Apple Pay服务器验证
这个商户标识符是否正确
这个函数自身的属性会关联这个域名
因为你从这个域名发送请求
鉴于此 它是异步执行的并且返回一个JavaScript promise
如你不知道一个JavaScriptpromise是什么
你可以把它当成一个功能更强的
回调处理程序
你使用这个函数的时候还有一些限制
你只能在一些情况下才能使用如支付流程默认用Apple Pay
或者你想在产品页面上就添加一个产品页面按钮
在我们的情况中我们想添加一Apple Pay按钮
放在我们的产品页面上所以我们可以使用这个函数
另外我们可能会使用ApplePaySession.canMakePayments
我们在这里使用了这个函数
我又一次的检查了Apple Pay session对象是否存在
然后调用canMakePaymentsWithActiveCard
我输入了我的商户标识符
然后我使用了这个promise当promise成功后就会执行相应的功能
在这个例子中promise成功后会得到一个BOOL值
我在promise中的代码就会执行
如果canMakePayments返回true那么就会展示ApplePay按钮
现在我们就能看到每一个产品下面都有一个优美的按钮了
下一步就是弹出支付表单
当用户点击了这些按钮的时候
为了做成这样
我们需要创建一个新的ApplePaySessionJavaScript对象
ApplePaySession构造器有两个参数
一个是API版本号
还有一个是我们自定义的
从而让我们可以扩展ApplePaySession API
这样可以向下兼容而不影响当前的用户
这当前的API的版本号是1所以就一直保持1
将支付请求当成第二个参数传入这个请求
如果你较熟悉PassKit API
你会发现这个JavaScript和PKPaymentRequest一样
它会拿到所有必要的信息
来在表单中展示比如货币类型 国家
如何支付以及总金额
还有一些可选项比如收货地址
可能会被要求
然后你就获得了新的ApplePaySession对象
你只需调用Begin命令然后展示表单
就像这样的JavaScript代码
首先我们声明一个paymentRequest对象
然后指明了货币码和国家码
这里我指明了总金额和支持的卡片种类
还有商户的经营范围
最后我指明了需要一个完整的邮编
处于发货的考虑
就我创建了新的ApplePaySession
我传入了商户号的参数这里是1
还有支付请求
在得到返回结果之后我仍然会再次调用sessions
现在使用任何支付的API
我们都去要确保所有的细节是正确的
正因为如此
在我们展示表单之前我们需要进行一系列的验证
如果任何一步出现错误
我们会停止 然后抛出一个JavaScript的异常
正由于此 创建一个Apple Pay session
可能会抛出一个JavaScript异常
举例来说如果你在一个不安全的页面进行调用
比如这个页面不是基于HTTPS的
没有使用最好的编码协议
实际上每个Apple Paysession API
都会抛出异常
如在一个不安全页面上进行调用
创建Apple Paysession也会发生异常
在你没有传入一个有效的支付请求的时候
举例来说你没有指定一个支持的网络列表
或者总金额是负的
或者输入了什么错误的数据我们无法识别
这样都会抛出异常
此外 调用Begin也可能抛出异常
若你不是在一个点击事件处理中调用它举例来说
我们不会允许展示表单
除非用户明确的
点击了按钮
如果已经存在了表单了然后我们又试图去调用Begin
我们也会获得JavaScript异常
因为我们只允许同时只能出现一个表单
如果你看到了这些错误的话
你可以使用网页检查器的错误控制台
来查看错误原因的细节
如果一切都正常
并且所有步骤也正确
那么就会显示这个表单
但是需要注意你现在还没有完成支付
我们看到这里还在加载
因为还没有完成商户的效验
Nick之前提到过这一点
所以在表单出现后
我们会立即发送一个验证商户的DOM事件
向ApplePaySession对象发送
这个DOM事件有一个属性validationURL
你需要让你的服务器能够访问这个URL
然后加载它来获得商户session
然后当你的服务器获得merchantsession对象后
你需要调用completeMerchantValidation
来通过这次验证然后就可以继续了
一次商户验证事件处理就像这样
这里我调用了这个performValidation方法
它是我自己定义的
它返回一个promise这个promise
来获得商户的session
所以当promise成功后
我会调用completeMerchantValidation
传入了商户session的参数
这就是你在商户验证中所做的
现在 我们的商户验证就完成了
用户可以用手机或者Apple Watch
对这次支付授权
当这次支付获得授权之后
我们会向Apple Pay session对象发送一个支付授权通过的DOM事件
这个DOM事件包含了一个支付属性
这个属性含有所有必需的支付信息
它有着诸东西如收货地址
以及其他一些在这次支付会用到的信息
然后它还有加密过的支付token
网银平台会用到这个token
一旦你向网银平台发送了token意味着这次支付就已经处理完毕了
获得网银平台的反馈数据后调用completePayment方法
这个方法同时会让表单在界面上消失就像这样
这里我们就会有一个授权后的事情处理
我调用sendPaymentToken
我将token传入了
这样就会返回一个promise
会通过一个BOOL值来代表
你的支付成功还是失败
如果成功的话
我会将状态设置为ApplePaySession.STATUS_SUCCESS
如果失败了假定这个支付没有完成
那么将状态设置为ApplePaySession.STATUS_FAILURE
 然后我会调用completePayment
我传递了status参数它会关闭sheet
然后我再调用showConfirmation
这样会弹出一个美观的订单确认的页面
调用completePayment传入成功的状态码
你会看一个好看的确认的标记并且表单会从界面上消失
好了 现在让我们来看一下演示
来看一下如何办到这些
我们开始了
首先 我们进入了这个网站
同时让我们看一下源代码
在我们加入JavaScript之前关注一下这些
这里我加了两个触摸用的图标
举例来说在SafariFavorites视图中会用到
它们也可以在Apple Pay授权的表单中使用
我们稍后会看到
这里我列举了所有的产品
之前我们已经为它们增加了Apple Pay按钮
我也可以通过CSS来让它们是否显示
让我们来看一下
这是我的CSS文件
这里是关于Apple Pay按钮的声明
这里我设置让它们不显示
对于它的图片
我使用了WebKit-named-image特效
这样我们可以使用系统自带的Apple Pay的Logo
你并不需在你的服务器上放置这张图片
好了 现在我们需要增加一些代码
让设备支持Apple Pay情况下显示Apple Pay按钮
这里我已经写过一些同样的代码了
我为DOMContentLoaded事件创建了一个EventListener
这个事件会被执行
当主页被加载的时候
但是在任何图片加载之前
所以这个地方适合放置这些代码
让我们来添加一些代码来完成这个功能
我们又检查了ApplePaySession是否存在
然后我调用了canMakePaymentsWithActiveCard
并且在我的promise函数中我检查了返回的值
若返回true调用showApplePayButton
现在让我们保存后再回到这里然后我们开始加载
现在我们就获得了Apple Pay按钮
下一个步骤是点击按钮的时候 弹出sheet
我已经写了一个applePayButtonClicked函数
在用户点击按钮的时候会执行
所以我们想在这里让用户点击按钮之后就显示表单
所以我又声明了paymentRequest对象
这里的金额 我直接硬编码了这毕竟只是个demo
但是在实际的场景中这个数据应该从别的地方获取
我创建了一个新的ApplePaySession对象
然后调用Begin
让我们保存后重新加载并且展示出表单
可以看到表单并没有显示
让我们打开错误控制台来找一下原因
好了 控制台指出
“supportednetwork”并不是一个合法的属性名称
看起来这里是我拼错了"supported"
所以让我们回头解决掉这个问题
然后重新加载
现在表单就可以展示出来了
但是我还不能确认这次支付
因为还没有进行商户的验证
所以让我们来进行这个步骤
我想加入validateMerchant事情处理
我会在这里创建了session后再加入
但是我们会先调用Begin
再一次的调用performValidation
当这个promise获得了处理结果的时候
它会调用completeMerchantValidation我会传入商户的session
然后我就能够确认支付了
现在我们还需要做最后一件事情
那就是添加我们的支付授权代码
我们会向服务器发送支付token
并且完成这次支付
如果我们成功了我会将状态设为SUCCESS
否则我将它设为FAILURE
回调completePayment及showConfirmation
现在我想使用QuickTime
让我们来看一下在真实手机上的表现效果
让我们重新加载我点击了支付按钮
现在我就可以确认了
就像你们看到的那样我还能看到这个网站的图标
那是因为我添加了链接图标的属性
现在我们可以进行支付了然后完成支付
商家会安排发货了
所以为网页添加Apple Pay是非常简单的
我相信如果那样做的话
Canine服饰会在狗狗中流行
该让Nick回到台上了
大家都知道Anders他是WebKit团队中的那位
跟狗天天在一起并且应该被丢进狗屋的人
好了 让我们继续
给我一根骨头吧
我去当软件工程师太浪费了
好了
我们已经看到了如何在网页中支持Apple Pay
让我们来讨论一些可能对你们来说是比较重要的事情
那就是你们如何获得付款
从Apple Pay中获得付款
Anders讲述了获得支付数据的过程
后面会发生什么
因为拥有一个支付token你现在有两个选择
第一个是自己对这个token进行解码
通过你自己的服务器
这是较好的选择对你已使用了Apple Pay
或者你有一个非常大型的电子商务后台
你会熟悉其中加密算法
在我们的开发者网站上有相关的文档
另外一个选择是
将这些加密的支付数据
发送到网银平台然后它们会帮你解码这些支付数据
前提是你将密匙提供给了它们
这是一个比较方便的选择
非常多的网银平台提供了应用内的SDK
我们非常相信这些平台
也会提供类似的基于JavaScript的SDK
让你们可以直接集成到网站中
实际上在欧美
现在超过40家网银平台支持Apple Pay
名单太多了所以就不一一列举了
全部名单列表可在developer.apple.com上找到
就像我说的那样 许多网银平台现在提供了应用内的SDK
将来它们也会提供网页的SDK
这里我想强调一下一些新的网银平台
大家都知道Apple Pay在中国可以使用了
这项功能在中国也同样好用
像在欧洲或美国那样
在中国有四家网银平台支持Apple Pay
它们是中国银联  连连支付首信易支付以及易宝支付
若你在亚洲转发应用内或者网页的请求
你同样能获得良好的支持
就像我前面提到过的电子商务平台
很多站点并没有独立的电子商务系统
它们使用着电子商务平台提供的服务
我们现已与很多电子商务平台进行合作
我们主要有三个电子平台合作方
它们是Demandware IBM以及Shopify
如果你没有使用这三家中的一个
那么你在使用Apple Pay时
在使用Apple Pay的时候
需要一个开发者账号
使用这些平台对你来说会更方便
它们会处理与Apple Pay深度集成的事情
现在你可能会想去试一试了
我希望你们都那么想
我想多谈一些关于测试的事情
测试你的网站:
我们来介绍一个新的测试环境
它为Apple Pay打造名叫Apple Pay Sandbox
这是一种新的测试方式
在这个测试环境下默认网页就是支付Apple Pay
如果你想获得更多信息的话
这个会议我们没有时间来谈论这个问题
但是在下个会议我们会谈到
我们会为大家讲述Sandbox
如果访问我们的网站developer.apple.com
那里会有Apple PaySandbox相关的更多的信息
作为一个开始你将会能够
测试网页上进行Apple Pay
然后我们就可以将Apple Pay在生产环境上部署了
我们即将发布iOS X以及Mac OS Sierra
所以当你们开始测试Apple Pay的时候
请给我们一些反馈来帮助我们解决错误
我们非常愿意听到你们反馈问题
及其它你们所见到的事情
如果你们愿意表示祝贺之类的话我们也非常愿意听到
好吧 让我们看看最后一个部分
Apple Pay的设计
如何为网站建立一个能收到欢迎的体验
这方面也同样的适用于应用
在最开始的部分我提到了一点
那就是Apple Pay三个原则：
它们是简单 安全 以及私密
你的设计需要能体现哪些
而不是设计的太复杂
Apple Pay不能设计得使用起来太复杂
Apple Pay也有三个主要阶段
它们是预支付阶段
在这一阶段你还没有看到Apple Pay表单
这种体验发生在Apple Pay表单出现之前
然后是支付过程实际的支付使用
这时候表单已经出现了
你可以定制那个界面你还需要做什么呢
让我们来看看
然后还有发送支付的过程
那是表单消失后的体验
让我们来完整的看一下这三种阶段
然后讨论一下你如何设计Apple Pay的各个阶段
预支付开始于用户点击了Apple Pay按钮
在Cocoa Touch中也有同样的Apple Pay按钮
就像我刚才展示的那样
你也可在CocoaTouch中使用它
这种按钮有很多种风格
这里有很多种
Anders展示了使用CSS来改变但是需要重申的是
我们提供了WebKit-image-named的属性你们可以使用它
你可以获得一个Apple Pay的logo
就可在网页的按钮上使用了logo了
有些可以改而有些不能改
使用Apple Pay时
使用内建的资源
即使我们修改了logo你们也没必要知道
你可能想确保你logo是最新的
并且放置到任何用户想进行购买的地方
不用隐藏它
不要让用户对支付感到困难
但是支付操作却很简便
还有一些最好不要做的建议
不要修改按钮的外观或者它的行为
对于用户来说
他们点击了Apple Pay按钮就让他们看到Apple Pay表单
我们希望有这样的体验
同样不要让这个按钮无效
苹果的标准规定你不能让这个无效
你必须于其它的支付方式同等的对待它
让我们讨论一下什么地方可以放置这个按钮
 Anders的演示已向你们展示了
再开始支付流程之前就放置好这个按钮
在产品的界面放置这个按钮可以增加用户的支付转化率
我们从应用中看到了支持ApplePay后会带来良好的数据
表明了支付转换率的上升
他们只是在产品的界面放置这个按钮就能产生这种结果
同样明显 你可将它放到常规的支付流程以及购物车中
让我们来看一些例子
我们将Apple Pay API向一些网站开放了
并且要求它们遵守一些设计
和使用Apple Pay的经验
其中一个是StubHub
现在StubHub决定将Apple Pay按钮
放置在订单流程当中
你选择你需要的门票
然后使用Apple Pay
你也可以将Apple Pay提前
你可在快速支付的时候就使用Apple Pay
Warby Parker就这么做
在你选择了一个产品之后
你会看到两个选项
W可以将它加入购物车然后继续选购
或者直接通过Apple Pay来购买
最后你可将Apple Pay按钮
直接放到产品的页面
Lululemon是这么做的
这里在产品页面就有一个按钮
让我们在iPad上看一下
你同样能看到添加商品到购物车
如果我想像平常那样创建一个购物车我可以做到
或者我可以直接购买它们
有一点在产品页面得到了增强
那就是允许未注册直接支付
要求注册是一个非常主要的用户门槛
我不知道你们如何看待
但是我不会去一个我不知道的网站购买东西
前提是它要求我进行注册
所以Apple Pay能帮助减少抑制消费的情况
通过让未注册用户的支付流程变得非常简单
同时 你可以选择利用
Apple Pay表单中的信息在用户购买后为他创建一个账户
我会来为大家在支付后的部分来展示这一点
让我们来关注一下实际支付过程Apple Pay表单
Apple Pay表单为商户提供了灵活的支付流程
这是高度定制化的
但是它同样为用户提供了一种持续性的使用经验
你可以决定显示出哪些信息
但是用户总是有着自己的期望
这里是Apple Pay表单的例子
我使用的是Mac OS sheet
但是在iOS上 条目也是一样的
若你在SafariiPhoneiPad的网页上进行支付
第一个条目是选择银行卡
账单地址也经常第一个被选
尽管账单地址不是必需的
在处理支付流程的过程中
第二个条目是收货地址
这个是你必须从用户那里获得的信息
你可请求银行卡信息 收货地址若有需要 你还可以请求联系地址
你可以指明收货地址的方式
你可以改变那些术语
若你不想用“shipping”你可用“delivery”或“pickup”
这对于拼车应用或者外卖服务来说非常好
现在你可以列出快递费用的列表了
你可以用列表来描述它们我们马上会讲到这一点
但是当你收集了这些信息之后
请确保你有一个清晰的保密协议
如果你在应用中使用了Apple Pay
当你将应用上传App Store时会被要求提供保密协议
现在你是在为网页做设计
很明显没那样的方式来提供保密协议
所以我们要求你提供一个保密协议
放在你的网站上
且表明你如何使用这些信息
现在既然你们能使用寄送方式了
就是选择邮寄之类的
就像选择地址那样这也是可以定制的
用户可以从一个列表中选择
如果地址更新的话这些方式也应该会更新
比如在你已经选择了送到纽约的快递方式的时候
你可以很容易的想到这一点
这些方式也可以是免费的如果你愿意的话
就像收货地址那样
收货人的姓名也可以按你的要求改变
尽管你会要求住址邮件地址 手机号码
在同一个属性中
但是在表单中 它们是分开的
这里是联系信息的条目
是用来填写信息而不是填写邮政编码之类的
我们现在支持收集手机号
我们也支持收集邮件地址
如果你没有要求一个送货地址
我们会允许你获得用户的名字
这对于拼车的应用或者网站会非常有用
及那些想获得姓名的应用或者网站
但是却不需要用户的送货地址
现在到了最重要的一个填写区域它就是摘要信息
用户获得的金额会高亮
抱歉 是用户支付的金额
并且你可以使用这个摘要
来简洁的表明支付的用途
比如小记 快递费 折扣
这里并不是一个条目列表
它并不是一个销售账单
所以你需要让它很简洁
当然也需要清晰明白的表明你的收费
确保显示的总金额
与用户即将要扣除的金额保持一致
那就是说 这些情况下
你并不需要知道付出多少钱
有时候你不知道最终会支付多少钱
比如酒店预订会出现这种情况它们是开放性的
租车或者的士服务也是如此
这时候你可以使用pending的条目类型
在摘要信息中表明这一点
所以需要注意  保持透明的计费
为何我一直提到“作清晰预估”
你可以在刚才的演示中看到
在通过Apple Pay付款后通常你会看到一个通知
这个通知来自银行并且告知金额的变化
所以你想确保那个金额
与表单上显示的相匹配
至少尽力让两者保持一致
你不需知道总费用时
摘要条目也支持免费或者折扣
条目上可以标记为免费
摘要条目可以是负数但是总金额不能为负数
总金额必须是一个正数
但是在那之前
如果你想指出哪个地方有折扣都是可以的
这里是另外一个Mac OS表单
这里是一个条目告诉你在什么设备上确认
这让我想起了Anders讨论网站图标的观点
这是一个在iPhone的表单而此时你在你的Mac上进行着支付
在这里你不能定制任何东西
我们会告知你银行卡但是你无法改变
你需要在Mac上改变它
顺便的说一下
若在Mac上改变任何选项价格都会更新
如果你改变了邮寄方式而使得费用增加
我们会直接进行同步
但是网站的图标是从你的网站上下载的
你可以通过很多种方式来指定
它使用了Apple Touch的图标
为了使用Apple Pay你需提供180和120像素大小
最简单的方式是提供一个链接
但是你也可以设定是域名的根目录
选择适合你的方式吧
我还想谈谈一些别的事情
那就是关于标记语言
你们当中很多人应该使用过标记语言
用来在你们页面上指明产品类型
那样可以被搜索排名所统计
我们同样的有一个产品类型排名
在iOS的Spotlight中
你也可指明你的站点使用了Apple Pay
只要你使用了合适的标记语言
我们觉得那样会更有利比如说对于搜索引擎
及想知哪些地方正用Apple Pay的人
若你想这样做也会对你更加有利
现在让我们来看最后一个部分确认支付
在你的确认信息中你想反映出合适的状态
放置到Apple Pay表单中
比如说 失败的时候就不要显示一个成功的页面了
那样是非常愚蠢的
同时你可以利用Apple Pay收集的信息
来为用户提供一个新的账户我前面有提到过
我想展示Lululemon的例子
这里就是例子了
当你已经做了一次支付后
你获得了一个确认信息的页面
然后你创建了一个账户
预置了从Apple Pay中获得的邮件信息
所以同样的我也可以自己创建一个账户
我也可以将账户关联起来
这样做是非常容易的
好了 我们今天讲了很多内容
我们主要覆盖了哪些呢
我们讲述了网页上Apply Pay的商户验证
我们学习了Apple Pay在网页和应用的不同之处
Anders为我们讲述了Apple Pay session以及JavaScript API
然后我们还谈到了设计者如何利用Apple Pay优势
我们现对网页上使用ApplePay已经有了很多了解
你可以在这里获得我们的开发页面以及网站
以及相关的会议
首先 不用去其它地方
留在这里不要离开
我在三点钟会回来讲述Wallet与Apple Pay中新的内容
我们会讲述SandboxWatchKit以及扩展
以及其它一些新的事物
这些在Wallet and Apple Pay中发生并且与银行以及零售商有关
这里还有一个会议是针对网页开发者的：
在你的应用中优化网页内容
该会议将在周五4:00开始
我们已经讲完了
欢迎各位前来
我已迫不及待想看到大家支持网页上使用Apple Pay了
谢谢希望大家在 WWDC 度过好时光