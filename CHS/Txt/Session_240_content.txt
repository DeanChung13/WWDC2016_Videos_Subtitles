通过主动建议增加应用使用
大家好
感谢大家到场与我们共度周五的下午
希望你在WWDC度过精彩的一周
我现在对这次演讲感到十分兴奋
因为我们将讨论的东西我认为是大家都想要的
从根本讲大家都在这里
是因为你们喜欢打造优质的应用
而且你可能想有更多的用户使用那些优质的应用
好消息是我们想研究出机会
让你的应用在恰当的时候提供给我们的客户
这样你会得到更多的参与
我们将在这整场的演讲中讨论
你可以那么做的不同方法
现今我们在整个操作系统上以各种形式推荐应用
在许多不同地方
我们的客户可以使用Siri应用建议
当他们从主屏幕向左滑动以及调用搜索的时候
甚至在输入查询之后
你可以在其他第三方应用内部得到结果
Handoff是我们宣传第三方应用和你的应用的另一种方式
随着你从一个设备上开始活动然后转移到下一个
我们试着预测你将要做的事情
然后在屏幕的左下角提供那个应用的图标
在某些情况下当我们认为你非常想做的
是播放一种媒体
我们会将你的应用内容推荐到设备的锁屏上
比如在你插入耳机或者Bluetooth配对
到你的车或者音响之后
如果有一款应用是你在那种情况下经常使用的
系统会得知
而且不仅提供那款应用还有应用的内容
我们今天将谈谈如何能够构建精彩的体验
为那种环境
在你使用操作系统时例如阅读新闻文章
你可以创建提醒
与你所看的内容有前后关联
例如 如果你在读一篇文章
然后你想再看一眼或回家再读
因为你正在观看WWDC展示
你可以调出Siri
当你说“提醒我这件事”时Siri会理解你的意思
它会有当前在屏幕显示的前后关联
这会在任何应用上奏效只要采用一些API
今天晚些时候我们会讨论
大家会对此感到尤为兴奋因为这意味着
当客户打开Reminders应用时
他们可以瞬间回到你的内容上
iOS 10上新出现的是整个系统上的地点推荐
当我们认为客户有某种意图
想去某个地方或者使用一个地点时
是他们最近看过的
我们过会将谈谈如何让你应用的数据
在整个系统中流动
Multitasking也是另一种界面
我们会将我们认为客户会感兴趣的地点推荐给他们
你可以将你的应用图标推荐在上面
在多任务UI的醒目位置上
同样是iOS 10中的新功能就是我们将
你应用的联系方式推荐到原生联系人应用的内部
这里你会注意到在WhatsApp中发现了一个句柄
我们过会将谈谈如果能够让你的应用内容
进入那个界面
所以...
要得知何时推荐操作系统需要学习
你的数据和应用
好消息是几个简单的API就会将
更大价值提供给你比我之前说的要更多
除了将你的应用在各种时刻推荐
你还会得到更深的Siri整合就像我说的
前后关联提醒那样
所以今天我们要做的是谈谈这些API
并且我们会讲解如何恰当采用它们
这样你们都会得到用户更多的参与
借助在整个OS上的推荐
首先我们将谈谈NSUserActivity和schema.org
NSUserActivity这种API相当于操作系统的眼睛
它帮助我们了解客户当前在屏幕上所看的内容
而schema.org在网页上有相同的作用
接下来 我们将谈谈一些新的改进
和新的API围绕那些处理地点的应用
如果你的应用像Yelp那是一个目录
提供很多不同地点或者相反 如果你的应用像Uber
要接收地点那这就与你非常相关了
之后我们会谈谈构建精彩的体验
围绕媒体应用建议
我之前展示了一个例子是一类内容推荐
在客户插入耳机之后就会发生
我们会谈谈如何让你的内容
在界面最突出位置显示
之后我们会概述今天会学到的所有内容
先从NSUserActivity和schema.org开始
我想邀请Sofiane上台Sofiane？
谢了 Daniel大家下午好
我叫Sofiane 今天我非常激动地在这里跟大家谈谈
我们最近在研究的一些功能
我们刚听过Daniel说过的在整个系统中
推荐应用内容的好方法
现在我们来谈谈一些API你能采用它们来实现这一目的
在整个展示中我们会谈谈功能
一些你可能已经熟悉了像是Handoff
或者Spotlight搜索还有一些在iOS 10中推出的新功能
例如 地点建议
你在这里看到的所有功能
都有共同点
那就是单个API叫做NSUserActivity
首先 一些背景知识
NSUserActivity是iOS 8中推出的支持Handoff
这是非常神奇的功能允许你在一个设备上
开始一项活动 然后转到另一个设备上继续你之前的活动
去年在iOS 9中 我们支持将内容直接从
NSUserActivity推荐到Spotlight搜索结果里
在iOS 10中我们进一步增强了NSUserActivities
它可以捕捉在你应用内部查看过的地点
并在整个系统中的多个位置推荐它们
甚至在其他应用中
现在NSUserActivity还将前后关联信息提供给Siri
这样Siri能帮助你获取方向或者呼叫
你在应用中查看的地点
同样新出现于iOS 10
NSUserActivity允许你的通信应用
直接从联系人卡片中推荐
作为替代通信方式
我知道大家在想什么“这太酷了” 但愿吧
“但工作原理是什么？”
我来告诉大家这是非常简单明了的
我们有很多精彩内容要说所以直入主题吧
我们将谈谈NSUserActivity和schema.org
这些API允许你无缝地与系统整合
NSUserActivity用于原生应用而schema.org是用于网页的
我们首先专注于NSUserActivity
NSUserActivity是轻量级界面 能捕获应用程序的状态
在用户浏览你应用的过程中这还可以在之后还原
所以例如 这里我们有Yelp应用
这是一款本地搜索应用随着用户浏览应用
创建NSUserActivity捕获我们需要的信息
之后重现这个状态
例如 当我触发餐厅搜索时
我们遵循创建活动的相同模式
当我从那个列表中查看结果时
在这个特定案例中我们在查看一个地点
在iOS 10中NSUserActivity现在
更加了解特定概念 例如地点或者通信互动
我们很快就会讲的不过之前我想
仔细看看这个屏幕
这里我们创建了活动并用信息来描述它
来之后重现这个状态以及已提交的数据
例如 地点名称或者地址
之后我们通知系统这代表了
当前用户状态 我们决定它是否会宣传用于Handoff
在整个系统中临时可用于地点建议
或添加到设备索引...
或添加到设备索引上的Spotlight这样它会出现在
Spotlight搜索结果中
这里有一些相关会议关于这个话题的
尤其是采用NSUserActivities
用于Handoff和应用搜索
我推荐大家去看一下那里的内容十分精彩
现在我们深入到代码 好吧？
我将给你展示如何创建这些活动
我们在此简化NSUserActivity的实例
并提供一个活动类型
那是你提供的字符串
这和你在info.plist中指定的字符串相同
我们推荐使用反向DNS样式符号
保持字符串的特殊性
接下来 我们的活动需要标题而且我们使用的标题
会描述我们在这里看的内容
这里我们看到了餐厅
要记住的事情是
这是你的用户活动的公众形象
例如 这就是
其在Spotlight搜索结果中的样子
你要确保你使用的标题有说明性并且有含义
下面 我们启用Handoff应用搜索以及公共索引
因为我们查看的内容是公开的
之后我们在userInfo属性上设置一个字典
捕获我们需要用来重现状态的信息
当活动还原时
那种情况下 我们使用刚才所查看的地点的唯一ID
通常当活动被还原时
例如 当传递给了另一个设备
你可以从服务器取回那个ID然后还原那个地点
如用户期待那样
为了全面地描述你的活动并得出更丰富的搜索结果
你可以使用这个类
我们在iOS 9中推出叫做CSSearchableItemAttributeSet
它在你的应用和系统之间提供了共同语言
来更好地描述你的内容
如果你的网站映射的内容
是你在应用内查看的
可以提供网页URL这样当你的活动
例如被传递给一个未安装有你应用的设备上
这会顺着那个链接在Safari中恰当启动
最后我们在活动上调用becomeCurrent
告诉系统
这代表了当前用户状态
这是用户在屏幕上看到的东西
当你的应用启动后会发生什么？
例如 当你的活动被还原了
或者传递给另一个设备
你的应用程序启动了这很好
然后调用UIApplication委托方法
叫做continueUserActivityrestorationHandler
我们首先要做的是检查活动类型
然后确保它匹配我们所预料的那个
那个案例与我们之前使用的那个匹配
之后我们可以使用用户输入字典
来开始还原状态
之前 我们放入了那个地点的唯一ID
通常在这里我们能将其从服务器取回来
然后还原它并显示正确的控制器
如用户所期待那样
所以使用最少的代码
我们能够从三大功能中获益
Handoff Spotlight搜索及前后关联Siri提醒
现在我们谈谈下面列出的其他功能
不过我先问大家一下
你是否遇到这样情况你肚子饿了
想找到好的餐厅就餐？
所以你从Yelp开始然后找到完美的地点
之后你要跟朋友发消息让他们在那里见你
所以你切换到消息 开始输入“伙计们 我找到地儿了”
不过你发现你没有那个地方的地址
所以你切换到Yelp
你复制地址之后切换回消息
粘贴进入之后你终于完成了
然而并不是 因为你还需要在某个时刻到达那里
你切换出地图
这可能来来回回很多次
你懂我的意思非常不好的体验
所以在iOS 10 我们尝试将这个体验变得更加容易
你的起点还是一样
你在应用中查看一个地点比如说一家餐厅
通过采用NSUserActivity
你的应用可以将那个相同地点
推荐到整个系统上的许多不同位置
当你从应用中切换走多任务UI会使其非常简单
并在底部提供这个精致的主动建议
使用你最喜爱的路径规划应用来提供方向
到你刚才查看的地点
如果你进入Messages不需要来回操作
你可以开始写像是“见面地点是...”
然后QuickType UI会自动将那个位置
直接推荐到QuickType来自你刚才提供的内容
在Maps上亦然
Maps在Maps应用中直接推荐这些地点
不仅是在Maps应用中
还在新的Today View地图小部件中
以及CarPlay中这是我最喜欢的功能
想象一下
查看应用 进入车中点击屏幕
就好了 完成了你可以出发了
这些地点甚至可以推荐到其他应用中
所以我们在这里看的是由Yelp提供的一个地点
通过NSUserActivity显示在Uber应用内部
随着用户点入目的地文本域
这还给Siri提供前后关联所以你可以查看你的应用
然后询问Siri来获取方向或者给
你查看的地点打电话
采用NSUserActivity会得到所有这些功能
而且所有这些功能都有共同点
就是它们都表示
建议最初是源自哪里
这个案例中是Yelp
想象一下如果这是你的应用那不就太好了吗？
现在这是可能的
NSUserActivity允许你这样做 通过捕获在你的
应用中查看过的地点
我们推出新的简单API
在MapKit和CoreSpotlight上允许你那样做
并整合到我刚谈过的所有位置
在代码方面 我们将创建一个NSUserActivity
并且重新使用相同的
我们之前定义的活动直接添加在上面
我们不需要创建单独活动
对于使用MapKit的应用其简单程度
相当于将MKMapItem设置到这个新的MapItem属性
定义为NSUserActivity
这基本上就行了
这还有很好的附加作用
自动填充内容属性集所以你不用...
所以如果你想采用应用搜索
你要做的就是指定你想选择性加入应用搜索
然后这些网站也会编入索引
这里还有另一种方式那就是通过采用应用搜索
对于那些已经熟悉它的人
你能使用CSSearchableItemAttributeSet并描述地点
我们将它分解一下
我们首先做的是设置地点的名称
这与我们查看的相匹配
这是我们之前讲的全部UI所需要的
接下来 我们指定地址的文本表示
这是全部基于文本UI所需要的
例如像是键盘
接下来 我们指定维度和经度
这是可选的 但这会保证将你的用户精确地指引到
你想将他们指引到的位置
经度和纬度是最精确的表示
供你使用如果你有这个信息的话
接下来 我们设置电话号码这允许我们访问Siri
这样我们可以说比如“呼叫这个地方”
最后 我们表明
这个内容支持导航和电话呼叫
这样结果将会呈现在Spotlight UI中
在Spotlight搜索结果UI中
有一个快速行动图标进行电话呼叫
或者例如获取方向
这就是如何得到地点建议的就是这么简单
你的应用将会推荐到所有这些不同地方
我们认为这会提供更加饱满的体验
在你应用的内外都是如此
你的品牌可以进一步在整个系统中推荐
不仅限于你的应用之内
我们来谈谈联系人交互
IOS 10 DP从联系人卡片
直接整合通信应用
你在这里看到的是一个联系人卡片
这里获知了WhatsApp的句柄并显示出来
当我去点击顶部的快速行动按钮
来发送消息 我要选择我想使用的联系方式
如果我这么做了 这个选择会被记住并持久保留
为默认的通信方式
这样你的应用会在推荐到那里作为默认的通道
给那特定的联系人发消息
这也由NSUserActivity所支持 还有新的密集框架
这与为得到深层Siri整合所使用的框架相同
本周前几天有两场关于这个话题的精彩演讲
我非常推荐大家去看看
这里显示的是WhatsApp应用
在发送文本消息我们将探讨它的工作原理
首先我们创建INInteraction对象
这是我们在密集API中定义的新对象
这包含了关于意图的信息
例如 这代表用户行动
比如发送文本消息或者进行视频通话
以及其他一些关于接收方和发送方的信息
还有创建内容的元数据
例如像是通信是否成功
接下来 你在交互上调用Donate Method
这样系统会得知这次交互
并将你的应用直接在联系人卡片内部推荐
当用户通过联系人卡片与你的应用进行交互
我们也遵循相同的模式
创建INInteraction表示用户尝试做的事情
包在NSUserActivity内之后你的应用会用它来启动
我们看看这是如何转换到代码中的
首先在这里我们创建发送方和接收方
要注意的是如果你的应用可以访问
用户的通讯簿
你可以指定你在这里使用的联系人标识符
这样系统能够更好地找出
需要扩增的正确联系人
接下来 我们创建意图
这里我们使用INSendMessageIntent
因为我们发送文本消息
这里你可以使用三种通信意图
用于发送文本消息进行音频和视频通话
要重点注意的是你还要保证你指定出
你的应用在info.plist中能够处理的意图
这与活动类型相比几乎一样
我们之前谈过了
接着提供我们所使用的服务名称
这里我们在使用WhatsApp
如果你的应用处理多个协议那这会特别有用
例如如果你有多客户端聊天应用
比如说与Jabber和ICQ有关
你要确保你使用正确的服务名称
接下来 我们创建INInteraction对象
这会捕获我们之前创建的所有信息
以及一些元数据包括通信的方向性等等
因为我们在这里发送文本消息
我们使用外送方向
这是唯一支持的交互捐送方向
最后 我们将这个交互捐送给系统
这样它会...系统能够
增强与你通信的联系人
我说过了当用户从联系人卡片
与你的应用交互我们遵循相同的模式
并使用相同的UI应用程序委托方法来启动你的应用
我们首先在这里做的是从NSUserActivity
检查意图和交互
之后我们可以开始与预期接收方进行通信
这就是如何得到联系人交互
你的应用可以在联系人卡片上直接推荐
这是最自然的通信方式
成功了我们讲完了列表中的一切
但还没完我们还要讲点别的
我们来谈谈一些最佳实践你要牢记在心
使用NSUserActivity时
首先就是要懒对 这才是重点
假设你在研发一款邮件客户端
你想采用Handoff这样你的用户能够
先在Mac上面开始写邮件然后在手机上
外出时 接着在iPhone上之前的地方继续写下去
这里我们做的是我们有一个方法
在每次按下键盘上的按键时就调用这个方法
而且每次我们都计算并更新userInfo字典
这会消耗巨大并且效率低下
相反你应该做的是使用needsSave属性
告诉系统这个活动是脏的
这样系统能够在适合时间
呼叫你来更新你的userInfo目录
例如将活动传递到另一个设备之前
这里我们是这样做的我们在实施
updateUserActivityState委托方法
这是我们更新userInfo字典的机会
这样我们可以只做一次而且效率更加的高
接下来 确定你保留当前活动的强引用
我们在这里做的是减轻NSUserActivity
在上面做一些东西调用becomeCurrent
这很好 不过之后
我们没有保留强引用并推出了函数
因此 活动被释放了因为走出范围了
活动释放不会是当前的因为它不存在
相反 你应该做的是保留当前
活动的强引用
若这涉及到UIViewControllers
或者任何符合UI响应器的东西
还可以使用用户活动定义...
用户活动属性定义在UI响应器上
这有极佳的效果
让UIKit为你管理活动的当前性
你不必调用becomeCurrent或使其无效
UIKit会为你做到当视图控制器
比如说链接到了视图层级
接下来传送少量有效负载
确保你只保留足够的信息
在userInfo字典中来重现状态 仅这些而已
记住这些用户信息和活动是通过
Bluetooth发送的 这就是为什么要尽可能保持轻量级
例如 假设你研发的应用要处理大型照片
从网络上下载的
所以我们在这里做的是下载这些照片
将其序列化为数据 然后将它们放入userInfo字典
这很容易就会达到几MB效率低下
相反 你可以做的是保留独特标识符
指向你所从事的内容例如 网页URL
这样当你还原活动时
你可以将其从服务器取回或者通过其他方法获取
如果你真的要处理大量有效负载
你可以使用延续流
它们专门设计用于该目的
在开发者资料中有大量相关的信息
好了 还有一个
一定要保持你的活动类型唯一并且有描述性
这是为了避免冲突
但重要的是它们还要代表当前用户活动
或者当前用户行动
所以这里不使用单个活动类型
是我用在应用内部各处的
更好的是使用多个活动类型来描述应用的不同部分
例如一个是当我查看地点
一个是当我搜索地点
你会在这里发现我使用反向DNS样式符号
这确保了不会与其他活动类型相冲突
那些类型可能是在其他应用内部定义的
好了 现在该演示了
将使用ProactiveToolbox应用
这是我们在DeveloperLibrary中供大家使用的样例
我们看看如何采用NSUserActivity推荐地点
我们还会简短讲讲Handoff以及应用搜索
我们开始吧
好 我将在此启动ProactiveToolbox应用
左边是我运行iOS 10的设备然后Xcode就在后面
我先给大家快速浏览一下这个应用
让你知道它的作用
这里我们有披萨店的列表
这是搜索本地披萨店的应用
然后使用Core Location来获取我的当前位置
以及用MapKit来获取符合披萨条件的地点
我来看看这第一个
我得到更丰富的页面有更多详细信息
像是名称 电话号码 地址网站 以及该地点的地图
现在我们将研究如何能实施位置推荐
这样相同的位置会推荐到很多不同地方
不过之前我们先这么做
我要计时怎么样？
看看这么做要多长时间
我启动计时器这就开始
好了 我现在进入Xcode
这是我的地点查看控制器这个控制
是我用来显示更丰富的结果
更丰富的披萨店结果
每当地图项目在我的应用中更新时 我就会调用这个方法
我将这个拖放到这里
我在此创建NSUserActivity
如你所见我在创建活动 提供给它
活动类型 代表着我所做的事情的含义
在这个案例中我还使用反向DNS样式符号
这确保我的活动类型是唯一的
我之前已经在info.plist中定义了这个活动类型
接下来我们设置标题和关键词
我这里还是使用有含义的标题
因为这将是用户活动的公开形象
接下来 我设置Handoff应用搜索以及公共索引
因为我们在这里看的内容是公开的
更重要的部分是这个
我在活动内部设置mapItem
这个是有附加作用的能为我们
填充contentAttributeSets
我在这里就那么做的我的完成方法是通过表示
这个内容支持导航和电话呼叫
这样它会有正确的图标出现在Spotlight搜索结果中
还记得要懒吗？在这里我就是这样
设置needsSave为真以及委托方法
这样就会调用userActivity委托
当我需要更新userInfo字典时
最后我使用userActivity属性
它是由UIViewController内的UI Responder所定义
然后设置上活动这样我能保留强引用
而且UIKit会替我自动管理它
接下来 我将实施这个UI...这个用户活动委托方法
updateUserActivityState
在这里我将更新我的userInfo字典
通过我在下面这个方法内定义的内容
这会返回字典的信息
相关的信息我之后要用它们重现这个状态
我们继续 构建并运行
好了 这就是相同的地点
我没有破坏什么东西没有出现变化
我将双击Home键
现在你能看到这在底部出现了
这个横幅 来获取到我刚才所看地点的方向
非常简单 超级方便
打开Maps也是一样
我直接在这里看到相同位置甚至显示我的应用程序图标
谢谢
好了 我们缩放回来
当我打开Messages也是一样
比如说“见面地点是...”
你看到这里有相同的位置
直接推荐到QuickType UI内部
由我的应用提供我可以直接点击
地点的名称和地址都插入进去了
而且这还对收到的消息有效
这里我得到一条文本消息在问我他们的电话号码是什么
信息从NSUserActivity中直接提取了出来
我可以点击它然后再插入电话号码
非常炫酷
我们看看计时
3分40秒这还不错
所有这些位置推荐功能
通过单个API由我的应用提供
我投机取巧了一点我有一些示例代码 但你懂我意思了
这不需要大量的投入
所以消息 QuickTypeSiri 地图 多任务处理
所有这些只需一个API
好了 我们也在应用搜索上做了些工作
将该内容编入索引
我首先回到应用然后还原其初始状态
我将搜索披萨
披萨
果然那个位置出现了
但当我点击它 我的应用就启动了 但它做得并不正确
它没有将内容还原成用户期待的那样
没有显示披萨店的丰富UI
我回到我的代码这里
这是因为我们没实施UIApplicationDelegate方法
所以进入我的应用委托
拖放那部分
我在这里做的是
我在实施continueuserActivity restorationHandler
UIApplicationDelegate首先检查活动类型
这是我们刚才使用的那个
之后调用我在下面定义的方法这会查看userInfo
并像用户预期那样还原状态
我将重新构建并运行
然后再看一遍
我们回到Spotlight
点击结果
现在我们做对了还原了内容
如用户期待那样
所以这快速浏览了采用NSUserActivity的方法
用于位置推荐应用搜索和Handoff
好了 我们切换回来
这个样例可在DeveloperLibrary中获取
它的功能还要更多
它帮助你测试与NSUserActivity的整合
这是在你工作时放在身边使用的好工具
用于这些位置推荐功能
好了 我们刚才知道了采用NSUserActivity很容易
并在系统的许多不同部分推荐你的内容
我将谈谈schema.org如何提供
一些这样的好处尤其是位置推荐
当我设计这些功能这些位置推荐功能
我们希望相同的效果也能再现于
你在Safari中查看的网站上
所以为此
例如当你查看yelp.com
这映射了我们之前看过的相同内容
在Yelp应用中
当你从Safari切换走
你会得到相同的精致便利的建议
来获取这个地点的方向
这因为yelp.com采用schema.org
这是我们为此使用的技术
稍微讲讲背景知识
schema.org是开放网页标记标准
允许你从语义上给内容加注释
通过丰富的结构化元数据
这里有很多架构为各种概念提供大量的表达
而且schema.org也是旨在
为用户提供丰富的搜索体验
在iOS中 以及所有主要搜索引擎
这些架构都是按照树形结构排列
例如更具体的架构 像是餐厅
是源自更一般的类型例如本地商业
我们拿餐厅作为例子
它是源自多个架构的因此
这继承了所有定义它们的属性
例如 名称属性是由事物架构定义的
在这个案例中这会捕获餐厅名称
地址也是一回事那是在本地商业架构中定义的
其他更针对于餐厅的事物
例如是否接受预定
是直接在餐厅架构内部定义的
这是schema.org实际运作的例子
在左边 我们看到之前看过的网站
在右边是在语义上描述它的内容
以Safari可以理解的方法
创建电话号码
餐厅名称地址 评级 网站
等等 能做的可以更多
我们来看看一个简单的例子
这是一个非常简单的HTML文档
描述关于餐厅的内容
我们来看看这个网页可能的样子
当加入JSON-LDschema.org标记
如你所见 我们没有改变任何实际的内容
或者实际的文档结构我们只是在旁边提供了元数据
以一种机器能接受的格式来描述内容
包括简单的属性像是电话
不过还有更复杂的结构化属性像是地址
本身就是PostalAddress类型的另一个架构
如果你喜欢你还可以给内容注释
与微数据内联
我们就这么做
我们在改变初始文档的实际结构
并使用内联微数据标记来增强它
在iOS 10中 Safari提取这些与位置相关的架构
在NSUserActivity中像推荐原生应用那样推荐它们
这也会给你一些好处
关于我们之前谈过的位置推荐
这些是Safari会提取的一些架构
任何带有PostalAddressGeoCoordinate或电话属性
而我们之前用的餐厅架构就是绝佳的例子
你有所有这些属性
你可以组合或指定你当时可用的那些属性
好了 我们谈了NSUserActivity和schema.org
使用NSUserActivity
将用户在应用内查看的位置
在整个系统的很多地方中 毫不费力地推荐给他们
还有通信应用
当然 还有所有Handoff和应用搜索的使用案例
在你网站上使用schema.org来得到这一些好处
用于位置建议
与NSUserActivity几乎一回事
现在我们看看你的应用如何使用这些位置建议
像我们之前看过的
这里我们将谈谈那么做的两种方式
一个是通过键盘另一个是针对路线规划应用
我们从第一个开始
如果你的应用处理文本格式的地址
你可在应用内部受益于位置建议通过QuickType UI
现在我们在看Uber应用
如果你不知道的话这是一款拼车应用
当用户进入文本域
这被注释成位置文本域
那个情况下 我们从Yelp中直接将内容推荐到Uber内部
这包括最近推荐的位置
由其他应用在NSUserActivities或schema.org中推荐
基于你日历上面的未来位置
可能复制到粘贴板中的位置
例如 你收到附带地址的文本消息
甚至可能是你最近使用Siri互动过的地点
例如 如果你问...
如果你请求Siri给你指向附近的餐厅
之后与那个结果互动
你就会在那你看到它作为位置建议的一部分
我们在UIKit中推出新的API
所以你的应用可以告知系统
文本域所预期的内容类型
在这个案例中我们使用的是位置
基于这个线索键盘就能够作出
正确的主动建议
如果此时在前后关联中可用的话
不过没有可用的主动建议
这还会在自动校正方面提供更为丰富体验
因为自动校正现在能知道应用所预期的内容
我们在UITextInputTraits中添加了新属性
叫做textContentType允许你指定这个内容
这里 我们使用UITextField这符合UITextInputTraits
因此会得到这个属性
我们表示这个文本域预期完整的街道地址
这里有很多的文本内容类型供你使用
范围从描述人群到位置还有很多其他的
这个完整列表可在DeveloperLibrary中获取
不过我们着重仔细看看这两个
这两个都与位置相关
不过它们有不同的粒度等级
你要使用最能表现你的使用案例的那个
拥有正确的粒度等级
例如
一个导航应用通常会预期完整的街道地址
这样能准确地将用户指引到他们的目的地
而天气应用可能通常只需要在乎州和城市
因为这对天气的使用案例就足够了
如你所见
基于我们指定的不同内容类型
我们得到了不同的内容推荐到了QuickType栏内部
一个是完整的街道地址另一个只是加州旧金山
在键盘中得到建议就是这么简单
现在我们看看路线规划应用如何得益于
这些底部精美的方向横幅
如Daniel之前说的路线规划应用
第三方路线规划应用也可以提升到这里
让用户直接加速进入你的应用
当我们认为用户的意图是获取方向
我们利用了现有API叫做MKDirectionsRequest
这是在iOS 6中推出的这允许你注册路线规划应用
然后处理所有的方向请求
iOS会随着时间学习
基于各种因素判断用户最爱的路线规划应用是什么
例如像是参与
然后在合适的时候在多任务UI中建议
为此你要确保你将应用配置成
能接收方向请求
这很容易就能在Xcode中通过功能面板完成
在iOS 10中 我们推出了一种新的路线规划模式
专门用于拼车应用
接下来 你要声明与你应用真正相关的地图区域
比如说如果你的应用是当地的地铁应用
你可以指定你的应用只在这个区域相关
最后你要确保
你会采取合适的行动当你的应用启动在
MKDirectionsRequest内部
那就是你的应用应该自动开始定向
或者填充UI 使得用户能
容易地获取方向
在代码方面 这个例子示范了如何采用MKDirectionsRequest
MKDirectionsRequest使用一个URL方案
当你的应用启动后会附带有一个URL
我们首先做的是检查
我们得到的URL实际上是有效的MKDirectionsRequest
MKDirectionsRequest为此提供isDirectionsRequestURL
接下来我们减轻MKDirectionsRequest的一个实例
来自URL的内容这包含的信息是关于
出发地和用户想到达的目的地
在iOS 10中 接下来这个功能十分重要
尤其对于那些已经采用了MKDirectionsRequest的人
那就是现在你可以使用没有地理坐标的
地图项目进行启动
在这个案例中你要将你得到的
地址字典进行地理编码使用CLGeocoders
geocodeAddressDictionary这会返给你一个地点标记
附带正确的纬度和经度这会之后帮助你开始定向
到预定的位置这就差不多好了
这就是如何推荐你的路线规划应用
在多任务UI的醒目位置上
至此 我想交给Daniel
来谈谈媒体应用的建议谢谢大家
这太棒了好了
现在我们谈谈媒体应用建议
如果你的应用处理任何形式的媒体
像是播客应用或类似Spotify的应用
或甚至播放视频的应用那你就要认真听听了
现今的iOS会推荐我们认为你会使用的应用
基于你的行为
我们在大量不同的UI中推荐那个应用
我之前展示过了
我们特别地在Spotlight中提供哪些建议
还有Today View
如果建议的动作跟随着特定的触发
例如 当你插入耳机或者Bluetooth配对
或甚至到达某个地方而且是媒体应用
我们可以进一步提升它
我们看看这是什么样的
这是Spotlight中推荐的样子
假如说我总是或者经常听播客
在插入耳机之后
注意 在左边上部有播客应用建议
不过在某些情况下那个推荐
会提升到锁屏的上面
所以你看到的是
我们传统上用于Handoff的UI
现在用于推荐一款应用
是我们认为我可能使用的因为这遵循
之前提到的那些触发
这是非常好的体验
但又不是那么的好因为说到底
你现在必须做的是
你必须解锁设备
向右滑动才能获取我们
所预测的你想要消费的内容
通过非常简单的API
你可以为用户构建更好的体验
这是它之前的样子我刚才给你展示过了
这是它之后的样子
我们做到了吧？这是之前的样子
这是之后的样子好太多了
不仅用户可以参与到内容中
而且不用解锁他们的设备
同时还可以将专辑封面在突出位置展现给用户
这在做完后可能很显而易见
不过这个特定的界面还提供了更好的转化
如果你看实际数字的话
如果你感兴趣于
让用户实际去播放你的内容
你应该是感兴趣的那这就是属于你的API
我们怎么做？
我会一步步地讲非常易于采用的
这都可以归结于一个类叫做MPPlayableContentManager
想象一下你有
一个有着不同属性的字典
有标题 艺术家 专辑
你想做的是将其提升到
设备的锁屏上当系统认为
客户可能会参与其中
你首先要做的就是
导入Media Player并声明你自己
与那个类别中的委托一致
然后你要实施一个方法叫做playableContentManager
这很简单
首先 你要抓取媒体项目
通过你有的任何手段
很显然你要做好准备
尤其是如果你要获取远程资源
以防其失效那种情况下 你要调用
在下面看到的那个回调句柄
因此系统会明白不一定要给你推荐
下一步 你要填充NowPlayingInfo
在设备的锁屏上
这是我实施的一个方法所以给你展示其背后的内容
首先你要做的是抓取infoCenter对象
之后如果你有确实一张特定的图像
是这个媒体项目上有的你可以将它推荐到
设备的锁屏上
如果你使用的是默认图像这就是个机会
让你的品牌得到提升
然后你要把你的表示转化成
nowPlayingInfo表示最重要的是
要在infoCenter上设置nowPlayingInfo
在完成之前所展示的回调之前
所以你要在方法结束之前完成
如果出于某种原因你不喜欢
或你的应用在准备回放时出现错误
如果手机处于飞行模式
这是另一个机会让你提早去除错误
注意 实际上你不想在此时开始回放
你插入耳机 你要等待
客户点击播放按钮
不过你要做好准备加载到流文件中等等
就是这样
再说一遍 现今的iOS根据你的行为推荐应用
如果遵循特定的触发并且它们是媒体应用
我们把它们提升到锁屏上
通过我刚才展示的非常简单的采用
你可以得到更好的体验并且有机会
去推广你的品牌
以及你有的那么华丽的专辑封面
好了 总结一下我们今天所讲的内容
我们谈了几个简单的API有助于将你的应用深度整合到
操作系统中
我们谈了NSUserActivity这相当于操作系统的眼睛
这帮助我们从语义上了解客户当前所看的内容
然后我们谈了schema.org从很多方面讲
对网页来说类似于NSUserActivity
我们讲了现有API中新的使用案例
以及全新的UIKit API
来帮助我们让系统了解何时提升位置
之后说到了MPContentMPPlayableContentManager
如果你是媒体应用那这就尤为相关
希望今天大家都清楚地知道
这些API易于采用并且容易测试
在网上可以获取更多的信息
以及一些精彩的相关会议
如果还没有看的话你应该去看看
这里有很多与SiriKit相关的工作
有很多与搜索API相关的工作大家今天都看过了
以及过去两年来的一些先前的会议
围绕Handoff和上述的搜索API
最后我在结尾说一下这个领域
我们公司会继续投入下去的
我们需要各位开发者所做的事
就是告知我们你们应用的功能
以尽可能最详细的方式
因为从根本上讲我们越了解你的应用
我们就越清楚何时是推荐的最佳时机
所以今天你看到了
很多不同的情况中语义细节是不同层次的
你可以将活动或文本域注释进去
我会尽可能多地鼓励你
当你做的时候要尽可能地外显出来
不仅支持我们今天讨论的功能
同样让你的应用处在优势位置面向未来
感谢大家今天的到来
祝愿大家在WWDC和周五过得愉快
再见