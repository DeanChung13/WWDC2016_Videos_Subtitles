设计出色的Apple Watch体验
大家好
我是Mike Stern
我是Apple的用户体验推广
今天很高兴见到你们我要谈谈Apple Watch设计
在今天的研讨会中我们要讨论如何应用设计最佳范例
以及如何用watchOS 3新功能
来设计Apple Watch快速、精准、愉悦的体验
但在此之前 我要先说一下基础技术
毕竟你们中有些人从来没做过watchOS应用的设计
Apple Watch应用有三个基本组成元素
分别是complication、通知和应用
complication就像小工具人们可以把它显示在表盘上
complication这个词来自于传统的制表业
是指钟表的功能除了显示小时和分钟以外
complication使设计、制造 和修理手表
变得更昂贵、更复杂
可以说是名副其实
你们很幸运complication变得简单了
在Apple Watch的开发上也更强大了
Apple Watch上的complication提供最快速的方法
让人们获取信息
并提供快速打开应用的方法
通知会告诉人们 重要事件他们可能会忽视的
因为通知也是交互式的
所以它们能促进使用应用的人们之间的交互
最后 应用可以为你的产品或服务提供更深层次的体验
要提供complication或创建手表专用的通知
你要先有一个应用
这三个基本组成元素是必不可少的
每个元素都起到一部分作用
在watch应用的整个用户体验中
那么 比如说假如我用watch订了晚餐
我可能得先按一下外卖应用的complication
打开应用
然后用应用下订单
再然后 我很可能会收到一条通知
显示预计送达的时间
在我等待外卖送达的过程中
我会时不时查看一下complication
看还要等多久
当订单即将送达时
我可能还会收到另一条通知
最后 如果我还没有给配送人员付小费
我可能也会收到一条通知问我是否愿意付小费
这就是组成元素的基本功能
今天这个报告会帮助你了解如何设计每一个组成元素
但在此之前
还有一些更基本、更根本的内容我想和你们一起讨论
即时间的概念
Apple Watch设计巧妙可以支持轻量级的互动
意思是人们能接收信息
并在短时间内执行
我以为这是一个显而易见的事实
但很容易被忽略
互动需要有多快 当你设计comps
或在模拟器里测试你所开发的功能时
在设计应用时 你总想
发现一种更快、更简单的用户流
总能有一种优化方法
比如 很多内嵌应用就能很简单、很迅速地导航
以前 在你开始健身之前 你要
先进入主屏幕 找到并启动应用
选择一个健身类型再选择一个目标或重新使用
上次的目标 然后按开始
新流程就更简单了
尤其对于使用健身complication的人来说
只需按complication
然后点开始 就可以了
现在快速启动使人们不需要在屏幕上
选择健身目标 并且移除了
独立的开始按钮
现在 绝大多数人都采用了这样的健身方式 日复一日
所以 对这些人来说只需要按两次就可以开始健身了
而且在健身过程中会显示UI
这个UI也被优化了可以更快地进行交互
以前 人们要滑动七次屏幕
一是控制 一是各种健身指标
在这些屏幕之间进行跳转要花很长时间
在watchOS 3中只有两个屏幕控制和指标
几乎不需要跳转 除非你已经完成健身
或者你想休息一下
这就让人们有时间关注其他更重要的东西
当跑步或骑车时
更关注你的节奏、步伐和呼吸
小心汽车和行人
可以欣赏风景 并让自己看起来更酷
Apple Watch设计和工程师团队在watchOS 3
这个版本中共同提出了三个重要主题
我觉得跟我们每个人都息息相关
这些主题都是方便查看的、可执行的、响应式的主题
方便查看说的是信息呈现可以立即理解
通讯必须清晰 不能受干扰
应该只显示最相关的信息
最好应用显示的信息也是可执行的
意思是鼓励人们采取物理行动来响应
你的应用所传达的或更方便地让人们
从应用或通知中使用功能
并且应用应该是响应式的
启动时间和屏幕加载应该尽可能短
内容和数据应该总是最新的
并且UI反馈要及时
现在要让你的应用更方便查看、可执行力更强、响应更及时
就要对watch OS中的导航模式和核心架构进行大幅度调整
新版Dock提供一个可浏览的集合
包含他们经常使用的具有实效性的、情景关联的时刻
Dock中的应用仍然在内存中
可定期执行后台更新
意思是能很快从Dock导航到应用...
且人们不用花很长时间等应用更新内容
一旦打开了应用
就可以直接在各屏幕之间跳转
很大程度上缩减了跳转时间
这些变更可以显著减少整体交互时间
事实上 在watchOS 3中内部目标交互时间
已经从5秒缩减到了2秒
毫无疑问 当我第一次听到这个消息时 我想
“这相当了不起”
我的意思是 我实际上还要花2秒钟
来说“2秒钟”这个词
但真相是 执行任务
如查看游戏分数、查看天气情况、
或查看股票都可以而且都应该像那么快
现在你可能不只花几秒钟来
查看天气、游戏分数或股票
但每次互动都应该只需要几秒钟而已
而且操作也应该很快
简单的操作只需要单一的决策
就能在Apple Watch上顺利运行了
人们应该设置一个计时器
或打开警告
或检查提醒列表上的事项
在2秒钟内或更短时间内
现在就算你不能把互动时间缩减到2秒
这种尝试也会帮你发现工作流程中低效的地方
并找到解决方案
好了 现在让我们谈一下具体内容
关于如何开发优秀的应用、通知和complications
依我个人所见
complication是Apple Watch上最简单、
最方便操作的交互
查看complication跟
抬起手腕看一眼一样简单
不需要额外的交互
这种交互无疑只需要2秒或更短
我们在watchOS 3和iOS 10中做出了重大变更
提高complication的关注度...
使complication的安装更简便并赋予它们更多功能
对于初学者来说 你们现可在iOS上用Apple Watch应用
浏览和配置complication了
这很有意义 因为很显然这种交互
至少需要2秒钟
现在配置UI会显示 精确预览
complication在表盘上的外观
人们很容易明白complication是做什么的
也能看到所提供的价值
Apple Watch应用也有表盘图库
是用complication预设的
并且有一个专用的第三方complication部分
如果你已经做好了一个complication bundle
而且Apple Watch也已经安装了你的iOS应用
Apple Watch用户就会在此看到你的complication
若你的complication看起来很有用
人们只需要按一下就能安装
将在后台安装你的watch应用
complication功能真是一种很不错的方式
来提高对watch应用的关注
现在人们更容易了解
你的complication了
另一个重要变更是性能的变更
任何应用只要有complication
安装在用户当前表盘上它就将一直在内存中
并在后台定期更新
意思是 启动时间将更快
而且应用数据应该也不会那么陈旧
complication是一种很出色的应用启动方式
而且它们所显示的信息
会经常吸引人们想要了解更多
因此 这个过程得快
也就是说 看到现在的气温你可能会想
了解下周的天气预报
或者 看到你的原始股正在盈利
你可能会想了解整个市场的状态
complication的最后一个重大变更是更新频率
在watchOS 3中你的应用可实现
每天更新50次complication
你可以控制更新的频率和时间
因此一个旅行complication更新最频繁
在航班出发和抵达前后
而运动complication可能会更新最频繁
在你关注的比赛进行时
通过控制更新时间
必要时你的complication可以保持当前状态
开发complication时请考虑到外在因素
和用户活动模式会对实效性产生何种影响
complication更新的
所以 如果你要创建一个Apple Watch应用
你应该做个complication
这东西 这么流行 肯定是有原因的
在手表用户和手表制造商之间
虽然很复杂 但也值得我们付出努力
我希望我说的很得体至少是推销给你们
制作complication的想法
如果是这样的话 我想跟你们谈一下
制作优秀的complication的必要条件
在设计complication时最重要的是考虑
选择显示哪些信息
优秀的complication会对那些问题作出回答
人们在日常生活中经常问自己的
几乎每天开始工作之前我都会去跑步
所以前一天晚上 我可能会查一下
日出的时间
然后才定闹铃
起床后 我想知道户外的温度
我就知道该穿什么衣服去跑步
我还会查我第一个工作会议的时间
以便我有足够的时间用来跑步
还会查一下交通状况
确定我不用早点出发去上班
现在 这些问题的答案会直接影响我一天的计划
如果就能得到答案
只需要抬起手腕
那么complication会对我的生活提供真实和即时的价值
而且complications可以作为一个很强大的动力
鼓励你行动起来
执行力更强
比如活动complication
显示我的健身进度 朝着我的目标努力
我能看到我是否一直在坚持完成目标
或是否要在下班以后带着我的狗来一次超远距离的散步
WaterMinder的complication显示出我的进度
朝着我制定的日常摄水量目标
看起来似乎我有点儿落后了
所以我要抓住这个机会喝点儿水
请稍等
那么 如果你只选择一件事通过complication
与用你应用的人进行沟通
应该是什么呢？
他们最想了解什么
在日常生活中？
那个信息是否频繁更新来保持趣味性？
有时候 这个问题的答案并不是很明确的
如果你不能完全缩减为一条信息
你可以考虑让人们自己做出选择
CARROT Weather应用就如此
它让你配置来你想看到的天气信息
气温、温湿度、风力、紫外线指数、
降水、降水概率或湿度
加利福尼亚的夏季几乎从不下雨
所以完全没必要查看降水概率
今天的概率是0％ 真是太惊人了
顺便插句 我今早看了天气预报
明天应该会下雨
所以要注意防雨
很及时
但在夏季的同一时期
紫外线指数是个非常相关的信息
让complication自定义
是个很不错的功能
CARROT Weather还实现了一个很棒的功能
就是使它的complication方便查看
每个元素 除当前气温之外
都使用了简单而有意义的图标来标记所显示的值
而且并不会勉强塞入太多信息
因为会增加更多的文本和图标
文本和图标太小了 很难看清
若你从未做过complication
你得了解一下complication元素
圆形、小模块、大模块、小实体和大实体
在watchOS 3中又增加了超大模块和超大实体
我原来打算做一个音响效果但我没时间
complication家族的每个元素
都由一个或多个complication模板组成
并对应指定的表盘
颜色表盘使用圆形complication元素
模块化表盘使用大模块complication元素
和小模块complication元素
简单实体和精密计时表盘
使用小实体complication
而实体和米奇表盘
则使用大实体complication元素
全新的超大表盘要用
有人想猜猜看吗？
对了
超大表盘用超大complication元素
你们反应很快
我希望你能把这些记下来
因为你查不到这些信息
哦 我只是开个玩笑
所有信息都能 查到
从watchOSHuman Interface Guidelines中
这里可以找到 所有信息
手表应用设计相关的
我强烈推荐先看一下这个
重要的是你要尝试做一些东西
使用每一个complication元素
这样人们就可以在表盘上用complication了 他们可能会很喜欢
当然 一定要用占位数据
在complication中那是人们能看到的样子的实例
当他们实际使用你的complication时
如果没有占位数据 人们就不可能会期待
你的complication有什么功能
好了
你们看到了有些complication会提供更多空间
给更详细的信息
在模块化表盘上
如果某人把你的complication放于中心
他们一定是经常关注你的应用所传达的内容
你可以抓住这个机会再多提供点儿信息
他们可能会觉得有用
事实上 你可能想显示完全不同的信息
基于complication元素
如果天气信息对你来说真很重要的话
你没有理由不装两个
CARROT Weather complication的实例在你的表盘上
也许你会使用大模块来显示当前气温和天气情况
用小模块来显示降水概率
即使你还没想好要 显示什么信息
在你的complication中
你也可以做一个应用启动器
Just Press Record这个complication
一个记录语音备忘录的应用其实就是一个应用启动器
按它当然可以启动应用但是还能开始新录音
超级方便和快捷
这再清楚不过了 我们喜欢complication 很喜欢
我们认为戴Apple Watch者
越了解complication作用
越想更多的complication
为了更方便地获取这些complication
在watchOS 3中 人们可以很简便地切换表盘
只需要轻轻滑一下就从工作日complication
切换到健身表盘
并从健身表盘切换到周末表盘
现在想一下
我们日常生活中的各种事儿
对吧？事情多得令人吃惊
哦 我是认真的
我们健身、我们约会、我们运动、我们旅行、
我们做体育运动、我们做其他各种活动
现在 更容易匹配表盘
和所安装的complication根据你正在做的事情
这样人们应该在Apple Watch上
会使用更多的complication
你也做一个这样的complication吧
好了...以上说的是complication
现在 我们继续探讨通知的最佳范例
通知应该有用、及时
并且要精心设计
来表达精确、清晰的信息
换句话说 应该方便查看
请记住 收到通知的人
可以在任何地方 正在做任何事
他们可能正在吃饭、正跟朋友约会、
正搭乘地铁、正在喝水、
或正在开会讨论一些很重要的事
很多时候 人们正聚精会神地
忙自己手头的事儿或正全神贯注地欣赏这个世界
所以你的通知要
表达清晰、扼要
幸运的是 使通知方便查看并不困难
首先 你要提供一个有意义的标题
人们看通知分两种 瞥一眼和仔细看
就像这两个词所暗示的那样瞥一眼是
快速提供通知内容的概要
而你提供的标题将会显示在这儿
有时候标题可能会提供所有
需要从通知中了解的信息
其次 只显示必要信息
我必须要强调这一点
通知里显示的信息越多
人们越难抓到重点
比如你正在 做一个登记入住通知
给一个旅行应用
通知可能包含 各种各样潜在有用的信息
跟游客航班相关的
但在一条通知里 像航班号或你自己的名字这样的
信息并没有那么重要
所以我们要去掉这样的信息
第三 先显示重要信息
可以把最重要的信息显示在顶部
人们很可能会快速读取信息
而不需要往下滚动
这非常有帮助 若某人手里正拿着东西
不能腾出手来滑动屏幕
或查看Digital Crown
所以 对于登记入住通知
我们要把航班号 这样的内容
和登记时间 挪到通知的最后
第四 改变尺寸和外观
创建清晰的视觉层次
你的通知应该让人们
首先去关注最重要的信息
这个通知的信息很全、很对
显示的顺序也对
但每一条的视觉权重都一样
Apple Watch的通知定制性很强
你可以完全控制字形、布局、
背景和边框颜色
这个功能可以帮助人们迅速找出最重要的通知
这个设计真正把重点放在
像几等票、座位号、出发时间和路线这样的信息上
且这个通知的目的是让你现在办理入住
表达的很清晰
最后
精心设计的通知经常使用图标、
图形和动画来进行快速地表达
图形表达更迅速、
比文本更清晰
图标可以节省空间 让你的通知
在屏幕上全部显示出来
但需要注意的是 有些图标并不是通用的
或可能产生误解
所以你要采用被 广泛使用的图标
各种族和文化
或你了解 图标的象征意义
使用你应用的人能明白
简短、有意义的动画是一种优秀方式
补充文本并引起人们注意的
图形和其他可视化数据不仅能提供
更有趣的可视化体验
还能表达更多的意思
但在设计通知时还要考虑一点
你要认真思考为何以及何时发送
在错误的时间收到通知
只会分散注意力或让人讨厌
如果你现在收到了一条通知你会觉得很恼火
除非 更重要
比现在的事
这是绝对不可能的
因为 Apple Watch会在手腕上震动
收到通知时 所以很难错过某个通知
如果你的应用给人们发的通知
并不那么有用 信息量也不大而且也不及时
人们很可能会完全关闭你应用的功能
通知发送
那么...
如何了解为何以及何时发送通知呢？
嗯 最好的方法是确定什么是最相关的
对于使用你应用的人来说
以及他们什么时间最可能去执行
我有两个很出色的应用
我有两个很出色的例子
第一个是非常了不起的天气应用叫Dark Sky
Dark Sky会在天气突变时通知人们
比如要下雨了或雨要停了
在Dark Sky这个示例中相关性是由情景因素
决定的
通知会基于用户的地理位置或用进行发送的
距离气象系统远近获得的定位
通知要提前发送
这样 有时间去拿伞
在倾盆大雨之前
因为这些通知都是情景相关的是及时的
所以执行力更强
如果知道雨要停了 我可能会
准备去跑步
如果知道要下雨了 我可能会
躺在沙发上打个盹儿
除了情景因素 用户偏好
和模式能提供出色的洞察力
了解人们想知道什么以及什么时候想知道
具体地 让我们看一下另一个示例
Streaks是一个帮人们养成好习惯的应用
刚刚获得了Apple设计大奖
人们每天最多能选择六个任务
如该应用名字所表示的
这里的目标是一条一条的
因为每天都做某事就能变成一种日常习惯
所以 如果你想养成 的习惯
每天要做强化训练
我要做的是学吉他或弹吉他
或记得给狗盆填满水或遛狗
Streaks会提醒你去做这些事儿
我的狗从来没这么健康过摄水量也从来没这么充足过
虽然他们并没意识到但实际上他们很喜欢这个应用
当然 这里的重点是这些事是
人们想定时去做但可能会忘记做的
所以Streaks用通知来提醒人们
但只有在正确的时间收到提醒才有效
人们应该在最可能去做的时候收到提醒
或者 换句话说 在他们最有空的时候
但Streaks是如何知道具体时间的？
嗯 首先 它并不知道
关于它是怎么操作的让我们先来看个具体的例子
现在我正试着养成弹吉他的习惯
在一天结束之前的某个时间
我会收到一个弹吉他的提醒
不会太晚 那样我就没时间弹吉他了
或者我已经睡着了
但也不会太早 比如说我还在工作时就收到了
那么 为简单起见
比如说我在晚上7:00收到通知
这稍微早点儿
那么我可以按一个30分钟的止闹按钮
一直拖 一直拖直到我能弹吉他为止
当我弹吉他时
我会在应用中将那个任务标记为完成
Streaks会记下该时间
日复一日 我每次都会标记完成那个任务的时间
这样 Streaks就会越来越精确地了解
我一般在什么时间弹吉他
Streaks会用那个时间来制定给我的提醒
并在正确的时间自动发送给我
这是个简单的启发
实际发送时间会提前30分钟
因为很明显我不会立刻放下所有事
一看到通知就开始弹吉他
然而 自动调整时间和通知有时候并不合适
你可能想就在一个特定的时间完成某些任务
Streaks也可以做到
或者也许你不想逐个收到通知
只想每天收到一次提醒
而Streaks也能做到
你可以禁用单一任务通知
或关闭所有通知
所以 通过明智地选择通知发送的时间
和为用户提供为什么以及什么时候收到通知的完全控制
Streaks发送的提醒不太可能会打扰用户、
被忽略或被嫌弃
Streaks发送的通知都在可执行的范围内
因为它一般会提醒人们执行一项身体力行的任务
但使通知可执行的字面意思也是
给通知添加行为
我鼓励你们探索如何让你推送的通知执行力更强
要从手腕上迅速进行分类
是一件很厉害的事
通知可促进使用你应用的人之间的交互
而且会毫不吝啬地在日常生活中
激励人们
一条通知 最多可以执行四种动作
一定要只显示真正相关的动作
与通知内容
确保把动作标记地清晰、简洁
并使用面向动作的动词
请尝试关注那些按一下就能完成的操作就一下
然而 有时候可能会需要一个或两个额外的步骤
多步流程会把人们带入你的应用中
一般来说会有点儿痛苦
因为应用需要时间加载
但在watchOS 3中当显示应用的通知时
会在后台启动你的应用
这就确保应用的数据是最新的
并且提前加载应用 方便人们查看
所以不要回避这个问题要让人们进入你的应用
如果必要的话
现在 谈到把人们带入你的应用
我们正好可以谈谈应用
watchOS 3将完全改变人们使用应用的
体验和互动
让我们看一下最重要的几个变更
以及这些变更产生的意义
让我们从新版Dock说起
人们最多可以在Dock中放10个应用
并且Dock中的每个应用都在内存中
以便能从Dock快速进入应用
Dock中显示的是每个应用的快照
这些快照应该包含丰富的信息并方便查看
应用的快照要定期更新保证数据是最新的
Dock中的应用在后台每小时至少启动一次
这就就能取到新数据更新应用的UI
并请求系统创建一个应用的新快照
如果必要的话
当在Dock中查看应用时会唤醒应用
如果内容有变化 会更新应用的快照
如果有人把你的应用放在Dock中
你应该为此感到高兴
因为放在Dock中就意味着你的应用包含的信息
正是人们想随时了解的内容
正因为如此 重点是应用的快照
不仅得是最新的 还得是相关的
在某些情况下 显示人们最后一次查看的屏幕
上次使用应用时
可能就不是很相关
幸运的是 watchOS 3会提供一个API 可以跳转
到不同的屏幕而非停留在最后一次浏览过的屏幕上
那么 比如说 有一个棒球应用
显示了当前比赛和即将进行比赛的列表
当然 按每个列表项都能进入
比赛相关的详情页面
好了
现在 假如你自己是这个应用的用户
你最后一次看该应用时看的是这场比赛
退出后 在Dock中看这个应用时
你很可能会希望继续得到那场比赛的详细信息
如果比赛结束了 巨人队赢了
你很可能仍然希望在详细视图中查看这场比赛
但是过一会儿
这场比赛的信息变得
越来越不相关
你可能 了解了最后的得分情况
从应用发送的通知中、从朋友那儿、
从Twitter上或新闻里
在某一时刻 这个内容就变得完全不相关了
你不再对那场比赛感兴趣了
也许你正期待看到第二天的赛程
或者如果你钟爱的球队正在打一场新的比赛
并且已经开始了 你就不想了解那场比赛的信息吗？
这些就是你需要问的问题
关于应用的
同时 我希望你能考虑一下以下这些最佳范例
第一 也是最重要的一点
你的目标是主动了解用户的兴趣和需要
要站在他们的立场上思考
把事件放在一个时间轴上是一种非常有效的技巧
及时提取重要事件 然后问自己
“这些事件会对什么人产生什么影响？”
在我刚刚举出的棒球应用示例中
我猜测人们可能会想在比赛开始前后 浏览比赛信息
或在比赛期间
而在其它时间 同样也是这些人可能想要了解
整个联赛的日程表
然而 很可能是一个很简单的日程表
个人偏好可以 产生重大影响
对最相关的信息内容
比如 谁赢就支持谁的人怎么会去关心
某一个球队 他们可能希望看到完全不同的内容
而忠实的棒球迷则想关注每场比赛
对于其他的应用 有其他情景因素比如时间
和地点可能对人们想看到的内容产生巨大影响
一般情况下 人们并不总是喜欢看到
一个app产生出人意料的变化而不保存当前状态
那样人们会感到困惑或迷惑
所以 如果你选择把人们跳转到一个不同的视图
你要以一种有逻辑的、可预见的方式来进行
最好是人们一点儿都不会意识到有什么变化
就算他们感觉到了变化 他们也应该能做出一些 的准确猜测
关于应用的UI状态为什么总是在变化
我并不推荐
把应用的快照做得跟应用完全不同
这样会使应用难以识别
而且更不容易找到
只提供部分信息 完全没问题
或隐藏某些不相关的内容
当应用在Dock中显示时
但是 如果你想提高某些内容的易读性
那样也是可以的
但不要做得完全不一样
接下来是避免 显示警告、
确认对话或异常状态 在快照中
情景完成之后
这种内容可能就没什么大用了
事实上 这种内容很容易被人误解
或毫无意义
所以 根据不同的情况
可以考虑 用程序屏蔽这些内容
在一定时期之后
最后是优化应用显示界面
在微型表单中的
在Dock中 应用会等比例缩小
这就像 一个相似数值
是原UI尺寸的62.4851％
你一定希望避免文本和图形
在这么小的尺寸时变得难以辨认
正因为如此 状态栏的字体粗细
嵌入应用和大量文本都从常规变成了加粗
小尺寸时 粗字体看起来更清楚
而且对于非常关键的信息
可以试试用大字体
这就需要从界面上去掉一些东西来获得更多空间
但无论怎么样 都不是件坏事
现在 按照这些指南
你的应用在Dock中看起来会尽可能地方便查看
说到方便查看
你们中有些人可能会想到快捷视图
快捷视图会 收集
及时的、情景相关的瞬间从用户经常使用的应用中
无独有偶 实质上Dock的目的也一样
在简化整个平台体验时
在某种程度上说 Dock是由快捷视图演变而来的
反过来说 在Dock中快捷视图似乎没什么用
所以就把它从watchOS中移除了
这就表示 你要投入到快捷视图设计中去的时间和想法
完全可以应用到考虑如何设计
应用使它在Dock中看起来更出色上
好了
那么 应用在watchOS 3上的另一个重大变更是
一个很简单 但很强大的改进就是人们如何在应用内跳转
绝大部分现有Apple Watch应用的结构都是分层结构
一般来说就是一份顶级列表和一些详情页面
这一点儿都不意外因为我们倾向于分层组织数据
遗憾的是 在这些页面之间跳转
会很慢因为你每次都要先返回顶级视图
比如说 如果我想查看某些详情视图
我选择其中一项 打开 返回
再选择另一项 再打开 再返回
以此类推
这就像你在一栋房子的其中一间屋子里
你想进入隔壁房间
但是 要进入隔壁房间你得上一段楼梯
然后再下另一段楼梯
应该更快捷
就像进入隔壁房间只需要打开一扇门就可以了
那么在watchOS 3中我猜我们现在有“门”了
现在可以 直接从一个详情视图跳转到
另一个详情视图 通过上下滑动或使用Digital Crown
可以想象成是纵向分页从一个详情页面到下一个详情页面
如果你的应用已经采用了分层结构
那你应该好好考虑启用这个功能
但有一点要特别指出这种行为只能
当详情页面比显示屏尺寸短时才起作用
所以在老版本的Weather中
未来10日天气预报的页面看起来就有点儿高
从今日预报页面上向下滚动来查看未来10日天气预报
在新版Weather中信息被推送到
一个子视图 这样所有内容都能一下子适应页面
所以 如果你想这样做你可能得先重构你的设计
使一切都跟屏幕尺寸匹配
如果是分页应用
现在是时候切换到分层
或考虑切换到分层应用了
用Digital Crown导航效率更高
比从一个页面水平地滑动到另一个页面
而且分页应用也不支持分层
显而易见 这里并不是一个限制
包含大量详情的顶级列表视图是很有帮助的
从分页结构变成分层结构以后
我们的Weather应用可同时显示
多个城市的温度最高值和最低值
这很方便
好了
应用在watchOS 3上的第三个重大变更跟粘性有关
听起来很有意思
粘性描述了一个应用能在前台停留的时间的长短
在watchOS 3中应用可以停留约8分钟
比以前长多了
当人们在用你的Watch应用时
放下手腕
当他们再抬起手腕时首先看到的就是你的应用
只要放下和抬起手腕的时间不超过8分钟
事实上 每次抬起手腕计时器都会重新设置一个8分钟
应用粘性剂真的是一个非常重要的变更
Apple Watch应用本意就是帮助
记录可以持续数分钟甚至数小时的活动
但在此期间 Watch显示屏可能会休眠一段时间
我们可以用购物单应用来举例
购物时 你的绝大部分时间花在看价格、读标签、查看产地、
避免扔到其他人的购物车中
及让自己看起来更酷
还有很多诸如此类的活动
我们叫做会话活动或基于会话的活动
做晚饭、做体育运动、健身、问路
这些事儿都要持续一段时间
在此期间 人们会时不时地看一下手表 做任务
如果粘性够大会立即把你吸引到应用中
你最后一次看的这就节省了很多时间
好了
现在说应用在watchOS上的第四个重大变更
包括告知用户何时可以放下手腕
当人们在你的应用中发起某个任务时
他们期待获得确认反馈
任务是否成功？
遗憾的是 到底是成功或失败
或确定成功或失败是需要时间的
网络慢、Wi-Fi信号弱、
超远程蓝牙可能会导致通讯延迟...
或远程延迟
一些允许人们控制物理设备的应用
像车库门或遮光帘
就不能提供完成反馈
除非这些设备被完全打开或关闭
而且有些服务 比如外卖
或订车应用就涉及与他人之间的通讯
众所周知 人们并不总能立即给你反馈
在iPhone或Mac上
通常会让人们在你的应用中等待
当试着给他们返回确认反馈时
进度指示是保留人们注意力的一种方式
给人们提供了有希望的反馈
一般是这样 “请稍等我马上就来”
但是 可能会等上一段时间
而正在用应用的人会一直抬着手腕等
他们的肩膀开始酸了
过一秒钟就像过一分钟那么久
时间似乎变得很漫长
那么 为了在Apple Watch上避免发生这种情况
你可以用NSURL后台下载任务
来跟服务器进行通讯
有两个作用
第一 确保能
跟服务器通讯 在应用被挂起之前
第二 服务器响应后Apple Watch会唤醒应用
然后 反过来 你可以在后台快速反应
采取一些行动 比如发送本地通知
这也是watchOS 3的新功能
给使用应用的人提供反馈
比如说 假如你正在做一个外卖应用
人们点餐后 应用需要确认
餐厅可以完成订单 并提供一个预计的送达时间
你一定不希望人们在应用计算这些时一直干等着
相反 你可以立刻给出反馈
告诉他们餐厅已经收到他们的订单
你还可以 也应该告诉他们
一旦餐厅接受订单并给出预计送达的时间
你就会给他们发一条最终确认的信息
这样才算顺利处理了这个订单
如果你的处理方式合适的话
人们就会觉得没必要抬着手腕等着了
他们相信应用一定是在很努力地计算
来完成分配给它的任务
如果一切顺利
你要给人们发一个本地通知
告诉他们 订单已经收到
并且正在处理
如果有问题 要明确指出到底是哪儿的问题
并帮助人们修正问题尽可能少地进行额外互动
一切的关键是信任
人们要信任你的应用正在运行而且不会崩溃
而你也要确保通知他们
任务是否成功
既然关系到信任问题你一定不希望让人们误会
任务已经全部完成了
而实际上还在进行中
这是撒谎 这对于建立信任是很不利的
好了 这些都是应用相关的新功能
还有很多要说的
但我想先到这儿让我们回顾一下刚才的内容
我们谈到了新Dock UI和如何使应用
尽可能地方便可见和可执行
我们也谈了Digital Crown
如何使详情页和分层应用间的切换更有效
我们也了解了基于会话的应用将如何受益于
应用粘性的变化
而且我们刚才也谈了如何制定本地通知
当应用在后台运行时
能让使用应用的人们放心地放下手腕
并保持一种快速的交互
我们认为watchOS的这些改进
会激励你们创建流畅的用户流
并缩短用户交互时间
若Apple Watch团队止步于此
这将是一次意义非同寻常的发布
那我今天应该也会谈很多内容
但他们并没有止步不前
他们就像一群超凡的成功者
就是那种让我在高中时显得非常烂的人
在watchOS 3中 有一些很酷的新API和框架
你可以用它们做出一些不错的东西
对于初学者来说 watchOS 3现在提供SpriteKit和SceneKit
就是我们的2D和3D图形框架
SpriteKit和SceneKit可以渲染图形并让图形动起来
可以使元素响应手势
或者用程序控制元素 让它动起来
你可以实施一些物理现象
我的意思是 这很疯狂
力场、碰撞检测等等
你可能认为这些都是游戏里才能用到的技术
但是你仍然可以应用到应用中
而且watchOS 3也支持手势
直到现在 触摸输入的处理都是间接的
你应用上的控件和视图会响应
触摸事件 以你的名义
现在你可以完全自定义了
你可以自定义按、滑动、
摇动、
或长按
长按需要按一会儿好了
在watchOS 3中 你现在有未经处理的Digital Crown事件权限了
你可以用这个数据改变 颜色、尺寸
和其他可视化属性 UI元素的
你可用Digital Crown
变更选择或修改值
那么 你们能用这些做什么呢？
嗯 对于初学者 很多人都想
用一个环形或弧形将数据可视化
你可以用SpriteKit用程序画出这样的元素
这样你可以方便地使任何两个任意值动起来
你可以用默认的加速曲线
是一种非常棒的加速然后减速的效果
或者 你可以给加速曲线做一些自定义
比如活泼的动画或你想实现的任何动画
我们有大量的开源加速曲线
是由SpriteKit开发者团体中很慷慨的人设计的
你甚至可以修改环形的填充颜色
来反映当前的值
数据可视化 如图表和图形
可以用动画的形式表现出来
通过用程序画这个图表
我们可以让内容动起来增加视觉效果
或者我们可以用动画来吸引人们去关注
图表的指定部分
SpriteKit属性是可变的
所以你可很简便地把一个图表的意图修改为
显示不同的属性 基于用户输入
或者 也许你想 来让人们检查图表中不同的值
用一个摇动手势
就是这样
或者再好点儿让人们用Digital Crown
来做同样的事
或者可以允许人们缩放图表
或者可以让人们滚动查看
通过Digital Crown控制所有这些
在了解图表如何响应之后你可以控制响应式旋转的快慢
现在 我继续往下说
只要想起这个东西来就觉得非常有意思
但它可能会剥夺你所有的乐趣
我鼓励你们学习SpriteKit和SceneKit
并尝试使用这些技术
创建更丰富、更有意义的体验
但请记住一点
自由越多 责任越大
如果让东西动起来只是因为看起来很酷
这真的不是一个很好的动力
如果使用得当
动画可以把意思更快地表达出来从而缩短交互时间
同样的 图形交互
应该提供更丰富信息量更大的用户体验
最好能减少更复杂或更稠密的UI
好了
那么 我们今天说了很多内容
最后我还想留给你们一个思考
跟设计watch应用有关
设计优秀的Apple Watch体验需要保证流程简单化
但是保持简单 却并不是一件简单的事儿
如果你知道怎么做会给你的应用加不少分
保持简单涉及到要做出一些艰难的选择
即应用要做什么
意思是 要拒绝许多听起来很有意思的想法
但是你能做并不意味着你应该做
保持简单的另一层意思是深入地思考
人们的日常生活
人们会在很长时间内使用你的应用
而应用的设计方式应该是使用时间长短的真实反映
要少考虑一些静态屏幕多考虑一些用户流
事实是这些用户流并不是连续的、
不间断的体验
人们会在任意时间使用应用
当他们用应用时他们总是期待应用有新数据
并与他们经常变化的需求相关
你的应用应该提前假设人们想干什么
在任何一个指定的时间段
并尝试主动地提供这些信息...
和功能 这就是情景相关和实效性
要实现这个目的并没有那么简单
设计Apple Watch与设计iPhone
iPad、Apple TV或Mac不一样
我们了解这些设备应用的设计和开发
并且已经限定了我们 的观念对应用的复杂程度
如何跳转
愿意花多长时间来用你的应用
试着识别和挑战你自己根深蒂固的假想
当然我知道说起来容易做起来难
但这是制作优秀watch应用的至关重要的一步
关于Apple Watch
也许我能给你的最好建议
是考虑功能 而不是应用
优秀的Apple Watch应用可能只提供一个功能
比如说Press Record实际就只有一个功能
它的complication就是录音按钮而应用就是录音界面和停止按钮
很好用
即使我只用了一句话来描述这个应用
刹那间就过去了两秒钟
设计这种简洁的交互绝不简单
但我希望我们今天所讨论的概念和方法
可以激励你们去尝试
而且我很期待看到你们取得新的成果
用watchOS 3的新功能
为该新版本很多人都付出了非同寻常努力
而我们的努力就是为了帮助你们
打造更创新、更赏心悦目、平台可定制性更强的体验
好了 如果想更多地了解我们今天讨论的内容
你们可以看一下视频页那儿有许多附加资料
再说一次 一定要看watchOSHuman Interface Guidelines
那里真的有很多非常棒的资料
我们会在这个夏季持续更新
所以请定期查看
我们还有许多很不错的Watch工程研讨会
我强烈建议你们去参加SpriteKit研讨会
再看一些已经实现的相关视频
今年 我们有很多不错的设计研讨会
以后还会有更多
我强烈建议你们参加“内嵌式应用设计”研讨会
可以让你们的设计更人性化
这对于用户们来说相当实用
我还推荐今天早晨的关于“排印与字体”的这个视频
还有一场设计研讨会
讲的是互动式UI设计你可以总结自己的想法
提炼一些精华然后做出一些非常出色的东西
好了非常感谢你们来参加这场研讨会