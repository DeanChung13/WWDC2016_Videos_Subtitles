用Safari app extensions来扩展你的应用
大家好
我是Brian Weinstein
我是Safari团队的一名工程师
今天我将与Zach和Damian在这给大家演示
如何基于Safari app extensions来扩展你的Mac应用
在macOS Sierra El Capitan系统的Safari 10浏览器里
我们要引进一种新方法
可以编写 打包以及发布Safari Extensions
这些扩展涵盖
网络技术和Swift原生技术
他们与Mac应用捆绑可以通过App Store发布
这种新途径叫做Safari app extensions
Safari app extensions可以自定义网络页面的内容
通过使用JavaScript和CSS
他们也可以中断加载页面特定资源和元素
他们可以添加工具类按钮到Safari的UI
这些工具类按钮可以
为使用纯原生技术展示这些视图
最后Safari app extensions可以添加右键菜单项目到网络页面
Safari app extensions是基于app extensions的
应用扩展由代码和资源组成
在你的应用里也打包了这些提供用户访问
通过macOS访问应用的功能和内容
这也意味着需要使用Xcode
以及其他开发工具你们已经熟悉的工具
这意味着Safari app extensions可以运行原生应用
使用Mac应用上的API
另一个主要的优点是关于这些基于app extensions
发布自你的应用
意味着它们可通过Mac App Store购买
这也意味着你的用户不必单独下载你的扩展
在安装了你的应用之后
对于你们中需要
的应用和扩展间通讯功能的人
Safari app extensions主要的一个优点是
你的扩展总是和你的应用绑定
因为它们是打包在一起的
所以 你的用户总是会有匹配版本
的应用和扩展
扩展平台最厉害的部分
是构建多类型扩展的能力
今天我们要扩展三种扩展
第一种是内容拦截器
可以拦截加载页面上的特定资源和隐藏元素带
第二种是
可以修改网络页面的通讯过程
发生在JavaScript代码中即你的应用
代码和原生扩展之间通讯的扩展
第三种类型将展示怎么扩展Safari的UI
来添加你的应用的功能直接和Safari交互
我们开始介绍内容拦截器
为了构建一个内容拦截器
我要邀请Zach上台
Zach？
讲下内容拦截器吧
谢谢Ryan
大家好 我是Zach Li
我也是Safari团队的一名工程师
去年在Safari我们引入了新的内容拦截模型
除了开发扩展的代码来在运行时拦截加载和隐藏元素
我们构建了一个模型你可以声明提前拦截哪些内容
而且WebKit优化了这样的拦截机制
来提高运行速度和内容使用率
最好的一点是 这个模型保护用户隐私
资源拦截时 无需过问主机应用
至此 已看到了许多你们所写出色的内容拦截器
这些真正提高了浏览体验
用户也喜欢
我很高兴向大家宣布
我们很轻松地把现有iOS内容拦截器迁移到macOS
对于之前没写过内容拦截器的开发者
开发变得更加简单了
你们可以看看去年WWDC演讲developer.Apple.com上就有
我们来看看内容拦截器可以做哪些事情
我很喜欢甜点
我基本上一直在吃好吃的
显然 我有一个美食博客专注写我想要尝试的甜点
但是不幸的是 额 确实不幸
我会参加我好朋友的婚礼在下个月以伴郎的身份参加
我还得保持身材
至少我需要不至于穿不下礼服
因此 我开发了个iOS内容拦截器
会拦截所有来自我网站的甜点
即使我饿晕了 我到美食博客找东西
我也不会看到一个甜点
我来演示下甜点拦截器怎么工作的
这是我的源代码
我的甜点拦截器已经在运行了
打开Safari
甜点展示出来了
我们重写加载页面开启甜点阻塞器
所有的甜点都消失了
太棒了
我还是会想念它们的
我是一个iOS开发者开发了这个内容拦截器
我也很想把它迁移到Mac平台并且通过App Store发布出去
事实上这很简单
因为内容拦截器的API在这两个平台是一样的
我们先打开Xcode
创建一个新的Mac应用目标
叫做Mac甜点拦截器
我们快速切换到Mac应用主题
因为我们现在在构建一个Mac应用
创建一新的Mac应用扩展目标
使用内容拦截器扩展模板
叫做Mac拦截器扩展
当用户从App Store获取应用的时候
他们不必运行应用
为Safari找到app extension就可以了
但是除了App Store
应用必须运行在Safari里找扩展
因此 在这种状况下我想要
继续使用应用方案
我只要点击取消按钮
这个模板可以正确的设置一切需要的东西
这就导致了一个简单的内容拦截规则
为了创建自己的内容拦截器你只需要修改曾JSON文件
这真的很方便
在我们的例子里 我们可以和iOS应用分享资源
因此我们可以不管这个JSON文件
和Swift文件
我们可以使我们已经有的东西
对Mac应用、Mac app extension对象可见
为了实现这个功能 我们看这个实用侧边栏
在对象会员资格这里勾选Mac应用扩展目标
那些我们希望分享的资源
真棒 现在一切顺利
在此之前 我想要我的甜点拦截器更加文雅
需要换一个更好的名字和描述
在Safari Extensions偏好里配置
为了实现这个功能 我们看下app extension信息列表
不叫它Mac甜点拦截器扩展了
我们勾选下 就重命名叫甜点拦截器
我要提供描述的内容是
该内容拦截器拦截了我美食博客的甜点图片
另外 我想要提供一个更好的图标给我的这个扩展
我们移走这个默认的资源目录
然后拖动已经设计好的冰淇淋图标到我的Xcode项目
好了 我们来运行和浏览这个Mac应用
应用运行了
我们转到Safari
你可以看到 它显示在了扩展偏好里了
像所有其他的Safari Extensions一样内容拦截器默认是关闭的
我们开启这个甜点拦截器
刷新页面
真棒所有甜点都消失了
酷毙了
现在我吃甜点的欲望完全被拦截了
我已经准备好做新郎了
如你所见 我们不用写代码就可把iOS内容拦截器迁移到macOS
提前声明一点我们已经收到你们的反馈
可以最好让人知道你的内容拦截器是否开启了
因此我们引入一个新的API
就是getStateOfContentBlocker(identifier
有了这个API 举个例子
如果你回一下我应用不怎么好的UI
我可以为用户提供一个更好的体验
只要通过说明怎么开启内容拦截器
如果我侦测到内容拦截器是关闭的
该API和其他API将由我的同事Brian和Damian介绍
如果用户安装了Safari 10这些API已在Sierra和El Capitan里了
因为El Capitan的API是依赖于Safari 10
我们提供给你了一个方便的Swift API
你们可以在运行时确认
Safari ServicesAPIs是否可用
我们来看看Swift代码的API
如果SFSafari服务可用会返回真
你可以安全的使用API
如果不是 转向其他处理行为
这些都是内容拦截器带的新特性
要讲下其他有用的特性你可以看下Safari app extensions
我要把讲台交给Brian
Safari App Extensions
谢谢Zach
因此 下一个扩展类型我要展示的是
可以修改页面的内容
也可以与原生代码通讯
通过你的应用扩展
我们要构建一个应用
可以在网络里取代一个单词使用另一个单词
它可以获得要取代的单词和取代的单词内容
通过Swift代码的应用扩展
有两种方法可以给Safari app extension修改网络页面的内容
扩展可以注入CSS样式表和JavaScript内容脚本到页面上
我们来看看怎么注入样式表
样式表可以通过指定注入在
应用扩展Info.plist文件里这文件在NSExtension部分
样式表通过指定使用SFSafari样式表部分
Info.plist文件检查一个数组
这个数组包含了每个样式表的字典定义
每个样式表由键值对组成
值是指到相关样式表的路径
关于这个资源字典的扩展包
你之前已经写下的任何一个样式表
Safari扩展只会与Safariapp extensions工作
下一步是注入脚本
这几乎是一模一样的只是有不同两个键
脚本由SFSafari指定的字典里的内容脚本键
这个键表示脚本的路径而不是样式表的
你所有的扩展脚本都在他们自己的执行环境下运行
这也意味着永远没有命名冲突
不会和网络页面里的脚本变量冲突
这也使得Safari可以提供特殊的JavaScript API
到应用扩展的内容脚本
对于所有的网络页面不可见
比如 你的扩展可能需要通信
和你的应用里的原生代码通信读取偏好
或者执行只能在原生代码里做的操作
为了实现这个功能 我们已经添加了一个消息传递API
所以你的应用扩展的JavaScript代码
和Swift代码可以相互通信
所以 来看看这个图
你可以看到我们拥有Safari和你的应用扩展
这个盒子代表Swift代码在你扩展的进程里运行了
这当然就是沙盒啦
扩展已经注入脚本到了Apple.com
脚本会问这个应用扩展
应该替换哪个单词
为了实现这个 它只需要调用Safari.extension.dispatch
然后传递消息名称
我们来看看Swift代码监听这个消息的代码
响应返回的是应该替换掉的单词
每个Safari app extension有一个基类
这个类会被Safari调用方法
当用户和Safari交互的时候
当消息分发自脚本到应用扩展的时候
消息会收到调用的userInfo页面的名字
一旦这个方法调用了我们的扩展的主要对象
我们要确认的第一件事情是消息名称 然后在上面操作
要操作我们的扩展会发送回去一个消息
给SFSafari页面代表Apple.com
要替换的单词及以什么单词替换
我们在构造这个东西就在字典里
每个键代表我们要替换的单词
指表示我们的替换内容
所以 当应用扩展调用
dispatchMessageToScript(withName,userInfo方法时
消息从扩展进程发出回到内容脚本
脚本以及注入到Apple.com
我们看看脚本是怎么监听
这些消息并且在上面操作
为了在内容脚本里实现监听
我们先添加个事件监听器到Safari.self
因此 脚本可以监听这个应用扩展的消息事件
如果你之前写过Safari Extension
这看起来是不是很熟悉
接受消息的API在这个内容脚本里
几乎是一样的
当我们事件监听器开启的时候
因为我们获得了一个消息来自我们的应用扩展
我们首先要做的事情还是却消息名称
最佳实践是然后才在上面操作
为了操作这个消息我们想要遍历我们的字典
我们已在userInfo指定Swift代码里的消息
作为event.message暴露于JavaScript代码
到这里 我们已经拿到单词词典和替换内容
我们要开始遍历它们
然后在我们的脚本里调用方法执行替换
单词替换扩展我们已经讨论了的
已经可以在每个网站上工作
但是一些扩展只针对一些特点的网址起作用
Safari app extensions支持丰富的系统
通过指定特定的目标网站
另外Safari 10新增加了功能用户可以看到
你的Safari扩展需要访问哪些站点
像内容脚本和样式表
你的扩展的网站可以访问的在扩展的Info.plist里有描述
以SFSafariWebsiteAccess/key的形式
这是一个由两部分组成的字典
第一部分是网站访问级别
这个扩展指定了所有的访问级别
意思是它要访问用户打开的每一个网页
你看到了Safari的扩展偏好
警告用户相关信息当用户打开这个扩展的时候
在这个例子里这个扩展的访问级别是some
当访问级别是some的时候
扩展指定了一个列表包含了它想要访问的域名
在字典的允许访问域名部分
如果一个允许访问的域名以星标起始
它被通配符标示可以访问所有的子域名
我们已经讨论了你的扩展我们可以修改哪些页面
通过注入脚本和样式表
和这些脚本怎么和你的扩展Swift代码通信
你如何指定你的扩展可访问的网站
我要把所有这些要点集合到一个演示里
然后编写我们之前一直在讨论的单词替换扩展
Safari Extensions有趣的一点是
从代码开始和基于JavaScript的网页交互开始
很容易就可以把你写的代码挪过来
到一个不同的浏览器的扩展里然后直接指向Safari
我要做的事情是举个Chrome扩展的例子
这个扩展也可以实现单词替换
我要基于现在的代码创建一个Safari app extension
我会扩展这个代码以便于我们获取要替换的单词
以及使用Swift代码替换内容
所以我已有了一个应用带有一个图标
我要新建一个Safari Extension
因此 我在Xcode创建了一个目标
然后选择macOS Application Extension再选择Safari extension
我们就叫它Animalify
因为我们通过使用表情符号替换动物Animalify网页
Zach之前也提到了我们要运行这个应用
因此我准备激活这个扩展的方案
因此我们现在的扩展我们调到Info.plist部分
然后打开NSextension部分
你可以看到模板自动为我们创建了
我们有了内容脚本 一个工具栏项目
而要求访问网站就是我们的扩展要求访问的
我准备丢弃这个工具栏项目因为我们的扩展不需要它
然后改变访问级别为all
然后丢弃运行的域名列表
因为我们希望这个扩展可以在任何一个页面上运行
下一件事是打开我们的脚本
然后我要引入
我已大量为Chrome扩展写的脚本
你可以看到当脚本注入页面的时候
它会调用我们的替换函数然后替换熊为熊的表情符号
现在 我希望我的应用可以被替代为
我希望它展示一个列表罗列了各种动物 用户可以选择
他们希望替换掉的动物种类
现在我准备设计一个UI
为了实现这一点我们需要一个替换列表
从应用扩展获得该列表
因此 我没有通过直接的替换
而是通过发送JavaScript消息实现
通过发送给app extension询问替换的单词和要替换的内容
所以有趣的一点是Safari Extensions
的内容脚本在DOM加载之前就注入了
这是为了更好的弹性支持你的扩展
但是 一个单词替换器什么也不会做直到dom加载完成
我们要等待dom加载后再发送消息
因此 我们来看看我们的主要类
你可以看到我们已经有了一个实现
实现那些收到userInfo网页的具名消息
然而 我们准备丢弃这个
然后替换为some级别 通过我们之前幻灯片里讲过的代码
它做的事情只是检查消息名称
然后发送回响应给内容脚本
我们在这有两个替换只是因为我们可以
我们回到脚本然后监听消息然后响应
再次 这又是之前已讨论过了的代码
我们在开始时添加一个针对Safari.self消息事件的事件监听器
当消息事件触发的时候我们检查消息名称
然后从event.message获取替换内容
我们通过遍历所有这些替换内容来操作
然后调用同样的替换方法
这个方法就在之前脚本的起始部分
所以 现在我要创建和运行一个应用了
Safari可以发现这个新的扩展
你可想象这里有一长串动物名称而我已经勾选了其中的一些
这是我第一次试试该Safariapp extension
我还没有注册这个应用
我也没注册参加AppleDeveloper Program
意味着我没有开发者认证
默认的Safari只会显示
允许用户启用
已签署开发者认证的扩展
但是对于那些只是想要试用的人来说
我们已经增加了一个途径可以使你能够测试你没有注册的扩展
为了实现这个我准备打开“高级设置”
然后展示你们菜单工具栏的Develop菜单
在这个菜单里
我要选择允许未签署扩展选项
我要输入我的密码
然后这个动物扩展就显示在我们的扩展列表里了
我要开启它在每个人获得它之前
我之前在研究灰熊的食谱
我要重新加载页面就像你看到的那样
熊已经被替换为熊的表情符号
鲑鱼已经被替换为美味的寿司表情
这可以使得网页在浏览时更加有趣
这都说明了一个Safari应用扩展如何实现修改页面内容
你的扩展如何指定允许访问的网站
我们将要展示的最后一种扩展类型是
一种可以扩展Safari的UI并且增强
原生代码的功能并且可以直接引入到Safari
为了给大家演示我想邀请Damian上台
Damian ？
扩展Safari的UI
谢谢
大家好
我是Damian Kaleta是Safari团队的一个工程师
Brian已告诉大家SafariApp Extensions的基础性知识
现在我要在此之上构建一个应用
我要告诉给怎么实现扩展Safari的UI
好 我们开始
我已写好了这个简单的macOS应用
这是一个笔记本应用
你们可以从截图上看到这个图标倾注了设计者的爱
不幸的是应用本身没有
但是没关系这个应用可以让我添加笔记
保存之后可以之后再阅读
但是我想要从网页上直接抓取笔记内容
然后在Safari上修改笔记
而且有了新的Safari app extension模型
我有了一整套工具可以极大简化我构建扩展的过程
我需要完全不同的两个东西
我想要可以选择文本然后可以保存它
因此我需要一个上下文菜单
其次 我希望可以展示我最近的笔记
而且还可以修改它
因此我需要一个弹出框
在用户点击工具栏按钮时弹出框会显示
我们先来谈谈
工具栏按钮
工具栏按钮默认在智能搜索框下面
这样子用户可以快速而方便找到
扩展提供的功能
你可能期望如果你是一个事件用户
你当然可以简单的移动它
那么我怎么添加我的按钮呢？
我到了我的扩展Info.plist
我添加了SFSafariToolbarItem
以及四个不同的键值对
标识符 标签 图片和活动
且和所有系统工具栏上面的项目在一起
请注意 我在这使用的一个PDF文件
好的 Safari现在展示的是我的工具栏按钮
但在用户点击这个按钮时我的扩展会有什么反应？
Safari发送窗口工具栏的点击元素给你principal对象
提醒下你的principal对象是
可以处理所有Safari和你扩展之间通信的对象
而且如果你想要你的按钮根据加上下文的情况变灰
Safari提供了验证方法
并且你也可以批量设置你的按钮的文本
这通常表示为一个数值类型的值比如 红细胞计数
我们已经给自己设计了一个按钮
但是现在我要展示一个弹出框
当用户点击按钮的时候展示
这个弹出框让我在其中插入任意的NSview
这很棒 因为你之前已写了一些macOS应用代码
你会复用这些代码而且过程很简单
让我给大家看看这如何工作
你现在有一个基于principal对象的扩展
然后你希望定义一个popoverViewController方法
在你的principal对象里面
此方法里你希望返回自定义视图控制器
这个控制器代表一个视图你希望在弹出框里插入的视图
另一方面 还包含有Safari进程
Safari进程可以调用远程视图
远程视图可以简化你抓取回顾的过程
以及在弹出框展示的内容
如你们所期望的 我们会向你们提供
所有的事件 比如点击事件
有一种展示弹出框的方法是仅仅指定弹出框行为
而不是通过SFSafariToolbarItem里的命令
就是这些
现在Safari知道你们希望展示一个弹出框
你们会使用自定义视图控制器
弹出框也带来了一些方便实用的API
你们看这里
两个方法是popoverWillShow和popoverWillClose
他们可以帮助你做一些启动配置和清理的工作
第三个方法我们已经谈过了
这个方法可返回给你自定义视图控制器
好的 我们添加了这个按钮
我们可以展示一个弹出框了
我们现在来讨论下上下文菜单项
你们通常想要使用上下文菜单项的场景是
当你们想要操作页面的一部分内容时
但在我的例子里 我要能够选择文本然后保存它
我又去修改我扩展的Info.plist代码
然后添加了SFSafariContextMenu
这是一个字典数组保存了两个不同的键值对
文本和命令
然后当用户按下或者点击你的上下文菜单项的时候
Safari会发送contextMenuItemSelected对象
给我们的principal对象
请注意我们也在同时发送userInfo信息
这可以简单代表任何额外信息
你可能希望包括进你注入的脚本
比如在我的例子里 我希望一同发送selectedText值
因此在我的注入脚本里 我添加了上下文菜单的事件监听器
然后在方法里我调用setContextMenuEventUserInfo方法
Safari扩展对象上
注意 我实际上一同发送了selectedText
好 我很兴奋地给大家演示macOS应用如何扩展到Safari
我们开始
在我展示代码前
这是简易的macOS应用
你可以看到我只有两个便签
我可以在这插入我的便签删除上一个便签等
我们转到Xcode
我要给大家看的是三个不同的东西
第一个是Info.plist
请注意我在此处添加上下文菜单项
这是我的文本和命令
我也添加了我的工具栏项
现在我有了不同的四个字段
你们可以看到我在使用PDF文件
第二件 我要展示给你看的是我的principal对象
让我把它做成那样
我已重载了principal对象的两个不同方法
第一个方法是popoverViewController
这个方法可以返回我的视图控制器
代表了弹出框增加和移走的视图
第二个是
contextMenuItemSelected(withCommand方法
你看到我从这里获取我的userInfo
可以在这里分配便签
第三个我要展示的是我怎么复用
和分享macOS应用和我的扩展间的代码
当然通常你们不会使用简单的文件
你们使用会带来启发的框架
这是我的便签管理器
它会读取和保存用户的默认设置
它有一些简单的方法
比如removeAllNotesremoveLastNote等等
请注意我的目标设定是
我的笔记本应用可以设置所有的目标即macOS应用和扩展程序
好了 我们来到Safari
可以看到 我的扩展就在智能检索字段的旁边
我可以单击它 然后我最近的便签就会显示出来
让我带上笔记本应用
对比下
比如我在浏览博客的一些帖子
我们选这个
我们打算要将便签保存下来
所以我选择了这个
我命令 CTL点击它
然后我添加片段到笔记本上
你看到了我的便签也添加到这里了
我可以打开扩展就在这里
我现在要修改它
因为假设我不想要最后一个句子
我只要简单一删点击修改 瞧
在macOS应用里也反应出来了
因此 分析代码就这么简单
在你的macOS应用和扩展之间
我演示给大家看怎么添加一个按钮
我给你们看了怎么显示弹出框然后添加多个上下文菜单项
我现在要把讲台交给Brian
感谢Damian
除了把遥控器落在这了
总结下 今天我们展示了三种扩展
都是基于新的扩展模型而成为可能
我们展示了把你的内容拦截器
从iOS迁移到Mac是多简单
我们引入了新的API获取你的内容拦截器状态
也是我们对大家反馈的回应
同样简单的是把
修改网页内容的Chrome扩展迁移到Safari并且使其
在你的应用扩展里和原生Swift代码通信
最后我们看到了它强大的功能
你的应用是如何直接影响Safari
记住Safari app extension都是基于app extensions的
意思是可以利用那些原生的技术和API
扩展的代码以及你的JavaScript和CSS代码
用来修改和改善网页
因为Safari app extensions和Mac应用一起发布
为你们的用户提供了简单的安装体验
你可在 Mac App Store销售你的扩展了
欲了解更多本场演讲和有用链接的信息
请访问这个页面
Safari app extensions是大势所趋
我们需要你们的帮助使它越来越完美
若你们发现了任何漏洞或API缺陷请向我们提供反馈
在详情页面你会发现有个链接
可以留下反馈并且发邮件给John Davis
他是Safari和WebKit布道者
相关的演讲
我推荐大家去找一下往年的关于app extension的演讲
非常感谢