WatchOS 3的新特性
好的
谢谢
我很激动能跟大家讲讲watchOS 3的新特性
当然我们十分关注watchOS 3
努力优化系统性能
并对此做出了很多改进
以确保你所有的应用快速流畅地运行
我们还投入了大量的时间来优化导航
它实际上促进了性能的优化
因为我们能越快地让用户打开应用
他们就能越早开始使用也就能越快地
放下手腕能继续做其他事情
除了对系统进行提升
我们也花了很多时间
优化我们所有应用中不同的东西
所有这些改进实际上都围绕着三个主要方面
对于手表应用我向你保证也提醒你
你会听到很多这方面的信息在其他手表主题的演讲里
那么首先要保证的就是一目了然
要想手表应用能一目了然就需要很多不同的元素
最基础的就是表盘
因为表盘上的complication
给你很好的机会
显示最重要的信息
让用户在你的应用上扫一眼就行
当然 在watchOS 2我们也做了快捷视图
在watchOS 3 这个功能被合并进了一个新的停靠栏
这是显示简单明了的信息很好的地方
因为它很快就可以被找到无论从系统的什么地方
并且能让你十分轻松地大概了解和概览
你的应用上最好和最重要的信息
除了要能一目了然
我们还想让所有的应用都随时可操作
随时操作性也包含了很多内容
它可以指你能在手表上进行操作
你看到了我们已经重新设计了很多内置应用
以保证我们最常用的功能
只要点击几下就能轻松访问
比如锻炼应用现在就能很快进入了
并且只要点一下就能开始锻炼了
定时应用现在改进了常用定时器
你可以把它直接设在最顶部
只要你进入应用点一下
就可以开始计时了
这种方式是
我们极力建议你们去考虑的
就是找到应用里最常用的操作
把它们放到最顶层让它们更容易被访问
当然 可操作性并不一定意味着
你必须能对手表本身进行操作
它可能就只是指方便显示用户想要操作的内容
即便是他们最终不一定会在手表上操作
我想再次强调complications是最好的选择 新停靠栏也是
它们显示了是最要的信息给用户
方便他们在真实的情况下操作
第三个方面当然就是反应力
要保证你的应用保持更新并能及时响应
每当用户有需要的时候
我们对watchOS 3做的大部分性能提升
都是面向这一方面
就是让所有应用以最快的速度响应
通过将它们存在内存里这个过会儿讲
并且保证它们可以很快地恢复工作
我们就能保证它们拥有最快的反应速度
你最好能
确保应用的及时反应
就是采用新的后台应用刷新技术
这个一会儿我们细讲
来保证你的应用已经将内容准备好
在用户要使用的时候显示给他们
那么想到应用当然
我们可以回到应用的全屏视图
这是大多数人对应用的第一印象
但是这也许不是最常用的地方
让用户在Apple Watch上与应用互动
因为要让互动简短
我们有其他很棒的界面
能让我们更快捷地使用大部分最常用的操作
当然complications
直接在表盘上显示你需要的信息
还有通知 会以最及时的速度弹出信息
Apple Watch通知系统很棒
因为你要执行代码来弹出通知
其内容和自定义UI都正好是你想要的界面
当然 在watchOS 3上有了新停靠栏
打开应用只要按一下侧键
不管你现在系统的什么位置
那么 停靠栏里的应用很棒因为他们可以立即反应
你点一下它马上就会全屏显示
你就可以立刻开始互动完全无需等待
停靠栏这么好不仅因为它能直接与应用互动
还因为它能消化信息
watchOS2里的快捷视图
这个功能现在被挪到了watchOS 3的停靠栏里
所以你可以快速从你最喜爱的应用里
滑动浏览视图信息
因为它高度精简了来自所有应用的信息
所以停靠栏集合了我们能提供的最好的快捷视图
让你能快速地访问应用
并提供了更多的功能性
对于像Reminder这样的应用两者都要具备
你可以快速浏览你需要去做的事情
当你点进去的时候它会立刻全屏
并且可以互动这样你就可以勾掉事项了
对于其他类型的应用可能就只具备功能性
比如锻炼应用
我们将一些最常用的锻炼方法
你最想做的锻炼放到了最顶层
那么你可以点击它们让应用全屏
再点一下就可以开始锻炼了
停靠栏 如我们所说对于浏览信息也很有帮助
例如活动应用 这类应用好处在于
只概括显示这个应用的信息
在活动环里
通常都是全屏显示你可以看到高度概括的信息
这真正是一目了然很便于理解
活动应用经过重新设计如果你进入它
会发现应用的导航被简化了
在watchOS 2里它有四个水平排列的标签
每个都可以垂直拉动
而在watchOS 3里仅一个视图也可以垂直拉动
最顶部是活动的概括
下面就是细节显示
所以它又简单又快捷
让你不用进入应用就能看到你想要的信息
现在我们想让手表上的互动时间尽可能短
那么这个新的导航模式和这些改进
可以让应用立刻反应并启动
它帮助我们保证
那些Apple Watch上最常用的任务
可以在几秒钟之内完成
在你考虑
如何更新Apple Watch的应用
watchOS 3的应用或若你还没有应用
你就要考虑要放些什么内容进去
我会强烈建议你们花些时间
想想如何缩短互动时间
2秒的确是个很短的时间
但是就在争取达到这一目标的过程中你能真正找到
最适合你应用的设计方法
让他们在Apple Watch上给出最完美的体验
在接下来的时间里我要讲四件事
第一是后台应用刷新
就像我之前说的那样这是watchOS 3中最大的改进
这十分重要对创建反应灵敏的手表应用来说
我们会用很多时间来讲这一点
接着我要讲一点导航简化的内容
因为我们做了很多努力去简化系统的导航
但是下一步就是要简化应用里的导航
我将分享一些我们自己是如何做的想法
而且我相信你也一定能想出很多方法
去简化你的应用导航
之后我们再来讲一下拓展API的可用性
我们从watch SDK平台上带来了一些很棒的框架
还有了一些全新的框架
而且也对现有的框架做了很多改进
所以我们会讲到里面很多高层次的知识点
还会为你推荐一些其他精彩演讲
能让你了解更多细节
最后我们会讲可发现性和配置
因为创建应用只是第一步
你还要把它带到用户面前并且在手表上进行配置
那么我们就从后台应用刷新开始
后台应用刷新是很重要的一部分
在创建反应灵敏的手表应用时
在你开始任何工作之前
后台应用刷新就已经开始为你工作了
你不需要真的去采用任何API来获得它的帮助
那么第一件事就是
把所有用户喜爱的应用都存在内存里
他们在后台启动
然后暂停并一直处于待命状态
这样一旦用户要用它们
它就只要简单的恢复而我们就不用等待
一个完全启动的过程
那么 我提到过这适用于用户喜爱的应用
但我的指向十分具体
这是用户当前表盘上所有的应用
那么任何多功能表盘上的应用
就是他们最喜欢的应用
同样 用户放到停靠栏里的所有应用
也是他们最喜欢的应用
这些应用都存在内存里
并随时在需要时启动
这是用户最方便访问的应用
因为他们只要轻点一下表盘
或者只要滑动停靠栏就好
因此它们要一直在那里随时待命
反应越快越好
就像我说的你什么都不用做
即使是现有watchOS 2应用也能自动做到这一点
但在使用后台应用刷新时还是要用到一些API
你可以用它们让你的应用反应更快
一旦它们成为前台
就要保证它们是最新的并随时可用
你能用它做的第一件事显然就是
升级你的complication以及升级你的应用
让应用保持最新就要一直升级
另外还有一个很重要的方面
这可能不会那么直观
就是你还要更新快照
你可能会想快照是什么意思
因为你从来没有给快照写过代码
它特别适用于停靠栏里的应用
现在 当停靠栏第一次出现在前台时
所有停靠栏里的应用都在内存里
但是他们是暂停的当前并不运行
一旦停靠栏转到前台它显示的
就是一个快照是应用最后一次运行的状态
一旦用户选定了停靠栏里的一个应用
它就会恢复工作
即便它依然缩在停靠栏里
但与此同时我们还展示了一个快照
表示了最近一次的状态
重要的是快照也要更新
这样你就不会一直显示旧信息直到应用重新恢复工作
更重要的是如果你快速滑动停靠栏
而不停在任何一个应用上
它们在滑动中不会暂停和恢复
因此滑动时看到的只是上次最后显示的快照
所以你必须要确保
这些快照更新到当前的信息
而后台应用刷新就让这件事变得十分简单
一开始这里有些自动的行为
是系统给你的
甚至在你添加任何请求更新之前
第一个 应该很显然
如果你已经进入应用并使用它
那么用户可能已经看到了一些新信息
或者已经进行了一些操作想要更新这个快照
以便在下次显示
当用户退出应用
系统会自动安排一次快照更新
代你完成这件事
这处理起来其实十分简单
因为有了这个新的后台应用刷新方法
这是所有后台刷新活动要经过的路径
只要在WatchKit扩展代理上添加这个简单的方法
它会被回调在任何一个刷新活动出现的时候
那么第一个就是自动快照
这发生在应用暂停的时候
但用户可能也会在其他时候从应用上浏览信息
所以就要常常更新快照
我们就都自动处理了
另一个可能就不这么明显
就是在一个通知被浏览以后
如果用户看到一个长通知
他们可能已经看见一些新信息
将你应用里的新动态通知他们
如果他们进入停靠栏
但是看到的信息是过时的
肯定会很大跌眼镜
所以当你的通知关闭后
系统会自动安排一个后台快照任务
跟这个例子里一样
这样你就能更新快照和complication
从而保证一切都保持最新状态并且同步
当然 有的时候
你会想自己安排更新
你了解你的用户也清楚你的数据
所以有时候你就想自己主动更新内容
那么这里有两种方法可用
第一是关于complication
接下来的问题就是快照里要放什么内容？
首先也是最需要放进快照里的
就是你的应用里日常显示的内容
这样看上去很实时
并且用户打开应用时能看到你想要呈现的内容
但是你也可以选择
提供一些不同的自定义信息
这样在停靠栏上就很好看而且便于一目了然地理解
比如Dexcom G5手机应用
在这个应用里我最关心的
是我当前的血糖水平
所以在停靠栏里
我会看到突出的大数字就在屏幕中央
但是当我实际进入应用
我就会更关心细节而不仅仅是个读数
所以当我把应用全屏
它就可以转换并显示更多的信息
当我打开应用看到的在这个例子里
是一个历史图表显示过去时间里更多的信息
你不一定非要
在停靠栏快照里显示不同信息
通常不那么做
只要显示应用里的内容就好
但你的确有了更多灵活性所以如果对应用来说
在停靠栏快照里显示不一样的东西很有意义
那么就要保证进入应用的时候的转换
流畅和谐不会出现冲突
除了这些自动的快照任务
和保持快照更新
你可能也想定期
在应用后台更新数据
那么也有几种方法让你去实现它
现在 你可能只想上网
获取一些数据那你就使用
NSURLSession和Watch Connectivity
但是其实还有很多其他方法
首先一个就是更新complication
complications可以直接在表盘上看到
所以更重要的就是
他们也要实时更新
那么现在有一种更新只针对
当前表盘上的应用
这就是静默complication推送更新
现在这些更新类型都在watchOS 2系统下
但是它们不太好使因为你无法保证
在一天的时间内能更新多少
所以比较难以把握
你能使用多少和什么时候发送
在watchOS 3下这个更新有了巨大的改进
我们现在可以保证在一天的时间内
表盘上的每个应用可以收到50个推送更新
这很好因为它让你有机会
计划在一天的时间内要使用多少个更新
那么举个例子假设我们有个股票的应用
我们就用最天真的想法
就是在一整天里发布50个更新
这样就是每30分钟更新一次
这也不是太坏但是我们可以做到更好
如果我们思考一下这里显示的数据
它们的相关信息以及我们的用户行为
比如说假设我们知道
用户一般会在12点到6点之间睡觉
这样的话
我们就不需要在这个时间段更新
那么我们就可以把剩余的更新次数
分布在其他时间段
这样我们的更新频率就提高到20分钟一次
这是个很大的改进却只花费了很少的力气
当然 如果我们更了解
数据本身并能将其也纳入考虑
那么我们还能做到更好
那么假设我们知道我们的股票
只来自于纽约证券交易所
那么我们的更新只要在9:00到16:00之间
就是开盘的时候
这样频率就提升到8.5分钟一次
很显然
这个特定的例子不适用于大部分应用
但是这个理念是可以的
考虑下你所有的额外信息
比如 你用户的习惯
以及你所显示的数据类型
你就有很多机会来进一步提高用户体验
当他们在手表上使用应用的时候
但是这些都只是当前表盘上显示的complications
如果你的应用不在当前的表盘上
而是在停靠栏里或者在当前表盘上
推送更新似乎没有多大意义
还有其他方法能让你更新数据
在这些情况下 你可能会想
定期在后台更新
在一天的时间内
那么我们还有另外一个后台应用刷新API
它可以让你设置下一次你要运行的时间
而且每次运行都会有些不同的东西
供你选择
你能通过NSURLSession或Watch Connectivity下载数据
你也可以只从手表的数据库里下载新数据
前提是你已经拥有所有信息
另外
你还可以设置下次更新的时间段
所以这不是个固定的周期不需要提前都想好
每次运行你都有机会选择
下一次最佳的更新时间
这样你就可以按照数据类型进行优化
因为你知道什么时候会更新
现在 至少
你能保证应用可以每小时运行一次
但是我们还有其他工具可以让你
更频繁的更新
那么第一件事就是你的应用要支持complication
如果当前表盘上有complication
那么你的应用就可以
更快的更新不止每小时一次
但是即便不在当前表盘上
你也能提高更新频率
可用的更新总数
是固定的对所有当前停靠栏里的应用来说
如果停靠栏已满并且所有十个应用都在
那么每个应用的更新都是一小时一次
但是如果用户的停靠栏没有满里面只有几个应用
那么本来用于其他未使用的应用的更新次数
可以分发给当前的应用
这样的话一小时就不止一次更新了
在你设计应用的时候
也许一小时一次最便于计划
因为这是最低保证
但是记住你可以让运行
更频繁根据不同的情况
我最后想要讲的一点是关于complication推送
complication推送当你想到推送
第一个能想到的就是服务器发起的推送
这的确是一个选择
你可以从服务器发起complication静默推送
但是你可能想不到
其实complication推送
也可以来自iPhone上的应用
推送更新API其实是WatchConnectivity框架一部分
那么如果你iPhone上的应用因为某些其他原因而运行
比如用户直接在使用
又或者它在手机上运行了后台应用刷新API
它可给手表发一个complication推送更新
来更新complication的UI
所以 即便你没有服务器
也可以进行推送
并且可以利用这个方法
让你的表盘保持更新
这就是你要记住的
当你设计应用的complications和刷新策略时
那么现在来快速总结下后台应用刷新
和它的工作原理
而且我要特别再强调一次
它是创建反应灵敏的应用时非常重要的部分
无论你在Apple Watch上创建什么类型的应用
我强烈建议你们去看看
“让你的手表时刻更新”的演讲
更多地了解后台应用刷新
以及如何让你的应用保持活跃 灵敏和更新
那么下面我们来讲讲导航优化
我之前说过我们已经做了很多工作
优化Apple Watch本身的导航
所以系统已经可以很快的找到你的应用
下一步就是优化应用里的导航
这就能很快找到信息
和用户需要的操作
那么我就以一个常用的模式作为开头
许多应用都会对它们的数据进行分层
打个比方这里有个顶层视图
上面有很多信息列的都是优先事项
这种情况下我写了一个应用来记录
我今天喝的所有饮料
现在 如果你需要任何一个指定项目的信息
你就可以点击它它就会滑到细节页面
那么这里我们看到今天目前为止我喝了三杯咖啡
在watchOS 2里
如果你需要看其他项目的更多信息
你就可以按一下返回键
找到那个项目然后滑动进入
现在这个看上去没有多少负载
但是根据要把互动时间缩短到多少
附加时间会来回变动
这样就能很快提速
在watchOS 3里你会看到很多应用
使用这种模式
我们现在为其引入了新的导航风格
你可以只用手指或者数码表冠
来快速滑动翻页在不同的项目之间
不用来回转换导航了
如果你看看 比如说股票和天气的应用
他们经过重新设计开启这种ok互动
而且我们也想让你们能很简单地
把它应用到你的应用里
WatchKit的表格界面控制现在可以选择
开启垂直页模式
当你要导航进一个细节视图时
选择这个就会十分简单
你只要做几件事
首先你当然是要在表格上启动这一选项
然后你还要注意
在你的storyboard上使用segues
来表达从表格到细节视图的转换
这样你就给了WatchKit所有它需要的信息
让它能预生产上层和下层的视图
并把他们放进垂直分页界面
这样就可在它们之间移动了
你看这也没有多少改变而且十分简单
你唯一要记住的
就是要实际去监测它
你还需要保证细节视图的设计
就是能把所有细节信息放进一个屏幕里
如果细节视图本身可以滑动
那么细节视图里的滑动
就会优先于外部分页界面
所以你一定要将注意力集中在
简化细节项目的视图
你还会发现在股票和天气应用里
本来watchOS 2里的这些视图
要垂直滑动并且包含大量信息
而现在就只有一页
所以就能很简单地转换
就这样 我们让用户可以很快地进入应用
我们优化了后台刷新让我们的数据保持更新
我们也优化了导航在应用里面
最后一部分就是要保证
个人与Apple Watch的互动要短
要让用户能尽快退出应用
在Apple Watch上这就意味着用户能放心
不用端着手腕一直看
有几种方法可以让你实现这一想法
我们这里就只看一个例子
假设我们有个应用是用来订晚餐的
当我点击Buy键
我就会开启与一个服务器的网络活动
它会进行几个操作
来决定我是否可以购买
这可能需要点时间
那么我首先倾向于显示
给用户一个未决定的进度指示器
让他们知道处理进行中
但是不知道多久能完成
不幸的是 这样他们只能举着胳膊不动
等到任务完成出现点什么
但是我很有信心在绝大多数情况里
这些任务都是会成功的
让他们坐着等这么久实际上对我也没有好处
那么 你就可以考虑
显示一些确定界面
让用户相信你在处理这个任务
不需要等着它完成
在这种情况下 我就说“收到！我们正在处理你的订单！”
当用户看到这个他们就可以放心地
放下手腕了
那么你就可以继续在后台操作最多有30秒的时间
通过在NSProcessInfo上使用后台活动API
总的来讲 一切都不错
而且你不用再把用户的注意力拉回来
当然有的时候也会出问题
可能是无法连接服务器也可能有其他的问题
在这种情况下
watchOS 3提供了一个全新的用户通知框架
它让你能够在手表上直接计划本地通知
这是个很好的方法能在后台的时候
就把用户的注意力拉回来
让他们知道这里出了点问题
并让他们能简单地修复问题
在这个例子里假设 很不幸
我要点的鸡肉没有了
那么我就弹出一个通知让用户知道发生了什么
当然通知里也可以包含操作
我可以设置几个按键在这儿提供解决问题的选项
或者我可以让用户快速回到应用里
这样就可以在应用的全屏视图里自己解决
用户通知框架是很好的解决方法
但是它也只是把问题告诉用户
而本地通知就更强大
是对很多不同应用的巨大改进
watchOS 3中用户通知框架很棒的特性
就在于它可以在手表完全独立的情况下运行
因为它是在手表上直接安排通知
但是现在你可以选择如何制作通知
因为既可以选择使用通知框架
直接在手表上安排通知时间
也可以继续使用watchOS 2同样的操作
就是返回信息给你的手机应用通过Watch Connectivity
在手机上定制通知
这两种其实都是行之有效的方法
取决于你想要达到什么目的
他们之间最重要的区别在于通知显示的地方
如果你通过Watch Connectivity发送信息给手机应用
并且在手机上定制通知
那么通知会同时出现在手机和手表上
这样不管你用哪个设备都可以收到通知
如果你在使用手机它会出现在手机上
如果你使用手表
就显示手表里
如果你用在手表上的用户通知框架
那么通知只会在手表上出现
不会返回到手机
而这可能正好就是你希望的
有些情况下你确实要使通知
只出现在手表上
这个现在很容易实现只要使用新的用户通知框架
但更好的是你——
谢谢
但还有更好的情况就是你根本不需要做选择
如果你的目标是让通知出现在
正确的地方 不管怎样
即便用户把手机落在了别处
那么你可以选择同时在两个设备上设置通知
使用Watch Connectivity发送信息
给手机应用然后在手机上设置
或者只是用云服务中的数据
只要按照默认在云服务中设置
但这个设置也是要
在手表上使用新的用户通知框架
如果你这么做只要你用的是同一个通知识别符
在两次设置通知的时候
watchOS可以消除这些通知的重复
因此它们只会在手表上出现一次 而不是两次
下面看一些用户通知框架里很棒的新内容
由于个人互动在手表上的时间很短
对于某些应用你可能想
在长期内多次使用
比如 我这里有鸡肉菜饼的菜谱
那我要去商店买些我所需要的食材
现在在watchOS 3里每当我抬起手腕
手表就会显示我最后一次使用的应用
这样我就能很快的看到我还有哪些东西要买
并勾掉已经买了的东西
我被带回到上一次使用的应用
使用时间距离现在不能超过8分钟
这很好用因为它能让你设计的应用
具备这种互动模式类型
它用于短时互动
但是可以长时间运行
对所有watchOS 3的用户来说它是新用户默认设定
所以它设置起来很简单并能让你根据它来创建和设计应用
这里只是几种方法
是我们一直想用来改进watchOS 3系统下的应用互动
但是还有很多其他的方法
我会推荐大家去听听
“快速互动技巧”watchOS演讲之一
在那里你能更详细地了解这些多种多样的想法
获得更多启发
以上就是导航
下面我们来详细讲讲
改进后的API可用性在watchOS 3系统下
就像我之前说的
我们带来了很多很棒的框架来自我们其他的平台
我们有了一些特别好的新框架
比如用户通知框架
我们还新添了很多API给许多不同的框架
都是Apple Watch已经安装的
那么我们就从已讲过的一个开始吧
后台应用刷新
我又把它拿来讲是为了强调它在我看来有多重要
它能带给你的三个最重要的影响
就是设置更新的能力
运行多功能推送更新
并保证每天50个
还有保证快照和文档的更新
并且同步你的通知和complications
再说一次 强烈推荐
“让手表应用保持更新”演讲
里面有超多相关的信息
健美应用是特别需要保持更新的
因为在锻炼中最重要的就是
要显示当前的信息
而且在整个锻炼过程中都要不断更新
那么今年对锻炼应用的一大改进
就是watchOS 3系统下它们将继续在后台运行
并持续整个运动时间
这让你能够监测锻炼的进度
观察——使用所有的传感器API
来跟上进度
并且提醒用户通过通知 触动或者声音
当然我们也改进了
对心率和加速计的访问
现在他们可以在整个锻炼过程中提供连续值
而不用把这些值在增量中进行批处理
然后大段大段的传送
这样一来就能方便追踪
当前锻炼的情况并在整个过程中保持更新
由于他们在运行中你可以同时更新你的UI
它可以保证每当用户抬起手腕
他们很快就能看到
当前准确的锻炼状态而不会有额外的延迟
今年是很重要的一年真的 对运动应用来说
我们有关于这个主题的一整场演讲
并且讲解了很多对这类应用的其他改进
所以一定要关注“构建完美的锻炼应用”
去了解如何制作你的运动应用
让其在watchOS 3下大放异彩
但是这里有一点我要先重点讲一下
就是后台运行时间
因为这里需要做一点平衡
你肯定是想要应用在运动中时刻更新
但是同时你又想保证最佳的用户体验
在其他的时间里
这就要注意节省用电量
其中很重要的一点
就是一定要关注CPU
在运动时间中占用了多少
Xcode现在有个很棒的界面可以让你监测这个
不仅是在某刻的占用量
还有在某段时间内占用的总量
在第一部分这里有个清晰的视图
就在顶部
这里告诉你你现在的CPU占用量
下面靠中间
是一个漂亮的图表显示过去时间内
CPU的历史使用量
现在 你可以清楚地看到这里的峰值就是我们工作量很大的地方
但是在黄色部分在中间
你能看到我们提供了一个滚动的CPU平均使用量
这是后台应用所使用的量
在某一段时间内
这一部分是我要重点关注的
也是最重要的
因为当你的运动应用在后台运行的时候
它会限制
某段时间内
普通CPU使用总量
你要始终低于这个限制以保证
你的应用可以持续在后台运行
并为用户节省电量以便在其他时间使用
这个限制在Xcode里明确标明
用红色的虚线
这样你能观察到平均用量什么时候接近它
并且一定要控制在这个值之内
同样 还有很多信息
关于后台运动锻炼的体验和改进
请一定要去查阅更多资料
但是有一件事你要记得
就是CPU用量在你开发这些应用的时候
除了传感器的改进针对这些类型的应用
通过让心率和加速计持续可用
我们还有很多新的硬件访问API
表冠中的时间让你可以用数码表冠原始访问转换事件
在watchOS 2你的应用可以使用表冠
在界面中滑动
或者选择列表中的项目使用选择控件
当然 我们也看到许多选择控件的创新用法
在其他有趣的事上
我们发现所有人
都想对数码表冠的事件进行原始访问
现在这个已经可以用在
所有应用的其他类型的互动中
现在——
手势识别方便了在应用上添加接触互动
这里有特别多的单指互动手势
比如按 滑 摇和长按这些都能很简单地添加到
你所有不同的WatchKit界面元素
这样你的应用在屏幕的不同地方
就会有不同的反应方式
我们还做了一个陀螺仪
现在可以辅助加速计
那么你已经知道了这么多设备的手势信息
可用于各种有趣的实际操作
然后 快速——唔
来吧
再说一下“快速互动技巧”演讲
提供了很多信息关于互动和其他实用示例
我想给你们看几个例子
就是它能实现的是很酷的东西
首先 你看到这里Acorns借助了crown
让你能快速滑动浏览一个图表的信息
它展示的是你的账户的历史信息
所以在一个单一简单的界面
你可以快速移动浏览很多信息
屏幕都能显示
这个是Sweat with Kayla
它利用了滑动手势
在不同的锻炼中快速浏览
然后选择自己想要的一个
当然 你还可以使用数码表冠来移动
只要轻轻一点就可以启动你感兴趣的内容
你会发现这里有些有趣的视觉效果
给这个界面增添了些许生机
为了让这个可以用在你的所有应用上
我们提供很多漂亮图表/b&gt;
和媒体框架Apple Watch而设计的
SpriteKit和SceneKit然你可以轻松添加
2D和3D的图表还有动画
来提升应用的各个部分
当然你也可以把它们
用于显示长通知界面
来让你的通知更加有趣生动
关于简化导航我们讲了很多
我们也想能够播放视频
就在应用的界面上
我们为 watchOS 2应用添加了视频播放器
但是要在这里使用
就会进入一个单独的全屏界面
你在这里观看视频看完了要退出
有了在线视频回放
你就再也不用离开应用的主界面
你可以直接在那里播放
更好的是它支持自动播放
一旦视频在屏幕上出现
它就会自动播放消失的时候就会暂停
如果你有很多个短视频在一个滑动列表上
任何时候出现在当前屏幕上的视频
都会自动播放而其他的就会暂停
它提供了很好的方法
让你在应用里添加短视频
由于停靠栏里的应用是活动的
自动播放功能甚至可以在停靠栏使用
所以如果你有一个短视频
需要在滑动停靠栏的时候显示出来
当用户进入你的应用这个视频就可以直接开始播放
甚至都不用让应用全屏
这真的是watchOS 3中很棒的的视频改进
SpriteKit和SceneKit可以用在任何地方
这里你看到的是七分钟锻炼
它很好的利用了SceneKit来实现很多视觉效果
这个可以用在iPhone应用里也能用在Apple Watch上
你能看到的运动正是你想要去做的
并且很清楚显示了你要怎么做
那么除了在应用里添加很多有趣的视觉效果
SpriteKit和SceneKit也是短时互动游戏的好平台
我们也把GameKit带入了Apple Watch和watchOS 3系统
它能让你很方便地
添加回合制游戏在你的手表应用里
由于GameKit的回合制游戏API建立在NSURLSession之上
他们在没手机的情况下甚至也能运行
只要你的手表能连上已知的无线网络
GameKit成就API也可以用于
获得Apple Watch的成就它们以后可以
在安装了这个游戏的iPhoneiPad或者其他平台上看到
当然 有AV foundation
就能很简单的用手表扬声器播放声音
Apple Watch上的游戏只是刚刚起步
但是现在有了这么多新框架我真的很期待
想看看你们可以创造出什么样的
手表短时互动游戏
下面给你们一个理念
关于如何成功制造一个有趣的游戏
我这里来展示一个简短的视频
这是WoGa正在开发的一个新游戏
叫做垂钓时光
就是让我们在手表上在短时间内钓鱼
划一下就投出鱼线
然后用数码表冠放下鱼饵
到我想要的深度
现在 我可以放一会儿等一等
或者点一下立刻开始钓鱼
鱼貌似上钩了
现在再次用这个表冠收线
但是我实际上没钓到
这条鱼估计很开心
虽然我们的渔夫可不怎么高兴
所以这真的很酷因为你能添加这么有趣的图表
看到这么漂亮的动画通过使用Apple Watch的SpriteKit
我真的很期待
能看到你们创造的东西
下一部分我要讲到CloudKit
我们已经把CloudKit带入了watchOS SDK
引进了新的CK Share API极大地方便了
在不同的用户之间分享数据
它也建在NSURLSession之上
所以运行起来很简单即使手机不在身边
这有一整场关于CloudKit的演讲“CloudKit的新特性”
我强烈推荐你们去看
最后讲讲Apple Pay
Apple Watch为买东西提供了很好的支付方式
当然 当Apple Watch开了Apple Pay功能
你就可以在应用里购买实物商品
只要按两下边键
你有很多种可以使用的方法
比如你可以选择
提供最常见的商品
就像我每天的午餐
这样我每天吃午饭的时候就可以很简单的订购
直接从手表上下单
你可以用很多种方法售卖实物商品
通过在手表里使用Apple Pay
这就只是一些API它们是watchOS 3 SDK的一部分
这里有很多新东西一定要去看看
演讲的最后我们讲一下发现性和配置
因为 还是那样创建一个好的手表应用只是第一步
你还要保证用户能轻松地
发现它并安装它
那么第一个改进就是iOS 10 Apple Watch应用
这是一个全新的表盘画廊
显示了用户可以添加到手表里的所有可用的表盘样式
更好的是就在屏幕的正上方
有一整个部分是专门为你的应用设计的
打开十分简单只要几步就可以
那么首先你要使用一些新的ClockKit API
你已在watchOS 2里有了一个API
来定义complication模板视图
这个API在watchOS 3里被改进了
它不仅返回一个字符串给你的complication数据
而且返回本地化的key
让你能获得适用于所有语言的本地化的字符串
这很重要因为第二步
就是创建一个complication bundle
你要用——你要使用模拟器
运行应用创建一个complication bundle
这就会生成一个静态表达式给complication模板
之后可以放到iPhone应用里
这很简单而且通过它
你你就可以进入画廊并显示出来
静态表达是必须的因为只有这样我们才能让
complication的显示能适应这个表面
即使你的应用还没有安装到手表上
就这几步却能达到不可思议的成果
你的应用就直接显示在画廊里了
gallery是第一个
新手表用户在匹配好手表后看到的东西
所以你必须要出现在这里
除了gallery我们还简化了
自定义表面和把应用装到上面的流程
你随时都可以在Apple Watch配置表面
在iOS 10里iPhone上的Apple Watch应用
现在也引入了整个表面配置UI
显然 它们是同步的
所以你在一个设备上的更改也会出现在另一个设备上
现在你在手机上能很轻松地选择所有你想要的complications
显示在Apple Watch表面上
有了快速表面转换
就有了更多理由去做complication
因为越来越多的用户会使用不同的表面
而你的应用就可以在其中显现
配置的最后一部分就是停靠栏
很明显你可以配置停靠栏
在iPhone中的Apple Watch应用里
在停靠栏添加或删除应用很简单
也可以重新排列
更重要的是这都可以在手表上完成
而且这里有一个特色让你能轻松发现
你可以在停靠栏添加应用
你最后运行的应用会始终显示在停靠栏里
即便你没有特意把它放在里面
如果用户安装了你的应用但却不知道
他们可以直接在停靠栏里加东西
他们回到主屏幕就会发现这个图标并打开它
下一次他们再回到停靠栏就会看到你应用出现在那
下面有一个大大的按键写着“存入停靠栏”
只要轻轻一点
它就会被永久加入停靠栏里了
因此发现添加真的很容易
而且可以直接从手表里添加
再说一次 你会听到很多关于
创建一目了然的可操作性强的和反应灵敏的应用的信息
而且我特别建议你一直把这点记在脑子里
这里还有一场设计演讲主讲人是Michael
你可以去听一听设计奇妙Apple Watch体验
他会讲解更多跟这些主题有关的东西
所以 一定去听听
反应性也是很重要的一部分
这里也有两场演讲是围绕这个主题
一场是“架构watchOS 3的性能”
另一场“保持手表应用更新”
这两场是你一定想去听的演讲
它能让你了解后台应用刷新的所有好处
并且保证你的应用
时时更新对watchOS 3系统反应灵敏
这一周还有很多其他演讲
里面有大量关于Apple Watch的信息
还有很多演讲是专门针对Apple Watch的
谢谢大家的到来
我已迫不及待想看你们在Apple Watch上的精彩设计了
祝你们本周其余会议中过得愉快