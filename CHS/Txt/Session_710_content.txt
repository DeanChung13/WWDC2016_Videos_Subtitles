HomeKit的新特性
大家好谢谢大家的到来 欢迎你们
我是Dennis Matthews
我是AppleHomeKit工程组的一员
在我们开始介绍HomeKit的新特性之前
我想花几分钟来谈一谈HomeKit
我想要着重介绍一些组成HomeKit的核心功能
HomeKit是一个应用框架它提供了非常丰富的应用程序接口
这些接口能够让你的应用
与各种兼容HomeKit的家居设备进行沟通
你的应用程序可以通过相同的接口
访问不同厂家生产的家居设备
HomeKit将用户家庭数据保存在一个公共的数据库里
这点非常重要它让所有的应用程序
都能访问同样的家庭数据以及家居设备的配置
如果这个用户有多台移动设备
并且它们都登陆了同样的iCloud账户
HomeKit能让家庭数据同步于
这几台不同设备间
这一点非常棒
因为用户不再需要做额外的设置他只要拿起任意一台设备
就可以同HomeKit家居设备沟通
HomeKit同样支持用户家庭数据共享
所以一个用户可以允许他的家人和朋友
控制他配置的家居设备
共享非常简单
用户只需要通过iCloud账户邀请其他的用户
只要他们接受了邀请
HomeKit就能自动完成家居控制的共享
添加额外的移动设备
并相应地配置所有的家居设备
这样新的用户就能够访问并且控制家居设备了
当然 家庭主人可以随时撤销别人的访问权限
HomeKit使用了统一的通信协议来控制不同的家居设备
确保它们和Apple设备安全地通信
所有的HomeKit家居设备
不管它们是通过何种媒介进行通信
都使用了相同的通信协议
Apple支持的协议同时还定义了一组丰富的设备配置
这些配置能够描述大部分常用的家居设备
有了它们Siri支持也就水到渠成了
Siri为用户提供了一种自然的交流方式
来访问控制他们的家居设备
当用户在家时Apple设备连接到
HomeKit家居设备非常简单
用户需要做的只是
让HomeKit设备和Apple设备“对话”
进行通信
它们的通信要么使用Wi-Fi要么是低功耗的蓝牙连接
当用户不在家时
对家居设备的遥控操作
是通过Apple TV完成的就如同一个遥控网关
Apple TV创建了一个加密通信通道
来连接移动设备和家居设备
安全性
我们从开发HomeKit的第一天起就不断强化它的安全性
所有的HomeKit通信都是点对点加密
即 所有用来进行通信加密的密钥
只保存在用户自己的设备上
所以即使通信流经了中间设备或者中介服务
他们也不能解密
即使Apple也不行
HomeKit采用的是业界知名的“完全向前加密”技术
也就是说 每一次的通信对话从用户的Apple设备
到他们的HomeKit设备
用户的每一个会话密钥都是为这一次通信对话新生成的
当通信完成 这些密钥就会被销毁
这点非常重要因为即使在将来
如果任何一个设备被攻破一个长期密钥被泄漏
它也不能够被用来
解密在那之前进行的数据通信
家庭数据是私密的
我们对数据私密性的保护集成在应用接口上
应用程序必须明确地向用户请求权限
才能访问家庭数据
HomeKit支持各种不同家居设备
我们和家居设备生产商一起合作
在市场上推出了种类丰富的家居设备
我们的合作商还在计划
推出更多令人兴奋的新设备到HomeKit生态系统
以上就是一个高层次的概述有关于HomeKit
有了这些背景知识 让我们开始介绍HomeKit的新特性
我们会介绍三大项内容
首先 系统平台
我们扩展了HomeKit的平台支持范围
涵盖Apple的系统平台包括 iOS watchOS 以及 tvOS
我们扩大了HomeKit对家居设备的支持范围
就在这次升级
许多的新功能和新提升
都会随着此次的应用框架升级进入你的应用
我们稍后会介绍更多细节
首先 系统平台我们非常激动
在今年发布了一个HomeKit应用
Home应用提供了非常简洁的操作界面
让用户能非常容易的地操控他们的家居设备
它还允许用户对家居设备进行自动化设置
Home应用支持所有iOS设备包括iPod Touch和iPhone
在iPad上看起来也非常美观
是的 随着watchOS 3的发布Home应用也支持了Apple Watch
我们认为用户会得到非常棒的体验
不止如此 我们还把HomeKit深度集成到了iOS系统里
HomeKit选项可以直接在控制中心被访问
用户可以配置他们常用的家居设备
控制这些家居设备以及选择场景
一切都在控制中心完成
关于系统平台的第二点...
远程遥控和自动化
随着tvOS 10的发布我们扩展了Apple TV功能范围
所以在远程遥控的基础上Apple TV现在还负责
所有家居设备的自动化运行
是的 这一点非常棒因为不管用户在哪里
在这个虚拟的世界里他们能够放心
所有的家用设备自动化都在Apple TV上进行
Apple TV同样为共享用户提供更多的操控选项
它可以将管理权限授权给共享用户
拥有管理权限的共享用户
也将能控制设备的配置
他们可以添加或移除家居设备
或者 同样的 他们也能邀请其他用户
让他们也能控制所有家居设备
现在 我们还能管理每一个用户的远程访问权限
我们可以授权或者移除其他用户的远程访问
防止他们连接到家居设备上
同样的功能现在也支持iPad
不止如此
如果用户家里有多台授权移动设备
比如Apple TV和iPad或者是任意设备的组合
它们会自动地协作
扩展家庭的HomeKit网络
在和家居设备通信的时候
它们会自动选择一个控制设备进行通信
不需要额外的配置来自用户
这一切都由HomeKit自动完成
系统平台第三点更新关于tvOS 10
我们非常激动地把HomeKit框架集成在了tvOS
现在tvOS有了HomeKit框架
你的应用就可以预览家居配置
操控家居设备
以及开启情景模式直接在Apple TV上完成
这同样也意味着Apple TV现可使用Siri控制HomeKit
得益于Siri操控的便捷性
你能方便地控制HomeKit设备
以上就是系统平台的几点重大更新
我们来快速回顾一下
首先 Home应用
它是Apple研发设计的HomeKit应用
它能让家居设备的配置
以及常用功能的操控变得非常的简单上手
第二 远程操控和自动化
我们扩展了Apple TV功能范围
让它来自动化运行家居设备
同时它还支持了共享用户对家居设备的控制
同样的功能现在也支持iPad
第三点 在tvOS内部我们集成了HomeKit框架
我们非常激动能把这些新特性带给系统平台
第二项内容我们将会讲到新的家居设备支持
第一类新设备今年我们将会支持
常用的空气处理类设备
所以现在 HomeKit能支持空调和暖气设备
空气过滤器 以及空气加湿器
这非常棒因为我们的用户现在可以
把这些全新的家居设备
加入到HomeKit生态系统使它们实现自动化
第二类 我们非常开心地
将相机类设备加入了HomeKit支持范围
有了相机类设备你的应用程序将能够
显示相机拍摄的实时视频
显示相机拍摄的静态照片
控制相机的所有配置
以及控制扬声器和麦克风配置
第三类 门铃
门铃是一种非常简单的家居设备
当门铃被按下它能触发相应的程序
同时门铃设备能够控制
铃声的音量
如果门铃设备还带有视觉指示器
它们也能被门铃设备所控制
我们常见的门铃也常常和其它的设备集成在一起
门铃摄像头是一个热门的类型
现在它们的配置也同样被HomeKit支持
这些功能强大的设备不仅能被HomeKit控制
它们的使用体验也和系统高度统一
举个例子
如果你有一个门铃
一个门锁
以及摄像头
它们都被用户配置作为房间的一部分
也许用户称这个房间为“入口”
HomeKit会自动关联这些设备的不同功能
用户能对它们进行触控感应设置
这也让一些神奇的用户体验比如丰富通知成为了可能
比如说 现在门铃声响起
HomeKit会自动拍摄一张照片
用户就会收到一条丰富通知
同时 在通知栏里用户还能直接进行控制
他能按下按钮
打开对讲机同来人进行对话
或者 用户也可以选择解锁大门
通知栏可以实时显示监控视频
是的 同样的功能也支持Apple Watch
只要点击
表面的图片就可以开启视频流
从你的HomeKit摄像头到你的Apple Watch
当然 你可以选择解锁直接在Apple Watch上完成
接下来 我们来看看HomeKit框架都有哪些更新
我们想先介绍一些简单
却强大的应用功能升级
现在 设备的使用情境将会被反馈给你的应用程序
首先是主要功能
假如有这样一台设备它提供两种功能
风扇功能和灯光功能
这就是你的应用程序显示的结果
仅仅看着这些功能的名字你完全不能了解
用户使用的是什么设备
这是一个带排气扇的灯具？
或者是一台带照明灯的风扇？
现在 随着HomeKit协议的更新
家居设备能够标注出它的主要功能
这个信息会被反馈给你的应用程序
通过HMService类的isPrimaryService属性
它会对你大有裨益
因为现在你能
对设备进行内容感应设置
第二个例子是关于关联功能
在这个例子中假设一台设备拥有
三个电源插口和一个开关
现在 如果仅仅是看着它们的名字你不会明白这个开关功能具体是什么
这个开关只控制了一个插座？或者它控制了所有的插座？
当用户看到这台设备
他就能知道这个开关同时控制了其它三个插座
如今有了关联功能所有功能都能够相互关联
然后把它们之间的关系反馈给HomeKit
接着这个信息也会被反馈给你
所以在这个例子中开关是和三个插座口关联的
它们之间的逻辑关系是
开关控制着三个插座
现在 对于用户当他们看着用户界面时
不但能看到插座设备还可以看到它们相应的状态
它们的电源是开启或关闭
根据和它们关联的开关状态来判定
第三点是有效的参数
要解释有效参数的概念我们来看一个例子
如果我们想要建造一台设备
假如说这台设备是一台空调
在我们建造的过程中
我们想要把Apple定义的参数内置到这台设备里
我们要为设备选择一个制冷状态的目标参数
它是这样被定义在参数表里面的
但是我们建造的空调不支持加热
所以这里的heat以及auto状态对我都是无效的参数
现在 设备可以把参数标注为“无效”
如果Apple定义的参数表与设备的实际功能配置不符合的话
在这个实例中 这台设备将heat和auto标注为“不支持”
这条信息会被反馈给应用程序
通过HMCharacteristicMetadata类的Valid Values属性
应用界面上只会显示出有效的控制选项
这样就能和你的设备功能完全匹配
接下来 配置HomeKit设备
配置HomeKit设备
大概是你的用户要做的第一步了
它包括了几个步骤
首先 你需要检索已有的家居设备
一旦发现了一台新设备
并且它属于Wi-Fi网络的一部分
或者是一台蓝牙设备并且在有效范围内
你会收到这样的代码信息
在accessoryBrowser的委托回调函数下出现了didFindNewAccessory变量
一旦你拥有了这台设备信息你就可以调用
HMHome下的addAccessory函数来添加这台设备
但是对于一些Wi-Fi设备
若它还没注册在用户Wi-Fi网络里
现在你还需要额外的步骤
把这些设备加入用户的Wi-Fi网络
你可以使用EA框架来实现
然后完成这些额外的步骤
我们认为这不是最好的用户体验
所以现在
在iOS 10中我们提供了一个简单的应用接口
用来添加和配置新设备它能完全照顾到
所有需要的步骤
来配置家居设备然后添加到用户的网络里
在调用addAndSetupAccessories函数时
应用界面会引导用户选择相应的设备
所以在这个例子中界面会显示出所有的设备
包括Wi-Fi网络下的新设备
用户可以选择他们想要添加的设备
一旦他们选择了一台设备
若它并没被注册到用户Wi-Fi网络
它会被安全地添加进Wi-Fi网络里
接着HomeKit安全码会被扫描
设备的HomeKit配对就完成了
然后用户会被提示给设备命名
为设备选择一个房间
在这个例子中 因为这是一个电源插座它属于一个特殊的设备分类
所以用户还会被提示
标注出与它关联的其他设备
在我们的这个实例中假如这个插座与风扇关联
所以我们选择风扇作为它的关联设备
最后 用户也可以把这个设备设置为
他们常用设备的其中之一如此一来
这个设备的控制选项就会出现在手机的控制中心里面
就是这样
只需要一个简单的应用接口手机就能引导用户完成整个设置流程
今后所有的应用程序都会拥有同样一致的体验
我们认为这能极大提升用户的使用体验
所以我们强烈建议大家开始使用这个应用接口
接下来 我们来谈一谈相机设备
相机是一种功能丰富但是操作复杂的设备
它拥有种类繁多的控制选项
相较于把这些复杂的原生功能提供给你的应用
我们提供了一种非常简洁的方法
让用户使用这一功能强大的设备
使用cameraProfile对象
一个profile通常是许多关联服务的合集
这个合集描述了一台设备的常用功能
所以cameraProfile提供了全部的接口
让你得以控制相机设备
一台设备的cameraProfile变量
将从HMAccessory类cameraProfile属性得到
一台设备可以拥有多个摄像头它同样能被HomeKit控制
每个摄像头都是cameraProfile数组里众多元素中的一个
让我们看看cameraProfile具体功能
cameraProfile提供了额外的接口 它们能帮助你控制
相机的不同功能
你可以控制相机拍摄和显示实时视频
包括音频流和视频流
让相机拍摄和显示静态照片
控制相机所有的设置
以及控制相机的扬声器和麦克风设置
我们来看看HMCameraProfile类所提供的接口
首先是视频流控制
先看HMStreamControl
HMStreamControl提供了一些简单的函数
它们允许你启动或者停止视频流拍摄
在HMCameraStream下调用startStream函数
就能开启相机的视频流拍摄
一旦视频流被开启它的运行状态会被反馈给你
使用StreamControl委托回调函数
一旦视频流开启
cameraStreamControlDidStartStream函数就会告知你
视频流已经被开启
同样的 要停止视频流拍摄只需要调用stopStream函数
相机的运行状态会通过同样的机制被反馈回来
通过cameraStreamControl内部的didStopStreamWithError委托回调函数
当视频流被开启时
你的应用程序能够引用这个视频流
使用它的cameraStream属性
我们来看看cameraStream包含了什么
cameraStream包含了音频流和视频流
所以在cameraStream类中
你能够进一步地控制
相机的音频设置
有了它 你既可以让视频流静音
或者只允许视频流输入声音或者允许双向的语音传递
所以现在你拥有了视频流你想用它来干什么？
是的 你想要把它显示在应用界面上
怎么做到呢？
非常简单在iOS 10和tvOS 10中
你只需要创建一个HMCameraView
在这view类里...
有一个名为cameraSource的单一属性
你只需要指定你的视频流
关联到这个属性就是这样
做完这些你的应用就能够显示实时的视频流
在watch OS上也非常相似
你只用创建一个WKInterfaceCamera
然后调用setCameraSource函数
你的Apple Watch就能显示实时视频流了
所以...以上就是一些不同的对象你需要了解它们
来控制你的相机设备
事实上这非常简单让我们看一看这个实例
首先 我们访问设备的cameraProfile
在这个例子中 选择第一个cameraProfile
在cameraProfile的streamControl类里
调用了startStream函数它会开启相机的视频流拍摄
如果要显示视频流我们将创建一个
HMCameraView
一旦我们的视频流被开启
它的状态会被反馈回来
通过这个委托回调函数
我们所需要做的只是把这个视频流指向
View里的cameraSource属性
就这样
现在你的应用界面就可以显示来自相机的视频流了
接下来 我们来看看snapshotControl
snapshotControl接口同streamControl很相似
snapshotControl类定义了takeSnapshot函数
每当一张照片被拍摄你会被相应地告知
通过cameraSnapshotControl函数下的didTake snapshot委托回调函数
要引用最近的拍摄照片
你需要用到mostRecentSnapshot属性
让我们看看SnapshotControl它还有一个额外的变量
能够告诉你相片的拍摄日期
它同时包括时间和日期
同样 若你想把照片显示在应用界面上
你只需要创建一个View界面然后把它指向这张照片
这里有一个使用相机拍摄并显示一张照片的例子
（与视频流处理）非常相似它们的核心组件都大同小异
首先我们需要访问cameraProfile
在这个cameraProfile的snapshotControl类里
我们需要调用takeSnapshot函数
创建一个应用界面View...来显示拍摄的照片
一旦这个委托函数被回调
照片的引用变量也同时被返回
我们只需要使用这个变量并把它传递给相机的source属性
就是这样
完成这些过后相机拍摄的照片就能被显示出来
接着 我们来看看settingsControl
settingsControl包括了HMCharacteristics对象
HMCharacteristics允许你控制相机支持的所有设置
通过接口 你将能控制相机的夜视
倾斜调整 变焦 旋转以及镜面翻转功能
如果cameraSupport属性不支持其中任何一项
这个属性就会变成nil
如果支持 你将得到全部的权限来控制相机的设置
使用你的应用程序
最后 我们来看看相机音频控制
它允许你同时控制摄像头内置的扬声器
以及麦克风
同样 我们拥有这些HMCharacteristics对象
它允许你更改麦克风的静音设置
更改扬声器的静音设置
控制麦克风的增益或者控制扬声器的音量
所有这些关键的应用接口都将开放给你
用来控制这种功能强大的设备
让我们总结一下
我们今天讲到了三大主题
首先 系统平台
推出Home应用 一个Apple为HomeKit开发设计的应用程序
远程访问和自动化
扩展了Apple TV的功能范围同时还增加了对iPad的支持
以此实现了对家居设备的远程访问和自动化控制
我们还将HomeKit框架集成到了tvOS
下一个主题是关于家居设备
我们增加了对热门的空气处理类设备的支持
我们还将功能强大的摄像设备加入了HomeKit的生态系统
我们还支持了门铃以及它相关的组合设备
也就是门铃摄像头
有关HomeKit框架更新
我们谈到了一些简单却又强大的功能提升
来帮助我们得到家居设备的使用情境
因此我们可以提供内容感应界面给用户
我们极大地简化了新设备的配置流程
只需要调用一个应用接口
就能使用一致的系统体验来引导用户
完成HomeKit新设备的配置
我们还介绍了cameraProfile对象
它将允许我们的应用程序更高效地使用诸多的家居设备
在我结束之前我想请大家思考一下
HomeKit设备和你的应用程序
正在改变我们的用户和家的互动方式
得益于Siri这样的系统功能自动化 通知功能
再结合Apple平台上丰富的辅助类功能
比如Voiceover等等
我们第一次使这些家用设备
让患有各种残疾的用户 无障碍地使用
它的意义巨大
对很多用户来说这都将是改变人生的全新体验
所以我希望大家能够了解这些不同的功能
它们将在Apple平台上向大家开放
请充分利用它们来开发你的家居设备和应用程序
让所有人从中受益
对于我们的MFi项目成员
一份更新的参数预览将会很快开放给你们
对于新的设备制造商如果希望加入这个项目
这个链接会给你提供更多的信息或者请直接和我们的工作人员交谈
更多关于这次HomeKit发布的信息以及相关的参考信息
可以在这个链接里被找到
这些是一些相关的演讲我建议你们观看其视频
若你们已经错过了
第一个尤其令人鼓舞
非常感谢大家祝会议圆满