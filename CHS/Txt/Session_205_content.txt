COCOA TOUCH的新特性
下午好
欢迎各位
我叫Olivier Gutknecht负责管理UIKit 团队
今天我们要探讨UIKit的新功能
以及iOS X 中的其他系统架构
但我首先想说的是
COCOA TOUCH的旧特性
为什么？自从上届 WWDC 以来
我们引进了大量的重要产品
带有3D Touch的iPhone 6S
9.7和12.9英寸的iPad Pro
还有Apple Pencil和Smart Keyboard
而且 这些产品采用了多项关键技术
采用这些技术可以让你的应用更出色
我首先想谈的是自适应性
我们2年前引进了自适应性
我们当时引入的一项技术是尺寸分级概念
iPhone是一个紧凑型产品
iPad是常规产品
现在我们有了12.9英寸的iPad Pro
我们需要更大的尺寸等级吗
我们不需要
因为现在我们拥有所有工具
在架构中表达它
我们拥有特征系统
它决定你的应用如何理解
你的应用的上下文和背景
尺寸等级是一个很重要的特征
但你拥有了需要的一切
基于这些设备的布局创建尺寸
我们为尺寸等级添加了新的支持
在接口Builder和架构本身中
包括从自动布局到动态类资产分类
配有布局指南 甚至UI外观
一切都已准备好 并且完全集成
我们还将
在本周举行制作应用自适应布局的两场研习会
第一场研习会重点关注基础知识和工具
第二场研习会将关注API
以及你用于制作自适应的技术
今天早上举行了一场令人惊叹的研习会
重点介绍的是设计 你应该看看
我其次想谈的是触控输入
去年iPad Air 2上市现在是iPad Pro
我们采用了120 Hz触控扫描
我们的扫描速度比屏幕刷新率快
配备Apple Pencil之后我们有了另外的性能
通过触控技术你可以获得精准定位 力度
在iPhone 6S上你也有相同的力度信息
3D Touch技术已用在iOS 9和iOS 9.1上
你需要用API在这些设备上创建令人惊讶的UI
Dominique Wagner将为你展示
如何在iOS上利用触控输入
我最后想谈的是Smart Keyboard
我们为你提供了一个API你可以在应用上实现键盘快捷键
我想 你现在有更多用户
通过键盘和你的应用交互
所以上下文快捷键需求获得增长
为此采用API是合理的
其实API在iOS 7中是新的
它变得重要起来因为自iOS 9之后
我们可以展示这些漂亮的自动快捷键
只需要按住命令键即可
现在 让我们来谈谈Cocoa Touch的新特性
我今天想谈四个方面
首先是核心技术
你可能已经在应用中使用了
然后我们要讨论使用UIKit和其他 API
你如何为你的应用构建更好的UI
我们将为你展示
在iOS X中新系统特性如何让你的应用更好
最后我们还将讨论
你的应用自身如何扩展
系统的所有新扩展点
接下来我们来谈谈这些核心技术
Swift 3很可能是第一个要提到的
因为采用Swift 3之后每个API都焕然一新
因为我们改变了规则 我们改变了
如何从Objective-C转化为Swift的方式
我们正在这样做 让你的代码更佳
所以 在Swift上编写代码时它给人极强的真实感
例如 首选字体
我们现在使用第一个参数
让意图更明确
我们尽量不重复自己UI颜色
黑色现在只是白色或黑色
对于Swift 3我最喜欢的是一个方面是
AIP和核心图形让人真的感觉非常棒
编写UIKit应用时
甚至像多线程优化技术（GCD）
现在也是一个完整的对象API
我们来谈谈GCD
还有一种我非常喜欢的功能很常见的东西
通过这项执行技术创造你自己的私人队列
当同步执行队列工作项目时
iOS X中出现新的特性你可以真正设置队列
在自动释放池中为每个工作项自动换行
真的很容易 你只需创建一个调度队列
然后你提供一个释放池工作项目
我们有一个完整的GCD队列及编程研习会
还有Foundation框架它也改编了大量的
Swift增强性能 在许多类别中我们放弃了MS前缀
我们有一项主要新功能我们正在将多种值类型
添加至Foundation API上
不仅如此
我们也全面支持
Foundation的单位和计量
另外 是为AP 601格式有一个新的日期格式器
如果你知道AP 601是什么
你很可能欣喜若狂
另一个好功能是我们如何更好地
使用新历日期间隔进行日期计算
我们举行了两个关于Foundation的研习会
Foundation和Swift的新特性
以及测量和单位
昨天 我们宣布支持通用键盘
在你的Mac上复制然后粘贴在你的iOS设备上
你如何在你的应用上应用这种功能？
只需使用现有UI Pasteboard API就这么简单
你还需要知道另外一点
你可能必须在你的设备上获得很大的资源
如果我需要复制一张非常大的图片
可能需要一两秒钟
你可能会看到这个UI
为了避免检索远程数据时的问题
你应该首先检查看看你是否需要相关数据
所以为了避免看到这个UI
为此在UI Pasteboard上我们添加了四个新方法
因此你可以轻松检查屏幕URL、图像和颜色
在UI Pasteboard上另外一个特性是
你现在可以控制你放在粘贴板上的东西
现在你可以在本地设备上限制你的数据
或者设置到期日期
但我现在想说的是颜色
它不是一种软件功能而是真正的硬件功能
在我们新的iMac 5 K上
以及9.7 英寸的iPad Pro 上
这是一个技术转变你现在可以在屏幕上描绘
之前在物理上不可能实现的色彩
而且 我们正在改变我们描绘色彩的方式
iOS设备曾经使用sRGB颜色空间
现在通过这件设备你将在扩展的sRGB色彩空间内工作
这对于你意味着什么？
首先 iOS实际上已经实现色彩管理
iOS和TVOS以及在iOS X中 我们正在公开API
从而适应广泛的色彩范围
第一种方式是只使用UI Image View
UI Image View实际上已实现色彩管理
始于iOS 9.3所以你已经准备好了
UI Color怎么样呢？
我们让它变得很简单
我们在其中已设有一个采用RGB色彩模式的初始化器
其中第二个新的初始化器采用display P3 RGB色彩模式
第一个初始化器是你如何绘制任意颜色
在扩展的sRGB空间内
现在你可以表达超出
0-1范围内的色彩如果你想要超越传统的sRGB
第二个是 displayP3
displayP3是真正的彩色显示
在创作侧非常常见
如果你收到一个有广泛色彩的规范
很有可能你将使用displayP3
这就是为什么我们提供初始化器的原因
就是这样的原因
我们没有色彩空间分类
你只需要使用这两个初始化器即可大功告成
但我现在想谈谈图像渲染
图像渲染是
你今天可能已经在使用的东西
通过UI 图形开始图像上下文
添加来自文本API的图像
这有几分像你想干就干的事
渲染离屏图像
因此 这个API有一个问题
它实际上是32位sRGB是一个内置的假定
此外 这并非我们最好的API它在数据块之前就存在
而它不是真正可扩展的
因此 你编写图像所用的东西
开始图像上下文API看起来就像这样
我不知道有多少人已犯下这个错误
试图在开始图像上下文之后获得图像
我肯定犯过这种错
但现在 我们有一个新的类型
新的 UI 图形渲染类型
它带给你的首先是完全的色彩管理
它要在默认情况下做正确的事
如果你在9.7 英寸的 iPad上
你将获得一个广泛的色彩上下文
如果不是在该设备上你可以获得传统上下文
另外 它基于数据块设计 易于使用
此外 它是一个基于API的对象
我们必须为图形和PDF增加我们的类型
此外 很重要的是
这个类型将管理你的色彩上下文的生存期
这意味着我们可以在hood下做一些内存优化
让我给你举个例子
相当于之前的情况你只需要创建你的渲染器
你试图生成一个图像
它只要提供数据块这里是你的绘制代码
有关这一点最酷的事是
如果你再次调用 这里的图像方法
我们打算仅再次使用这个上下文
图像相关的一个新功能是资源分类
我们拥有资源分类 支持各种色彩资源
从右到左和从左到右的资源以及压缩功能
当然它们是完全集成于
UIKit的特色系统
所以 让我们看看第一个
什么是色彩资源？
我们想在这里做什么？
如果你嵌入广泛的色彩资源
在你的应用中 你希望能够部署
在非全彩色设备上
因此 我们想做的是
我们将为你自动提供一代sRGB变体
它将弯曲和App Thinning兼容
所以我们将只部署需要的东西
在正确的设备上
资源分类中的另外一个新功能是压缩
我们添加了对有损压缩方案的支持
而且它自动挑选 如果你选择了它
它会为给定设备生成正确的变体
于是你将在足迹和质量之间保持绝佳的平衡
而且它同样完全兼容App Thinning
因此 们只将需要的东西部署在给定设备上
我想在此介绍资源分类的最后一个功能
方向或图像资源支持
现在它意味着直接在资源分类层级上
你可以指定一个图形为RTL资源
或者是从左到右的资源
或者某种自动翻转的资源
直接在资源管理系统中
我们也有关于国际用户界面的完整研习会
其中可以让你了解更多有关iOS X的改进
但我现在想谈的是
如何创建更好的用户界面
以及在iOS X中的交互
首先你需要确保
每个人都可以和你的应用交互
我们有新的辅助功能检查器
你可以利用这个工具 它真的很牛
你可以连接到一个应用上
然后你将自动了解给定
UI元素的辅助功能属性
还有另一个很不错的功能
你还可以在应用上启动审核功能
在模拟器或你的设备上运行
这样可以让你获得提示
了解你希望修复的问题 以及你真正想
修复的与你的应用相关的问题
有一点要注意 就像Xode如果你没有收到任何警告
并不意味着你的应用完美无缺
但这是很好的第一步
我们也有新的方式
和 iOS X上的应用交互
我们添加了一个新手势 语音识别器
[外语]
而且不限于英语
它是一个非常简单的API
SFSpeech识别器
它可以做连续语音识别
而且你可以将其连接到音频文件
或者实时音频流上
你可以做实时的连续语音识别
你可以将其配置为优化识别
用于听写或实现简易字符串
这里只是举一个API的例子
你创建一个识别器你将其配置了一个请求
你开始一项任务 然后
我们回电告知你结果
真的方便使用
我们在 WWDC应用上有关于这个API的相应视频
iOS X中的另一大改进是文本输入
你现在可以做的一件事是
为你的文本字段中的内容添加信息
你可以通过这个功能提供智能建议
以Quick type模式例如如果我的文本字段是关于位置
我在Quick type中看到地址
我们有很多预定义的内容类型对人而言
你可以指定名 姓氏 全名或地点
在此情况下 它将配置成
一个完整的街道地址
或甚至可以配置电子邮件电话 信用卡卡号
关于文本输入
以及文本的另一点是你如何在iOS中呈现文本
在iOS 7中 我们添加了支持动态类型 在iOS X中
我们正在制作内容尺寸分类
用于动态类型 一种特征
那么 这意味着什么？
在iOS X之前的内容尺寸类别只是一个属性
在UI App上
而且 你实际发送了通知
如果用户改变了内容尺寸
你必须重新发出通知并且更新你的UI
现在 因为它集成为一个特性
它在视图控制器上可用了 这意味着
你可以在所有UI扩展中使用动态类型
我们实际上还添加了对动态类型的支持
在新的UIKit中的现有元素内
因此 如果你通过文本字段文本视图 标签创建UI
你希望对尺寸变化重新做出反应
现在在iOS X中你可以使用是的调整字体功能
调整内容尺寸分类你的标签 文本视图
文本字段仅对此重新做出反应
例如 你正在使用音频应用 你的应用
将会自动更新
对于动态类型而言这是一个很棒的功能
完全自动支持 标签和文本字段
我们曾经希望在UIKit中添加新的自定义
选项卡栏项是一个极好的案例
现在你可以自定义批处理颜色和文本属性
在标签栏项中你还可以自定义选定的主题颜色
因此 我们可以说我有一个标准标签栏
看起来就像那样
如果我将此代码添加到我的应用中
它将成为我的新标签栏UI
也许这就是我并非设计师的原因
另一项极佳的定制 在网页视图中
为3D Touch iPhone装入Peek和Pop时
我们曾在UIKit中有非常简单的API用于视图控制器
我们曾有内置的支持WK网页视图
现在在iOS X中你可以很好的控制
web视图中的Peek和Pop行为
这意味着你可以使用自定义视图控制器
用于做Peek
你可以有预览操作以及很棒的后续结果
当你Pop网页视图中时 你可以决定
留在你的应用内
它就像web视图类上的新的委托方法一样可用
但Peek和Pop最让我感到激动的是
新的UI预览交互类型
因此在UIKit内的Peek和Pop完全是两回事
有一种视觉效果 这种模糊效果这种很棒的动画
当你想要预览某种东西时
有一种触摸 我们如何对压力做出回应
我们如何检测用户的意图 是撞击
一次滚动 还是Peek的开始？
通过UI预览互动 你可以做到
使用UIKit提供的执行实现这种触摸
但为Peek和Pop提供你自己的动画
这是此类型上的一种新的委托你可以知道
当你从Peek转到Pop时我们将会
为你提供改进 一连串的改进
你可以插入自己的互动 你自己的动画
你可以实现完全定制的Peek
以及Pop UI这确实是一个很大的改进
如果你希望全面了解Peek和Pop及3D Touch
我们周四下午4点将举行完整会话
我们添加的另外一个新特性
在大家曾经需要的滚动视图中
它实际上完全支持UI刷新控件
它在UI滚动视图上可用
在类型的滚动视图上也可用
我们已经支持表格视图和刷新控制
因此 它意味着现在你可以使用刷新控制
修正视图
我们来谈谈集合视图
这是UIKit上一个很不错的功能
去年我们添加了
对流布局中自动自调整尺寸的单元格的支持
在此之前你必须要做的是
你必须计算预估尺寸
有时它并不容易
但在UIKit水平上我们知道屏幕上呈现何种单元格
因此我们在流布局中有个一个新的模式
你可以自动通过 我们将为你
估算 你无需自己去做
这个估算了
你知道我们为UI校正视图支持重新排序了吗？
我们做了 而且我们正在改善
在集合视图中添加分页支持
这是滚动视图级展示的东西
校正视图将为你完成工作
但我对今年的一项功能非常激动
关于集合视图的平滑滚动
它是一个真正简单聪明的想法
如果我在集合视图中有一个网格
我会滚动这个网格
在某种程度上 我需要上个单元格
同时出现在屏幕上
对于布局而言如果你的单元格有点复杂
它可能需要一定的时间你可能剥夺一个架构
那样并不好
因此 我们现在正在做的是我们称之为单元格预取的东西
这里的想法是实际要在屏幕上实现一个单元格前
我们可能向你要求这个单元格我们不会
将一个单元格作为单元格数据块就像一整行
我们会要求一个单元格然后下一个 再下一个
所以我们要摊销成本
从而在你的应用中建立单元格
好事是这是自动完成的
如果你为iOS X重建你的应用
你可以免费实现这样的行为
而且还有更多
我们有一个新的协议我们称之为数据预取
因为有时不仅仅是
为你的单元格制作布局
有时你需要获取数据
你需要从光盘读取
你需要从网络获取数据 因此它很棒
如果我们可以告诉你嘿我们需要速索引
你可以提前准备
这正是这个新协议的作用
你可以实施几种委托方法我们将会告诉你
我们何时将会要求一个单元格
因此你可以将数据准备好
从而再次改善
你的基于应用的集合视图的表现
我们在表格视图上也提供了这种功能
我们将举行关于新UI集合视图的完整会话
单元格预取 数据预取
重新排序 不要错过哦
但我认为今年UIKit的主要新功能
是我们称之为UI视图属性动画大师
它是一种新的API
它是一种新的API
让你建立可以中断的动画
你可以清除的动画 你可以倒退的动画
我们正在展示新的时间曲线
它是完全动态的
你可以快速添加动画
我在此要说的是 新的API
就像一部电影中的时间轴
你可以清除 快进 播放 倒退
该模型很简单 使用极其简单
你只需要创建一个新的动画
你设置时间参数和持续时间
你添加自己的动画
你启动动画 因为你有一个对象
代表该动画 你可以快进
或者改变其进度
它还完全集成在
i视图控制器运行系统中
我们将会对此详细解释
本周三将举行UI动画和技术进步的会话
但我想告诉你的是你可以用它创建什么
这是一个非常简单的照片应用
你之前可以做到的是
在导航控制器中实现自定义过渡
但有了这个动画API我可以启动过渡
在飞行中用一个手势捕捉它 移动它
释放它
然后再次捕捉它
我会倒转我的过渡
让动画结束
令人惊叹的是
它是只是一个过渡
所以我们在相同的上下文中移动从非交互式
前往交互式手势驱动 再回到非交互式
到手势驱动 再到交互式再到非交互式
你可以完全将基于手势的互动和动画混合起来
我们认为这是一项期待已久的伟大功能
通过它可以看到你将创建的东西
现在 我想谈谈我们为iOS X带来的新特点
这里关键的事情是 没有什么
是你绝对要采用的
不 恰恰相反 我们该做什么来帮助你
我们拥有一些新的功能
它们将会让你的应用变得更好
这些新功能将简化你的体系结构
用于调整应用的东西将会更加集成
一个好案例是某种非常简单的东西
就是我们过去如何更改开放式URL
因此 我们首先要让它变成异步
使用完成处理程序但我们还要添加通用链接
因此你知道通用链接是当你打开一个URL时
例如链接至社交网络
如果你有一个本地应用它就会打开本地应用
但现在有了这个新的API你可以实际检查
系统上是否已安装一个应用
如果没有 你可以留在你的应用中
你可以仍然保留这种体验 而不是
例如打开Safari
因此它将真正改善
你如何整合内容和处理系统中这些应用的方法
另一大功能是我们对核心数据的更改
第一个是我们称之为查询生成的功能
这里的想法是你的菜单I拥有上下文很常见
而且你打算在背景队列工作
在单独的上下文中
你能做的是通过查询生成
你实际上可以pin
你的模型在你的菜单上
你可以准确控制 当你希望从
你的模型一个版本移至另一个版本
它意味着你不必要再处理力度
因为某种东西改变了背景队列
因为你可以准确决定菜单I何时应该移动
至数据的一个新版本
这是一个真正伟大的方式
简化了你的应用中的核心数据代码
另外一个功能是关于连接池
目前在一次存储中 我们完全支持
多位读者 一位作者模式
这将给你带来极大的性能提高
我们在工具侧还有新的功能 了解它们
我建议你去参加周五举行的
核心数据的新特性会话
为你的应用数据建模的另外一个方式是使用CloudKit
对于CloudKit我们已经为公共数据库
以及私人用户数据库保留
我们要在iOS X中添加的是记录分享
因此你可以让多个用户访问相同的记录
这就会打开一个全新类别的
具有CloudKit的应用
这棒极了
但一些东西有时很难处理
基于应用的协作 即如何处理UI流
你如何邀请人们参与文档协作？
你如何以一种安全的方式实现它？
因此 我们添加了新的UI云共享控制器
这是由UIKit展示的视图控制器
使用非常方便只需提供新的共享对象即可
它将会控制CloudKit中的控制记录共享
我们将会为你自动生成UI
以管理邀请流和被邀请人的名单
很容易在CloudKit中建立基于应用的协作
我们会举行关于CloudKit的完整会话
介绍CloudKit的新特性地点是Pesidio 时间是周四
现在我想谈谈NS用户活动
NS 用户活动是一个类
我们利用它捕捉你的应用的状态
我们已经在多个方面使用它
例如Handoff和Spotlight
我们在iOS X现在要做的是
添加对用户活动位置的支持
因此 如果我的应用要处理地址
我可以表达的是 用户当前活动
和此地址有关
你只需要提供你附加在活动上的地图套件项目
现在你明白我如何创建这个建议
在几分钟前的文本字段中
系统会注意到 哦 也许这个应用
正在处理这些地址
因此那很可能是一个极好的建议
用于处理地址文本文件
它会为你完全自动打开
如果你在活动下有选项
我们有许多的新方式来提高
你的应用使用率通过与我们称之为主动建议
它是以智能 活动为基础的功能
在iOS X中 在你的应用上
另一个地方
我们使用NS用户活动是搜索
在iOS 9中也是如此我们已经为索引活动添加了支持
它的用法非常简单我们只需要创建一个活动
并提供文本字段信息
它就会在Spotlight中显示出来
但现在你可以做到的是
我们这里有一个新的按钮在应用中搜索
你的用户现在可以返回直接转到你的应用
而且你可以继续自动搜索
在你的应用里
使用非常方便
第一步 你需要为你的info Plist添加新的密钥
告诉我们你支持Spotlight继续功能
第二步是运用新的UI应用委托方法
实施起来非常方便
我们为你提供用户活动你可以创建UI
并继续在你的应用中显示搜索
去年最新的改进也和搜索有关
我们添加了对你的内容索引的支持通过Core Spotlight
但现在你实际上可以在Spotlight中搜索你的数据
我们正在打开Spotlight索引
这棒极了 因为我们
为电源和性能实现了该索引的完全优化
我们有非常强大的quarry模型
因此使用很方便
你只需要建立一个搜索查询
你提供一个请求
你可以为你的数据搜索Spotlight索引
所以你可以将系统索引数据
例如来自网络的数据为你的应用整合起来
我们今年将举行一个关于搜索API的会话
介绍延续性
核心Spotlight搜索以及其他功能
我们提供了Replay Kit
它是在你的应用中录屏的方式
在iOS X中可使用Replay Kit为流媒体
因此你可以进行现场直播
利用你的应用 因为我们还提供扩展点
它意味着你第三方服务
给你带来直播能力
例如我们在playground上正在使用它
另一个大的架构是SceneKit
SceneKit是强大的3D引擎
你可以使用它在应用中集成3D交互式组件
今年主要新功能是一种
全新的渲染引擎 基于物理的渲染
可以说 它现在支持高动态范围
或者内部使用一个线性交叉空间
但我认为它是更好地向你展示
这是你在iOS 9上的消防车
这是你在iOS X上的消防车
真的令人惊叹
它目前在Watch OS 2上可用
我们将在Presidio举行一次完整的SceneKit Rendering会话
但我现在想谈谈Apple Pay
关于Apple Pay有两个方面要谈
首先我们正在推广Apple Pay
让你的用户可用
今天Apple Pay已装在iOS和Watch上
正如你昨天了解到的 我们正在推广它
让Apple Pay在web上可用
我们在Mac支持Apple Pay
所以对于用户而言Apple Pay无处不在
但令人高兴的是 作为开发人员
我们已经支持Apple Pay
在你的基于UIKit的应用中
但是现在你可在Safari中用Apple Pay
采用新的Javascript架构
但它也可能意味着你可以使用Apple Pay
在内嵌的Safari视图控制器中
你使用Apple Pay的另外一个地方是
在非UI代码中
我们有一个新的API供非UI扩展用
在扩展中使用Apple Pay真的令人惊叹
对于你的iMessage应用而言是极佳的功能
这是你现在可以直接创建的一种流
在信息中通过一个扩展实现
我想提供有关Apple Pay的两个会话
不幸的是 第一场研习会
和网页上Apple Pay同时举行
之后是Apple Pay钱包的新特性
我最后想谈谈你如何让iOS变得更好
你如何和iOS集成
我们在iOS X中有新的主要扩展点
以及信息Siri Callkit中也是如此
我们也改善了已有扩展 例如像键盘
现在你可以使用相同的Globekey
来自你的键盘扩展的键盘peeker
我们也可以给你提供
用户交互用语言提示
因此你可以在第三方扩展中创建多语言支持
我们对iOS X的另一个改进是
是各种小工具的新显示模式
此前你必须给我们提供你偏好的尺寸
现在我们有一个用户控制的尺寸
紧凑模式有固定的高度
扩展模式有可变高度
使用真的非常方便
你不必做任何事情通过我们新的API
你可以知道小工具何时会从
紧凑型移至扩展型
你可以给我们一个最大的尺寸你可以知道显示模式
你可以定制你需要显示的信息
还有一件事 我需要指出来
尽管是小工具 它会在锁屏上显示出来
因此 小心处理你展示的数据类型
要时刻牢记的一件事是
和你在小工具中展示的数据保持一致
如果我来配置 如果我添加你的小工具
到我的主屏幕上 锁屏上
我期望我总会看到相同种类的数据
保持相同的隐私级别
我不希望看到令人吃惊的东西
在我的iPhone锁住时在我的锁屏上显示
在iOS X上一个完全性的架构是用户通知
用户通知曾经是我们
在UI应用层级常见的东西
我们有一个新的架构但我们要展示相同的功能
我们将在这里添加几个增强功能
首先我们统一了本地通知和远程通知
因此更容易处理
你可以更好地控制你的提供方式
我们向用户提供通知的方式
我们要告诉你的另外一个优点是
在显示通知之前
在应用上你会更好地控制
通知本身
此外 这也是一个跨不同平台的统一模型
除了这些API增强功能之外
我们还有两个扩展
第一个是服务扩展
服务扩展是你可以
插入设备的扩展 当我们收到通知时
在此之前 它实际上已经被显示了
在它在屏幕上显示前你可以处理有效载荷
有两个极佳的使用案例你可以用它建立
你可以有媒体附件 有效载荷是相当小
但如果你了解你要为给定有效载荷显示什么
当你收到该通知时 你可以
取回它并显示
另外一个非常棒的功能是端到端加密
因为你现在负责两端
在服务器和本地设备上
因此你可以收到某种东西
然后用你自己的代码解密
我们认为这是一项非常棒的新功能
为扩展提供了极佳的新可能性
这是我们拥有的另外一个扩展
用于用户通知架构
你可以在你的通知中嵌入UI视图
尽管还有一个限制 你不能直接
和视图进行交互 但你有通知行动
我们将举行关于用户通知的两场研习会
通知介绍和高级通知
地点是Pacific Heights时间是周三
iOS X中的另外一个新功能是CallKit
我们再次提供了一个新的扩展点
目录扩展
我们允许你配置我们如何阻止来电
你对此可以完全掌控
第二个功能是我们如何识别电话号码
并显示我们的标签
以当我们接到一个电话时我们首先要检查
地址簿 然后如果我们找不到匹配
我们可以添加你的扩展
因此使用API非常简单
它是非UI扩展点
完全是两种方法
但真正不错的新功能
在CallKit中电话提供者API
通过电话供者API
我们拥有真正的第一方体验
用于你的IP电话应用
也就是说 你可以获得某种性能
如全屏来电UI
当你在应用上接到一个电话
但不仅如此
我们完全将你的应用
和iOS上的核心管理结合起来
比如像你的收藏和最近阅读
我们从你的应用上自动获得电话
你可以支持Siri还可支持CarPlay
你可以和免打扰和蓝牙结合起来
这是手机的一项主要新功能
我们可以全部了解它
在具有CallKit的Enhancing VOIP应用中
我现在要谈谈Siri
你可能还不知道
在不同的语境中Siri也会有相应的不同变化
因此 如果你在主屏幕上正使用Siri
使用home键 或若你在使用带有Hey Siri功能的Siri
或者如果你在使用带有CarPlay功能的Siri
或者作为一种辅助功能
Siri将根据那样的上下文对自身调整
你可以和Siri进行最佳可能的交互
它是相当复杂的任务
因为它涉及识别阶段
理解域 理解环境
这是我们要为你免费提供的东西
当你创建一个SiriKit扩展时
我们将提供给你的是
一个代表请求的意图
这就是你的扩展将和它交互的方式
你也可以提供你自己的词汇帮助Siri
它可能对于特定应用或用户
因此我们可以再次调整识别
和Siri的交互
它如此如何工作的？
意图扩展背后的想法是
它是一个非UI扩展 将代表
Siri和你的应用之间的交互
因此 它是基于意图的概念
来自于Siri和响应
这里主要的想法是
意图是域特殊性东西
因此你可以有消息域
付款域等等
对于消息 你有一个意图清单
Siri可以识别它进行交互并发送
至用于...的应用来管理与Siri的交互
这里的主要目标对于Siri意图而言
扩展是确保你和Siri在同一个页面上
当Siri理解一个请求时
对于有效请求 我们需要对其确认
我们执行这个请求 基本上是流
当你使用Siri说事情时 比如
告诉 WWDC 谈话的Miko我们需要在会议后见面
Siri要在意图内进行编码
事实上 它是处于消息域中
它是同一个消息意图 这里有一个收据
这是有关你的应用和我们从你那里获得的内容
我们为Siri Kit提供另一个扩展
即意图UI扩展
它实际上是一个可选扩展
但通过它你可以将自己的UI嵌入Siri副本上
因此你可以确认它调整到你的内容上
这真的很棒
关于意图系统的另一个优点是
它不仅和Siri有关
它是一种描述请求的方式 当然
我们在Siri中使用它和你的应用沟通
但这也是我们和CallKit集成的方式
这是我们如何在地图上正确分享扩展的方式
这个功能很棒的原因是
这是你如何给系统提供
关于你的用户在做什么的信息的方式
例如 在你的消息应用中
当然 它和用户的活动结合起来
由此 我们可以说
我在使用我的 WWDC 谈话应用发送消息
然后在UI联系人中我们要显示该信息
有关此信息自动联系
当我们有一个行动清单时
我们可直接向你显示你的应用 如果你
通过意图展示该信息
在某一点上
你的应用讲述默认应用
在标准联系人卡上
这真的令人惊叹
为你的应用增加可视性
我最后要谈谈iMessage应用
因此 消息真的变成一个平台
我们在这里有两个功能
一个是贴纸包
另一个是消息扩展
对于贴纸包 不需要代码
你只需要打包你的静态或动态图像
你使用Xcode完成它
你可以通过消息存储发布它
你还可以做另外一件事
使用iMessage应用等于使用性的消息扩展
你可以用它编写完全基于UIKit的扩展
你可以做其他事情 例如
动态生成贴纸内容
你甚至可以使用该扩展中全新的相机
你可以调整你的UI实现紧凑或扩大模式
它将成为live-in消息
这是一个极佳的功能但你可以做得更多
你可以自定义泡泡
它意味着你的扩展
使用的消息架构实际上
在和它结合的消息中有一个对话概念
与其他用户的更改关联
我们也全面支持消息扩展
在iOS X的模拟器中
因此使用非常方便
这是一个非常棒的功能可以让你和消息结合起来
当然你还能用它实现另外一个功能
在你的互动泡泡中完全自定义内容
我们举行了两场会话介绍iMessage应用
信息应用以及贴纸时间是今天早上
a第二场会议重点介绍扩展部件
时间是周四下午1:40
非常感谢大家 享受 WWDC 大会