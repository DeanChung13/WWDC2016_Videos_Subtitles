为用户打造隐私保护
大家好 欢迎来到“为用户打造隐私保护”
我是Julien我来自隐私工程组
我非常激动能在今天来到这里
你是否想过要怎样了解你的用户
而不让他们觉得隐私被侵犯？
你是否曾和你的团队争论过到底要开放哪些控制选项
要保持多高的透明度才能赢得用户的信任？
要回答这些问题
今天我们将要介绍我们自己所采用的隐私保护技术
以及你可以如何应用它们
众所周知Apple非常注重用户隐私保护
就在去年Tim这样说过
“用户愿意把最私密的信息托付于我们是因为信任
我们能回报他们的只有最安全的隐私保护
我们将为此竭尽全力”
不只是Tim所有在Apple工作的人 从上到下
都相信隐私保护是赢得用户信任的重要一环
为了打造一个健康的生态系统来保护你的数据
我们整个隐私工程组和Apple的其他团队通力合作
把隐私保护根植于我们的产品
年复一年后我们发现
最好的产品和服务是那些尊重用户隐私
同时还能不牺牲用户体验
它们是非凡的服务拥有不可思议的功能
同时尊重用户隐私
它们鼓励用户更放心地使用应用
因为它们提供 透明度可控性 一致性
数据的安全性最少的数据采集
和数据使用限制
随着越来越多的敏感信息被存入我们的设备
我们认为隐私保护功能正在成为一种价值不断提升的商品
它值得你的投资
隐私保护不只是简单的一组规则
它也是一个契机让你实现更智能的开发设计
考虑不同的设计方案来保证用户的最大权益
比如说它会鼓励你不断地优化产品
把更多智能功能带给设备
以提高用户体验并降低网络压力
它会鼓励你只收集你需要的数据
来提升你的服务
今天我们将会介绍标识符
如何收集与标识符绑定的数据
给用户提供哪些控制选项给他们多高的透明度
有意义的选项及怎样让隐私保护成为你应用的一部分
我们从标识符开始
我们很多人每天都需要借助标识符
来了解用户分析他们的行为模式
这很重要 对用户的了解通常是从标识符开始的
然而...
如果你追踪用户所做的每一件事
这会给你的用户制造不安的使用气氛
降低他们的热情他们会开始思考
如果我点击了这个链接我是不是也会被追踪
一旦你的用户开始犹豫你就开始失去他们了
标识符能帮助我们打造定制化的服务这些服务能让我们
更好地了解用户给他们提供有用的预测信息
但是如果你过多地使用它来追踪所有事情
然后开始提出奇怪的建议这会让用户很不自在
标识符能非常有效地打击诈骗
能尽早地探测和防止数据的恶意使用
但它们并不能分辨你是否从用户那里无节制地收集数据
所以你会怎样做？
这里有一些最佳做法我们想推荐给大家
首先更多地使用短期的标识符
不要持续地使用长期存在
并且一成不变的标识符
你可以让标识符随着时间推移自动变化
或者让它们很容易被重置
大量使用随机的标识符
而不是机械性地使用某人的用户名
邮箱 或是电话号码
大多数时候你都不需要用到它们
问问自己我是否真的需要对用户身份进行验证
还是采用匿名模式
为用户提供匿名的体验就足够了呢？
遵从这些最佳做法
你将能让用户更放心地使用你的应用
不用担心隐私的泄漏
让我们来看看一些例子
在我们自己的产品里全部沿用了这些标准
如在Spotlight和Maps中所有的标识符
都会定期自动更改
所以用户能放心使用它们
不用担心隐私的泄漏
我们保持了这些产品的用户体验
同时保证了应用的标识符定时改变
我们尽量让标识符的重置变得简单易行
举个例子 每一次开启和关闭Siri
你都会得到一个新的标识符你的隐私受到保护
同时我们也尽可能地对会话进行标识而不是用户
因为大多数时候这就是我们需要用到的全部信息
我们想让你们更简单地
使用这些标准
所以我们开放了相应的API能让你们很方便地
生成标识符
举个例子生成通用唯一标识符（UUID）的API
在Swift中只是简单的一行代码
当你调用它的时候就能生成一个标识符
快速地演示一下
每当你调用这个API的时候会得到一个128位的随机数
这个数字如此之大足以让它成为全局唯一的
随机数字
如果再调用一次你会得到另一个数字
再调用一次等等
你能自由决定如何使用
这个随机数字
你可以用它来标识对象 会话 或者用户
如果想使用固定的标识符应该怎么办呢
你不需要生成标识符
而是调用它
Vendor ID能解决这个问题
它解决问题的方法是
每当你调用这个API时
它会给这台设备提供一个标识符
有了它你就能很容易地为设备定制服务
不需要再生成一个标识符了
每当你调用这个API时
对于某一个应用以及某一个应用开发商
他们将会得到同样的字符串即通用唯一标识符（UUID）
比如 你在App Store上下载了两款应用
并且它们来自于同一个开发商开发商就能识别出同一个UUID
这能让开发工作变得简单
更方便地为用户定制服务
相应的 不同的应用开发商从你设备上得到的标识符
也各不相同
请注意 用户拥有最终的控制权
他们可以选择卸载你的应用
另一个系统层面的固定标识符是Advertising ID
它只是被用来接收广告
它的工作原理是每当有应用调用这个API
这台设备对应的UUID就会被生成
从此以后这个UUID会是固定的数值
直到用户决定重置它或者完全取消它
以上就是我们提供的几个API
每一个都有不同的功能
有的被用来生成标识符
有的被用来识别系统固定的标识符
除了系统层面的标识符我们还会用到网络层面的标识符
每当你检索无线网络连接到一个Wi-Fi网络时
你的MAC地址就被开放给所有人
这可能会造成位置隐私的泄漏
所以在iOS 8中我们改变了扫描网络的工作方式
我们开始使用本地管理员MAC地址
随着时间推移它会自动改变
这能极大地保证隐私安全
因为别人很难再追踪到你了
我们非常开心和骄傲将这项技术
不仅应用于iOS同样在macOS中
如果你拥有一个Wi-Fi网络并且拥有网络测试设备
我们建议你测试你的装置
用iOS seeds及macOS seeds
你们一定已听说Messages应用以及它对应用扩展的支持
这是非常酷的新功能兼有强大的隐私保密性
这些应用扩展不能读取你的信息内容
它们只能看到一个随机的UUID
对于不同的应用扩展
在每一组对话里UUID也会各不相同
所以它的保密性非常强
有时 即便你不生成或访问任何标识符
只是收集一些无序的数据
也会产生问题如果你把这些数据汇总
你就可能得到一个稳定的设备特征
或者一个隐性的标识符
一旦发生数据外泄时这个漏洞就会被暴露出来
你可能会认为数据都是匿名的
但是许多研究者指出
通过这个漏洞黑客将很容易识别出数据里的用户信息
你肯定不想面临这样的情况
所以你应该尽少地收集用户数据
我们也为此提供帮助
我们创建了安全强大的沙盒
保护你的应用数据安全不被第三方攻破
同时防止用户身份泄漏
我们开放了功能强大的API来帮助开发应用功能
实现数据保护同时我们也限制了这些API
对用户身份信息的采集
举个例子今年我们重新修订了一些API
以往它们能被用作身份信息采集
我们把其中有用的API属性列入了白名单
将其它可能用作身份采集的属性
列入了黑名单
简而言之这些对你意味着什么呢？
标识符非常有用但是我们推荐
尽可能多地使用短期标识符
尽可能多地使用系统提供的API
来生成以及读取标识符
用户会更放心地使用你的应用
并且分享他们的数据
谈到数据让我们来看一看数据收集
我们每天都在向用户收集数据
这对于数据驱动型的产品开发非常有用
这个功能非常棒
但是有一天你可能会面临一个奇怪的问题
你从用户那里得到了太多的信息
你可能比他们更了解他们自己
这非常奇怪
所以问问自己...
如果他们知道 你拥有他们的所有数据你会怎么想？
你会觉得尴尬吗？
万一这些数据是关于你的父亲？
你的母亲 或兄弟姐妹呢？
拥有数据既是一项优势 也是一种风险
你需要很好地平衡它们
所以我们能做什么？
我们建议你采用
注重隐私保护的数据收集方法
尤其要避免投机性的数据采集
你可以一次性收集所有能找到的数据因为将来你可能会使用到
找出应用的关键绩效指标
根据它们来收集数据
以下是几个可以采用的小技巧
分级收集 采样收集 聚合收集
我们来看看分级收集
分级收集的核心思想就是只采集某一个等级的数据
只要它能满足你的需要
假如你想知道
用户打开应用内设置的频率
我们向某一个用户提出这个问题
要实现它非常简单你只要加入一个计数器
然后查看次数
假如这个测试用户 他在一天内
先后86次打开了应用内设置
这条信息非常有用 对吧？
因为这预示着你的应用配置可能有问题
你可能需要让某些设置更可见
但是你真的需要收集精确度如此高的信息吗？
也许只要知道有人进入应用内设置多过50次
这样的收集会不会更有效呢？
它能给你提供同样的信息
也许你需要改进和提升
你的应用配置
如果你想知道
不仅仅是一个用户
而是很多用户的使用趋势
你只需要向每一位用户提出这个问题
在某一天内我的用户打开应用设置的次数是多少？
如果你只想知道一个平均值
你根本不需要向所有用户采集数据
你只要得到统计意义上的平均估计值就足够了
事实上你只需要从0.1%的用户设备上收集数据
你就能得到一个非常接近的平均值
事实上如果你只从10%的用户收集数据
你的估计值就能达到0.1的精准度
所以你并不需要机械地从所有用户那里采集数据
这一切只取决于你所关心的性能指标
有时 若你想采集一些非常敏感的数据
而数据本身是不应该被采集的
可是你又非常希望了解它们你会怎么办？
你可能会需要这样一种科技
它能让你从一个整体得到信息同时保护个体的隐私安全
这样的科技是存在的我们称之为差分隐私
差分隐私技术是用户捐献数据最安全的方式之一
它能帮助你从整体得到信息
同时保护个体的隐私安全
它提供了强大的数学算法来保证个体的隐私安全
在今年 我们将这项技术集成到了iOS和macOS
在我开始前我想强调两件事
第一 这项技术是我们的隐私技术工具箱里的新成员
我们已拥有了许多用以保护隐私的工具
而它将是其中最令人兴奋最前景广阔的一个
第二 这将是一个快速的介绍关于这项令人着迷的技术
我将竭尽全力启发大家希望你也能为之兴奋
让我们开始
如我之前所说它提供了强大的数学算法保证
让我们先看看一些数学定理
不 我想我们可以试着换一个角度来认识它
假如你有一些敏感数据
给它加入一些噪音你就得到了一些私有化数据
然后你可以聚集这些私有化数据
来得到一些信号
让我举一个例子我上周花费了多少个小时
来准备这些幻灯片
那是一个忙碌的星期所以假设我工作了128个小时
我给它添加一些噪音也就是说
我把这个数字变成一个完全不同的数字
让我进步一解释一下噪音在这里的含义
先向大家声明 这是一个简化版的解释
但是它能够描述这项技术的核心要领
使用这个数字 128
我们用它来生成一个投影数值类似于哈希算法
要生成这个数值我需引入一个所有位置全部为0的矢量
只把第128号位置标注为1
这样它就变成了只有一个1其余全是0的大型矢量
要给它添加噪音也就是切换矢量的
某些位置上的数值
一些0会变成1
一些1会变成0
最关键的一点是0保持不变的概率
只稍微大于它变成1的概率
1保持不变的概率
也只稍微大于它变成0的概率
这就是模糊化处理数据的一种方式
在将它分享给Apple之前完成
这里还有另外一个有趣的发现
如果我对数据进行两次模糊化处理
即使是相同的数字
每一次处理过后我会得到不同的数字
不同于典型的哈希算法
我无法使用字典攻击
来破译它对应的数值
这一切都在设备本地完成
在你的数据被分享给Apple前完成
另一个例子 如果我想知道
Apple员工上周的工作时长
我工作了128小时 Jessie工作了48小时Timmy工作了130小时
这些数据都收集自Apple员工
然后噪音被添加到这些数据上
最后 Apple收集到的是一大堆二进制的噪音矢量
每个单独的矢量对于我们都毫无意义
但是如果把它们加在一起清除它们的噪音
我们最后会得到一些特征的统计结果
比如说在这里
Apple员工上周的平均工作时长为41个小时
我们先计算矢量和
再使结果标准化
接着观察矢量的每一列
寻找统计意义上的显著值
看它是否大于随机数
为什么这项技术很酷？
因为它为我们提供了一种途径
安全地得到整体性的答案
有了它 你可以计算平均值判断某种特征属性是否存在
甚至绘制频率直方图
这种方法能够保证
个体的隐私被充分尊重
即使Apple也不例外
我们只能从聚合的数据中得到结果
可是你也许会问
万一我是唯一一个贡献数据的人呢？
有时候可能一个用户会成为唯一的聚合者
为了回避这个问题我们引入了“隐私预算”概念
它限制了某台设备
在单位时间内的数据捐献次数
这些信息也不会绑定任何一个标识符
之后我们也会从服务器上永久删除这些数据
我们来看一看这个例子
假如我们想了解表情符号的使用情况
我们需要从愿意分享“诊断与使用”数据
的用户那里收集数据
当用户开始使用键盘输入表情符号
数据被记录在本地设备上
接着Julien Jessie和Timmy
分享了各自的数据且在设备本地添加了噪音
在上传给Apple之前
随着越来越多的人分享数据
我们可以得到各类信息
比如哪些表情符号是最受欢迎的
我们可以使用这个信息
相应调整它们在用户界面的顺序
也能更准确地预测用户的使用习惯
今年我们将把这项技术
主要应用到四个用例里
用它来收集表情符号数据
用它来收集新造词
我们能学到本地字典里没有的新词 比如俚语
我们还用它来收集深层链接数据
查看哪些深层链接在应用里最受欢迎
让它们在Spotlight以及Lookup Hints中推广
这让人非常兴奋
并且我们保证在采集数据时不侵犯用户隐私
数据的收集对象仅限于
开启了“诊断与使用”选项的用户
如果你没有开启它
我们就不会从你那里收集数据
你拥有决定权
这项技术对你有何意义呢？
我们认为差分隐私是一种前景非常广阔的
注重隐私保护的数据收集技术
我们很高兴能在今年把它集成到iOS和macOS上
从整体的角度收集数据同时不侵犯个体隐私
我们不使用任何标识符
我们不收集任何原始数据
这就是我们隐私保护工具箱里的另外一个成员
我们希望它能被越来越多地使用
来开发新的功能
你们的用户会看到我们的努力
我们竭尽所能
保护他们隐私的决心
我们希望这能鼓励你和我们一起
采用这些尊重隐私的开发准则
接下来我们将介绍隐私的透明度和控制权
我想邀请Jessie上台
谢谢
大家好 我叫Jessie
我也来自隐私工程团队
我负责以下产品隐私安全如Apple Music
Photos和教育类产品
Julien给我们详细介绍了
如何识别用户身份
以及收集必要的数据
来开发强大的功能同时尊重用户隐私
除此以外 数据收集过程的透明也非常重要
让用户了解他们被收集的数据
当你这样做时用户会更加了解
自己隐私的控制权
只要用户对他们隐私安全有信心
你就赢得了他们的信任
他们会更放心地使用你的应用
其中一个提高用户隐私透明度增加控制权的例子
是iOS 10中的广告推送服务
在News和App Store里
用户可以看见这个蓝色的广告按钮
当用户点击它时
他们就能知道这条广告为什么会被推送给自己
所以当任何开发者购买广告服务时
可以选择特定的目标用户群
来投放广告
同样的 用户现在也能通过广告信息
清楚地知道自己所在的
广告用户组
除此以外 用户还能进入隐私设置
广告
查看广告信息
我们对用户完全透明
让用户知道我们正在收集哪些数据
服务于News和App Store
这个功能将会在接下来推出
在广告服务中我们为用户提供隐私控制权
是通过限制广告追踪的方式完成
正如Julien提到的
用户拥有专门的广告标识符
你可以使用它来追踪用户
在我们平台上投放广告
当用户打开限制广告追踪选项
其实是在告诉我们
他们不想被广告追踪
因此在iOS 10中我们在此基础上更进一步
当用户开启了限制广告追踪
广告标识符变成一个全部为0的UUID
我们从代码等级实现了这一功能
一旦用户开启了广告追踪限制
他们就再也不能通过广告标识符被追踪到
如果用户取消了广告追踪限制
你的应用就能访问一个新的随机标识符
你也许会问对于开启了追踪限制的用户
我还能给他们投放广告吗？
当然可以
你可以在应用里显示文意广告
根据应用内容的上下文来投放广告
你只是不能再追踪广告用户
如果他们开启了广告追踪限制
请注意 我们禁止缓存广告标识符
到用户的应用的存储里
因为这会给用户重置标识符带来麻烦
所以 这一切对你有什么意义？
我们提升了广告服务的隐私透明度
让用户更放心地使用News和App Store
我们从代码等级开始支持广告追踪限制
当用户能够使用这些隐私保护选项
比如广告追踪限制
这能帮助他们作出正确的隐私保护选择
我们还为用户提供另外一种方式
来进行隐私保护设置就是同意警报
所以在iOS macOS tvOS以及watchOS里
用户有权决定哪些应用可以访问
某一类受保护的数据
受保护数据包括日历
联系人 照片 HomeKit
当你的应用第一次请求访问时
需要通过调用API来完成
iOS会显示这样的警告
这时用户有权决定
是否授予应用访问权限
当时机和情境都正确时
用户就能做出他们认为正确的选择
我们称这个为及时警告
我还想给大家介绍一下今年我们推出的新特性
它们也都拥有隐私设置和同意警报功能
首先是媒体库隐私设置
它可授权开发者读取Apple Music用户账户状态
读取用户的商店首页信息
向播放列表添加内容
以及读取用户的媒体库
我们理解用户的媒体库数据和
Apple Music账户信息
都是非常私人的信息
所以我们希望用户拥有决定权
哪些应用能够访问这些信息哪些不能
现在如果你的应用已可在iOS 9.3里访问媒体库
在iOS 10中你可以继续访问
所以如何知道你是否已有访问权限了？
对于大多数的受保护类数据
我们拥有一个授权状态API
对于不同类型的数据API的名字可能会有所不同
以媒体库为例
你可以调用这个API
然后得到这样一个enum数值
若是notDetermined
两个原因会造成这种情况
一 你还没有请求用户授权
或者二 你已经请求访问受保护数据了
随后用户重置了隐私设置
如果你看到denied
这表示用户“不允许”
他们不允许你的应用访问某类受保护数据
这时你有几个选择
你能相应地调整应用的使用方式
让用户能够使用一部分功能
而不需要开放他们的数据
或者 你可以打开应用的隐私设置
也许这一次用户会做出不同的决定
如果他们愿意的话
若你看到restricted
可能是由于这两个原因
一 这台设备设有家长控制
限制了应用程序对这类保护数据的访问
或者 二这个应用被管制了
也许它处于教育模式或者企业模式
设备管理员规定了你的应用程序
不能访问这类受保护数据
当然若你看到authorized代表你的应用程序已被授权
此外 我们还推出了其他非常棒的新特性
它们也支持隐私设置
另一个例子是语音识别
你可以选择是否允许录制的语音被上传给Apple
然后被转录成文字
为什么我们让用户选择
哪些应用可以访问语音识别哪些应用不可以
因为我们想让用户知道
一旦他们授权了访问
他们的语音文件
会被上传给Apple并转录成文字
确保你使用这个API时提前获取授权
我们还推出了SiriKit
这非常令人兴奋
用户现在可以直接使用Siri
控制应用程序
但是为了使Siri懂得用户具体的操控请求
你的应用必须首先发送使用情境信息给Siri
包括用户个人信息以及应用程序信息
我们希望给予用户决定权
哪些应用可发送情境信息给Siri
以及哪些不可以
所以你必须事先向用户请求这项权限
Siri才会响应用户的操作
这项授权可以通过requestSiriAuthorization API完成
你也许已经听说了全新的TV单点登录功能
它允许特定的电视应用
访问用户的订阅状态信息
然后将他们自动登录进应用程序里
目前这项功能只开放给特定的电视应用
请咨询我们的WWDR客户经理
如果你也想为应用开通此项功能
你们喜爱的iOS版Photos应用其一切特性现都移植到tvOS上了
同样的还有HomeKit
它们在tvOS上的应用都拥有隐私设置
除了这些强大的新功能外
我们还更新了你的应用
请求权限的方式
2014年我们开始要求所有应用程序向用户请求使用位置信息时
必须提前申请
并说明使用位置信息的原因
我们发现这对用户很有用
他们能做出更加正确的选择
如果他们理解位置信息被使用的原因
所以在iOS 10中我们把这项服务延伸到了所有类型的受保护数据
当你的应用程序试图访问任一保护类数据
你需要在plist里提前声明
并附带明确的使用原因
让我们看一看这个列表
回想一下我的应用有没有使用到这里的任意一类数据？
都有谁的应用使用到了一种数据？
好的 两类或者三类的呢？
好的 你将需要提前声明
在应用的info plist里面
如果你是tvOS开发者这四类受保护数据
可以在tvOS上被申请访问了
你也需在应用info plist上提前声明
现在 我将快速介绍目的字符串里的
关键值和关键名它们需在应用info plist里提前声明
你们不需要现在就把它们记下来
它们会在开发文档和Xcode上开放给大家
我们来假设你想编写一个迪斯科灯光的应用
用户第一次下载后
会浏览不同的特性 了解其功能
当他们添加第一个迪斯科灯的时候
你的应用会请求HomeKit的访问权限
当时间和情境都正确的时候
用户看到同意警报出现在屏幕上
此时此刻 你将需要给用户展示一条
目的清晰 意义明确的目的字符串在同意警报里面
我将给你展示 如何简单地
使用Xcode添加目的字符串
去到应用的target选项
Info部分
自定义iOS目标属性
添加新键
在这个例子中我们选择
隐私HomeKit使用描述
输入一条意义明确的目的字符串
让我们输入...
这将允许你使用HomeKit来添加迪斯科灯光
时间和情境都正确
用户知道为什么我们需要HomeKit的使用权限
他们更可能做出对于他们而言正确的选择
如果你不提前声明
你的应用会怎样呢？
你的应用程序会崩溃
因此 为了保护隐私安全
任何为iOS 10或其以上版本开发的应用
在请求某类数据的访问权限之前
必须先在info plist里提前声明
如果不这样做应用程序将会自动退出
你的用户会看到应用程序自动关闭
在Xcode你能看到这样的报错
它将指出应用请求访问数据的具体类型
及你要在info plist里添加的具体key
我们让你的应用崩溃的原因
是为了防止你的应用被攻破时
第三方访问你没有请求过权限的保护数据
我们不希望你的应用
访问任何未授权的保护数据
请记住 你必须为应用里的
所有用到的第三方库负责
当你选择这些第三方库时
请保证它不侵犯用户隐私
所以这一切对你都意味着什么呢？
在iOS 10和tvOS中有一些强大的新特性
他们都拥有隐私设置
你需要提前声明
请求读取受保护数据
在应用的info plist里
拥有一个清晰并明确的目的字符串 
将会帮助用户做出更好的决定
除了这些强大的新功能
我们对现有的框架也做了一些更改
来帮助你从头打造应用的隐私保护
首先 我想介绍一下pasteboard的更改
现你可设定一个过期时限和localOnly变量
给每个pasteboard上的条目
设置过期时限
会让pasteboard上的信息条目
在超过期限那天被移除
而设定localOnly为真
将会使相应的信息条目从全局剪切板中被移除
现在来看个例子
这个例子中我们有一个UIImage
将把它放进pasteboard中
和它一起的还有一条字符串“Hello, world.”
我们将会把过期时限设置为120秒后
并且我们将把localOnly值设置为真
所以 两分钟后这些信息
将不会在pasteboard中被找到
并且这些信息也不能从全局剪切板中被复制
为什么要这么做呢
你需要了解一个事实
当用户在复制一些十分敏感的信息时
比如说密码 电话号码 或者邮箱地址
它们不应该长时间存在于剪切板上
那么就设定过期时限
如果你觉得这些复制的信息
不应该被用在全局剪切板上
就设定localOnly为真
我们也对pasteboard做了一些更改
首先 所有已经被命名的剪切板会被默认更改为非持久的
将剪切板设为“持久”
将会触发一个弃用警告
此外
调用Find pasteboard函数
将会得到一个空白对象
我们强烈推荐大家使用
shared containers而非pasteboard
当你想在同一设备的不同应用中
共享信息的时候
这将会是更安全的做法
相对于pasteboard来说
我相信你们的应用程序很多都集成了Core Spotlight框架
所以这里还有几点需要大家注意
尤其在集成CoreSpotlight框架过程中
首先需要确保用户的每一个点击动作
不会导致NSUserActivity被触发
你绝不会想让你的系统呈现出
一系列的用户并不明白的事件
相反的 只触发那些真正有意义的并且用户会回去再看的事件
并且 当用户数据十分敏感时
不要设定eligibleForPublicIndexing为真
你肯定还知道 在iOS 10中我们新支持的微件
当用户开启一个微件时
它会在主页面和锁屏页面同时显示
正是因为这样 我想推荐一些最佳做法
来提醒你们在创建自己的微件时
谨记它们也在会显示在锁屏界面
首先你需要评估
那些将被放入微件的数据敏感性
若你觉得这些数据不适合出现在锁屏上
那就不要放入微件或者想办法
不让它出现在锁屏上
确保这些数据是连贯的并且可预测的
当我今天开启你的微件
我明天是不是还能看到类似的内容？
一个月过后呢？
每天呈现不同的数据其实是可行的
不过我需要了解什么类型的数据适合展示在那里
并且请记住那些属性为FileProtectionType.complete的数据
不能在锁屏时出现
接下来让我展示一个实例
一个查看好友位置的微件
在锁屏的时候 位置信息是不可用的
因为我们知道你朋友们的位置信息是极其敏感的
它们不应该出在锁屏界面
因此我们显示了一条提醒解锁以查看位置信息
并且位置信息并不在其中
当我用touch ID去解锁设备时位置信息才可见
我们推荐这种做法
尤其当你觉得微件的信息很敏感时
今天 Julien和我介绍了很多方面的内容
一开始 我们介绍了标识符
它是进行用户识别的最根本依据
在应用程序中
并且你应该更多地使用短期标识符
和系统API提供的标识符
然后我们介绍了
当你在收集用户数据的时候
你应该通过一种更尊重隐私的方式比如分级收集或者采样收集
或者应用新的技术比如差分隐私
给用户提供更高的透明度以及更多的控制权
来管理标识符和数据的分享
你将取得他们的信任并鼓励他们放心使用你的应用
当你让用户决定自己的隐私设置的时候
这会促使他们作出对自己更有利的决定
我们还展示了一些特别棒的新特性
及一些非常棒的工具帮助你为自己应用
从头打造隐私保护
想要了解更多的详情请浏览这个网址
这里还有一些本周相关演讲你也许会感兴趣
谢谢