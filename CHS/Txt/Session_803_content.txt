字体排版和字体
早上好
大家早上好
我叫Antonio Cavedoni
我来到这里给大家讲讲字体排版和字体
我是Apple的字体设计师
所以在今天的日程上将来看看San Francisco
以及系统字体的升级
我们会看到关于字体排版的一些术语
我们会看看一些字体排版的概念
以及在进行字体排版时你可以使用的工具
最后 我们会看看一些你可能想要采用的细节
当你在做应用的时候
好了 San Francisco
是我们系统字体的族类
我们去年推出的
你在这里看到的就是SF
而且它是macOSiOS和tvOS的系统字体
我们在去年 WWDC 上推出了这一族类
这里有一个视频讲的就是关于SF的理念和应用
我们将SF应用到我们的所有平台上
有Apple TV 我们将SanFrancisco应用到Mac
不过我们还将它应用到重新设计的音乐应用上
若在Moscone Center里你还没有看完所有字体
SF族类确实新添加了一位成员 叫做SF Mono
SF Mono是一种用于编码的新设计 而且有多种样式
我们从细体开始
升到正常
中等
半粗体
然后我们有表现力更强的样式 像是粗体和特粗
所有这些都有斜体版本
它们涵盖拉丁文SL和拉丁字母
不过还有西里尔字母和希腊字母
在所有样式和所有带斜体的粗细中
当然SF Mono是等宽设计
而且在所有粗细中也是等宽的
这意味着如果你改变字体粗细文本是不会回流的
当然 这有点困难
当我们在设计这个更粗的字体
我们必须要将所有这些字形挤压进来
不过我们先设计出用于编码的小号SF Mono
我们微调了其中一些字形
像是标点符号或者括号 花括号
一些用于编码的数字
当然SF Mono是SwiftPlaygrounds的新默认字体选择
在Xcode中也是默认字体
看看这个新的主题
好了 我简短介绍了San Francisco和新SF Mono族类
接下来 我想给大家讲讲一些关于字体的术语
让我们在这些偶尔会混淆的字体术语上达成一致
在我开始之前我想提前说一下
这就是今天我们将看看拉丁字母和希腊字母
不过如果你对多语种字体排版感兴趣 你也应该感兴趣
昨天有两场演讲你可以在视频上补看
谈论的正是这个话题
所以我们开始吧
什么是文本？
文本给语言编码而且与含义有关
文本就是打字的东西
文本会得到自动校正和分析
并发送给你的朋友
文本是由什么构成的？
它是由字符构成
字符是文本的抽象单位可以说是由一个代码所代表
在你看到这些字符之前你需要有东西将它表达出来
这叫做字形
字形在你的设备上以轮廓一连串的点而存储着
并且存在于字体文件中
在字体文件中字符和字形之间
通常是1对1的映射
然而 事情并非总是如此简单
这里可能会出现叫做字体排版功能的东西
这一种机制会改变这种1对1的映射
并让事情变得更复杂一点
例如 你可以有字体
当你按下F或I的按键这个字符就会生成
你得到了一个字形而并非两个
因为它们组合到一起了这叫做连字
这个连字是通过字体排版功能实现的
这是自动的并且取决于字体
不是所有字体都这样
一些字体有可选的功能可以改变数字的形状
例如San Francisco有数字6的替换形状
当我们想让它更加易读时就会使用
字体有多种样式
当然 都看起来不同
一些字体只有两种样式
另一些字体则有非常多
你可能听说过它们的名称像是粗体 斜体 粗斜体 紧缩
这些都是样式名称
将它们维系在一起的是这个名叫设计DNA的东西
其想法就是一组形状
那就是字型
字型有很多种
你可能见过或是认得这些
你用字型做的事是字体排版
字体排版是使用字型来设置文本并给语言编码
字体排版是图形设计和UI设计的根基
我们刚看了一些术语
看过了文本
文本是由字符构成
字符是由字形所编码或表示
在字符和字形之间
是字体排版功能这可以改变两者的映射
它们存储于字体文件中
这可以有常见的多种样式
它们都归于同样的字型组群中
这是所有这些样式背后的设计理念
然后字体排版使用所有这些东西来传递文本
作家和编辑 那些书写文本的人
他们的工作就是文本
字符是由统一码联盟所定义的
所以你不必考虑它们
字体设计师和字体制造商
是想出设计灵感的人群
并设计字形 然后将其放入字体中
之后创建字体排版功能供你进行更改
字体排版者是那些进行字体排版的人
我告诉大家一些好消息那就是你们就是字体排版者
事实上我们都是字体排版者
无论我们什么时候更改字体 使其加粗
我们改变磅值
这都是字体排版的工作
当然 作为字体排版者你会给字体排版
不过 当然你还可以改变文本以及选取字体
选择它们 组合样式并改变字体排版的功能
将可选的打开
好了 我快说完了
不过我还有几个术语
它们实际上与某种东西的缺失有关
内容周围的负空间
我刚给你展示了什么是字形
它是代表字符的轮廓
而且在字体中 它作为轮廓存储着
但它还有宽度 这基本上是间距属性
如果我挑选出这样的间距然后将它排版到字行上
我会得到这样的节奏 这非常不均匀
所以字体设计师会改变它让字形之间的节奏变得平均
间距是内置在字体中的而且你无法去改变它
不过 你可以改变字间距
字间距可以对负间距进行调整
它可以是零值
或是负值
或是正值
这对字体中的所有字形通用
要么将它们远离 要么让它们更近
当你在进行小号字体排版时这会非常有用
你可能想将字母更加远离
然后在大的时候靠在一起
字间距可能会和字偶距相混淆
字偶距就是一种用于单个字形对的异常机制
在这个案例中A和V太远了
所以字体中的字偶距表格
说将它们拉近一些
字偶距表格也由有字体设计师制作完成并放入字体内部
而且你无法控制 这是自动发生的
然而 行距
行之间的间距 这是你可以控制的
行距这个名称 源自与金属字体排印学
将字行进一步分离开 抱歉
你要在行之间插入金属片
所以我们刚看了
间距 字间距 字偶距和行距
嵌入于字体中
间距和字偶距是内置于字体中
不过 字间距和行距是可以调整的
在字体术语上 我就只说这些
现在大家都清楚 这些字体排版术语了
我们来看看一些字体排版的概念
我们从易读性开始
易读性指的是识别形状
并将它们与彼此区分开
你可能熟悉这个想法
一些字型本身就易于阅读
然而 在一种大小上难以看清的
而在另一种大小上看得清清楚楚
易读性与尺寸有关
当你改变一段文本的尺寸
之前看不见的细节就会显现出来
所以受到影响的是所看内容的大小
在这些情况下 UI字体排版
会更像是路标
你在马路上行驶
你看到的标志很大 字体很大
但离你很远
尺寸不仅与磅值有关
还与读者离阅读面的距离有关
在这些情况下 在小尺寸字体排版上应用的东西也是能适用的
例如 将字母分离开
或者让字体更粗可能会提高易读性
但是易读性 不仅适用于文本
它也适用于布局
很明显的是 在一种尺寸上的布局
层级清晰 易于阅读而在另一种尺寸上会难以看清
这里的问题是密集度会被破坏掉
实际上增加了非常多
所以解决密集度的方法是
你可以将元素进一步分离
不过常常更好的方法是
重新考虑你的层级和内容位置 你的布局
用于不同尺寸
如果你想知道更多关于布局的内容
在周五有一场演讲内容关于迭代UI设计
那是获得想法的方法论
而且他们还会有关于如何评估那些想法的秘诀
这是重要的部分
尺寸和密集度也不是只适用于文本和布局
还可以是字形设计
我们给大家一个例子
这是什么字形？
它叫什么？
当然 这是at标志
但在意大利 它的名字很奇怪
我们叫它“chiocciola”指的是蜗牛
当我们在San Francisco中抱歉 在SF Mono中设计这个蜗牛时
我们从San Francisco中的那个开始
当然 我们是这样做的 让它变得等宽
然而 当我们在合适的背景和尺寸下验证这个形状时
我们意识到密集度太高了
变得模糊 很难看清
所以我们想出了这样的解决方案
我把它放大
在这个例子中
我们极大地改变了字形的密集度
我们的做法是增加负空间
这对易读性至关重要
再考虑一下SF Mono粗体中的H M和N字形
如果我们把它们放得非常大
你可能会看出笔画的厚度并不是相同的
这是因为在它们大的时候能看出来
但小的时候 你看不出
所以我们稍微误导你让你认为它们的密集度相同
想象一下 你现进入到这个图片里了
你要弄清身在何处以及你要去往哪里
你可能要坐地铁去某个地方可能是去教堂大道
但你在哪里？
我知道你在哪里
你在纽约 我是通过字体得知的
我还恰巧知道 我知道 不好意思
我还恰巧知道他们使用的不完全是Helvetica
所以我用Helvetica Neue Bold再现了那个标志
不过我想表达的是对于字体排版质感的认识
如果你将字型变成另一种不同样式
即使是同一族类之中
不仅那个标志的效果会不同
给人的感觉也会不同
对吧
所以字型有这种质感品质
这个完全不像是纽约的感觉
这个也不是
这个质感属性不是次要的实际上这有助于营造一种氛围
例如 我在用SF字体阅读邮件然后现在我在玩游戏
可能在游戏不适合用SF字体
字型真的能帮助你营造氛围
并帮助你的用户清楚他们所在的位置
好了 这是我们刚才看过的概念
我们看了易读性 尺寸 密集度和质感
现在我想给大家谈谈一些工具
当我们在平台上进行字体排版时
有三种基本工具供你使用
第一个是系统字体
第二个是动态类型
然后第三个是我们的定制字体
你看的那个系统字体是在平台上原生的
而且作为字型 在平台上有原生的感觉
获取系统字体API在
iOS watchOStvOS和macOS之间都相同
所以NSFont和UIFont基本上有相同的API
它们有很多的好处
它们能让你获取全部9种San Francisco的粗细
还有特定大小的字间距
基本上字母自动地靠近或者远离
取决于你设定的系统字体磅值
你还会自动得到特定大小的轮廓
然后你会获得粗体字转换
这是在iOS的设置中
人们可以开启它 这让他们所有设备上的文本都粗体显示
第二个可用工具是动态类型
这个工具极好
在iOS和watchOS上提供
动态类型就是指两件事
第一个是文本样式APIpreferredFont (forTextStyle)
这会让你获得语义标识符
会给你特定用于那个用途的字体
你可请求用于大标题或正文等等的字体
你会得和系统字体相似的字体
但它们是专门为那个用途而调整的
不过动态类型也是内容大小类别
它就是这个滑动器上你所熟悉的刻痕
人们可进入到设置中将滑动器上下移动
他们可以改变设备的全局磅值
这是一项非常棒的无障碍功能
如果你使用动态类型还使用文本样式API
这上面的动态类型支持是自动的
然而 如果你使用定制字体或者直接调用系统字体
那你必须要做一些工作来应用动态类型
不过这很简单 我给大家展示如何去做
首先你要选取或捆绑一种字体
之后你可以有一个查找表上面有内容大小类别
然后你必须要覆盖traitCollectionDidChange
这是UIView和UI的方法
你控制子类
之后你更新你的字体以及段落样式
然后你重新布局 这就完成了
所以我们稍微深入地看看这些步骤
到底如何将字体捆绑到应用中？
这很简单
只需把它拖到Xcode中
然后你在info.plist列表中声明字体的名称
上面专门的键
对于内容大小类别
当然 你要有一个查找表将它们映射到磅值中
可能是粗细 字间距值或甚至是行距中
取决于你选择的字型
我有一个查找表 像这个样
我有工具池 磅值样式名称 行距和字间距
你在这里看到的符号是内容大小类别
你会发现这实际上比滑动器上的刻痕要更多
因为这里面有五个无障碍类别
人们可以在无障碍设置中打开
所以当你使用查找表时你也要记住这几点
一旦你做好了 你就覆盖traitCollectionDidChange方法
在内部你可以做什么都行
你可以写上基于视图和显示效果的代码
能够调整字体并重新布局
所以
当你在那个方法内部
你应该询问当前对象的特征集合
并查询优选的内容大小类别
然后将其作为查找表的键 这就完成了
第五步是重新布局
但如果你用自动布局这就不会有第五步了
如果你感兴趣了解自动布局
明天和周五有关于这些专题的演讲
好了 我们刚刚看了如何将动态类型用于定制字体
不过假如你想开始着手去做
到底应该如何下手？
如果你一开始尝试使用定制字体
我推荐一次从一个字型开始
这样的话会更简单
但重要的是一旦你用上了你所考虑的字型
试着去理解其设计意图
因为在使用上会有很大帮助
字型是工具
它们是由人们设计而成用于特定用途的
理解其用途
会极大帮助到字体使用者和字体排版者
你还要考虑可以调整的设置 对吧
你无法在应用环境中轻易更改字偶距
如果字体调不了字偶距
你可能要考虑其它选择了
然而如果字体行距太紧你是可以改变的
不要担心
好了 我们刚看了系统字体动态类型和定制字体
接下来我想展示一些小细节
你可能会考虑在自己的应用中使用
我想展示的第一个是箭头
箭头很了不起
它们可以用于指向内容
不过 它们也能用在complications上
那里信息的密集度十分高
然后你想得到更多一点的信息
箭头在SF中 实际上是作为字符保存在字体中
你可以将它们复制粘贴到你的字符串中
例如在Xcode中然后它们就会出现
不过 更重要的是因为它们在字体之内
它们与系统字体的粗细相匹配
如果人们改变粗体字转换或用动态类型
箭头会相应地改变大小
我想说的第二点是高易读性替换
我讲了在字体排版功能中的替换
我们在San Francisco中有一个新替换 有助于这种情况
如果你给字符串排版
没足够的语境来分辨出这都是哪些字形
人们可能要将其传到别处或者在其他地方输入
人们必须要能读它而且必须要完全分清
都有哪些字形
这里有新的统计集
这会将这些字形改变成完全无歧义的形状
I有了衬线0有了一撇
L有一个小尾巴然后6不那么容易和8混淆
我们不推荐一直启用这些形状
因为如你所见 这是非常巨大的改变
而且极大扰乱了文本整体的质地和外观
以及文本的感觉
所以尽可能谨慎使用
不过 这是启用它们的代码
顺便一提 这个代码在UIFont和NSFont效果一样
是完全相同
你从UIFont或别的东西开始你从中衍生出一个字体描述符
然后你修改它 给它添加功能
然后从中衍生出另一个字体
接下来 小型大写字母
我肯定大家都熟悉大写字母和小写字母
不过这个组中还有第三个成员那就是小型大写字母
小型大写字母是大写字母的缩小版
与小写字母对齐
当我说对齐时 我指的是几乎对齐
它们实际上应该稍大一点
什么时候用上它们？
例如 当你给首字母缩略词排版时
首字母缩略词或者当你想创建精妙的信息层级
例如有数字
然后你想弱化它边下的另一条信息
让我展示一个案例研究 关于如何在Apple TV上使用小型大写字母
上面有这个段落
还有层级 列表是在左边
然后段落在右边
你想让左上角的文本成为标头 并且稍微突出一点
如果你将它看成线框图
你差不多可以看出
那全是大写的字符串在高度上碾压四方
看起来有点太大了
你可以修正它的一种方法是
你可以改变磅值将它降下来
不过如果你那样做这还会使字母变得更细更紧凑
所以密集度会与其他的文本不相配
你怎么办 小型大写字母
小型大写会保留全大写的设置
且还保留你想要的密集度以及笔画厚度
这里有两种基本方式 两种API
将小型大写字母带到系统中
而且它们与字体排版功能
和基本文本之间的互动有关
所以假想你有一段都是大写的文本
你启用大写中的小型大写字母功能
你会得到一段都是小型大写字母的文本
看起来很好
如果你的字符串混有大小写字母
然后你启用大写中的小型大写字母功能 结果是这样
这看起来很糟
这个的问题是这里的大写字母
没有在强调任何内容而且几乎像是错误
所以请你尽量不要这样做
如果你有一个全是小写字母的字符串
然后你启用大写中的小型大写字母功能
你得到的全都是小写这不是你所预料的
但起码看起来还行
所以没问题
这个大写中的小型大写字母功能
这个代码与我之前展示的特性码是完全一样的
用于高易读性替换
你只需要更改功能标识符和选择符
这里有另一种启用小型大写字母的方法
是从一段小写文本开始
抱歉
如果你有全部都是大写的字符串
然后你从小写启用小型大写字母 得到全是大写
这不是你所预料的
但起码看起来还行
当你在混有大小写的字符串上从小写启用小型大写字母
你会得到这个
你会得到混有大写和小型大写的字符串 这是可以的
我们的确在地图中使用 比如在
某些缩放级别上
小型大写的重点在于精妙
而且这是一种创建精妙层级的方法实例
所以没问题
如果你的字符串都是小写的
然后你从小写启用小型大写字母
你得到的都是小型大写 这没问题的
这个的代码是完全一样的
我只改了那一段代码
你可以用功能做的一件事是你可以同时启用多个
所以这取决于你获取那段文本的位置
如果是你控制 如果用户可以编辑
比如 你可能想要同时将它们启用
关于小型大写字母有一个精妙之处
这就是它们的重点就是精妙
不过还有一点精妙之处
这就是它们不仅适用于大写字母
在数字和标点符号上也行
你可能会想这是为什么
原因是你可能会有像这样的字符串
你想将它们全都变成小型大写
所以我们支持小型大写数字小型大写标点符号
在所有这些在系统字体中
好了 我们刚刚看了一些字体排版的细节 例如箭头
高易读性替换和小型大写字母
我们今天要讲的就是这些
我们刚才看了San Francisco字体
以及用于编码的新SF Mono族类更新
希望大家喜欢
我们看了一些术语
我们看了一些字体排版概念设计方面的 没错 是设计理念
然后我们看了些工具
最后我们看了一些细节
一些新的小功能你可能会采用到你应用中
欲了解更多信息 你可以在这个URL上找到本次演讲的视频
不过你还会找到一本文献和一些可供参考的
网站 让你以字体排版者的身份踏上的新路程
这里还有相关演讲
这些还没有开始整个周都有
第一场演讲实际上是介绍一个工具
这在动态类型上面给你极大帮助
不过我就不剧透了
其他两场演讲与打造适应性应用有关
自动布局的话题
迭代设计会给你一些设计元素
以及相应评估方法
然后 “自动布局的新特性”的演讲是在周五
也会非常精彩
就是这些了 非常感谢大家