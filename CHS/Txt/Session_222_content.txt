使应用自适应 第一部分
大家早上好至今为止你们的会议进行的怎样？
我叫Kevin是interface builder工程师
Brent将在晚些时候加入
今天我们要谈论的话题是自适应
它使得我开发一个应用
不仅仅在我们的所有设备上过得去
而是看上去很棒
这就是我们今天要讨论的话题
我将开始我的演讲
这个是你一定要带走的
当关于自适应时
系统将会为你进行大部分工作我们将要分析它
我将告诉你系统为你做了什么
值得知道的事
还有你们开发者应该怎么互动
和插入这个系统
但是在那之前我想退后一步
想要提供一些动机
想告诉你为什么这是好消息
Apple去年的嘴巴很大
我们卖出了第10亿台iOS设备
我不知道你们怎么想但是这个数字让我惊呆了
现在你有一个公平的看法
关于自适应数量并不那么重要
我承认这点
但是我们知道它们不是同样的设备
这不是10亿台最初的iPhone
所以这会是很酷的事不是吗？
这些年Apple发布了大量设备
有不同的比例 尺寸和形状
我是说甚至颜色
在Apple我们还相信
不管你拥有什么设备你可以按你喜欢的方式拿它们
不管是纵向还是横向
但是除了这些物理设备本身
我们还有软件特性比如slide over
和这些多任务特性
并且增加可能的组合数
你的应用有可能面对
不要忘记其他事像是动态字体
在这用户可以设置字体然后所有应用
会起反应 重新布局你们现在都这样做对吗？
我们还有特性像是语言方向
它是从左到右或从右到左
我们在那些新iPad上还有显示色域
我们将在今年发布
Apple TV也有新特性
像浅色和深色界面样式
保守估计可能的组合数
在iOS你的应用可能面对超过300种组合
这么多
这就是为什么说系统为你做了很多工作是个好消息
这里的关键字是大部分
作为开发者有很多方法
可以插入和定制体验
因为你想要你的应用有独特外观
这就是我们想要讨论的
首先我们要讨论自适应的基础系统
我们称之为特征系统
然后Brent会来给你一个演示
我们是怎么改进用来开发自适应应用的工具的
这就是我们在第一部分要覆盖的内容
是今天的议题
你们绝对会想在明天回来参加第二部分
因为我们会给你实用工具
关于新增加的技术和技巧
你们可以用来使你们的应用自适应
然后我们会把这些放在一起
然后给你们一些很好的演示和代码例子
让我们开始讨论自适应的基础系统
被称为特征系统
有三件事我想要提出
首先我会告诉你它是什么
这是一个很好的出发点
然后我们会讨论特征系统的一个特定部分
我们称之为尺寸类
告诉你们这个系统是怎样工作的背景知识是个好主意
因为这使得你怎样和它互动更清楚
什么是特征？
特征描述你程序运行的环境
horizontalSizeClass是一个特征的例子
它描述体验应该是怎样的
当你的应用是水平时可用的空间
无论你拥有的空间有多少
一个特征本身并没有和它相关的值
这是特征集合发挥作用的地方
你可以认为特征集合
是一个词典映射键也就是特征到值
大部分特征有枚举的可能值
所以你知道你要怎么思考
关于开发你的应用
特征集合通常包括不只一个东西
这很好
通常它们包含多个东西
即使你在屏幕上看到的3个
也小于特征集合的大小
你使你的应用自适应时将要处理
让我给你更多什么是特征的例子
我们会谈论更多尺寸类
还有动态字体大小这是今年新增的
还有布局方向从左到右或从右到左
这三个是布局特征的例子
特征还可以描述外观
正在运行的屏幕的色域是什么
或对Apple TV界面样式是什么是浅色还是深色
但是特征还可以描述能力
你正在使用的设备是否支持3D touch
如果你想要所有可能的特征的完整列表
你可以用来使你的应用自适应
查看UITraitCollection接口
但是现在我想要讨论尺寸类
你的应用可能运行在很多不同的尺寸上
这是所有可能的尺寸的滑稽简化
它有三种
定制特别突出
一是屏幕尺寸
二是方向
三是适配
这就像是你在多任务模式里
不使用形式系统来实现它的一个方式
是对其中的任何一个的改变进行响应
但那会带来很多工作
所以你要做的是让你的布局基于
你的应用的可用空间
而不是那三个可定制的方面
我说的和可用空间互动是什么意思？
我们有两种方式和可用空间互动
给定改变的尺寸
所以有粗粒改变比如改变
从iPhone到iPad在尺寸上是一个大的改变
还有细粒改变比如
从iPhone 6s到SE这是小一些的改变
对每个改变细粒或粗粒
你需要用到不同的技术
不同的技术会帮助你处理
让我们从粗粒改变开始
这想我们都很熟悉这句引用
这是我最喜欢的引用
我们工程师喜欢创造间接的层来帮我们解决问题
让事情变简单诚实的说是懒
所以尺寸类是一个间接层
间接层总是描述一些更高阶的行为
什么高阶行为
是尺寸类正在描述的那就是体验
让我给你2个例子
第一个是我们经常看到的典型例子
iPad上我们有一个主从布局
信息被并行显示
在主栏的改变会反应在右边的详情栏
但是在iPhone没有这么大的空间
我们显示信息的方式改变了
我们用一个浏览控制器
我们会更多的用钻入的方式呈现信息
News是另一个例子
在iPad上我们有坐标视图
坐在沙发上滚动翻阅新闻
但在iPhone上它是一个表格视图
我只能快速用手指滚动
所以体验取决于我们怎么呈现信息
当你思考应用的粗粒改变时
思考这类体验你呈现信息的方式
来决定是否以及怎样呈现那些信息
让我们说一些具体的
我将复习一些高阶的事情
什么是尺寸类？
这是我们带回特征系统的地方
尺寸类有2个特征
这是horizontalSizeClass这是verticalSizeClass
有两个可能值紧凑和普通
紧凑表明你的空间受限
所以你要用紧凑的方式呈现信息
普通说明你的空间不受限
你可以自由探索
至少到你12.9英寸的iPad Pro的边界
这表明我们有4个组合
关于特征和可能的值
现在我想快速指出一些标注
我用在这个幻灯片中
因为这些标注你会看到
在Interface Builder文档和这个系统的一些其他地方
所以它是描述尺寸类的组合
这里有两件事需要注意
首先这里有一个W表明是宽度类
值C或者R代表紧凑和普通
H代表这是高度类或者垂直类
再一次有C或者R
我们在Interface Builder里看到这些
你也会在文档中看到
我希望你们熟悉它
一些设备是怎么被归类到这些组合？
一个紧凑的宽度但是高度的普通的
比如说纵向的iPhone
iPad是普通的宽度和高度
在两种方向上
你会看到横向的iPhone有紧凑的宽度和高度
6s Plus是一个例外
在水平时有普通宽度
当它横向时这就是为什么你看到主从布局
比如邮件 当你用6s Plus时
这会怎么帮助我？
这怎么使我的生活变容易？
一个明显的事是不需思考
300种组合你只需要思考4种
但是等等它变得更好
你只需要思考两种
因为宽度类是最常用的特征类
你需要处理的
如果我们考虑所有可能的特征
布局特征是最常见的类别
在我们要打交道的特征中
在布局特征中尺寸类是最常见的布局特征
你将会打交道
特别是尺寸类和宽度类
是目前为止你最常打交道的类
也就是说你设计你的应用
考虑你想要它们如何不同
在iPad和iPhone之间
主要是思考水平的不同
当然你们会有定制的应用
你们会做特别的事我们知道
但是最常见的情况是只考虑宽度类
现在系统需要决定
设备 方向 适配怎样符合这些组合
有趣的地方是
这些组合会在相同的设备上改变
随着用户操作你的应用
我可以带来slide over我可以进入多任务
我可以改变设备的方向
所以如果你使用尺寸类
要表现你的数据
系统会为你做很多工作
它会在所有设备和方向间过渡
适配过去现在和未来
这很有帮助这简化你的工作
使你的应用自适应
让我给你一些例子关于动态
改变发生在系统里的
再次回到split view控制器
当我的iPad是横向时
我们会有并排的两个视图控制器
但是在iPhone上我们折叠它
到一个浏览控制器
若你使用UI Split View控制器你会自动得到这个行为
除了视图控制器结构这还作用于展示
假设我有一个iPad我带来一个弹出它将会是这种标注样式
但是在iPhone它会变成模型展示样式
再一次 若你使用套件里的控制和展示
你就会得到很多为你预设好的行为
尺寸类会改变
而你的应用会自动适应
这很整洁
让我们来谈谈细粒改变
我只想说一点
那也是在尺寸类中
你会想要使用自动布局来对可用空间的变化做出反应
在自动布局中你可以指定布局的关系
在一个非常有陈述性的表格中
然后系统就会自动移动元素
并且改变元素的大小当可用的空间改变时
在更细分的层次
除了粗粒和细粒还有一种改变
我称之为中粒改变
我不打算告诉你它是什么
我会保持悬念
这样你们就会回来看第二部分
他们会告诉你关于中粒改变的一切
我们已经谈过了什么是尺寸类
我们向你展示了特征系统
我现想告诉你们一些背景知识
关于系统怎么工作
以及作为开发者你们怎么插入其中
用一句话简而言之
特征系统工作的方式
是它得到一个特征集合并且把它向下传递
穿过你的视图结构给一路上的所有停止点
一个处理特征集合的机会
这都是从屏幕层开始屏幕会得到一个特征集合
需要注意的重点
是每个设备 方向 适配
都会有一个完整的指定的特征集合
也就是说不同的特征会有值
然后屏幕会向下传递给所有窗口
在那个屏幕上窗口将把它传递
给它的视图的根视图控制器
然后再不停地传递给子视图控制器和子视图
现在这一路上的每一个停止点都符合UITraitEnvironment
UITraitEnvironment有一个被称为traitCollectionDidChange的关键方法
在这一路上的每个停止点这个特征集合
被向下传递都会调用traitCollectionDidChange
这是开发者需要覆盖的方法
来使你的应用自适应
traitCollectionDidChange是这里的关键方法
你基本上只需要覆盖它
在视图控制器和视图这层
这是一个简单的线性例子
什么是复杂一点的例子？
让我们看横向的iPad
我们有自己的屏幕到这个窗口
向下到视图split view控制器等等
在这里我们看到发生了变化
当特征集合向下传递时
实际上你可以改变特征集合
当向子视图控制器传递时
split view控制器将会为你这样做
它将要做的是
改变它要传递给特征集合主视图控制器的特征集合
它要改变horizontalSizeClass
为一个紧凑尺寸类
而向细节视图传递一个普通的
你们也可以这样做
当你们开发你们自己的视图控制器容器时
但是一般你们不需要这样做
这是traitCollectionDidChange是什么样子的例子
我会带你看一些关键点
首先为了让系统帮你完成一系列工作
你需确保调用super函数
接下来你希望工作只在特征
你感兴趣的特征改变了
我听到了你的问题
traitCollectionDidChange被调用了
这难道不表明特征改变了？
这是对的
特征集合在任何特征改变时被调用
通常你的应用只想知道少量的特征
大多数情况下只是水平尺寸类
所以你想要确保你没有做额外的工作
如果你感兴趣的特征没有改变
接下来我要改变可能的值
对horizontalSizeClass
作为一个边注
我倾向于使用switch语句
当我在Swift和Objective-C里处理枚举类型时
因为这表明枚举的申明改变时
如果有一个新的类型我会在构建时得到警告
若我在使用详尽的switch语句
我鼓励你们也这样做
这节省了我大量时间
比如说它的值是紧凑
我会离开来设置我的约束条件
所以对所有要自适应的视图和视图控制器
traitCollectionDidChange需要被覆盖
再一次这会调用所有符合
UITraitEnvironment的方法
这是你进行自适应的地方
看起来要做很多工作
实现traitCollectionDidChange
对每一个视图和视图控制器
对你应用所有可能的改变
很多事有可能改变
所以有很多系统会为你处理
traitCollectionDidChange
比如一个系统是Interface Builder
若你使用Interface Builder 来构造你的界面
你在Interface Builder里使用自适应性和尺寸类
系统知道怎样自动应用
当特征集合改变时
另一个例子是资产类别
你可以针对不同的色域指定不同的图像
不同的尺寸类不同的比例
都会在traitCollectionDidChange里被应用
最后UIAppearance可以为了特征集合被定制
所以你可以用不同的颜色方案
针对Apple TV的浅色和深色模式
这些改变都会自动被应用
在traitCollectionDidChange中
你会想借助这些系统
为你处理这些
这让你很清楚地表明
关于你想要你的界面怎么应对和适应
这使得遵守和维护都变得非常简单
回顾一下我们这么久所看到的
特征描述你的应用运行的环境
特征集合是一系列的特征
有它们相关联的值
可能是布局特征外观特征
也可以是性能特征
要覆盖traitCollectionDidChange
来使你的应用自适应
你想要借助系统来响应
traitCollectionDidChange
尺寸类描述你的应用的体验
你的信息是怎么编排的
然后回来
系统可以为你做如此多的工作
如果你借助我们给你的这些工具
我再用20分钟来展示自适应的强大之处
要看它有多酷你需要在活动中看到它
所以我想请Brent来演示那些改变
我们一直对工具所做的来改进自适应的工作流程
有请Brent Shank
谢谢你Kevin
现在你们知道了基本的构造组件
用来增加应用的自适应性
那就是特征 特征集合和尺寸类
我们演示Xcode怎样
还有InterfaceBuilder编辑器 使这变得容易
让我去演示电脑
离这挺远
我认为构建一个简单的视图很有帮助
来聚焦到特征集合系统的根本
来添加一点自适应性
这就是我们要构建的
这很简单
这描述一个位置我选择Tenaya湖
你应该把它加进列表
这是个很棒的地方在Yosemite
这个视图在顶部显示一个标签
在底部是这个地方的图像
请注意在iPad上有一些改变
一些元素在iPhone上没有出现
你看到在顶部
标签看起来不同
那只出现在iPad上
我们现在要构建这些
你会看到这在Xcode 8里使用工具来做多么简单
我已经创建了这个项目我会转到
这个标签页我已有载入好的storyboard
有一些东西值得看一下
在Xcode 8 InterfaceBuilder 画布里
首先请看视图是怎么被渲染的
看起来就像纵向的iPhone 6s
因为它确实就是
我们用模拟器来渲染这些内容
你在设计画布里得到像素完美渲染
我们认为这对你的工作流程有巨大的帮助
当你尝试将这些美丽的设计
从设计者那带入你的应用时
另一个值得注意的事是那个
谢谢
另一个大的改变是现在在Interface Builder画布里的场景
总是被按照真实设备的尺寸来渲染
或者它们的一个配置
相比前个版本的Xcode这是一个大的改变
让我们看看其他新特性
我在底部这条这里放大
你可以看到所有东西
这是Interface Builder画布的底部按钮条
它存在有一段时间了
在右手边你可以看到控制
用来添加布局限制条件
我希望你对它们熟悉
在中间是Xcode 8的新的放大控制
如果你还没有安装和试用beta版
很吸引人的一点是可以编辑你的场景
在任何缩放级别中
请一定试用一下它很棒
但是今天我想谈的是这里的这个按钮
它说视图作为iPhone 6s
在括号里有标注说
如果你坐在后面看不到
它说wC hR
这是告诉我尺寸类
我正在查看的设备配置的尺寸类
这是一纵向iPhone 6s
也就是说它是有紧凑宽度和正常长度的设备
这是一些Kevin谈过的术语
我会展示怎么用它们来添加适应性
场景被渲染在纵向的iPhone 6s上
如果我想要改变它呢？
你只需要点击查看作为按扭
它会打开新的设备配置条
它是Xcode 8中全新的很酷
我放大了让你看清楚
这里有很多堆叠的图标
最左边的一堆表示
Apple目前推出的不同的设备尺寸
我们在左边有最大的iPad
在右边有最小的iPhone
紧邻它的是一堆按钮
让你选择想要查看场景的方向
我现在就要这么做
我要转到横向
在设计画布中你可以在所有设备中循环
还可以循环所有方向来查看你的内容会被怎样显示
和渲染这很酷
谢谢
所以iPhone很有趣但是iPad更有趣
我现在选择一个
你可以看到那有一系列其他的按钮
出现它代表适配
iPhone对每个方向只有一个适配就是全屏
iPad有趣一些因为你的应用
你的用户可以选择在slide over或split view中运行你的应用
这就是在这里适配是什么
如果你选择这个你会看到屏幕现在渲染
这个应用就好像用户在iPad中的slide over中运行它一样
所以在设计画布中就考虑这些
你可以在所有配置中循环
所有的方向 设备
来查看你的内容会被如何编排
这是一个很强大的新工作流程
会节约你大量时间
这就是Xcode 8中Interface Builder的新功能
现在我们来看看构建这个视图要进行的工作
这是我们首先要做的
我们要添加这个标签
我们要这样添加它它就会在所有设备配置中生效
这可能是你在InterfaceBuilder中做的最多的
你通常不太基于尺寸类来定制化
让我们现在这样做
我有设备定制条iPads被选中了
什么被选中并不重要
因为我将要做的是使它作用于每一个
我在InterfaceBuilder库里 找到标签
我把它拖出来
我现在要添加一些自动布局约束条件
就像Kevin说过的这是系统的一个功能
我们提供它使得
你的UI适应所有不同的设备配置
我要添加一些约束条件
我要把它固定到顶部做为垂直间距
我把这个在容器里水平居中
我在它们间加入垂直间距的约束
垂直间距下的图像视图
我有一些内容我要粘贴到这看起来不错
我有一个约束在这个图像视图
和顶部的布局之间我不再需要它了
因为我添加了标签
我要删除它
我如何知道做的是正确的并且添加了正确的约束条件？
这就是设备配置条发挥作用的地方
因为看它在iPhone中是怎样显示的很容易
你可以看到它停留在正确的位置
我遍历所有的设备甚至不同的方向
好的
这是你常用的操作
每天都在InterfaceBuilder中做 很容易
让我们来添加一些适应性
一些利用特征集合系统的定制化
我们现在要做什么？
我们要修改这个标签顶部这个标签的字体
设计师想用System Semibold 36但是只针对iPad
让我们回到storyboard
当你考虑为一个设备添加定制化
你应该考虑的是添加定制
给一个特定的特征集合在这个例子中是一个尺寸类
我们为所有的iPad和iPhone进行设计
但是作为一个开发者你应该能够转化
它成为尺寸类你想要针对的
我们使这变得很容易
比如我有一个iPad和尺寸类在设备条被选定了
我会放大这样你可以看到
它显示普通宽度 普通高度
所以你不需要猜测
一个特定设备配置的尺寸类是什么
你只需要在设备条中选择配置
Interface Builder会告诉你尺寸类是什么
我们认为这是另一个优秀的改进
现在让我们介绍
让我们看看这个标签在不同尺寸类中看起来是怎样的
我在画布中选中它
然后来到属性查看器
我已经选择了它
我会再放大
所以你可以看清楚这个查看器
你看到那有很多属性
这个光标真大
边上有一个+按钮
这个+按钮表明那个属性
可以用特征集合系统来定制
让我们现在就这么做
我想要改变字体所以我点击这里
出现菜单允许我添加定制化
为普通宽度 普通高度
它为什么这么做？
因为我有普通宽度
普通高度的设备配置被选中了
这是有意义的
我们将这么做会发生的事是
那个属性查看器现在为字体显示另一行
再次 它有同样的标注
和我在设备条中看到的属性查看器
这就是为什么它很重要
在这里你知道发生了什么
让我们来改变我会调出字体编辑器
我选择Semibold因为我总是照着设计师说的做
36
然后点击完成
你可以看到在画布上渲染的更新
如果我选择iPhone
我可以预期会发生的是
字体会和刚才改变之前一样
因为我只针对普通宽度 普通高度的设备
在那次编辑中
这就是使用属性查看器的例子
添加基于尺寸类的定制化
这是第一个定制
让我们添加另一个
这次我想要添加这个标签
我想只针对iPad
我回到storyboard
因为我想对iPad添加这个定制
我需要在设备条中选择它
请注意设备条上的这个按钮
上面写的是为特征改变
当你点击这个按钮时会出现一个弹出窗口
问你我们想要怎样介绍这个特征
什么样的特征
你想要针对的特征集合
这是什么意思？
我有一个普通宽度
普通高度尺寸类设备配置
我可以选择对普通宽度普通高度进行定制
如果我点击这两个复选框
但我也可以选择定制普通宽度
任意高度或任意高度普通宽度
好的
我想要定制普通宽度而已
所以我这样做
这个工具条显示蓝色阴影来告诉我
我将做基于尺寸类的定制
让我们看看这个工具条的内容
我会在这放大
你可以看到它说我将改变8个普通宽度的设备
设备配置
我看到横向和纵向的iPad
以及一些slide over配置
这是有意义的
但是我还在这看到iPhone这是为什么？
如果我把鼠标放在上面我看到
这是横向的iPhone 6s Plus
Kevin说过因为这个设备很大
它在横向时使用普通宽度尺寸类
这很好你会经常想要
提供不同的体验给不同的设备配置
但在这例子里我不想那样做
我只想针对iPad定制
我要怎么做？
我回到为特征改变
这一次我要对普通宽度和普通高度进行改变
当我这样做时注意iPhone从工具条里消失
我将要进行的编辑只会对这些配置生效
好的
让我们做那些
我会拖出一个标签把它放在这
我会添加一些约束条件
来保证它待在正确的位置
好了
我会点击完成改变
让我们回到属性查看器
因为我想要聚焦在一些复选框上
你之前看到过的
我想你了解为什么这么做
我为了特征进行改变我选择了宽度和高度
表明我设置了这个工具条来进行定制化
为普通宽度 普通高度
当我做这些时
我拖出来一个视图
我把它加入视图层级
针对普通宽度普通高度
这就是这个复选框向我显示的
大部分时候你添加视图
到你的场景它们会被安装到全局
所以它们会出现在所有设备配置
不管是什么尺寸类
但是当我在这个模式下当工具条是蓝色时我添加视图
或者添加自动布局约束条件
它们只会安装到特定的尺寸类中
那些我针对它们进行编辑的尺寸类
理解这些很重要
再一次要证明这些
可以在设备配置条中遍历iPhone
这个标签不在那
所以我做对了我添加了视图只出现在
普通宽度普通高度的设备中
好的
我们要做的下件事
是我们要用设备条进行更多编辑
如你所见
当我来到一个iPhone那有太多空间
在顶部标签和图像视图之间
现在我回到设计
我的设计师希望它们紧凑
我要怎么实现它？
非常酷的事是
你实际上可以定制自动布局约束条件的常量
用一个变种像我们已经针对尺寸类做过的那样
让我们现在这么做
你看到如果我选择这个图像视图
记住我在它们之间添加了垂直间隔
好了
我点击了这个约束我看到这个自动布局约束条件
我看到它的很多属性
你可以看到常量的值是61
问题就出在这个值太大
我可以编辑它而且我可以只针对iPhone编辑它
为了使纵向的普通高度的设备紧凑
再次 我可以点击为特征改变我会针对宽度和高度定制
你可以看到这个工具条的内容显示iPhone
但是为什么这些iPad配置会出现在这？
请记住当iPad在slide over或split view模式中时
没有那么多空间
你应用的空间受限
你希望把iPhone的体验也带到这种情况下的iPad
这是有意义的
所有你在这看到的iPad配置
有普通高度配置也会变紧凑
这很好这就是我想要的
我进入了为特征改变这个工具条变蓝了
我可以再次选择这个约束
好了
请注意我将把这个值改成45
请注意属性查看器
我提交这次编辑会发生什么
就像我们定制字体时一样
Interface Builder添了另一行约束
你可以看到这是使用相同的尺寸类
我在这个工具栏里配置的
我已经改变了这个
我为这个约束常量添加了一个定制化
通过在设备条里开始一次编辑
但是我使这次编辑直接反映在画布中
这很酷
我遍历这些设备看起来都不错
但还不够接近
我如何解决该问题？
你可能以为我要回去使这个工具条变蓝
然后试着编辑
这不是正确的做法
需要理解的重点是
当你为特征改变时
你引入基于尺寸类的变种
但是你不用这个流程来编辑它们
更好的难道不是你可以直接编辑
那些定制化 在画布中是的你可以
我选择了一个iPhoneInterface Builder知道这点
它还知道我有一个针对它的定制
所以当我去编辑它时
它知道我想要数据去到哪
如果我把45改成30
请注意属性查看器发生的变化
它会为尺寸类更新
因为它知道我有基于尺寸类的定制
我们认为这是强大的新流程
它让你通过设备条引入变种
然后你可以继续直接在画布里编辑那些变种
就这么多我想交还给Kevin
谢谢你Brent
谢谢
我想要回顾一些事情
Brent在它的演示里提到的
首先我们介绍了新的设备配置条
在这你可以看到设备
你可以看到你的应用在它们中以及在它们中移动
我们还有一个新的流程用来引入定制化
在不同的特征间
你可以用属性查看器进行精细的编辑
属性查看器还让你
查看所有你做出的改变
如果你还有疑问要怎么设置这些
你永远可以进入查看器来看你做了哪些定制化
还有一个为特征改变的模式
在这你可以做一些大的样式改变
像Brett提到的这很重要
这个模式是为了引入新的定制化
一旦你离开这个模式
Interface Builder会知道怎么更新这些定制化
你基于你当前看到的设备做出的
这工作的很好
现在这些改变不仅对iOS有效
这些流程改变也对tvOS和watchOS有效
还有InterfaceBuilder
总之
我谈论了特征系统的基本
我们谈论了特征怎么描述环境
traitCollectionDidChange要怎么被覆盖
来进行你的所有适应性在系统的帮助下
还有尺寸类
描述你怎样显示信息的检验
Brett像你们演示了新流程和工具
Interface Builder现在如何允许你
在设备中查看你的界面
同时能够编辑底层的数据
针对特征集合和特征
你想要你的应用自适应的
这就是第一部分它的重点
是系统会为你做大部分工作
你有很多种方法插入
做为开发者借助那些
我为看到你们的自适应性应用感到兴奋
请在明天回来因为我们会讨论更多
会给你们更多技术
使应用自适应
我们会用一些演示把它们整合
除了明天的演讲还有自动布局
你们也会想看
来看我们在自动布局上做的改进
包括一些更精细的改变
会有一个优秀的演讲
祝你们接下来的一周度过美好的时光午餐享用愉快！