tvOS平台上的AVKit框架
早上好
有多少人在App Store上有应用或在开发播放视频的应用？
有不少人 不错
不管是为运动、新闻、娱乐、还是教育
视频播放系统中最重要的部分是什么？
是播放 暂停控制？快移？
也许是音频 字幕设置？
不 当然不是当然是视频呈现
所以重要的是
当用户在用你的应用看视频时
他们完全关注在视频表现上
不会为了搞清用户界面而分心
所以很重要的是 视频播放系统
对观众来说要是简单 一致 可预计的
当他们在Apple TV上往返于不同应用时
视频播放在Apple TV上看似简单
却不是什么简单的任务
市面上有很多不同的用户交互工具
包括Siri remote上的按钮和触控表面
Siri声控前几代的Apple TV remote
iOS Remote应用
蓝牙键盘 游戏遥控器
当然还有红外线通用遥控器
如果你不需要对付这些不同的控制方式不会很棒么？
我是Dan Wright今天我要讲讲
怎样用AVKit框架轻易达到这个目的
AVKit提供先进的回放控制和一致的用户界面
让我们快速看一下AVKit提供的一些功能
这是用AVKit播放视频
可见一条透明的运输条显示播放时间
在视频中的位置以及所剩时间
触摸遥控器上的触控表面显示提示
点击边缘会往前或往后跳
或者向下按住触摸面观众可以快进或快退
暂停时 在遥控器上从一边刷到另一边
可以迅速快进快退整个视频
向下划会显示信息面板 包括
关于该视频和导航标记的信息
还可以进入音频和字幕的设置
最后AVKit自动支持Siri声控
像“回到开头” “她说了什么？”
“向前跳30秒”
暂时开着字幕重播
AVKit使用先进的媒体栈iOS macOS也有该框架
AVKit负责提供用户体验
AVFoundation和CoreMedia提供核心播放工具
UIKit或者在macOS上是AppKit
提供界面元素
今天我们要讲三点
第一 我们要展示用AVKit如何简单开始
第二 我们看看几种方式
用tvOS的特点扩展播放体验
第三 我们要讲怎样最好地实践
好了开始吧
让我们讲讲AVPlayerViewController
AVPlayerViewController用AVPlayer AVPlayerItem
和AVAsset 由你的应用提供
AVAsset代表音频视频媒体
AVPlayerItem代表媒体资源状态
AVPlayer控制播放
AVPlayerViewController在最顶端 负责UI
让我们看看怎样把媒体提供给AVKit
有四个步骤
第一 从URL创建媒体资源
第二 创建一个该资源的播放项
第三 用播放项创建播放器
第四 把播放器视图控制器和创建的播放器相关联
现在 你可以简化所有步骤到一行
只要直接用URL创建播放器
并指定它为播放器视图控制器的播放器属性就行
接下来让我们看看你怎样嵌入内联播放器视图
首先 构建播放器视图控制器
然后 设置画面为内联视图
这儿我们直接设置画面了但你应当用约束
第三 把播放视图控制器的视图加入你的视图
把播放视图控制器自己加到
你视图控制器的子视图控制器
现在 一旦你做好交互全屏展示的准备
就可以呈现这个视图控制器它会自动实现动画效果
从内联播放器到全屏
好 让我们谈谈延伸播放体验
去年秋天tvOS 9引入AVKit附带一些增强功能
也就是 可以添加无交互覆盖
限制播放时的交互
提供元数据
导航标记
识别插播广告内容
tvOS 10中我们将引入一些新的增强功能
可以修改如何跳着播放
可以展示播放内容建议
现在我们依个说说
覆盖层用来放图标和其他覆盖着的图形
播放覆盖视图在视频本身的上面
但在控制层的下面
视图可能是静止的 或活动的
但是视图接收不到聚焦或事件
现在继续讨论限制播放控制
播放器视图控制器的requiresLinearPlayback属性
限制用户交互到仅剩播放和暂停
功能如快进 快移 跳播
章节导航等都在设定这个属性时被禁止
一般来说 你会把它设为真当你想强制播放
一段视频比如广告 或法律注意事项时
外部元数据属性
补充替代了你媒体资源内置信息
像标题 描述 流派 媒体内容评级
PG-13还是R级这些或者海报封面
现在让我们回到之前看到的显示信息面板的截屏
我想让你们注意这里顶部的部分
这是tvOS中信息元数据显示的地方
现在 不仅如此还显示在iOS Remote应用上
这儿我们看到这个封面
看上去像是从视频中一帧静止画面
看到标题
还能直接从资源信息上看到时长
媒体内容评级和描述
现在看看如何创建外部元数据条目
我们将创建一些辅助函数
来让它变得简单
第一个函数 叫做元数据条目需要一个标识符和一个值
将返回AVMetadataItem
那么元数据条目有很多属性
你需要设置这三个属性：值 识别符
和经常被忽略的扩展性语言标签
现在你们看到的我把它设为字符串“und”
作为“未定义的”简称所以它有通配符的作用
如果你没有非常特别的语言版本的话
这就是AVKit会展现的
如果你没有任何语言翻译
如果所有内容都是比如说 英语的 或者法语的
那就用“未定义的”这样用户
不管他们用什么语言都可以看到些什么
封面就有点不一样了
封面的元数据项的值属性是图像
它是原始数据你可以用PNG或者JPEG格式的
你还需要设置数据类型字段
来确定你提供的是什么类型的数据
还有一样的 你要设置识别符和扩展性语言标签
我们要把这些放到一起
创建几个外部元数据条目
创建一个数组
用辅助函数添加标题
描述 和海报封面到这个数组
抱歉 还有流派
最后把数组指定为
当前播放项的外部元数据属性
好了 回到信息面板
向下看看底部
这是导航部分
这里展示一组导航标识
导航标记常用来标记章节
但也用来方便进入视频中不同部分
导航标识组标记章节或事件
举例说 事件会是在一个运动视频中
你会想标记的比赛精彩部分
一组导航标识被定义为
AVNavigationMarkersGroup类的一个对象
它包含一个数组的导航标记这里是章节标记
每个标记有一个标题
大部分情况下还有
一个图像 往往是视频缩略图
但那是可选的
一个事件组本身也有标题
章节组则没有
好 还有一个小小的辅助函数用来创建导航标记
它需要标题 描述 和时间范围
定时范围是你要定位到的视频片段的时间
然而持续时间是随意的
如果你不是非要设置 可以随它设为0
这里又一次 我们要为标题和描述创建元数据条目
最后创建定时的元数据组
用元数据和定时范围
好 讲讲插播内容
这里我们看到有几个插播内容的视频
以运输条上的点来指明
用户在看一条插播内容
运输条上方的时间在倒数剩余时间
下方时间表示已播放时间
插播内容是与正播放视频无关的内容
所以是像广告 法律声明 之类的
插播时间范围仅表示
在含有插播内容的资源中的一个部分
插播时间范围会折叠起来
运输条上的点像缺口
如前一页幻灯片上看到的
最后 在快移时 插播内容是隐藏的
所以用户在从这个视频定位
用快移时 不会被弹出的广告干扰
这里有一张简图
比较上面的视频文件时间线
和底部用户看到的运输条
九分钟的视频中有几个插播内容
都被折叠成点
注意到运输条上的插播内容持续时间
长度减少了
或者说这些插播内容的持续长度看上去减少了
现在看看如何创建并声明插播内容
首先在你的服务器上应该链接插播内容
直接到HLS流媒体库
接下来 在用户应用上
声明插播内容时间范围
实现一些委托代理方法来执行播放规则
这里一小段代码
表现如何声明插播内容时间范围
每个插播内容 创建一个AVInterstitialTimeRange
然后设置插播内容时间范围属性为
播放项的该属性
这里我们之创建了单个插播内容时间范围
接下来 委托代理方法
讲三个重要的方法
第一是willPresentwillPresent被调用
当其中一个插播内容开始播放
一般这时你需要修改requiresLinearPlayback属性
来限制导航
比如这是一则广告
也许你有合同上的原因
要求用户一旦开始必须看完整广告
你把它设为真
那么用户不能跳过但他们还是可以暂停
去厨房什么的再回来
但他们不能导航
在插播内容里就不能跳过
didPresent方法在插播结束时被调用
你常常需要把requiresLinearPlayback设回到假
这样用户又能导航了
最后
timeToSeekAfterUserNavigatedFrom从一个时间到某个目标时间点
这个方法被调用 当用户导航时
或表示他们想要移动到视频别的部分
比如快进或快退
快移 点击播放
或者用导航标记跳到视频的另一部分
oldTime表示播放时间点
在快进之前
targetTime表示接下来开始播放的时间
代理方法返回的时间是你想播放器恢复播放的时间点
所以默认下 如果不实现这个方法
它恢复在targetTime目标时间
AVKit会找到目标时间点开始播放
不然 如果你提供插播开始时间
AVKit会自动重定向到插播开始时间
那么如果你重定向了插播开始时间
不像这里的简单示例
你就会需要记录目标时间
当插播完毕后 找到目标时间
那么用户可以再开始看
他们想看的时间点
现在看看跳过播放
这是跳过的指示符
tvOS 10新的跳过指示符
逐条跳过指示符
取代之前 跳过指示符是
10秒向前向后跳跃播放的
tvOS 10系统中你可以选择这两种跳过方式
如果你的应用展示的是电影或电视节目
用户就可以用来
定位向前或向后10秒
每次 更方便的找到他们想看的场面
如果放的是一系列短视频比如锻炼视频
用户更可能使用 可以轻松跳到
下一个视频 下一项锻炼或者前一个视频 前一项锻炼的功能
而不是在一个锻炼视频里前后跳一点
所以为了适应这些情景你可以改变跳跃播放方式
今天定义了两种：
默认方式是加减10秒还有逐条跳跃的方式
播放器视图控制器有三个属性
与此相关：跳跃方式属性
和其他属性来启用或禁用
跳跃指示符
那么来看看逐条跳跃播放而不是跳几秒的
第一件事要做的是
选择新的跳跃播放方式
这里就一路设置启用
向前向后跳跃我有点儿偷懒
然后实现两个代理方法
跳到下一项的方法中
我们要做的是替代当前项为新的视频
然后跳到前一项方法也一样只不过是向后退一个视频
好作为所有这些功能的演示
我要欢迎Jonathan Long上台
Jonathan
早上好
我是Jonathan Long和Dan一起从事tvOS的AVKit框架
今天 我们要演示一个应用叫做AVKit Player
在Xcode打开这个项目
这是主视图控制器
是UIViewController的子类
其中有一个变量引用AVPlayerViewController
我们在prepare函数中获取该引用为了回调转场
并且 我们创建AVAsset
AVPlayerItem和AVPlayer 指定为
播放器视图控制器的播放器属性
接下来打包运行这个项目看它怎么样
这是我们全屏下的播放器视图控制器
附带所有常见的用户交互功能
如果我向下划会显示信息面板
你可以看到这儿并没有很多有趣的信息
最明显的是这儿缺了信息标签
所以第一件事要做的是加入
一些外部元数据和导航标记
这样信息标签页就会出现了
回到Xcode 第一件事要做的是
加入外部元数据
那么创建一些AVMetadataItems
把它们加入一个数组 然后指定该数组
为播放项外部元数据的属性
这里我直接加入了一些辅助函数
它们可能非常眼熟 因为与
Dan在幻灯片上演示给你们的相同
第一个函数创建封面的AVMetadataItem
设置数据类型为JPEG
第二个函数为其他值类型创建AVMetadataItem
设置扩展性语言标签为“未定义的”
现在 这里还有一个辅助函数拿字典为参数
映射字典的键值对
来创建AVMetadataItems返回一个数组的AVMetadataItems
现在用辅助函数
我们可以设置播放项的外部元数据属性
为刚才得到的AVMetadataItems数组
好 我们创建了AVMetadataItems
把它们加到数组中 并指定该数组
到播放项的外部元数据属性
现在继续加入一些导航标记
这儿有一些辅助函数来帮助实现
第一个函数创建一个AVTimedMetadataGroup
用标题 描述 和时间范围作参数
第二个用名字创建AVNavigationMarkersGroup
和四个时间元数据组
代表视频内容中不同时间范围
现在用这些函数
我们可以设置导航标记组属性
在播放项上
设为一个AVNavigationMarkerGroups的数组
命名为“附加组”
好 所以我们创建了AVNavigationMarkersGroup
用一些时间元数据组和名字
把它加入一个数组指定该数组
为播放项的导航标记组属性
让我们打包运行一下看会发生什么
这还是我们的播放器视图控制器
下划看信息标签
现在我们看到在元数据区域所有的元数据
我们指定了封面和标题
现在如果我在底部选择
其中一个我们加入的导航标记
就可以跳到视频内容中的那个点了
所以只需要一点点代码
非常容易的就能加入外部元数据和导航标记
为信息面板提供丰富的用户体验
现在我要请Dan回来讲讲tvOS中AVKit框架的新API了
Dan
谢谢你 Jonathan
好 播放内容建议
播放内容建议就是对接下来看什么的建议
你也许在最喜欢的应用里看到过接下来的提示
比如Netflix、Hulu、HBO
当你看到每集最后时 比如白宫风云
你会看到一个提示跳出来说看下一集
然后一直看一直看直到凌晨三点
许多应用在它们tvOS 9版本实现了这个功能
这有点难搞 没别的
在tvOS 10AVKit提供一种标准方法
来呈现可定制的 接下来 体验
我们称之为播放内容建议
这里有个例子
谢谢
现在你有一整个屏幕工作
你不受限于任何
这只是一个示例
在右下方 有一些元数据
和一些可以点击的大按钮
上面正播放着视频
这里是提议视频的缩略图
现在 一个播放内容建议出现了
通过AVContentProposal类的一个对象
这基本上是个模范对象
这里有一些属性
我不会花很多时间在所有这些属性上
但我想重点讲一些重要的
第一个是contentTimeForTransition
这是在当前播放视频的时间中
你想让播放建议呈现给用户的时间点
所以如果你指定视频持续时间
或者0作为捷径
这就意味着你想让建议出现在视频的最后
然而 如果你想呈现一个电视节目或者电影之类的
有很长的片尾摄制人员名单用户不想坐着看完
也许你会想要在片尾致谢名单开头呈现播放建议
可以对应这种情况 设置属性
接下来 automaticAcceptanceInterval属性
允许你设定建议超时时间
你可以设置比如30秒
这表示 如果用户什么都没做
不采取行为30秒 那么建议
就会自动被接受执行
如果不设置这个属性
那么建议会留在屏幕上直到用户采取某种行动
标题和预览图像会成为仅有的一些信息
你可以提供给用户的你可以 当然 也提供
一些多余的信息 比如：描述
也许是一个小工具可以设置用户评分的
也许是一些其他视频的建议
最后 用来指定建议内容的
是设置下条建议属性
在当前播放项上
让我们看看创建一个播放内容建议
好吧 这挺简单
先创建一个AVContentProposal的实例
我们要指定过渡时间属性为0
这意味着我们想要它在视频最后出现
这是个捷径 如果不知道视频时长的话
比如 播放项还没有载入
我们要设置标题和预览图
这个情况下 播放建议第九季第二集
的一部虚构电视剧集叫做"狂欢万岁"
这个情况下我们要设置一个可选属性
播放建议的URL属性
设为这个剧集的URL
为我们之后所用
现在把建议指派给播放项
就会显示这个建议了
当然当前播放项是第九季第一集的
那么 再一次 我们有三个有趣的代理方法
ShouldPresent被调用
在建议马上呈现给用户之前
现在你可以有机会返回假
来禁止呈现建议
但你也可以把它用作最后一次机会
再重新设置 准备呈现
我们马上会举个例子
当用户接受建议就会调用didAccept方法
这意味着他们想要看你提议的视频
当超时发生时也会调用这个方法
didReject方法会被调用当用户表示
他们不想看你的提议 不想看视频
他们想回到菜单
最后 你要实现展示就要
通过创建自定义的AVContentProposalViewController子类
这个子类中有一些有趣的东西
让我们看看...两样
preferredPlayerViewFrame是屏幕上的画面
你想要建议视频出现的画面位置
现在 基类仅返回整个屏幕的画面
这种情况下视频会继续填满屏幕
而你的建议会覆盖在那上面
不然你可以指定一个小点的长方形
也许偏移在角落之类的
来空出很多空间
控制屏幕其余部分
还有dismissContentProposal函数指定如何打发播放内容建议
你可以指定三个中的一个动作：
接受 拒绝 和推迟
推迟是指用户想要隐藏建议
继续看片尾致谢名单这样他们能
我不知道也许想看到自己名字
在名单上若他们为摄制那视频工作了
然后正如其名 推迟 会重新出现在视频结尾
现在让我们看看如何回应代理提醒
shouldPresent方法
在这里 我们要创建一个实例属于
播放建议视图控制器的自定义子类
且指定它为播放建议视图控制器下的属性
在播放器视图控制器函数中并且最后返回真
这让我们最后设置了一下
当我们知道确实需要它的时候
这么做也没有分配一堆用户用不到的记忆容量
didAccept方法
这里我们要做的是替代当前播放项
以一个建议内容的播放项
非常直观我们已经见过这段代码几次了
你会注意到这里我用了URL属性
当我创建播放建议时设置的
现在 不夸张的说
你不需要实现这些
因为AVKit若你在创建播放建议时提供了URL
AVKit会自动做完剩下的
如果你不实现这个代理方法
好 现在演示播放内容建议
Jonathan
大家好
好
我们继续讲讲AVKitPlayer
加入“接下来”体验
通过添加AVContentProposalViewController 的子类
所以我们要做的第一件事
是创建AVContentProposalViewController 的自定义子类
我这里已经有一个了那么我直接加到项目中
这是UpNextContentViewController
AVContentProposalViewController的子类
这儿有一些UI属性
比如UIImageViewUILabel以及其他
我们覆盖了父类中preferredPlayerViewFrame 来返回所需的CGRect
让播放视图控制器的视图
活动起来的 当呈现播放建议时
现在 其他视图控制器仅处理
视图和子视图的布局
所以我们回到主视图控制器
还有两件事需要做
第一 创建AVContentProposal的实例
并指定它为播放项的下一个播放建议属性值
所以 这里创建AVContentProposal的实例
这儿有过渡时间 标题和预览图
我们还设置了自动接收超时时间
为15秒
另外 还设置了URL和播放建议的元数据
和下一个播放内容的信息相吻合
如果用户选择接受建议的话
最后 我们把刚刚创建的播放建议设置为
AVPlayerItem上的下一个播放内容属性
这样接下来要做的也是最后要做的
就是实现两个playerViewController的代理方法
你可以看到这里我们把播放视图控制器代理设为自己
我们要实现的两个方法为
shouldPresentProposal和didAccept
所以在shouldPresentProposal中我们创建了一个实例
AVContentProposalViewController的子类的实例
并指定该实例为
playerViewController下的contentProposalViewController
另外 我们返回真
来表明是否要呈现播放建议
最后 在didAccept中
我们需要处理从当前播放项到下一个的过渡
为了完成这个
我们从播放建议中获取URL
从URL创建AVPlayerItem
然后仅仅用我们的播放项替代当前项
就完成了
让我们打包运行看看怎么样
那么我直接跳到接近结尾的地方
这是我们的播放建议
正如你看到的元数据正如我们规定的
有预览图还有标题
如果这里我选择播放下一个
就会过渡到下个播放项
所以我认为 如果你在tvOS 9上实现了这些功能
你会很高兴使用这个API
你会发现这个很好用
我要邀请Dan回来上台
讲讲AVKit怎样最好地实践
好 最好的实践
我要讲一些事：该做的 和该避免的事
第一 我们推荐你做的一些事
再说一次表现方法或者表现播放控制器
可以处理从内联视图自动放大的动画
所以没有理由实现你自己的动画
第二 记得播放控制只有在全屏时才可交互
第三 用新的播放建议API
你们中的一些人之前编写过更难的方式
我们鼓励你换到新的方式
我认为你会发现代码简单很多
很容易理解代码思路
而且你可以避免一些故障或者其他碰到的问题
当你们之前试图让它完美运作时
还有注意到playerItem中播放器的error属性
这就是你怎样在播放控制中发现错误的
我马上要讲一个特别的错误
需要处理但你们应该还要注意任何错误
发生以及用户反馈的
好 现在有一些要避免的
避免开关showsPlaybackControls
这个属性不是用来暂时显示或隐藏播放控制的
这是用来表示你永久的意愿
如果把它设为假 就是在说
我们一点儿都不需要播放控制
所以如果你来回开关这个属性就是在告诉AVKit
来毁灭所有控制 重新创造它们
毁灭它们 再造它们
你可以想象这不太有效率
第二 有些人讨厌这点
但避免加入补充手势来操控
因为这会混淆用户人们不会发现这些手势的
同样的
不要过份超载选择键和触摸服务手势
不仅因为这会混淆用户也有可能会在未来弄坏它
现在讲些一般的建议
替换资源如果你看到这个错误：
AVErrorMediaServicesWereReset
如果你没有作出回应
媒体服务会在播放时重置
视频播放会失败
用户也做不了任何事除了希望是 退出
所以他们必须做的是退出回到菜单再点进视频
如果你捕获这个错误自动替换资源
播放项和播放器基本上是你AVFoundation的所有对象
然后你就能更天衣无缝的处理这个情况
用户根本不会发现发生了什么
现在 其他一些演讲讲的播放控制最好的实践
包括今年的AVFoundation播放系统的发展
那个演讲在这周早些时候你们可在 WWDC 应用里看到视频
两年前曾有一个杰出的演讲
精通现代媒体播放
演讲包括了AVKit和AVFoundation的窍门
让它们很好地合作
所以总的来说AVKit提供优秀的播放控制
来支持遥控器 游戏控制器和Siri
能完全控制媒体栈强大的API
而且非常容易上手
确保查看示例代码看一些更深入的例子
我们期待看到你们的应用
要看更多信息 可以去屏幕上的URL
我们会有指向示例代码和其他资源的链接
还有看看其他相关的演讲
我们还有HTTP流媒体传输的会话
在这周早些时候
还有两个演讲关于使用TVMLKit
这也是一种直接使用AVKit的替代方法
那么 谢谢各位