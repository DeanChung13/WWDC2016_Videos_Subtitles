Apple TV游戏输入控制
谢谢大家
大家好 欢迎参加Apple TV游戏输入控制研讨会
我是JJ Cwik游戏技术软件工程师
我们在去年九月重新引入了Apple TV
并且提到了10英尺体验
这作为一种共享的公众体验
是真正适合游戏设置中较长的会话的体验
事实是
人们就喜欢在客厅玩儿游戏
Apple TV无疑是理想选择
Apple TV为你提供所需工具
创建引人注目的游戏体验
今天 我很高兴地跟大家一起探讨Siri Remote、
MFi游戏控制器以及如何完美地将两者整合到游戏中
在我开始为大家剧透之前 先来看看tvOS 10里增加了什么新特性
正如你们在本周一所了解的
有些游戏不是Siri Remote支持的高级游戏机制
这些游戏可以把需要游戏控制器的需求选择性地包含进来
现在 我们最多能支持四个MFi游戏控制器
这对于多玩家游戏来说无疑是个好消息
我们还在本周一发布了一个Apple TV遥控器应用
用于控制Apple TV
并充当游戏输入设备
我将在本场研讨会中逐一谈到以上几点
好了 让我们开始吧
tvOS上的应用
一般是从聚焦引擎 获取输入数据
或从触摸和手势中
但还有第三种方式
即从Siri遥控器 直接读取输入
和使用游戏控制器框架的游戏控制器上
现在我简要描述一下游戏控制器框架
你们中可能有人没接触过它
游戏控制器框架最初
用于将第三方游戏控制器植入到游戏中
我们把这些兼容的游戏控制器叫做MFi控制器
自从框架更新后
框架也支持Siri遥控器了
游戏控制器框架是一个标准化的简单API
可以获取所有控制器并使用相同的API调用
而无论控制器的供应商是谁
它使控制器的检测变得标准化
它会 无缝处理控制器的连接和断开
在游戏运行时
并允许你控制输入
更确切地说是从控制器中读取输入
用轮询或事件驱动模型
这在tvOS、iOS和MacOS上都能用
所以 虽然这场演讲是面向tvOS的
但是大量代码和概念都能用在iOS和macOS上
现在你应该对框架有了大概的了解
我再具体说一下
有一个核心类
在游戏控制器框架中叫GCController
这代表着实物控制器...
Siri遥控器 也是用这个类
和MFi游戏控制器
在应用中 你最想做的第一件事可能
就是获得一份当前所有已连接的控制器的列表
你就得在GCController中使用控制器的类方法
这会返回一份当前已连接的控制器列表
是GCController实例数组
如果没有的话 就返回一个空数组
控制器连接和断开是常事儿
在应用运行时
要想知道什么时候连接和断开就需要 添加观察者
给GCCcontrollerDidConnectNotification
和GCControllerDidDisconnectNotification
理想位置是在
应用的Did Finish Launchingwith Options中添加
我们现已知道哪些控制器已连接
我要把重心转移到Siri遥控器上来
Siri遥控器 作为游戏控制器充当游戏触摸表面
通过我刚提到的GCController类
在游戏控制器框架中有这种profile的概念
以及profiles集合的常见功能
Siri遥控器支持这两种profile
第一个profile叫GCMicroGamepad
用于操作触摸表面
和Siri 遥控器上的按钮
Siri遥控器支持的第二个profile叫GCMotion
用于 获得陀螺仪
和加速计 在Siri 遥控器上
请注意 跟iOS上的习惯不一样
在iOS上 动作通过CoreMotion框架表达
而在tvOS上 动作通过游戏控制器框架表达
那么 让我们依次看一下每种profile
首先是GCMicroGamepad
Siri遥控器上的触摸表面
会作为各种虚拟DPAD在游戏中体现出来
你可以用模拟表示法来查询DPAD的值
是一个XY坐标对
或一种数码输入 基本上有四个按钮分别是上、下、左、右
GCMicroGamepadprofile还有一A按钮
相当于点击遥控器
这个非常适合作为游戏的原始动作
尤其是当竖着拿着遥控器时
并且这个profile还有一个X按钮
这个作为游戏中的第二个动作很有帮助
而且当遥控器朝侧面倾斜很自然地
和横向拿着时 大拇指一般会放在触摸表面上
并且另一个大拇指会放在X按钮上
请注意 这个遥控器上还有一个菜单按钮
我们稍后会再谈
遥控器上的其它按钮将留作系统使用
这里有段示例代码 演示有多么简单
从按钮中读取数据
在这里 我们看到已经连接了一个控制器
这样我们就可以从MicroGamepadprofile中读取数据了
MicroGamepad profile存储了A按钮和X按钮属性
我们只看一下isPressed属性
这个属性将确定是否按了这些按钮
我们还支持一种事件驱动模型
所以 如果你想得知
是什么时候按下按钮的 若不想做轮询你可以使用事件驱动模型
这些叫做pressedChangeHandler
这个代码块会在按钮变更状态时运行
通常来说按下按钮的通知会被调用两次
一次是按下去 一次是弹起来
以上说的是按钮
现在让我们来看DPAD
我刚才说过 DPAD可读取四个按钮分别是上、下、左、右
有意思的是 还有另外种陈述
是两个坐标轴 X轴和Y轴
现在让我们来看一下
你可看到MicroGamepad上有一个DPAD属性
有X轴和Y轴两个属性
我们可以读取这两个属性的值
并返回一个浮动的标准值在0或 抱歉
在负1和正1之间的标准值
正如你所期待的那样我们还有个事件回调可用
请注意 在这种情况下我们使用了值变更处理器
或我们提供了一值变更处理器
在DPAD上 而不是在X轴和Y轴上
这是因为我们想在任何一个轴发生变化时都得到通知
DAPD遥控器有一些很有意思的地方
我想具体谈一下
第一个是DPAD开窗
这是什么呢 这实际是定义
DAPD的X轴和Y轴的原点
现在你可能会想原点不应该总是在中心吗
很多时候 这个问题的答案是不见得
很多时候 玩家并不会太关注
他们在触摸表面上正在触摸的精确位置
他们只是想把大拇指放在触摸表面上并相对 移动
于他们最开始触摸的地方
DAPD开窗允许你
作为游戏开发者去挖掘这个相对动作
因此会在触摸表面上的初始触摸点创建一个原点
然后 从那之后的进一步移动会有一个DAPD值报告给
相对于原点的 游戏
让我们举例解释一下
这是触摸表面我把我的大拇指按在这儿
请注意 我并没按在触摸表面的正中央
但启用DPAD开窗以后
这里将作为X轴和Y轴的原点
请注意 有一个虚构的DPAD窗口
位于以原点为中心的区域的外部
请看 当我的拇指划过触摸表面时会发生什么
报告给游戏的值是相对于这个原点的
并跟窗口的尺寸成一定比例
现在 我继续在触摸表面移动拇指
会同时拖动窗口和两个轴一起移动
现在 我们已经建立了一个新原点
在触摸表面上的进一步的移动
都会有相对于这个新原点的DPAD值报告给游戏
这就是DPAD开窗
如果你想始终接收DPAD的绝对值
你可以使用reportsAbsoluteDpadValues属性
将它设为真
这样我们总是能将原点
定位在触摸表面的正中央
然后 我按下拇指并在触摸表面上移动
所有值都是相对于
触摸表面的正中心的
那么这就是DPAD开窗
下一个讲旋转
游戏的DPAD值
是以纵向为前提的 意思就是当X轴向右 Y轴向上时
但是 这可能会导致一个问题
如果玩家想横向玩儿呢？
在这种情况下你的游戏就需要调换这些值
使游戏在横向时也能正常运行
但是 如果用户朝相反方向倾斜遥控器会怎么样呢
你就需要将这些值调换为相反方向时的值
那么 要如何实现呢
要么就强制用户
始终按指定方位玩儿游戏
要么就得读取加速计数据
并追踪方位变更
但你并不想这么做
所以我们提供了一个叫allowsRotation的属性
这个属性的默认设置为假
如果把它设为真那么报告给游戏的DPAD值
会匹配遥控器的任何一种方位
当这个属性设为真并当遥控器为纵向方位时
X轴向右 Y轴向上
在左横向方位时X轴向右 Y轴向上
在右横向方位时 你猜对了X轴向右 Y轴向上
所以 如果你的游戏要允许玩家在横向方位玩儿游戏
就要把允许旋转设为真
这样你就不用担心方位变更
或需要自己旋转DPAD值了
那么这就是旋转
下一个讲动作
我前面提到过 第二个profile
Siri遥控器支持的叫GCMotion
当用户移动遥控器时 重力
由GCMotion profile提供用户加速度矢量中的 就会被更新
请注意 这些值在接触游戏之前已经被过滤了
那么 如果你有一个tvOS游戏
并且你正在做动作过滤我们建议你把它移除
这样就不会给游戏造成任何不必要的滞后
另外 这是混合动作数据我的意思是
加速计和陀螺仪会 加强
相互 和矫正
就像在iPhone上一样重力矢量
加速计中的会矫正陀螺仪中的漂移
并且陀螺仪数据会
使加速计中的值保持顺畅
它们相互增强
实际上剧烈运动会淹没这种作用
正因为如此 我们建议你在游戏中避免创建 情境
需要用户剧烈摇动遥控器的
因为这会使数据很难保持准确性
直到传感器能够找到机会固定下来
接下来 我想说一下菜单按钮
现在 tvOS支持的所有控制器
在游戏控制器框架中都有一个菜单按钮
跟Siri遥控器 菜单按钮一样行为也一样
和MFi游戏控制器上的
在tvOS的app中
当按下菜单按钮时 行为变更
是由情境因素决定的
有时候按菜单按钮会最小化应用
并返回Apple TV主屏幕
通常是在游戏的主菜单中实现的
而其他时候按菜单按钮会返回 上一级
应用菜单级的
通常是在子菜单中实现的
最后 有时候按菜单按钮会暂停
或重新开始激活的游戏设置
非游戏应用完全是在UIKit中进行编码的
在很大程度上 会毫不费力地得到前两种行为 而不用做任何额外的工作
但是对于大多数游戏来说 由于有自定义UI 必须做一些额外的工作
来向系统传达它们的意图
让我具体解释一下
在UIKit中当按下UIKit应用的菜单按钮时
会使子视图控制器突然离开堆栈
这就使你返回菜单的上一级
你可以依次执行 每次按下菜单按钮
使子视图控制器突然离开堆栈
然后在某一时刻你只有一个视图控制器了
就是你的根视图控制器它会留在堆栈中
当堆栈中只有一个视图控制器时
下一次按下菜单按钮时会最小化应用
并使你返回Apple TV的主屏幕
相比之下大部分游戏的结构都不一样
通常游戏中的UI都是自定义的这并不是在UIKit中进行编码的
并且游戏一般有 场景转换
不同部分之间的这也不能在UIKit中进行编码
正因为如此 它们一般能 被释放
通过只剩一个视图控制器即根视图控制器
在游戏的整个持续过程中
但按照我们刚说的规则
因为在堆栈中只有一个视图控制器那么在游戏的各个层面上
按菜单按钮将默认弹回
Apple TV主屏幕
那么你就需要某种方式向系统传达
何时按菜单按钮
返回Apple TV主屏幕及何时按菜单按钮不返回Apple TV主屏幕
进入GCEventViewController
这是一个为单一玩家创建的特殊视图控制器
或更准确地说 是为有单一视图控制器的游戏控制器游戏
如果你正在做的就是这种游戏
你应该把这个特殊视图控制器设为你的根视图控制器
这个视图控制器有一个属性叫
controllerUserInteractionEnabled
这是控制 的关键
什么时候按菜单按钮返回主屏幕的
当它的值为假时这个视图控制器会有效地
截止按下菜单按钮这个行为
并阻止它们建立响应链
从而有效地让你继续待在应用中
偶尔也可用来调用控制器暂停处理器
我们稍后会讲到
当这个值设为真时
菜单按钮事件就会 继续建立
响应链 像平常一样
这时应用会被最小化
并返回Apple TV主屏幕
你作为游戏开发者你的工作是管理 状态
controllerUserInteractionEnabled的
当用户在游戏的不同部分后退和前进时
我要给你们看一个方块图
那么在Apple TV的主屏幕我们启动应用
有些游戏有启动画面而有些则是游戏介绍
但最终 很多游戏都会在游戏内部的主菜单着陆
无论是哪一种 用户的期望是
当按菜单按钮时 它们会立即返回
Apple TV的主屏幕
因此 要把controllerUserInteractionEnabled设为真
当用户继续游戏的其他部分时
比如激活的游戏设置或在子菜单中
用户的期望是按菜单按钮后
不返回Apple TV的主屏幕
那么在这些情况下
就把controllerUserInteractionEnabled设为假
如果用户再回到游戏内部的主菜单
要记得把这个值再设为真
这就是我们的第一个行为
即何时返回Apple TV主屏幕及何时不返回Apple TV主屏幕
我们还有另外两个行为
我们需要考虑返回子菜单
以及暂停和重新开始激活的游戏设置
基本上就是这个图解中颜色较暗的框
好消息是 这些都是在controllerPausedHandler中得到处理的
controllerPausedHandler是一个代码块 你要提供给
控制器或者不如说是每个控制器
这个代码块会在按菜单按钮时运行
并不会把你带回Apple TV主屏幕
用这个代码块检测是个很简单的事儿
你是否在子菜单中需要返回上一级菜单
如果你在激活的游戏设置中就触发暂停状态
就这么简单 现在按菜单按钮的行为处理地都很得当了
无论是在游戏的哪个位置
现在让我们来谈谈MFi游戏控制器
有些游戏可以充分利用扩展控制
由无线扩展手柄提供的
并且这些是玩家可能会持有的可选附件
说到扩展 我们指的是控制布局
而且很可能是你已经很熟悉的布局
左侧有一个DPAD
四个面板按钮
以A、B、X、Y出现在这些位置
右侧有 菱形布局
控制器的前方有两个摇杆
顶部有两个肩部按钮和两个触发器
目前我提到的所有按钮
都是压敏性按钮 我稍后再详细解释
还有刚讨论过的菜单按钮
以及四盏LED玩家指示器
就像Siri遥控器支持GCMicroGamepad一样
扩展游戏控制器支持GCExtendedGamepad profile
你会注意到左侧有一个表列出了所有属性
还要注意数据类型GCControllerDirectionPad
和GCControllerButtonInput
这两个跟你在Siri遥控器上所使用的数据类型相同
有一点我想单独说一下就是DPAD
和按钮以及这个表上的任何一个输入
实际上都是压敏性的
所以 即使我们通常认为这些按钮和输入只是一些数字
在你可能见过的其它控制器中
像DPAD和面板按钮以及肩部按钮
都是压敏性的
因此可以从模拟感应器和数字感应器中读取
让我们看一下那个模拟数字对偶的代码
以A按钮为例 第一行是
获取是否按了按钮的数字状态
所以如果你的游戏只在指定情况下
关注是否按了一个按钮你可以使用这行代码来解决
然而 若你关注用了多大力度去按按钮
那就要使用值属性了
这可以给你的游戏添加更多的细微控制 效果很好
也许你正在创建一款运动游戏
并且允许玩家改变传递的速度
从轻轻地传递到快速地传递
你可以通过读取按按钮的力度来实现
值属性
正如你所期待的我们还提供事件回调函数
请注意有一个pressedChangeHandler
是响应按压属性的
用于变更布尔状态或数字状态
还有一个值变更属性用于响应值或
抱歉 一个值变更处理器用于响应值属性
一般来说 按一次按钮会多次调用值变更处理器
因为按钮要被按下去然后再弹回来
而对于想寻求指导的你们来说
是否使用轮询或事件回调
并没有硬性规定 但轮询有利于
读取那些在较长时间内持续变更的输入
也许就像赛车游戏中的加速器
被关联到按钮触发器
或游戏控制器的触发器上
事件回调有利于
处理按钮的边缘过度
比如你有一款冒险游戏玩家挥舞自己的宝剑
如果你想 激活挥舞宝剑的动画
在按按钮的瞬间
那就要用到事件回调了非常好用
在这点上 你可能大概了解了
连接和读取输入的机制
从Siri遥控器和游戏控制器中
且你很可能会开始思考
你的游戏要支持哪种控制类型
要不要只支持Siri遥控器
还是Siri遥控器和MFi游戏控制器都支持？
如你们在本周一所了解到的信息
Siri遥控器不支持的高级游戏机制的游戏
可以要求使用游戏控制器
那么指定游戏支持哪种控制器类型
是在Xcode中实现
在你的目标设定中有个功能选项卡
能在这个选项卡中发现游戏控制器功能
启用这个功能
并选择游戏所支持的控制器类型
与这个GUI的交互将改变键和值
相应info.plist文件中的
这对于应用介绍页面来说很重要因为 所有游戏
链接了游戏控制器框架的 都会
更精确地说都会在应用介绍页面中找到这些键
链接了游戏控制器框架的所有游戏的
真正涉及到的是App Store
因为你的用户们将在App Store中获知
游戏是否支持游戏控制器
或需要游戏控制器
此外 用户可能会收到警告如果他们尝试
下载一款需要游戏控制器的游戏
并且之前没有在那台Apple TV上配对过游戏控制器的话
请注意 这只是一种保障措施
因为很可能 的游戏
需要游戏控制器 可能仍会启动
就算没有检测到已连接的游戏控制器
这种情况是你需要说明和处理的
很可能用户只不过是忘记
打开游戏控制器
那么在这种情况下 就要通知玩家
没有检测到任何游戏控制器并要求他们连接一个游戏控制器
否则 用户可能会觉得奇怪为什么不能控制游戏
还有一个问题你要考虑
就是以这种方式通知用户
只适用于控制器断开连接的情况
这是因为控制器
或者更精确地说是可用的控制器可能会通过你的初步检测
但是在应用运行过程时
其中一个游戏控制器可能会断开连接
如果这是唯一可用的游戏控制器
那么此时 游戏就不能再继续了因为至少需要一个游戏控制器
此时 也需要告知用户
要了解更多信息 请查看tvOS设计
会话802获得更多游戏控制器的信息
现在让我们谈点儿新东西Apple TV遥控器应用
正如你在本周一所了解到的信息这是个新应用
可以从developer.apple.com上下载beta版
这个应用可控制你的Apple TV
在屏幕中央有一大片触摸表面
而屏幕上的按钮跟Siri遥控器上的按钮相同
重点是 它可以充当游戏输入设备
在tvOS上的实现方式是
以一种非常熟悉的方式通过游戏控制器框架充当游戏触摸表面
实际上是一个仿真的Siri遥控器
因此它显示为一个GCController实例
并支持GCMicroGamepad
GCMotion profiles就跟Siri遥控器一样
事实上 它是不可辨别的
在Siri遥控器的游戏控制器框架中
因此你为Siri遥控器写的代码也可以用在tvOS上
这些遥控器默认为合并
因此 如果你有一个Siri遥控器和一个TV遥控器应用
默认会在控制器数组中作为一个游戏控制器出现
意思就是 任何一个的按钮输入都会体现在游戏中
就像来自同一个控制器一样
DPAD输入也一样
但是对于动作我们并不希望让动作输入形成
覆盖并跟另一个动作输入冲突
所以我们从一个控制器中取出动作 或 抱歉
一次只从一个遥控器中取出一个动作
我们所取动作的遥控器是
最后接收用户输入的遥控器无论是滑动
在触摸表面还是按下A或X按钮
如果你想选择性地分开这些遥控器
并 把它们显示为不同的实例
在控制器数组中
你需要
进入info.plist文件
添加布尔键GCSupportsMultipleMicroGamepads
并把它设为是 现在Siri控制器和Apple TV控制器应用将显示为
在数组中 不同的控制器实例
现在我想谈一下Apple TV遥控器应用内部的一个特殊模式
叫游戏控制器模式
在此模式下 用户可以随意切换出入
在连接了游戏控制器框架的游戏中
这个应用是横向的 同样地
DPAD值被旋转了90度甚至在它们进入应用之前就旋转了
那么你的应用并不需要做任何设置或修改来使用这种模式
但是请注意若游戏是手动把DPAD值旋转90度
那么你实际上是做了两次旋转
所以我们的建议是
如果允许玩家 横向地玩儿游戏
用Siri遥控器和游戏控制器模式
就在Apple TV遥控器应用上
allowsRotation设为真就像我们刚才谈到的那样
然后让我们为你处理方位和DPAD的变更
还有一点要注意
Apple TV遥控器应用的游戏控制器模式
会把触摸表面和A按钮分离开
这点跟Siri遥控器不一样
Siri遥控器是点击触摸表面激活A按钮
但这并不会造成任何麻烦
用户仍然可以在两者上同步输入
并且你的游戏代码仍然会检测在两者上的同步输入
但关键点是如果你的游戏代码假设
按下A按钮会同时激活触摸表面
那么这跟游戏控制器模式上的实现方式不一样
Apple TV遥控器应用的
最后 我想谈一下多控制器
总是有人会问Apple TV能支持多少个控制器
答案是在新版tvOS 10中能支持一个Siri遥控器
和四个MFi游戏控制器以及Apple TV遥控器应用
一般来说 会在多玩家游戏的情境中提出这个问题
在tvOS 10中增加为四个MFi游戏控制器
这对于多玩家游戏来说无疑是个好消息
最初可能并不明显
但这对于单一玩家游戏来说也很重要
让我解释一下
当应用启动时
你不确定你是否只发现一个已连接的Siri遥控器
或也许你会发现一个已连接的游戏控制器
或者各发现了一个
或者也许你会发现一个Siri遥控器
多个游戏控制器和TV遥控器应用
了解这种情况吧？
那么此时关键点在Apple TV上
从多个控制器上接收输入很常见
即使是一个单一玩家的游戏
重要的是 你提前不知道
用户打算使用哪个控制器
你不能假设控制器的数组下标为零的
即为玩家想要使用的那个控制器
那么 我们该如何处理？
嗯 关键是
玩家可以随时切换控制器
也许他们启动了应用
浏览了游戏菜单
然后启动了角色这过程一直都用Siri遥控器控制
然后 他们切换到MFi游戏控制器
来实际开始控制角色
允许玩家 自由和灵活地切换
在不同的控制器之间而无需提示用户
用不必要的确认对话
或无需要求用户退出游戏设置
再使用一个不同的控制器重新进入游戏设置的游戏
将会打造一种真正了不起的无缝体验
我们该如何实现呢？
嗯 一种方式是把
输入所有控制器的都作为单一玩家游戏的有效输入
所以 如果你有个角色在DPAD屏幕上移动
并且允许接入所有已连接的控制器
那么 将允许它们的DPAD控制角色移动
按钮也一样 如果角色 跳跃
通过按A按钮那么就要允许 所有A按钮
所有已连接的控制器上的控制角色
如果某个控制器在游戏过程中接入
那么你也可开始悄悄地追踪那个控制器
并允许它的输入控制角色
现在 运行起来很顺畅了
我们要给玩家一个认知
即他们可以在多个控制器之间来回切换
这实际上是一个手动合并策略
我们从Siri遥控器 获取输入
和游戏控制器上并全部提供给我们的单一玩家体验
但是 我在这里还要说一个极端情况就是动作
我举例解释一下
如果你的游戏使用了动作
比如用Siri遥控器控制飞机在空中飞行的姿势
你还可以把那个控制转移给摇杆用摇杆控制飞机
若玩家正在用游戏控制器玩儿游戏的话
这完全没问题 很好用
关键顾虑是 当你正在手动合并Siri遥控器和游戏控制器时
你不想让控制飞机的游戏杆
被任何可能来自Siri遥控器的动作数据覆盖
当你正在手动合并Siri遥控器和游戏控制器时
那么在这种情况下游戏中控制飞机姿势的代码
应该检测该信息是取自
动作还是取自摇杆
然后再返回来看我们的例子
当我用Siri遥控器控制飞机时
如果我换成游戏控制器
那么那个游戏控制器上的任何用户输入
无论DPAD还是摇杆或触发器或按钮
都将开始忽略来自Siri遥控器动作
并使用正确的摇杆来控制
飞机姿势 反过来也一样
如果我换成Siri遥控器用户输入
也就是滑动触摸表面或按下A或X按钮
将在那一刻起听从来自Siri遥控器的动作
并切换到Siri遥控器
通过这个 我们制定了控制方案对玩家来说非常灵活
可以实现尽可能无缝地切换
在研讨会结束之前 我想说
我在这里向你们演示的技术
可以直接用在你的游戏中
或者也许它们是个良好的开端你可以进行调整
和自定义使它们完美地适合你的游戏环境
但无论如何 我真的鼓励你们
超越控制器的连接 机制
和断开 以及读取按钮值
真正思考你要如何
把游戏控制器整合到你的游戏中去
因为 如果处理得当
站在玩家的立场上用户就会对游戏控制器视而不见
并真正忘情地投入到游戏中来
享受你所努力营造的游戏体验
这才是游戏的真谛
好了 我们今天说了很多
总结一下
我们谈到了Siri遥控器如何支持GCMicroGamepad profile
GCMotion profile中
我谈到了DPAD开窗和allowsRotation
我还谈到了菜单按钮
以及在Apple TV上所预期的行为如何进行改变
根据你的应用的情境
以及如何使用GCEventViewController
和控制或暂停处理器来控制行为
我还谈到了MFi游戏控制器
这些控制器使用GCExtendedGamepad profile
并引入压敏性
并且现在可以在游戏中要求作为控制器使用了
我还谈到了TV遥控器应用
它其实是个仿真的Siri遥控器
从游戏控制器框架角度来说
而且我还谈到了Apple TV遥控器应用的游戏控制器模式
和设计注意事项
以便你的游戏如你所期待的那样能使用Apple TV遥控器应用
最后 结束时 我谈了多控制器
及其对多玩家游戏的重要性
但同样重要的是也要考虑到单一玩家游戏
也就是说 允许玩家在游戏中尽可能无缝地切换控制器
在游戏中尽可能无缝地
这是本场研讨会的URL
你们可以从这儿观看视频、查看文档和示例代码
这场是607会话
其他相关的会话还有“掌握tvOS上的UIKit
和tvOS设计”
还有tvOS实验室可以解答你的一般疑问
非常感谢你们的关注 祝你们在接下来的演讲中度过一段美好的时光