掌握tvOS的UIKit
欢迎来到“掌握tvOS的UIKit”
我是Justin我负责UIKit工作
我在这里向你展示如何超越普通点
真正让你的tvOS应用达到新高度
要做到那些 我们今天需要讨论几件事
首先是事件处理
你的应用将会收到什么样的事件
处理这些事件的最好方法是什么
然后我们会讨论分层图片
这是tvOS独一无二的用户界面元素
我们将展示如何利用它
第三 我们将讨论滚动条
滚动条在tvOS的工作方式与在iOS中有些不同
我们将展示如何控制滚动条
最后我们将讨论文本输入
和如何使用系统键盘
接收用户的文本
让我们开始吧 首先进入事件处理
当讲到事件处理
这里几个全面的最佳实践
我马上与你们分享
第一个是当它允许你的用户
去导航你的应用程序
并转移焦点从一个项目到另外一个项目
你不需要写任何你自己的事件处理程序
焦点引擎会为你处理一起
包括处理不同类型的事件
基于用户当前使用的输入设备类型
它会为你处理好一切
第二 如果你决定需要开始处理事件
我们建议你开始使用UIGestureRecognizer
不仅得到一个极富表现力的API
而且它会帮助确保你的应用里所有的手势和交互
将同所有系统应用和其他应用保持一致
最终 当你正在设计应用交互模型
记住并非每个输入设备
能够生成每一种类型的事件
例如 一个用户可能使用游戏控制器
来导航你的应用程序
游戏控制器能够生成触摸事件
你可能不想使用触摸事件
作为与你应用交互的唯一方式
所以当你正在设计应用时记住这些
谈到触摸
我们在tvOS上的触摸技术
在Siri Remote上使用触摸表面
我们以UITouch交付给你
它是一个API你可能从iOS中认出
一次触碰代表用户手指
和遥控器屏幕的联系
这就像iOS版本
他包括位置和其他属性
你经常使用的
这点是很重要的差别
tvOS和iOS的触摸技术之间
iOS触摸直接发生于用户界面
用户肢体触摸UI
tvOS却并非如此
离用户界面10英尺远
用户触摸的是其遥控器
所以我们把这些分为两个不同的类别
我们称在iOS上的为直接触摸
在tvOS上的为间接触摸
我们称该触摸类型为UITouchTypeIndirect
来帮助你区分两者不同
因为这种间接触摸假如你问UITouch
在一个直接触摸界面“你在屏幕上位置是什么？”
答案显而易见
我们提供一个位置
它能准确配对用户手指在屏幕上的位置
但是在tvOS用户不会触摸屏幕
那我们会怎么报告触摸的位置呢？
在这情况下 我们会
无论用户手指在遥控器上从何处开始触摸
我们总将该触摸传递至你的应用
好像它是从焦点视图的中央直接开始的
这方法很好因为它意味着
任何手势识别器或事件处理逻辑
你可能已附加到焦点视图上
将总有机会参与到手势上
我们不能暴露的是
用户手指的绝对位置
在触控板上
我们为什么那么做是有一些原因的其中最重要的一点是
在tvOS上我们想阻止基于指针的UI
我们不想看到一些如鼠标指针类的东西
或像它一样的
我们真的很希望应用程序能够坚持
我们所创建的焦点交互模型
除了触摸
你还能在tvOS上获得另外一种事件
它们被称作按下
按下方法通过经典UIPress类提供
一次按下代表一个真实的硬件按钮
用户正在与它交互
并不是所有的这些按钮被简单按下或者没被按下
比如游戏控制器这样的一些按钮是压力感应的
我们能真实检测到用户按下按钮的强度
我们可以把那个信息传递给你
你能够识别按下
通过UIGestureRecognizer类
包括如TapGestureRecognizer
和LongPressGestureRecognizer
我们有低级别的按下处理事件
它与低级别的触摸处理事件遵循相同的模式
pressesBegan会触发
一旦用户开始按下按钮
pressesChanged方法会被调用
若它是一个压力感应按钮
并且压力值会改变
还有pressesEnded和pressesCancelled
像touchesCancelled是的 你真的必须执行它
关于这些方法 有件事需要知道
那就是按下事件以为它们不是真的有一个位置
它们直接传递到焦点视图
他们从那里到达响应者链
它们不会去任何焦点视图的子视图
所以要记住这点 当你决定
把什么样的视图附加到手势识别器上
我们说了好多关于按下的事
让我们过一遍按下的类型
对于你来说是可用的和什么类型的按钮会触发它们
在不同类型的输入设备上
所以我要向你展示Siri Remote
上一代Apple TV的Apple Remote
我要向你展示游戏控制器
幻灯片上没有空间 但是记住
按下也能够从可编程通用的遥控器里
和从Bluetooth键盘中产生
所以有很多方法得到按下
可能你最常碰到的按下类型是UIPressTypeSelect
这种按下类型代表
用户想激活一个控制或选择一个CollectionView单元
诸如此类
在Siri Remote上那是在遥控器触摸表面
之下的按钮
在Apple Remote上那是一个银色的圆圈
在游戏控制器上
我们使用A按钮生成此按下类型
另外一种你会碰到的常用按下类型是UIPressTypeMenu
这种按下类型指用户想返回
他们想释放一个presentedviewcontroller
或甚完全释放你的应用并返回到主界面
这三者在屏幕上 就是菜单按钮
在游戏控制器上我们也使用B按钮
最后 就是UIPressTypePlayPause
这对于暂停和播放内容明显是有用的
但是它也被用作除选择按钮以外的快捷图标
所以如果用户选中一个电影海报
按下选择按钮可能会展示这个电影的详细信息
但是按下播放/暂停将直接跳转到回放
所以这图标有——
或者有播放/暂停图标的按钮
在游戏控制器上
我们将使用X按钮生成按下类型
为了更完整些 这还有几个按下类型
它们是定向按下
所以我们有上 下 左 右箭头按下
能够被生成
在Apple Remote上我们使用四个定向按钮
在游戏控制器上有好多方法去实现
所以我们将使用D pad
我们也使用定向手柄
我们甚至生成左和右的按下
在游戏控制器上使用肩按钮
在Siri Remote上这些箭头不是具体的硬件按钮
所以你可能想到在那里生成是不可能的
但那其实是错的
如果你做了一个触摸点击而非一直长按
选择按钮 但只是触摸
在表面的这四个基本方位点
然后UIKit会检测到它
将为你生成箭头按下
这是一个真正简便的导航方法
一次一项目地通过你的用户界面
只因用户正使用Siri Remote
那并不意味着它们不能生成箭头按下
我保证你可以用手势识别器去识别它们
我不会详细过一遍但是我想给你们举些例子
你知道 我们可以使用顶端的TapGestureRecognizer
我们甚至可能长按 正如你可能这么做
在tvOS主界面进入编辑模式
在底层我甚至可以调整所需点击的次数
所以我现在选择按钮上监听一个双击
好的 让我们特别谈谈一个按钮
它是菜单按钮
菜单按钮在tvOS上有些有趣的行为
它似乎有两个角色
它不仅需要在你的应用内部有用
因为我们要做诸如释放视图控制器之类的事
或弹出UINavigationController
而且它还需要有系统层级的行为
最终你的应用需要去释放——
被释放 因而用户可以返回主界面
若那不可能 你的用户将感到非常沮丧
可以想象这非常重要
这就是应用审查的特别关注点
如果你的应用程序无法退出
通过按菜单按钮你可能无法通过应用审查
我们不想发生这事
所以这怎样进行？
我们如何得到它以致菜单按钮不仅
被应用程序捕获而且可以被系统使用？
所需技术层面的
为了你的应用能完美退出并返回主界面
是当菜单按钮被释放的时候
pressesEnded事件需要一路沿
响应者链向上若你被UIApplication接收
如果那不发生 你的应用不会退出
有时候那正是你想要的
如果你已深入到UINavigationController
用户按下菜单按钮
他们不想退出你的应用程序
他们只想返回到前一个视图控制器
在那种情况下 有可能是TapGestureRecognizer
它是用于监听菜单按钮
如果那个识别器开始识别
它会发送pressesCancelled到响应者链
在这种情况下 应用不会退出
然后UINavigationController可以抛开视图控制器
不总发送pressesEnded到你的应用是可以的
你只要确认这是可能的
当它出现在一个合适的时机
所以正确的做法是
我们强烈建议你从手势识别器开始
当你不再对处理菜单按钮感兴趣时
你需确保GestureRecognizer已移除
一种做法是从视图中移除GestureRecognizer
同时禁用手势
手势识别器有个属性叫做已启用
如果你把值设置为假然后手势将被禁用
如果你不想那么做
这里有UIGestureRecognizer delegate API叫做gestureRecognizerShouldBegin
你可以执行它然后对于每个菜单按钮的按下
你有机会在那刻决定
是否想处理手势
如果你正执行低级别按下处理方法
在pressesEnded实现中
决定你是否想处理这个事件
如果你想去处理这个事件就不要调用super
但如果你不打算处理这个事件
就确保调用super
这样它就可以继续沿响应链向上走
UIApplication有机会去接收它
最后 若你正写游戏
你只有一个视图控制器是非常常见的
它是用于展示你的游戏
所以这种情况下
你可能考虑使用GCEventViewController
它有这个属性controllerUserInteractionEnabled
功能是
当用户使用游戏控制器浏览你的应用时
不但事件将会到游戏控制器框架中
这框架可能你早已在游戏中使用
而且它可能产生UIKit事件如按下或其他
当你正在玩游戏你可能没有兴趣
接收这些事件的UIKit版本
如果你设置controllerUserInteractionEnabled
值为假 在游戏进行中
然后按下菜单按钮不会立刻退出你的应用程序
取而代之 你将能够捕获它并你自己处理它
但是当用户返回到游戏根菜单
你将把值设置为是
所以按下菜单按钮能够退出程序
这就是事件处理
现在让我们讨论下分层图像
分层图像是一个用户界面元素
这是tvOS特有的
你可能在所有演示中看过这些图像了
它们最多可以有五层图像
是移动的parallaxing内容
这些是应用图标需要的
在tvOS上 你的应用图标至少两层
你至少需要对该格式有点熟悉
如果你将在tvOS上开发
它们是交互的
当用户在Siri Remote上移动手指时
图像会随着他们的手指移动
这不仅仅是看起来很好看
这帮用户意识到他们的输入被实时接收
帮他们预见焦点运动发生的轨迹
它们是动画
所以他们有很多很棒的内置动画
特别是当它们获取聚焦时
我们将展示怎样才能协调这些动画
使你的应用变得生动
所以让我们来讨论一下交互
我刚才播放的视频是UIImageView
若UIImageView获得聚焦
它会给你一个很棒的浮动外表
若你有一分层图像在ImageView里
但是这是常出现的情况一个UI图像不是
实际获得聚焦的控件
图像通常是较大控件的组件
在这种情况下 较大控件将获得聚焦
所以怎么获取浮动外观
如果图像不被聚焦？
它不一定要获得聚焦
我们已拥有添加至UIImageView的属性
叫作adjustsImageWhenAncestorfocused
如果你设置它的值为真
如果任何父图片视图获得聚焦
然后图像会自动获得浮动外观
并开始对用户的输入有响应
而且这些图像也有“按入”状态
这与一些正常默认值状态有点不同
它们就在屏幕上
它们有种“压入”外观
好像用户用手压下一样
你可以手动触发它
通过在ImageView设置isHighlighted属性值
为真或假 那会产生打开或关闭的效果
你可能想在控件子类里这样做
当用户开始按下选择按钮 例如
但有一些情况 我们已为你考虑到了
你完全没有必要手动去做这些
这些图像是在UICollectionViewCells内部
还有图像在自定义UIButton内部
这些情况下 你完全无需管理isHighlighted属性
我们会为你管理它
我们谈过了动画让我们再进一步了解它
当这些图像形成时发生的事情之一
在浮动外观里它们变得更大
或者看起来更大
你可能不得不在毗邻使用它
你可能把它移开
比如在电影画报下方你有一个标签
你可以使用自动布局去限制这些
所以 若我在此有ImageView
若我改变ImageView大小使其与图像一样尺寸
然后你可以限制图像的边框
但当它放大 边框不变
但图片的可见度会变
所以弄清图片获得聚焦时会有多大
我们展示focusedFrameGuide布局指引
你可以附加其他限制条件到那个布局指引上
这样 那些视图将会离图像足够远
当它们变大时 不会被剪辑
让我们过一遍这个
我在此有个ImageView并且有个红色轮廓
它代表UIImageView的框架
当它获得聚焦时会变大
但是框架依旧在那个红色轮廓
这个虚线轮廓显示的就是focusedFrameGuide的位置
那个focusedFrameGuide一直在那里
即使现在没有获取聚焦
你可以选择其中一个
以附加布局约束
或者你可以选择改变哪个活跃约束
基于该元素现在是否被聚焦
若你那样做 你真该使用协调API
那个我们在焦点更新上展示的
确保动画同系统动画发生时间一致
系统动画有很多微妙的东西
比如具体时间
它取决于用户滑动得多快
或者视图离屏幕多远被聚焦
此时它获得聚焦
所以将目标值放入你的应用是不太可能的
你需要使用协调API
确保你的动画同系统动画匹配
向你展示这是如何做到的
我想邀请Randy上台给你们做个演示
Randy
谢谢你 Justin
今天我将要过一遍这两个我们经常碰到的情况
关于添加交互至分层图像
首先我们将看一个UIButton
其次我们将看一下自定义集合视图表单元
现在开始我有一个在Xcode中已打开的项目
有一个资产目录 里面包含分层图像
我只有一个...
ViewController子类
我们将要拖拽出一个按钮——
到画布
查看它
给它一个图像
我们将删除它的标题
接下来我们将加几个约束条件
让它垂直和水平居中
接下来我们将更新按钮框架来匹配这些约束条件
你可以通过下拉菜单来做
但是我通常用键盘快捷键Command Option Equals
如果你仔细看
按钮的周围有一点额外空间
这些是边缘内容插图
我们不需要这些 所以可以删除
这看来差不多是我们想要的
我们将构建和运行并且看看它怎样运作的
我正用tvOS模拟器 但已将Mac与Siri Remote配对了
对于交互是怎样工作的你会得到一个较好的认识
我的手指正按下选择按钮
但这只是变暗的效果和稍微压入的效果
当手指移动到数字转换器上
它对我的触摸没有回应
让我们做得更好
为此
我将打开Assistant Editor为ViewController的子类
为按钮拖拽出一个轮廓
在viewDidLoad里
我将从那个按钮里抓取ImageView
我要去打开Justin告诉我们的那个属性
adjustsImageWhenAncestorFocused
现在如果我构建并且运行
你应该看到按钮
对在遥控器上的手指作出回应
当我点击它的时候 它推进去
但是我们仍然还有一个问题
因为这个按钮的边缘被裁剪了
由于默认
按钮的ImageView把clipsToBounds打开
我们把它关闭就好
再一次构建和运行
我们应该能够得到我们想要的结果
交互的分层图像是非常棒的
它们围绕着我的手指移动
当我按下它 它就压入
很好
让我们来一些更复杂的
我在此还有一个项目
这个项目有CollectionViewController的子类
我继续
并且配置了CollectionView的尺寸参数
根据tvOS的Human Interface Guidelines
一个六栏位布局
这些指引告诉我们我想要一个宽度为250点的单元
我知道 基于我的设计我需要垂直450点
作为单元的内容
指引告诉我们对于一个六栏位布局
我们需要水平单元间48点
及垂直单元间至少100点
最后 为在广泛TV的安全区域内
我们想在顶部和底部各保留60点离
及左边和右边各保留90点
这些数字在指引里都有
让我们看下单元本身
我已经给它一个自定义类和复用标识
我们将要放大一点
增加一些...
自定义子视图
首先我们将拖拽出一个ImageView
然后拖拽出一个标签
现在我将增加一些限制条件来布局视图
我想让ImageView紧靠左右顶部边缘
我们恰巧知道我们所有的图像有相同的宽高比
所以我将添加宽高比限制条件
我将编辑宽高比约束条件
以匹配我们的图像所以它们的比例是2:3
我将为我的标签添加一些限制条件
我从标签按Control拖拽至ImageView
添加一个水平居中的约束条件
我也想要我的ImageView
我的标签顶部离ImageView底部有15点
我会在它们两项之间添加一个约束
现在我们已经添加了这些约束
我们可以执行Command Option Equals
把一切回归原位
最后 这个字体有点小
我把它更改成Body风格
不错的选择
我们已从海报上的ImageView获得一些轮廓
我们只要钩住上面的和标签
现在让我们快速浏览下CollectionViewController
你可以看到我们刚在这部分执行的项数
以及cellForItemAtindexPath
如果我构建和运行
我应该能得到我们寻找的基本布局
但是我们将看看行为是怎样的
这几乎是我想要的布局
全是我想要的
但一下子你说不出哪个项目被聚焦
当我点击 你看不到我选择的单元
让我们来处理这些事情
现在 首先 为了看到焦点所在我们将进入Interface Builder
选择我们的ImageView
检查adjustImagewhenfocused检查标记
这足以让我们的单元
开始回应焦点
如你看到它很大 它对我的触摸作出反应
当我点击它 它推进
但是标签重叠在底部
他们对焦点尺寸变化没有反应
为此
我们将打开自定义单元类
在Assistant Editor里
还有...
首先 我们将拖拽出一个轮廓
为标签顶部和ImageView底部之间的垂直约束
我们将为它添加一个轮廓
我们称它为unfocusedConstraint
然后我将添加另外一个属性
为focusedConstraint
我们将在awakeFromNib里设置focusedConstraint
成为label.topAnchor
与imageView的focusedFrameGuide.bottomAnchor相关
还有那15点
然后在...
updateConstraints
我们将设置focusedFrame
我们将使focusedConstraint为活跃状态
当单元获得聚焦
我们将使unfocusedConstraint为活跃状态
在相反的情况下
最后 在didUpdateFocus里我们将使约束无效
通过调用setNeedsUpdateConstraints
我们将添加一个协调动画
通过调用addCoordinatedAnimations
在那里面
我们将调用layoutIfNeeded
这应该够了现在当我们构建和运行
我们应该看到标签移动到下方
离开焦点海报
当我从一个移动到另一个
它们全部动画离开回到它们应该在的地方
很好！
记住 使用focusedFrameGuide和coordinatedAnimations
不要忘记打开adjustsImageWhenAncestorFocused
去获取这些效果
关于那些 现在交还给Justin
谢谢那很棒的演示 Randy
你可以看到它是多么的容易
去真正利用独特的用户接口元素
真正让你的tvOS应用变得生动
让我们说些别的
讨论一下滚动条
tvOS上滚动条与iOS上有些不同
它必须间接触摸
当用户在iOS上ScrollView里滚动
它们用肢体触摸ScrollView
当他们移动手指
ScrollView偏移将会调整
去匹配他们手指的运动
但在tvOS上并非如此
在tvOS上你并不是在触摸屏幕
也不是直接操控滚动视图
你真正做的是改变焦点项目
当焦点项目改变焦点引擎会检测到它
它会自动滚动到它需要的任何滚动视图
确保焦点视图总是在屏幕上
焦点引擎会选择它能够调整的最佳偏移
基于视图的尺寸和滚动视图的尺寸
但也有时候你想控制
它将发送给你什么样的偏移
例如 一个人们常用的自定义
是他们想要焦点视图始终居中
在ScrollView的边界内
你可以那样做
你可以那样做的方法是使用UIScrollViewDelegate方法
你有可能从iOS中识别
那是scrollViewWillEndDragging:withVelocity:targetContentOffset
那里最终的参数targetContentOffset
是一个指针指向CGPoint
那个指针代表偏移
焦点引擎将滚动到的地方如果你什么也不做
那个是偏移它会自动为你展示
但是如果你愿意自己计算
滚动偏移是多少
你也可以那样做
计算你想要的偏移
把它的值存在指针中
让指针指向你
焦点引擎将滚到那里
伴随着它你会得到很多很棒的系统动画
对于你所选择的偏移
但是并不是说直接操控总是不好的
或者在tvOS上从来不是个好主意
有些情况下 你想这样做
所以 一些情况下需要
比如你有许多全屏内容
可能是一个全屏相片集
那里照片可以完全覆盖到屏幕边缘
一个UIKit的例子是UIPageViewController
当你有一个UIPageViewController它并不做焦点滚动
取而代之 你直接操控
PageViewController的ScrollView内容
还有其他情况下 你有很多滚动文本
这是你想直接操控的另外一处
基本上 不清楚焦点项目是什么时
你不能够看到下一个焦点项目是什么
这些都是非常适合直接操控的情况
如果你想要那样做
你没必要去写你自己的手势处理代码
你可以复用早已存在于ScrollView的拖动手势
这个技巧是滚动视图是被配置成
直接触摸的唯一监听
Siri Remote正生成间接触摸
你只需获得这个拖动手势识别器
确认它监听间接触摸
我们也有定向按下手势识别器
只有tvOS的ScrollView上才有
它是监听这些箭头按钮按下事件
用户不使用设备的情况下
可以触摸输入也可以滚动ScrollView
这个手势默认是禁用的
因为我们更倾向于让这些箭头按下操控焦点
而非操控ScrollView偏移
你需要启用它
你可以使用这段代码去做这两个事情
我们从ScrollView中得到panGestureRecognizer
我们告诉它我们想监听间接触摸事件
我们得到directionalPressGestureRecognizer
告诉它应该是打开的
如果你这样做 所有进入ScrollView的这些事件
会直接操控ScrollView偏移
其实 合并直接操控技术
和焦点交互技术是可能的
为了展示如何去做
我想邀请Kevin上台演示
Kevin
谢谢 Justin
嗨 我是Kevin Hiscott我是tvOS工程师
我们将看一个关于视图控制器的例子
在文本视图中展现条款和条件文本
TextView是ScrollView的子类
我们可以看到怎么样向它添加直接操控
我们去看下我的ZIB看看我目前为止设置了什么
我有个文本视图带有冗长的Lorem Ipsum粘贴在里面
如果我们进入应用程序
我们可在应用的上下文中看到它的样子
展现ViewController时
我们可以沿着底部的边缘文本看到其实文本已被裁剪
若我努力擦碰Siri Remote文本不会滚动
让我们来改进它
让我们进入ViewController
在viewDidLoad里抓取我为UITextView创建的轮廓
我称它为messageTextView
在messageTextView和任何ScrollView上有一个panGestureRecognizer
我们将改变它允许的触摸类型
包括间接触摸的类型
如Justin所说
这些触摸由Siri Remote创建
我们还将把isSelectable的值设置为真
这将允许文本视图获得聚焦
和接收这些事件
让我们构建和运行看看它们怎样运作
呈现ViewController时
其实我能够直接擦碰
通过Siri Remote使文本上下滚动
很好 直接操控
另一个ViewController所需的好条款和条件
是让用户接受或拒绝你条件的方法
为此 让我们看看我的ZIB
拖入几个按钮
我将一个标识为不同意
另一个标识为同意
让我们构建和运行看看将发生什么
我期待发生的是我们的焦点
伴随着水平擦碰而作水平移动
对于垂直擦碰却始终滚动文本视图
但当我呈现ViewController
我可以看到那些垂直擦碰确有移动文本
但是 如果我擦碰得太低
焦点实际移动到按钮上
我就不能滚动文本了
直到焦点回到文本视图
这并非我想要的行为
让我们回到我的ViewController
我们将禁用isSelectable
我们实际上不是想让TextView成为一个可获聚焦的屏幕元素
取而代之 我将展示一个小技巧
我们将抓取panGestureRecognizer
实际上把它添加到我们的ViewController视图
这将允许消息TextView
本身不获聚焦的情况下 接收事件
让我们构建和运行看看它的表现
呈现ViewController时
我们可以看到不同意按钮立刻获得聚焦
这是因为文本视图已经不可获聚焦了
我可左右擦碰Siri Remote去移动焦点
但任何时候我可以上下擦碰去移动文本
很好 这样看起来不错
在tvOS上 我们最后一个要考虑的
是由其他输入方法产生的定向按下类型事件
像游戏控制器键盘 或者IR遥控器
我们让tvOS很容易支持这些
让我们回头看看我的视图控制器
我们将抓取directionalPressGestureRecognizer
从我们的messageTextView中并且启用它
伴随着这些类型而允许滚动发生
由其他设备生成
我们将要做的最后一件事是
把GestureRecognizer移动到我们自己的视图中
如我们之前做的
让我们构建和运行看看整体运行情况
现在当我呈现条款和条件的时候
我能够左右擦碰去移动焦点
我也能够左右拍击去移动焦点
通过定向按下类型事件由Siri Remote
和其他设备生成
我可以上下擦碰去改变内容偏移
但是我也可以上下拍击去增量滚动
很好！这是一个全功能条款和条件的ViewController
在tvOS中
谢谢你们
我已迫不及待接受你们应用里的所有条款和条件
交还给Justin
让我们来继续最后一个话题 文本输入
我们在tvOS上有很棒的系统键盘
有很多特性只可用在
系统键盘上
我想和你们介绍一下几个特性
其中一个功能是听写
用户可对Siri Remote说话
文字会显示在屏幕上
我们还支持Bluetooth键盘
若将其和Bluetooth键盘配对你就可以直接在那里打字
我们有新的AppleTV Remote应用
因此用户可以把电话与TV配对
他们可以在电话键盘上打字
发送文字到TV
这里还有很多本地化的细节
系统键盘会为你处理好
它能够自动改变自己的布局
根据用户正使用的输入设备
这里有一个你可能最熟悉的线性布局
但还有我们将会用到的网格布局
如果没和TV配对的Siri Remote
有很多很棒的功能
它们只有在系统键盘里是可用的
如果你使用的不是系统键盘
用户将不能够使用这些功能
我们不鼓励你推出自己的键盘
坚持用系统键盘
用户可以使用所有这些功能
它们全部只对系统可用
这里有些方法你可以自定义
内置的系统键盘
其中一个方法是添加一个你自己的视图
到键盘上会呈现在它旁边
你可使用UIResponder上的一些API
那些你有可能从iOS中识别
这里有inputAccessoryView
和inputAccessoryViewController
如果你在文本框上指派这些属性
你想去编辑文本的文本框
当键盘出现
在键盘的旁边展现你自己的视图
一秒后 我将展现刚才那一幕的截屏
最后 我想指出行为的一个变化
出现在tvOS 9和tvOS 10间
UITextField有一个属性叫keyboardAppearance
你可以设置它为不指定亮和暗
在tvOS 9上 如果你设置它比如 暗
然后键盘呈现时 不仅自身变暗
屏幕上的文本框同样会变暗
现在tvOS 10里我们有新外观API
所以整个系统能够对应的变亮或变暗
现在我们在tvOS 10上做的
是这个键盘外观属性只影响键盘
和文本框外观
它将被更大的UPI Tray Collection所制定
这是我答应展示给你们的屏幕截图
这种情况下我已经创建了一个常规文本框
我给它一个inputAccessoryView
我放了一个红色边控在上面 所以你可以看到它在哪里
这些UI标签全部都是定制的
我只是把它们放在那里所以你可以添加任何种类的附件视图
那些你想让它们出现在键盘上方的
另一个你可在键盘上获得UI方法
同时当键盘正使用SearchController
你使用一些从iOS中能识别的API
这就是UISearchController
我们有键盘并且搜索结果呈现在其下方
这也是自动适配的
这里有基于网格和基于线性的布局
取决于用户正在使用的输入设备
你可以把它嵌入到其他视图类型的内部
SearchController通常要模态展现
并接管整个屏幕
但你可把它嵌入到另一个视图控制器中
通过使用UISearchContainerViewController
我将在几页幻灯片里展现一段样本代码
你提供了为搜索结果定制的视图控制器
搜索结果的视觉外观
和交互完全取决于你
你可以做任何你想做的
你可能使用一个视图集合或可能使用一个分开视图
它有一个表视图和集合视图
其他你想要的
取决于你来定制视图控制器
很快地展示一下如何在其他东西内部嵌入一个搜索控制器
比如 一个标签栏控制器
我获取到我的定制类ViewController
在viewDidAppear里我将创建一个searchController
我想确保不做第二回
所以我检查确保我之前没有做过
然后我创建了UISearchController
告诉它我的结果使用何种视图控制器
当搜索查询变更时 与谁联系
然后我要去包裹那些
UISearchContainerViewController内部的东西
现允许我拿这个container
我可以在其上面做常规的ViewController containment
我将它作为一个ChildViewController添加
如果你想这样做
你将会很容易在标签栏内部使用搜索控制器
如在tvOS上的一些系统应用程序
这就是文本输入
总的来说
我们希望你们能从本次演讲中得到的东西之一
首先是当你正处理菜单按钮 小心
记住你不想去干扰系统手势
当你正使用分层图像时
利用我们提供给你的布局指引
和协调动画API
确保你的视图能够移动
与系统动画协同运作
若你想在ScrollViews上直接操控
你无需自己做任何处理代码的事情
只要复用已经内置的拖动手势
最后 使用系统键盘去确保
你的用户能获得使用
所有的功能 当他们输入文本的时候
想获取本次演讲更多的信息你可以访问这个URL
这里你会找到文档的链接
本周接下来还会有其他演讲
我想特别推荐两个
都是关于tvOS上的UIKit
希望大家在余下的会议中过得愉快 谢谢