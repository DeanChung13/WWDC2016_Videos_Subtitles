介绍通知
大家早上好
欢迎来到我们的演讲介绍通知
我是Kritarth JainiOS通知组的工程师
今天我的同事Julien会在这个演讲的下半部分加入我
这个组在去年工作得很努力
来给你们一个优秀的iOS 10通知
我们很高兴今天可以和你分享这些
我们会从对通知做一个概览开始
今天我们有一个全新的框架用来进行用户通知
作为它的一部分 我们会覆盖注册
创建内容 为通知排期
管理它们 和通知上的行动处理
最后 我们要介绍一个新的功能
叫做服务扩展我们认为你会很喜欢它
但有更多关于iOS 10的通知要谈
我们不会在这次演讲中涉及到所有
将有一个高级通知演讲
在这个之后就在这间屋子里
所以请一定要观看
我们从谈谈用户通知开始
现在我很确定你们都对通知是什么样子的很熟悉
这是你的应用如何发送信息
给你的用户当你的应用不在前台时
这是一个发送信息的push机制
相比pull机制
你的用户主动进入应用
来获得内容或信息
你做为应用开发者
有不同的方式来将这些通知发送给用户
他们可以是视觉警告
通知作为一个横幅从顶部滚下来
你可以给通知关联声音和震动警告
以及给应用图标加角标
这样用户知道哪个应用有可用数据
根据用户的语境
他们如何看到通知有不同的方法
如果设备解锁了通知作为一个横幅从顶部滚下来
当设备锁定时通知
在用户的锁屏上显示
如果用户错过了这些通知
他们可以进入Notification Center
并且看到所有未读通知在那里等待他们
所以有哪些不同种类的通知
作为一个应用开发者你可以用来发送通知？
主要有两种
本地通知和远程通知
根据它们的来源
让我们分别看看它们
现在是本地通知
这些被设备上的应用使用
本地通知的使用例子
基于时间或位置的触发器
你的应用和系统排期这些通知
在用户的设备上显示通知
当用户处理这些通知时
你的应用被回调
我提到过 例子可以包括任务提醒警告
日历警告 或者基于位置的触发器
现在不是你的所有应用都包括在用户的设备上
很多还有服务器端的部分
你的服务器端应用位于穿过网络的你的服务器上
要方便这样的通知我们有远程通知
让我们看看远程通知是怎么工作的
本次交换中包括的主要部分是Apple Push通知服务
或者简写为APNs
这是远程通知的一部分
你的远程应用发送通知负载给APNs
接下来APNs尽最大努力把通知发送到用户设备上
向他们显示通知并且转发给用来处理的应用
当用户操作它时
远程通知的例子是news警告
当你的服务器端获得了最新的
爆炸新闻并转发这些通知
给不同设备向所有客户
安装了你的应用在他们的设备上的客户
即时消息警告也是 数据库被管理在你自己的服务器上
当一条新消息到达时你传递通知
到用户设备上
现在远程通知有两个不同的部分
可以是面向用户的或静默更新
面向用户通知就像它的名字所暗示的
在设备上显示给用户
通过正确的设定通知负载
你可以添加显示给用户的内容
与面向用户的通知相对照我们还提供静默更新通知
这个静默更新通知工作
当你的通知负载包括内容可用标志
当设备收到这条通知时
系统知道在后台唤醒你的应用
来进行后台应用刷新
你的客户端应用会联系
你的远程服务器应用
来获得最新的可用内容
下一次用户来到设备
他们将看到最新的信息
给他们一个很好的用户体验
这就是对这两种不同通知的概括
你可以使用的通知的种类
现在在我们往下之前让我们做一个快速回顾
iOS上已有的通知API
你用UI应用来注册你的应用
然后排期你的应用想要发送的通知
这是UIKit框架的一部分我确定你们大部分都很熟悉
然而现在已有的API有一些问题
比如对本地
和远程通知有不同的回调这有可能造成重复代码
并且只有有限的控制
当你的应用已经发送通知给用户之后
并且有不同的支持
针对Apple目前支持的不同平台上的通知
所以我们很想解决这个问题并且
除此之外给你们提供一些很棒的新功能
来提升你的应用用户的通知体验
今天我们很高兴地宣布一个新的框架
来进行用户通知
让我们看看这个新的框架包括什么
首先它有一个熟悉的API
和目前已经存在的API有同样的功能
所以把你的代码从已有API转移到
新的框架很容易
我们还扩展了你可以在通知上设置的内容选项
来发送更丰富的通知给你的用户
我们把处理本地和远程通知的代码整合在了一起
所以你只需要更少的代码来处理通知
我们还简化了委托方法
这是你的应用
当用户在通知上与动作互动时获得的
我们还包括了更好的通知管理
这表明你的应用现在可以访问通知
不论是将要发送还是已经发送给用户
允许你删除和更新通知
我们会在这次演讲中看看所有这些方面的更多细节
从iOS 10开始我们允许你的应用
来对通知进行应用内的展示
现在你的应用获得了完全相同的外观和感受
因为系统对你的应用提供支持
你现在可以对扩展排期和处理通知
最后我们添加了扩展指向
通知它本身但是我会在稍后介绍更多
这个新框架还允许我们
在不同平台上都有单一的通知API
Apple支持的平台 包括iOSwatchOS和tvOS
让我们看看这对不同平台都意味着什么
在iOS上我们完整的支持管理
排期新框架支持的通知
在watchOS上我们继续已有的对转发通知的支持
从用户的设备到他们的Watch
但是从watchOS 3开始我们让你的WatchOS应用
在Watch本身上进行本地通知
这表示
你的Watch不需要连接你的设备
而你的应用还是可以进行通知
比如你有健身应用
你的应用的用户
出去健身 忘记了带设备
你仍然可以发送通知给他们
当他们达到目标或者健身时间时
就在Watch自己上
关于更多在WatchOS进行通知
我们有“WatchOS快速互动技巧”的演讲
继续 对tvOS
我们现在支持给应用图标加角标为本地和远程通知
这可以被不同方式利用比如
如果你的应用想让用户知道
他们没看的集数
你可以在应用图标上加角标显示这个数字
或者对一个回合制的游戏
如果用户有一个在等待的回合
给应用图标加角标让用户知道有一个回合在等待他们
这是这个新框架允许你干什么的概览
在Apple的所有不同平台上
让我们继续深入iOS上的通知
你的应用是如何发送这些通知
给用户的设备使他们能够看到？
在你能够这样做之前
第一步是你的应用需要注册
让我们看看注册是什么意思
通知是对用户的打断
所以很重要的事是你获得用户的授权
和许可在你发送通知给他们之前
所以你可以要求许可来进行横幅 声音警告
或者给应用图标加角标你第一次这么做时
你的用户收到有这样消息的提示
你需要为本地和远程通知进行注册
在代码里进行注册容易得只要
调用requestAuthorization
在和你的应用关联的UNUserNotificationCenter对象上
传递给它正确的参数
你想要为什么注册
然而请注意现在用户允许的设置
是在设置菜单里对每个应用高度可配置的
所以你的应用用户总是可以回去
将它们打开或关闭取决于他们的偏好
在iOS 10我们给你能力
在你的应用中访问用户设置
所以你可以在通知上更聪明
根据他们的偏好在你想要发送给用户的通知上
但是注册并不就此结束
对于远程通知还有一步令牌注册
用UIApplication已有的API
你要注册远程通知
你需要网络连接这样系统可以和APNs联系
为这次注册 为你的设备和你的应用
这个令牌返回给你的客户端应用
然后你需要把它转发给你的服务器端应用
这很重要因为这个令牌需要被包括
做为通知负载的一部分
你的远程应用发送给你的APNs
因为令牌的作用是作为键识别你的设备
和想要发送通知到的应用
这就是注册
现在你的应用已经准备好开始发送通知给用户
这之后你要做的第一件事
是创建这个通知的内容
我确信你们都看过了全新的通知的外观
我们在iOS 10中引入的通知
我们对它们允许你们做的事感到很兴奋
我们从显示你的通知的标题开始
在所有iOS通知中
我们还为副标题包括了另一个域
所以你可以更灵活地发送不同信息给用户
当然 有内容主体
让我们看看怎么在代码中设置这些
只要简单地创建UNmutableNotificationContent对象
并设置它的不同属性就是这些
对远程通知 这很相似
你的通知负载的结构是像这样的
再一次你设置负载的不同属性
在发送给APNs前
但是对于内容还没有完
我们决定再进行一步从iOS 10开始
我们允许所有应用在通知中附加媒体
所以你可以有更丰富的
更五彩缤纷的通知使你的用户看到
关于更多媒体附件我们会进行介绍
在怎样在高级通知中设置这些的演讲中
这样你的内容就已经准备好了
你的应用要做的下件事是判断它什么时候想要发送这条通知
因此有触发器
在iOS 10中我们支持不同的触发器主要是push
时间间隔 日历和基于位置的触发器
push触发器是远程通知独有的
当你的远端通知发送通知给APNs
它和关联的push触发器一起到达设备
其他的触发器都是和本地通知关联的
基于时间间隔的触发器允许你安排
一个离现在特定时间的通知
比如 如果你想要从现在起2分钟后发送通知
或者从现在开始每小时发送一次
这还允许你马上发送通知
通过把时间间隔设置成0
与基于时间间隔的触发器对照的是基于日历的触发器
它允许你设定一个未来特定的日期和时间发送通知
这样你就有更多控制来设定通知发送的准确时间
这个的例子是在明早的特定时间
或者在每个星期某天的某个时刻重复
最后一种触发器我们有基于位置的触发器
使用你设备的绝对位置
或者和蓝牙灯塔的相对位置
来判断你的设备是否正在进入或离开一个区域
你可以发送通知给用户
一个例子是当用户离开家时
设备离开邻近区域
或者说用户在杂货店
你的应用想发送一个打折的优惠券
这就是不同的触发器做为新框架的一部分
现在你的内容已经准备好了
你知道你什么时候想要发送通知
剩下的下一步是和系统为这个通知排期
对本地通知只需简单地调用增加请求
在UNUserNotificationCenter对象上
然后在触发器上
系统向用户显示通知
对远程通知
你服务器端的应用传送负载给APNs
APNs尽力把通知发送到
用户的设备上
让我们归纳一下目前为止我们讨论过的发送机制
你的应用在最开始和系统进行注册
然后创建内容
判断什么时候发送通知
最后和系统为通知排期
导致通知显示在用户的设备上
就是这么简单
让我们对代码进行一下总结
从调用requestAuthorization来注册开始
你创建通知的内容
你创建触发器 在这个情况下一个简单的基于时间间隔的触发器
然后你把所有的一切打包到
一个UNNotificationRequest对象
传递一个重要的独特的识别符
将在这次演讲晚些时候谈到它
然后你和系统对这个通知排期
完成通知的传送
目前为止我们谈论了对通知发生了什么
当你的应用在后台并且并没有操作它时
但是如果你的程序在前台时收到通知会发生什么呢？
为此我们提供通知处理
当你的应用在前台时
你的应用需要实现UNUserNotificationCenter委托
它有一个方法是willPresent通知
让你获得通知的内容
作为传递给这个方法的UNNotification对象的一部分
现在这个方法还有CompletionHandler
它必须在这个函数的最后被调用
需要注意的一件事是CompletionHandler接受
显示选项参数
现在这允许你做的事是应用内显示
我们早先谈到的
让我们看看如何配置它的一个例子
假设你的应用仍然希望向用户显示这个视图
和你的声音警告当你的应用在前台时
这只需要简单的调用handlerBlock
使用不同的参数
如果你不想要应用内显示你只需不传递任何参数
这就是你的应用在前台时的通知处理
让我们继续谈谈通知管理
通知管理是这个框架新加的功能
它允许你访问通知
你本地已经排期的通知中等待发送的
以及访问已经发送的通知
用户可能已经收到了包括本地和远程通知
现在你还可以删除已经发送给用户的通知
并且可以更新或者提升这些通知
通知的重要部分是请求识别符
在摘要中你看到请求识别符
被设置在通知的请求对象上
对远程通知有一个新的请求数据头
apns-collapse-id你需要在负载中设置它
系统用这个请求识别符来知道哪个通知
是你请求删除或更新的
让我们用例子来看看通知管理
假设你的应用想要给一个游戏发送通知
它想要在游戏开始时这么做
你从创建UNNotificationRequest开始
和系统为它排期但是如果游戏取消了
只需要简单地调用removePendingNotificationRequest
传递给它相同的游戏识别符
你为初始通知创建的识别符
但是如果游戏时间更新了要怎么办？
你创建一个新的请求
给它和给初始请求相同的识别符
设置新的触发器时间
和系统一起给它排期
这转而导致更新通知
让我们继续看看已经发送的通知
并谈谈分数更新
你通过创建通知请求开始
把它发送给系统
但是假设错误的分数被发送了
你可以简单地删除通知
通过调用removeDeliveredNotification
给予相同的识别符
如果分数更新了
这是游戏中常见的情况
你在这种情况下能做的就是创建一个通知请求
给它相同的识别符
把新的分数内容传递给它
并简单地和系统为它排期
这是什么意思让我们把这当成例子来看看
那个通知已经在那为初始的分数更新
通过调用更新像我在代码里显示的 这导致
通知在通知列表里获得了更新
取代开始的通知
这样你不会使用户的通知列表变得凌乱
你可以在多种方法中使用它来汇集信息
这对你的应用是合适的
这就是通知管理
它给你的应用很多控制
在已经发送给用户的通知上
目前为止在这次演讲中我们谈了
你的应用怎么发送通知给用户
那exchange的另一面呢？
通知是很有互动性的不管是默认的行动
还是你的应用对它们设置的定制的行动
要谈谈通知行动让我邀请
我的同事Julien来继续这次演讲
谢谢
嘿大家
我是Julien
我是框架测试组的软件工程师
Kritarth向你们展示了网络流程
和当前的用户通知框架
从注册
到通知被发送到设备上的时候
现在让我们谈谈行动
用户可以在通知上进行的行动
你的应用可以知道三种行动
第一个是默认行动
这是用户从通知中打开你的应用
当设备解锁时可以这么做
并且用户收到一个通知
他们可以点击横幅这会打开你的应用
这可以在锁屏上进行
当用户从左向右滑动
也可以在Notification Center中
当用户向下滑动来显示Notification Center
他们可以点击任意你的通知
来打开你的应用
现在第二类行动是定制行动
它们在可行动通知中
我们在iOS 8中引入了可行动通知
它们提供给用户一个快速运行行动的方式
直接从通知中
而不需要启动你的应用
现在这些定制行动它们显示为按钮
在通知内容的下面有可定制的标题
在iOS 9中我们引入了文本输入行动
这样用户可以快速回复消息
直接在通知中
这种定制行动可以是后台的或前台的
一个后台行动会关闭通知
并且在后台给你少量时间
来处理用户选择的定制行动
另一方面 一个前台行动
会关闭通知并且前台启动你的应用
这样你可以处理那个定制行动
现在这些定制行动在iOS和watchOS上都可用
首先让我们看看在iOS它看起来是什么样子
我们以iPhone 6S为例
在这台设备上用户可以使用3D touch来展开一个通知
当他们这么做时 定制行动会出现在通知内容下面
有一些行动像你看到的 可以是文本输入
这样用户可以快速回复消息
现在在watchOS上
一样的 定制行动出现在通知内容的下面
一些行动也可以是文本输入行动
在watchOS上你有机会
提供一些建议
是用户可能选择的
为你的文本输入行动
关于更多关于watchOS通知的信息
你可以参加快速交互技术
针对watchOS今天晚些时候的演讲
现在我们谈过了定制行动看起来像什么
让我们首先谈谈你可以怎样注册你的定制行动
并把它们显示给用户
要注册 你首先要做的是
创建一个行动对象
你给它一个独特的识别符还给它一个标题
标题会出现在我们之前看到的可定制按钮上
行动默认是后台行动
但你还可以提供一些选项
比如如果你想要它是前台行动
现在你的所有行动需要和种类关联
种类需要一个独特的识别符
你把它给你所有的行动
你现在还可以提供一些目的识别符
关于目的的更多信息
你可以参加介绍SiriKit演讲
你还可以向种类提供一些选项
我们稍后会讨论其中的一个
一旦你创建了所有的行动和种类
你唯一需要做的就是注册它们
向你的应用关联的UNUserNotificationCenter对象注册
现在让我们谈谈你可以如何向用户呈现这些定制行动
你可以在本地和远程通知中这么做
首先是远程通知
你唯一要做的事是设置种类识别符
在远程通知负载的APS字典中
现在这个识别符需要匹配识别符中的一个
你之前注册的种类识别符
对本地通知你只需要设置种类识别符
在你创建的可修改内容中
同样的识别符需要匹配
你之前注册的识别符
让我们谈谈你的应用知道的第三种行动
它是删除行动
删除行动是iOS 10新加入的
它发生在用户删除一条特定通知时
你可以使用它比如你有一个日历应用
并且假设你发送了一条远程通知给你的用户关于
即将到来的会议
用户看到了这条通知并且决定删除它
在这种情况下你可能想要停止发送
其他远程通知到这个用户的其他设备
因为他们已经看过这条通知了
用户可以怎样实际上删除通知？
他们可以在锁屏上这么做
通过从右向左滑动
并且点击清除按钮
他们也可在NotificationCenter这么做
也是从右向左滑动
然后点击清除按钮这会删除这条通知
因为这不是你通常要更新的情况
请记得早前当我们谈论你可以注册的种类
我们谈到了一些选项这是其中一个
customDismissAction选项
让我们看看早前我们用来注册种类的代码
你在这需要做的唯一一件事
就是简单地添加customDismissAction
给这个种类的选项
你的应用会收到这个行动
当删除这个种类的通知时
让我们总结今天提到的行动
首先是默认行动
用户从通知中打开你的应用
第二种是可行动通知中的定制行动
提供给用户快速的方法
直接从通知中执行一个行动
最后第三个是删除行动
这是iOS 10中新加入的它允许你知道
什么时候用户删除了特定通知
现在让我们谈谈你可以怎样处理回应
来自这些行动 在你的应用中
到目前为止我们有多种方法基于
用户是否从通知打开应用
或者我们有定制行动或者文本输入行动
或者这是来自远程或本地通知
现在有了我们新的通知框架
我们可以用单一方法来做这些
它是UNUserNotificationCenter委托协议的一部分
你需要实现的方法
是didReceive回应有CompletionHandler
现在让我们仔细看看回应对象
和你能在应用中用它做什么
你的回应对象有一个行动识别符
可以是默认 删除行动
或者任何你创建的定制行动
它可以有一个用户文本属性如果它是一个文本输入行动
它还可以有一个通知对象
有请求对象和通知的识别符
以及触发器和内容
根据触发器的种类你可以知道是否它是
来自本地或远程通知
这就是新的用户通知框架的全部内容
你可以处理行动的回应
现在让我们谈谈远程通知
这是目前远程通知的流程
我们在演讲的前些时候看过
你有你的服务识别
它会发送远程通知到负载
给APNs
然后它被发送给设备并显示给用户
可能你们有些人在一种情况中
你有服务器端应用并且你通信
到你的iOS应用可能使用一些
端到端加密
如果你可以使用相同的端到端加密岂不更好吗？
也为你的远程通知使用相同的端到端加密
为此在iOS 10中我们引入了服务扩展
现在我们要谈谈什么是服务扩展
以及你可以怎样在应用中实现它
现在服务扩展是一个非UI iOS扩展在iOS 10中可用
也就是说它运行在后台
它的主要目的是增加或替换内容
属于可见的或者远程通知在他们显示给用户前
让我们再看看目前的通知工作流程
你有你的服务器端应用
你发送负载给APNs
然后它被发送给设备
现在有了这个扩展
你可以修改内容
在你从服务器端应用发送它
和它在设备上显示给用户之间的时间
你在这个例子中可以看到
我有一个标题和副标题
然后我修改了通知的主体
关于服务扩展的一些更多细节
你会获得一个短的运行时间也就是说这不是
为了长时间在后台运行的任务
而且如果你没有及时提供一些更新了的内容
你会获得一个回退方法
万一你仍然没法提供一些更新了的内容
我们会显示你发送给用户的原本的远程通知
一些潜在的使用方法
你可以为你的远程通知使用端到端加密
你也可以添加一些附件到你的远程通知
使它们更丰富
现在有一个详细的例子关于如何这么做
在高级通知演讲中
现在让我们谈谈如何
在你的应用中实现这个新的服务扩展
首先你需要在Xcode项目中
添加新的目标
你可以用模板 它在应用扩展部分的下面
它叫通知服务
现在这个模板有一个主类
我们要看看它的一个简化版本
这类是UNNotification服务扩展的一个子类
它有两个主要的方法
第一个方法是didReceive有ContentHandler
现在这个方法会给你当前的请求
有通知的识别符和内容
然后我们有ContentHandler
你需要调用ContentHandler
当你想要显示通知给用户时
你需要提供一些内容给它
第二种方法是服务扩展时间会过期
这会被调用
如果你无法及时提供更新了的内容
请记住如果你没能在这个方法中调用ContentHandler
我们会显示你发送的原始远程通知内容
现在让我们谈谈你能怎么触发这个代码
从远程通知触发
我们有一个很简单的例子关于远程通知的有警告的负载
如你所见我们有一个新的键可修改内容键
我们需要利用这个键让系统知道
你希望服务扩展被启动
来更新远程通知的内容
你不需要每次都用这个键
只有你想要替换通知内容时使用它
现在你可以看到我还添加了我自己的一些加密过的内容
让我们看看一些代码
可以处理这个远程通知的负载
你可看到我们有didReceive请求方法
我做的第一件事是我把加密过的内容解密
在远程通知负载中
然后我创造一个MutableNotificationContent对象
然后我赋值通知的主体
和我们之前得到的解密过的内容
最后我们调用ContentHandler
显示通知内容给用户
实现新的服务扩展就是这么简单
在你的应用中实现
现在让我们回顾一下我们今天讨论过的内容
我们看了通知的概览有本地和远程通知
我们展示给你新的用户通知框架
在iOS  watchOS和tvOS上都可用
我们说了如何注册通知
以及如何创建你的内容
如何为你的通知排期本地的或远程的
我们还说了新的管理
你可以对待发和已发的通知进行
然后我们说了不同的行动
用户可以在你的通知上触发
如何在应用内处理这些行动的回应
最后我们展示了全新的服务扩展
允许你增加或替换内容
可视的远程通知的内容在它们显示给用户前
关于更多信息 你可以访问这个网址
我们会有一些相关的演讲
这之后紧接着的是高级通知演讲
我们强烈建议你参加它
如果你对通知感兴趣
如果你想知道更多Watch上的通知的信息
你可以参加“watchOS快速互动技巧”的演讲
谢谢大家