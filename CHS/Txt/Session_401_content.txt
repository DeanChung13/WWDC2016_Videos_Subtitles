Xcode应用签名的新特性
早上好
谢谢
欢迎来到“Xcode应用签名的新特性”介绍
Xcode给应用程序签名可能很麻烦
我们理解这一点
但是现在你们需要知道的是在Xcode 8里面
我们极大地简化了应用签名的管理
事实上它现在是自动完成的
另一方面若你要100%地掌控Xcode
来完成你的应用签名
你现在也能做到这一点了
Xcode不会修改或者创建新的用户配置
应用签名能让你的身份被用户辨识
一旦打开应用 他们就会知道
这个应用由你开发并且没有被第三方修改过
数字签名同样能防止（第三方的）应用诈骗
因为当你用自己的bundle ID到开发者网站绑定注册之后
其他的开发者团体就不能使用这个bundle ID了
签名同样能授权你访问系统服务
比如iCloud网络支付
今天我们将介绍4项内容
让我们从签名的原理和一些基础知识开始
比如怎样给你的应用程序签名
在那之后我们会介绍一些激动人心的改进
包括如何给新的(开发)设备
配置签名证书
现在 你们需要同步个人密钥
或者撤销然后重新生成证书
这种情况已经成为过去了
是的 你们会喜欢我们的改进的
在这之后我们会介绍一些新的工作流程
它们让应用签名变得格外简单
最后 我们会介绍一些最佳做法
来实现新项目配置
我们从应用签名原理和基础讲起
当Xcode部署你的应用以及对它签名时
这一切的背后都是它通过一个叫codesign的工具来实现的
现在如果你是新手的话你可以完全不用考虑这一点了
Xcode能自动帮你完成签名
若你已经有一定经验 你也许会想
签名？它是怎么实现的？我们使用了codesign这个工具
codesign所做的就是它将应用程序的源码包
进行加密封装
这样能让系统识别
签名后的应用程序是否有被修改过
所以如果有任何人修改过你的应用它就不能被安装或者启动
除此以外codesign还赋予应用程序独特的加密签名
所以它能够被识别
用户也能知道这个应用来自何处
如果你想给应用程序签名你需要准备3个东西
首先是一个签名证书
签名证书能确定你软件开发者的身份
用户配置跟你的应用程序关联
它们被用于设备授权
应用权限确定了应用程序所支持的功能范围
比如iCloud和Wallet
签名证书都是由Apple签发
这一点尤为重要因为设备需要和Apple建立信任链
这样才能安装应用
证书有两种类别
一种是应用开发证书被用于部署和运行应用
一种是应用发布证书
被用于发布应用到iTunesConnect时的身份验证
或者 如果这些是企业证书的话它们是用来发布给用户的
所有的签名证书都需要个人密钥
个人密钥必须保存在Apple的keychain
如果你想要给应用签名
跟证书匹配的个人密钥
也会在证书生成的同时被创建
所以拥有这枚个人密钥就显得尤为重要
值得一提的是Apple从来不会保存你的个人密钥
你也不能去开发者网站下载它们
好消息是 在Xcode 8里面
你的应用开发证书
再也不是一个烦恼了
我们等下会展开讲解这一部分
用户配置也是由Apple签发的
同证书相反的是
证书被用于确认你的开发者身份
而用户配置跟你的应用程序关联
它允许你的应用被运行在特定设备上
在配置里面有一个身份列表
在应用程序被安装到设备的时候
设备会检索这个身份列表确认你的身份是包括在里面的
如果是的话你就能安装这个应用
配置同时也授权应用使用应用权限
一个配置里面包含一个权限白名单
如果你想使用一个权限那么它必须在这个白名单里面
同样的 如果你是新手的话
你不需要考虑这些
Xcode会自动为你处理这些
如果你有一定经验
你也许会问为什么你需要一个新的用户配置？
当你在添加一个新的应用权限到应用程序的时候
这都是因为权限白名单的存在
说到应用权限
权限定义了应用程序对系统功能的支持范围
本质上来说权限只是一个被赋予特殊值的字符串
就像一条链子或者一个碗状物
权限具体数值由其系统功能来定义
所以如果你的应用需要实现一个系列的功能
但是应用扩展需要实现另外一个系列的
没有问题
Xcode有内置的功能编辑器
我们称之为功能选项卡
功能选项卡可以在配置详情里面
管理你的权限PLIST
所以你完全不需要访问开发者网页
一切都可以在Xcode里面完成
这些就是你给应用签名时所需要用到的一些东西
我们现在来看看当Xcode给应用签名时都发生了什么
Xcode需要知道使用哪一个证书
以及哪一个配置文件
实际情况中Xcode会首先部署你的应用程序
然后开始检索你电脑里的证书列表
它会使用最新的并且跟你开发组匹配的那一个证书
Xcode接下来会检索你的配置列表
然后选择那一个最新的并且跟bundle ID匹配的配置
这样证书和配置就被整合在了一起其中配置会被内嵌到应用程序里面
而证书会被codesign用来加密封装应用程序
以上就是一个快速回顾
应用签名原理和基础
现在我们来讨论一下我们
为新设备配置签名证书所做的改进
谁之前见过这个？
是的 你的账户已经拥有一个证书
Xcode帮助你重置它
如果你按下重置按钮后会怎样？
是的 你现有的证书会被清除掉
一个新的证书会被创建为什么会这样？
事实上 你的应用开发账户只能使用一个签名证书
若你只有一台开发设备它能很好地胜任（开发工作）
证书被成功创建个人密钥也同时被生成
并且保存在你的keychain里面万事俱备了
现在如果你有另外一台Mac呢？
好吧 如果你想从第二台Mac部署应用并且签名的话
你需要一个证书以及个人密钥
你可以通过keychain把它们同步过去第二台Mac
然后在Xcode上导入证书和密钥
或者你可以创建新的签名证书
但是首先它需要你废除旧的证书
然后你就可以在第二台Mac上部署应用了
但这也意味着你无法在第一台Mac上部署了
然后很容易就会陷入这个死循环
在一台上能开发
在另一台就不能
这真的很繁琐并且令人沮丧
现在 好消息是 在Xcode 8中
你可以同时拥有多个应用开发证书了
是的
你的每一台设备
都能拥有独立的证书和个人密钥了
你再也不需要为了应用开发而同步个人密钥了
当然你再也不需要看到这个了
这些改进只对应用开发证书有效
应用发布证书依然
被限制在一个的数量
以前签名证书是在Xcode或者开发者网站上生成的
现在它们是在Xcode 8或者更新的版本上生成
如果你的Mac上有旧版的Xcode
然后你生成一个新的签名证书
它依然可以使用新的证书100%向后兼容
以上就是Xcode 8里关于签名证书所做的改进
现在我想把舞台交给我的同事Itai
他将会跟大家介绍Xcode 8里的一些新的工作流程
大家早上好
Joshua给我们讲解了一些应用签名的原理
和基础
你需要一个证书和一个配置
与你的设备和权限匹配
但是很多人都同时拥有扩展应用
如Apple Watch应用或者应用内的嵌入式框架
每一个部分都会有各自不同的签名需求
这些需求综合起来能让签名变得异常复杂
签名将会变成一个难题
而且管理好每一个签名需求也会异常困难
所以Xcode在许多版本发布中
都致力于简化这些(工作流程)
在Xcode 7里“Fix Issue”按钮将会出现
当Xcode检测到你的签名配置出现错误的时候
有时候点击这些按钮能够修复问题
然后你就能回到应用开发
但是 很多时候这并不能解决问题
或者你需要点击很多次 直到问题解决并且 在任何时候
Xcode都不会让用户了解问题所在
问题为什么能得到解决并且是如何得到解决的
事实上若Xcode知道怎么解决这样的问题
为什么还要让它打断你的应用开发
让你点击一个修复按钮呢？
在应用签名时和Xcode 7的交互
很多时候会让你觉得是在跟一个黑匣子对话
你不能看到里面但是你能疯狂地点击红色修复钮
尤其当你陷入抓狂的时候
这样看来它的工作机制并不是很理想
所以 在Xcode 8中我们取消了修复键
但是同时我们也做了更多的工作
我们完全重新设计了Xcode 8的签名机制
我们现在拥有了全新的签名基础架构
比以往的更快并且更稳定
此基础上 我们重新构建了新工作流程
在常规选项卡下设计了新的用户界面
这样你就能预览和管理你的签名配置
所有功能高度集成
接着我们着手改进了Xcode和用户的沟通机制
当签名问题发生的时候
许多的错误信息晦涩难懂让人无从下手
所以在Xcode8中我们修订了它们
因此你会看到更清晰明了的信息
当任何异常情况出现时
如果你很好奇
Xcode是怎样替你
修复签名问题
我们增加了状态报告功能
这样你就能实时了解Xcode如何修复问题
如Joshua在开始提到的一样
Xcode 8新增了两种签名机制
第一种是自动签名
现在自动签名功能被完全重新设计
它能满足你的一切签名需求
你再也不需要创建配置或者更新app ID
这一切Xcode都能在后台自动完成
所以当你在开发应用的时候
Xcode会确保你拥有最新的签名
如果你需要掌控你应用签名的每一个细节
你可以开启自主签名功能
在这种模式下Xcode不会创建或者修改
你的任何配置
它也不会更改你的签名配置
我们来进一步看看这一切都是怎样工作的
首先 自动签名
当你创建一个新的项目时
自动签名是默认选项
但是如果你是一个有经验的开发者或者你正在打开一个已有项目
你可以在常规选项卡下开启它
在这个全新的签名UI
你需要做的只是勾选
然后告诉Xcode你的应用开发组
在那之后Xcode会自动完成配置的创建
以及应用程序的签名
它会告诉你部署应用时会用到的
配置和证书
所以具体来说自动签名能为你做些什么？
没错 它会创建你的签名证书
这样 当你在开发iOS应用时
它能帮助你创建iOS应用开发证书
它也能创建以及更新你的应用ID和配置
这一切都在你开发的同时在后台完成
这样你就能专心于应用开发
但是也有一些情况Xcode 8会提示你
尤其在你连接一台新设备到Mac的时候
你的Mac发现这台设备并没有在开发组注册
Xcode会在注册前询问你
因为我们知道授权设备是有数量限制的
你需要完全掌控它们的分配
最后
如果你想知道Xcode替你在后台做了什么
你可以查看签名报告
来了解Xcode的工作记录和原理
接下来让给大家演示一下这一切都是如何工作的
我将要演示的是Xcode 8如何自动签名
在全新的iOS应用上
点击继续
给它命名
我不是一个出色的厨师我喜欢简单的菜谱
第一点需要大家注意的是
在新的项目助手中
有一个新的弹出选项“团队”
当你创建项目的时候你可以直接选择
你希望用来签名的开发组
在那之后 你的应用就将会
使用这个开发组来进行自动签名
点击继续
我会在桌面创建它
Xcode刚做了些什么？
它创建了一个全新的项目
并且开启了自动签名作为默认选项
当我创建项目的时候
它直接就生成了签名证书
和一个配置给我
我可以放大这里 来看得更清晰
如果我希望修改我的应用开发组
我可以在这里完成
创建一个新项目就是这么简单
我可部署项目并且让它直接运行在设备上
我再也不需要点击修复键或者修改我的配置了
我所需要做的只是创建一个新项目然后告诉它我的开发组
但是我们还可以让这一切变得更有趣
就如Joshua之前所说你可以使用功能选项卡
来开启你需要的系统功能比如说Cloud Kit
我们用这个应用来尝试
我们进入功能选项卡
这里我能看见我的应用支持的全部系统功能
我需要做的只是轻触这个开关来开启其中一项
我想要使用Cloud Kit以及信息推送
当我们做这些的时候Xcode会相应地更改我的项目
它关联了系统框架它也修改了我的权限文件
它甚至还联系了开发者网站
下载了一个新的配置
我现可直接部署并运行我的应用
我能立刻开始使用这些系统功能
重申一次 我从来没有点击任何修复键
或者输入任何权限
现在 我偶然知道了Xcode下载了一个新的配置
我是Xcode软件工程师
可是你们大部分人可能都不是
所以如果你好奇Xcode都做了哪些工作
你只需点击进入“报告导航”
那里你能看到一个叫“更新签名”的新报告
任何时候只要Xcode替你修复一个签名问题
这样的一个报告就会被创建
让我们看看最新的一个
看看里面都有什么内容
我们放大来让现实更清晰
这里我们能看到Xcode检测到了一个问题
我能看到问题更多的详细信息
只要点击那一行并且展开
所以Xcode在说我已有的配置
并不支持iCloud
紧接着在这下面
它创建了一个新的配置给我的应用
一切都如此简单
你就知道Xcode在替我修复问题时具体做了哪些工作
关于自动签名你还需要知道几件事
第一是它只适用于应用开发签名
应用发布签名是由另一个工作流程完成的
Joshua稍后会聊到这个话题
并且它只适用于Xcode生成的用户配置
这些当然都是Xcode替你创建的配置
并保证它们在你应用开发过程中实时更新
这样的好处是你可以使用自动签名
不需要担心应用发布证书
被Xcode使用
你的应用发布证书和用户配置
绝对不会被自动签名修改
在Xcode 8里自动签名被重新设计了
它不会出现在你的视线里同时它也帮助你管理签名
所以你能真正集中精力在重要的事情上
也就是应用开发
现在我们来看一看围栏的另一面
自主签名
如果你还记得的话这是一个模式
在里面你能控制应用签名的每一步工序
你可以开启自主签名功能
只需要在常规选项卡里取消勾线自动签名
在那之后
Xcode就会让你选择不同的用户配置
来搭配你不同的开发配置
这会非常有用当你拥有持续集成系统
或者当你需要给免费和付费版应用不同的配置
现在你有了实现它们的工具
这一切配置你都能在常规选项卡里面完成
不需要再访问“构建设置编辑器”
这是一个功能强大的UI来帮助你配置应用签名
但是我们想要它的功能更进一步
你们当中有人需要手动选择配置时
肯定遇到过一些奇怪的安装或运行报错
这通常跟权限有关
我们希望Xcode能提供给大家更有用的信息
在你陷入问题之前
为此我们在常规选项卡里加入了一些新的错误报告机制
它就在你设置的旁边
这样选择正确的配置就会更加简单
这里我能看见我的配置
并不支持我应用的功能
我能清楚了解如何解决这个问题
另外
我可以看见用户配置的更多信息
只要点击配置信息
就能看到很多细节
比如配置的创建日期以及它支持的系统功能
并且 它也更方便我们排查错误
以及了解如何修复问题
自主签名仅限于手动创建的配置
这些配置是由你或者你的开发组成员创建
在开发者网页上
Xcode一定不会修改它们
你可以选择任何种类的配置
如我之前提到的
如果你想用应用开发的配置来做开发部署
用应用发布的配置做其他用
这是可行的
这真是很棒的事情
尤其对于那些经验丰富的开发者
他们以前手动选择过配置
Xcode 8里又一个新的开发设置名为“用户配置区分符”
它的作用是根据名字来引用配置
为什么这是一个很大的进步
因为在Xcode 8前
Xcode只能根据独特ID来引用配置
不管是有一新开发者加入你的团队
或者你添加了一个新的设备
你都需要相应地更新你的配置
在这个过程中也会生成一个新的独特ID
然后你就需要更新你的项目配置
好了 在Xcode 8因为我们使用名字来引用配置
你所需要做的只是更新配置
Xcode就能自动识别它你再也不需要更新你的项目配置了
谢谢
现在让我们看看自主签名是怎样
在演示机上工作的
好的
我将给大家演示我的另外一个正开发的应用——Scrapbook
这里放大
所以Scrapbook已被设置成为自主签名
我选择了不同的配置给我的免费和付费版本应用
这真的很容易配置
在常规选项卡里
这就是我需要做的一切
只需要从选项栏里选择不同的配置
因为我没有看到任何报错信息
我就已经确定我可以部署和运行这个应用了
一切都会顺利工作
但是就如之前的演示里面
让我们把事情变得更有趣一点
我想要使用这个功能选项卡
这样我就能把iCloud和消息推送包括在我的应用功能里
如果你在之前已经使用过功能选项卡
使用一个手动设置的用户配置的时候
你大概也已经注意到它会更改你的签名设置
或者进行一些你并不需要的改变
在Xcode 8里功能选项卡可以很安全地被使用在
自主签名模式了
它能判断你做的本地设置改变是否安全
比如更新你的权限PLIST
但是它不会接触到你的配置
我将告诉你怎样通过手动的步骤
来解决这些问题
我们来看看这个
我会点击“功能”
然后开启iCloud和推送通知
现在Xcode会给
能正常运行的步骤旁边打勾
给其它一些
需要另外在开发者网站上完成的步骤标打叉
我能在常规选项卡里看到更多的详细信息
让我把这里放大
如果你看见这个报错信息
Xcode在告诉我我选择的配置
不支持iCloud和推送通知
这很明显 因为我刚开启了它们
这一切都很清晰明了
我明确的知道如何解决这些问题
但是在过去如果我试着部署和运行
我的应用要么不能安装要么不能成功运行
最后 如果我想看更多信息的话
我可以点击配置信息钮
Xcode告诉我配置的更多信息
比如它支持或者不支持的系统功能
重申一遍这一切都非常简单
我清楚的知道如何解决这些问题
让我们来修复这一个
如我之前所说在自主签名模式里
Xcode不会修改我的配置
我需要去到开发者网站上自己修改
所以我要打开开发者网站
点击证书——标识符——配置
我需要做的第一件事就是更新应用ID
所以我要选择应用ID
选择我为这个应用已创建好的应用ID
它告诉我所有支持的系统功能
点击修改
向下滚动开启iCloud
我看到的这个警告信息
在提醒我 当我更新了应用ID之后
我还需要下载一个新版本的用户配置
点击确定
然后我想开启更新版本的iCloud
我将开启它
它再一次提醒我需要一个新配置
点击确定
向下滚动开启推送通知
一切都完成了
下一步是更新我的配置
点击“开发”
然后你看到两个scrapbook的配置
被标注为无效
那是因为我已对我的应用ID作了修改
可是我还没有重新生成新的配置
所以它们就过期了
让我们来更新Scrapbook免费版的配置
点击然后修改
我能向下滚动
我不会修改证书或者设备信息
点击生成
然后下载新的配置
现在最后一个步骤是安装配置
这样Xcode就能使用它了
我可以在下载文件夹里面点击它
所以这里发生了什么？
让我放大看看
当我点击配置的时候Xcode安装了它
然后立刻更新并开始使用它了
所以我们能看到免费版应用的部署设置页面的报错信息
已经消失了
你可能也已经注意到
在这期间我并没有修改任何的项目配置
这是用户配置区分符在后台帮我们完成了一切工作
一旦我安装了新版的配置
Xcode就能直接自动使用它
现在我可以部署和安装我的免费版应用
一切都能正常工作我能使用iCloud和推送通知
但是好像我还需要更新我的付费版应用
有人想看我在开发者网站上再做一遍吗？
还是我们已经知道怎么做了？
好的
这有一点枯燥
如果你注意看我刚才演示的步骤这实际上是
重复了一边我刚才所做的
以及Xcode为我所做的一切步骤
在自动签名里
以上就是自主签名Xcode 8里一个新的签名模式
你将能完全掌控应用签名
Xcode不会扰乱你的设置或者修改你的配置
但是我还是鼓励大家使用自动签名
它在Xcode 8里被重新设计了
并且提供了无缝高效的开发流程
我希望你们能够喜欢
现在我们重新请回Joshua给大家讲解一些最佳做法
谢谢你 Itai
我们刚才看到了Xcode 8的新流程
能让大家很方便并且快捷地管理签名
现在我想跟大家谈谈一些最佳做法
来管理你的项目签名
第一件事是使用自动签名
自动化的设计是希望大家的生活越来越容易
它很好的胜任了这一点不管是对独立开发者
或是大型团队
所以你应该把你应用的所有开发人员
加入到一个开发组
你应该使用功能选项卡来管理权限
这样就能避免使用开发者网站
来配置功能比如iCloud容器
如果你是用自主签名 不要设置CODE_SIGN_IDENTITY
因为你有一个独特的签名证书
和你的帐户关联
所以如果你给你的签名证书设置了这个
一旦有人想使用你的项目
他们就不能部署了
所以你应该让它设置为默认值
避免使用构建设置编辑器
你应该使用目标编辑器下面的常规选项卡这一新UI
它能让你看到配置的详细信息
并且它能正确使用名字引用配置
这样你就能保证项目信息的准确性
你还应该使用功能选项卡
在自主签名模式下来管理你的权限PLIST
并且如果你是用开发签名来配置你所有的项目
你应该试用自动签名
当你回去打开Mac的时候
看一看目标编辑器的勾选项
然后试一试
当你想发布你的应用时
Xcode有一个专门的工作流程
一切都建立在创建一个归档的基础之上
应用归档里包括了你的应用程序的拷贝
很重要的一点是你应该使用开发签名
如果你用发布证书给应用签名的话
你将不能完整地测试
你开发的应用
所以必须使用开发签名
当你准备好要发布
当你使用organizer
Xcode会给应用重新签名
使用你的开发证书和用户配置
若你点击上传 它会直接被上载到iTunes Connect
或者 你点击导出你会得到一个IPA文件
或是一个被发布签名过的应用
以上就是发布应用的最佳做法
我们今天介绍了几项内容我们讲到了签名证书的新改进
能让你很容易配置新的开发机器
我们谈到了新的自动工作流程
能解决你应用开发过程中的很多痛点
我们还谈到了新的自主签名模式
所以你能手动配置项目
按照你自己的意愿
如果你想了解更多进入这个链接
如果你想了解更多Xcode或者安全机制的信息
你可以参加这些会话
谢谢大家