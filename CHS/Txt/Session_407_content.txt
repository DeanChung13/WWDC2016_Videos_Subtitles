审核应用的辅助功能
早上好
我是Susumu Harada
一名来自辅助功能团队的工程师
今天很高兴能和同事Patti
一起给大家介绍
一种最便捷的工具用于发现 诊断和修复
应用中的辅助功能问题
也许有些人还是辅助功能方面的新手
所以让我们简要介绍下什么是辅助功能
大家在开发应用过程中会遇到的问题
首先 辅助功能就是确保每个人
都能享受到应用所提供的产品和服务
不论他们的能力如何
现在 有些用户可能有视觉
或听觉障碍
有些可能正遭受身体和运动困难
或者有认知和学习障碍
为了支持广泛多样的用户
Apple已努力开发一系列辅助技术
帮助增强各种用户的能力
例如VoiceOver帮助有视觉障碍的用户
Switch control帮助运动困难的用户
我们也确定这些技术可通过平台用于所有设备
包括macOS iOSwatchOS和tvOS
尽管这些辅助技术 工具很棒
但用户体验的核心是你们的应用
所以要更好了解你的应用如何与我们的辅助技术交互
过程中可能会遇到的问题
首先来看看一个简单的例子
我写了个简单的应用叫做Math Learner
我给一位用户在顶部显示一个方程
底部有四个答案按钮
用户可以点击答案按钮
得到答案是否正确的反馈
非常简单
看起来运行正常
但是现在有位盲人使用该程序怎么办
显然若没有辅助技术
他们无法看到屏幕那就毫无用处
幸运的是
他们可以使用我们的屏幕读取器VoiceOver
读出屏幕上的信息
还可以在屏幕上使用各种手势
来导航和与不同控制器交互
这样 应用的辅助功能就很全面
当用户点击屏幕方程
VoiceOver读出
5加3等于
很棒吧
所以要如何才能让像VoiceOver这样的
辅助技术有效与应用连接呢？
有几个关键信息
但首先要知道的是
屏幕上重要元素的位置
要知道每个元素的特点
或是类型例如这个按钮标题或静态文本是什么
最后 还要知道一个描述标签
以及该元素的唯一标识
可以以一种可理解的方式向用户描述
这样有了这些关键信息
VoiceOver和其他辅助技术就可以
以一种可用性强的方式向用户
展示交互性
所有的辅助功能信息都是通过
辅助功能API由应用提供的
Apple公司努力打造辅助功能支持
纳入我们的UI框架
所以若你使用标准控件构建自己的应用
所有的辅助功能信息都将自动由
制定器填入
你不必进行其他操作
当然 你的应用将会最终包括自定义控件
当它们生效 你可能需要提供
一些自己的辅助功能信息
如果没有 你可能最终无法访问应用
所以让我们来看看会有什么影响
如果我已经执行顶部方程视图
使用完全自定义绘图代码如CA Layers或OpenGL
在默认的情况下没有任何辅助功能
所以除非我明显提供了
才可能完全无形于VoiceOver
和其他辅助技术
而这四个底部按钮
如果我使用类似按钮的自定义视图
但忘了说明
它们作为按钮的辅助功能特点
那么VoiceOver和用户
就无法知道它们可以点击这些按钮
最后 这是求助按钮
如果我对它使用自定义绘图代码
忘了给标签提供辅助功能
VoiceOver就不知道如何向用户描述
而用户就不知按钮的用途
所以这样你就会发现
要是错过一些关键的可访问下信息
需要依靠辅助技术的用户体验
就会非常糟糕
所以必须确保应用全面的辅助功能
从而提供良好的用户体验
确保应用辅助功能还有另一个好处
就是对于具有全面
辅助功能的应用
你可以自动编写UI测试
通过使用Xcode的UI测试支持
获取更多信息 推荐大家去看
去年 WWDC 上的Xcode的UI测试演讲
审核辅助功能
好极了 那么
如何才能确保app提供
所有必要的辅助功能信息呢
我们一直建议的方法就是
使用实际的辅助技术
例如VoiceOver和Switch control
现在 这还是个很理想的方法
因为这样你可以反映实际的用户体验
同时不论是否可以进行访问
都还可以解决可用性的问题
但是这确实要求大家熟悉掌握这些技术
特别当你的应用支持多平台时
你会觉得这有点难
必须的特定设备上多次部署应用
通过各种辅助技术运行
在每个平台重复这个过程
所有平台都有一些辅助功能设置
用户可以进行配置
例如动态类型的字体大小
作为开发人员可能会觉得有点乏味
必须在改变辅助功能设置
和返回应用中
进行来回切换
验证在应用上的效果
再重复该过程
所以 听取大家的反馈后
今天很高兴发布一种更为简便的
全新工具用于审查辅助功能
那就是全新的辅助功能检查
在辅助功能检查上
只有一个按钮
它可以自动审查应用的一般辅助功能问题
非常简单
甚至可以建议你如何解决问题
在Interactive Inspection模式中你可以轻松定位应用的任何元素
获得详细的辅助功能信息
不论应用是在模拟器还是连接设备上运行
都可以使用
我们还提供了实时预览功能
可以让大家轻松改变辅助功能设置
并立即在应用上看到效果
却不用离开应用
很高兴告诉大家这款Accessibility Inspector
现在已经支持所有平台
只要桌面上有辅助功能检查应用
你就可以审查应用在macOS iOS watchOS
甚至tvOS上的运行
而你只要在模拟器或设备上运行应用
选择inspector上的各个目标
就是这么简单
我们希望这个功能
可以最大程度上简化在所有平台上的测试和审查辅助功能的工作
给大家演示了这些全新功能和全新accessibly inspector后
我要把时间交给Patti
嗨 我是Patty Hoa
很兴奋
可以给大家介绍我们全新辅助功能检查
我们一直致力于整个大家的反馈
我已经等不及向大家展示了
请注意
辅助功能检查现在是开发包的一部分
这意味着大家只要进入迷你工具条
Open Developer Tools区域下方的代码
就能运行辅助功能检查
这是我们新Accessibly Inspector的截图
首先希望大家注意下顶部
左边是Target Chooser
这可以让我们
检查所有不同的Apple设备
包括iPhone iPad
台式机 watch TV和模拟器
中间是Inspection Pointer
当你启用这个时
工具就能开始检查
你手指下方的设备上是什么
若是使用模拟器或台式机
就是你鼠标光标下的内容
在右侧有三个按钮
代表工具的三个主要功能
这就是下面我要给大家介绍的
会有更多细节和演示
是哪三种功能呢
第一 检查
检查功能可以调试分析
应用的可访问状态
然后是审查功能
帮助大家找到应用的辅助功能问题
最后是设置功能
帮助大家快速测试辅助功能设置对应用的影响
我要说的第一点是审查功能
大家的最终目标是
确保应用对每一个人的辅助功能
要做到这一点 首先就要审查应用
正如Susumu提过的那样可以使用
VoiceOverSwitch control以及
审查应用
或者你也可以聘请辅助功能顾问
代表你进行评估
当 今天我要说的是
一种更经济的解决方法
只要使用我们工具的审查功能
在审查选项中有这个审查运行按钮
向大家介绍该功能最好的方法就是
演示一遍
我在屏幕上
运行一版
iOS版的Math Learner应用
在模拟器上运行
这样你可以玩游戏 我们有方程
我们选择其中一个选项
不是那个 这个
三个 这就是玩游戏的规则
好了 现在我想要运行辅助功能检查
我只要前往Xcode
在顶部
Open Developer Tool的下方
我们要启动辅助功能检查
你要告诉工具的第一点就是
你要审查那个设备
在Target Chooser中我要挑选模拟器
之后点击审查选项条
这个就是我之前说的审查运行按钮
我继续点击那个
几秒后 我们就完成应用的审查了
这些是发现的问题
可以进行选择
循环浏览这些问题
你会发现有
一个对应的红色高亮区显示问题
当然 如果你检查真实的设备
例如iPhone和iPad
就可能是这样的视图
如果你想指定问题的位置
就必须离开工具
关注iPhone或iPad
我们有的只是
一个还不错的功能
只是给你工具中有问题的相同元素的
一个小预览 一个截图
这样你可以继续关注工具本身
好了 我们有这些问题
下一步你想做的是什么
就是解决问题
先选择一个问题
元素没有描述
点击三角形展开获取更多信息
好了 所以是元素没有描述
相对应的代码是什么
你知道要编写哪一段代码吗
好吧 如果你在线
阅读所有关于辅助功能API的文件
可能可以给你一些修复问题的提示
但是今天我要展示一种更便捷的解决方法
只要点击这个问号
工具会识别哪个API需要修复
内容是 考虑设置辅助功能的标签
那么 在这一点上如果你知道API如何工作
你只要直接进入代码进行修改
但如果想要更多关于API如何运行的信息
可以点击这个链接
之后可以链接到像这样的文件
你可以找到更多关于API的信息
好了 因为我知道需要覆盖哪个API
所以直接进入代码 进行修复
我正在修复的
就是那些带点的按钮视图
而实现的方式只不过是一个自定义UI视图
所以现在
我只要重写
辅助功能标签
再返回描写那些点的字符串
当然 你应该返回的是本地化字符串
好了吗？现在我用自己的编写方法
我要进行保存 运行 再运行
好 让我们返回Addition
清除有的老问题
再返回审查
代码做了小变动后
我们修复了一堆问题
很棒不是吗
好了
请注意这个同样强大的审查功能
可以由团队的其他成员使用
如代表你想要进行评估的质量检查人员
当然 他们会报告这些错误
为了加快报告流程
他们现在只要在运行审查后
复制黏贴
到错误报告中
当然 每个合格的错误报告
都应有屏幕截图
所以我们在这儿有个Quick Look按钮
只要一点
就能够获得整个屏幕的截图
加上问题存在的蓝色框
你只要再一次复制
黏贴到你的错误报告中
现在你已经准备好发送错误报告了
好了 我们刚才看的就是审查功能如何
帮助你自动检测应用问题
并给你提供建议方案
甚至加快错误报告过程
这个功能的强大之处就是
帮助发现应用中的问题
类似于在Xcode的编译警告
没有警告不代表
应用 没有问题
这就是必须要进行一些人工审查的原因
为了说明其重要性
我给大家举个例子
假设你有一个按钮
功能是发生邮件
当然 按钮带有一堆属性
当我们创建新按钮时 我们往往喜欢
简单地从现有按钮中选择一个
进行复制
当然 按钮所有的属性都进行传送
我们再去调整一些属性
像动作和图标
这没问题 一切都顺利
除非你忘了升级一些属性
会产生问题
特别是在这种情况下的辅助功能标签属性
对于使用辅助技术如VoiceOver的用户
辅助功能标签属性显得至关重要
原因是唯一拥有的信息
就是这个按钮的功能如何
所以使用辅助技术例如VoiceOver的用户
使用这个按钮而辅助功能标签没有更新
提示说发送邮件
当他们按下按钮以为在发送邮件
但实际上是删除邮件
这就不是个好结果
对于这点
我们就要帮助大家使用工具
进行人工审查
这也是我要谈谈检查的原因
首先让我介绍下检查的一些亮点
以及是如何在人工审查过程中帮助大家的
假设我们这里有一个按钮其中有8个点
检查选项顶部有Quick Look
左边是描述区域
或者是总结元素如何描述的
在这种8点按钮的情况下我们只要说8
右边是导航按钮
让你轻松从该元素前往邻近的UI元素
通过这个按钮
下面是基本区
包含用于描述元素的属性
例如 我们有标签
与辅助标签相对应
返回值8
我们有Trait
这种情况下 一个按钮 返回按钮
因为这个按钮是相互作用的
你要考虑Action区域 看到
有Activate Action
这样你只要点击运行按钮就能
验证这个活动生效
这就是检查的亮点之一
让我继续给大家做一个演示
好了 我们回到应用
现在我们要进入检查选项
记得之前我提到有这个Inspection Pointer
现在启用了 就意味着 我把鼠标
放在模拟器该项目上方
工具会开始检查光标下的元素
你可以看见绿色的亮点
在桌面模拟器上
你如果单击项目
就会关闭Inspection Pointer
就可以四处移动鼠标
却不会影响检查项目
我们正在检查addition你看到描述
现在我点击进入下一元素按钮
你会看见亮点下降到这些按钮
再点击 进入下一个
同样得到描述 这是4点按钮
注意我们完全绕过
了重要的事情： 这个方程
只要进行这个导航
就能找到伴随的问题
这种情况下 可能方程会有问题
我们继续往下
我们在8点 9点
再到帮助按钮
除了描述看起来不太好 对吧
IMG 0151
不太对头再一次 可能是另一个潜在区域
需要修复
如果可以简单使用Quick Look区域
在所有应用UI进行导航
并验证描述是否都正确无误
然后你就在正确的轨道上了
当然 如果你有其他交互UI
类似这些按钮
你只要去Action Section
现在
我点击执行按钮激活该按钮
来验证活动效果
很好 我刚才展示的
就是如何使用检查
来帮助你进行应用人工审查
现在检查对与应用辅助功能状态
的调试和分析也有很大帮助
其中一个例子就是理解辅助层次结构如何工作
这个很重要特别是在OS X应用上
其中相应的视图层次会变得更复杂
为了展示该功能如何作用
我继续运行同一应用的OS X版本
好了 这是OS X 版本的应用
我们进行稍微复杂一些的处理 乘法
当你进行3乘以6
不好意思 再来一次
这次怎么样
错误 再来 3乘以6 18
正确
好了 你进行一样的操作就知道 这个应用怎么工作了
在iOS和OS X上运行一样的应用
好了
首先要做的就是
告诉工具你要检查一个新设备
我们开始选择
我的MacBook Pro原因是我们正在检查机子本身
这种情况下我们应选择先要检查的应用
我想选择Math Learner
我们可以再次运行审查功能看看发现什么问题
发现了一堆问题
我希望大家注意这四个问题
就是 可能无法访问的元素
执行这些答案选项它们只是自定义的NSview
这是通过CA文本图层绘制文本
现在 在默认情况下CA各层没有辅助支持
意味着如果你创建它们
VoiceOver客户就无法看见它们
工具正在告诉你这些不能访问
为了了解如何解决这个问题
帮助了解如何可及性层级如何工作
我们前往检查
再次 打开Inspection Pointer
如果我把鼠标这样
再次 检查鼠标下的内容
我想要检查的是整个窗口
原因是我想知道
这个窗口的子元素有哪些
所以 我能看到的
就是我在层级区域下能看到的
这些是该窗口的所有子元素
我放到方程上方 你能看到红色的亮点
在图像上
一些状态文本上
还有工具了部分的一堆东西
现在
那四个关键答案选项按钮就不再是窗口子元素
我们知道要进行修复
但今天 我不会演示如何修复
而是 让大家看看
我们示例代码辅助UI例子
可以从developer.apple.com下载
这个示例应用包含
一整个UI场景数据库
你可以向里面增添辅助支持
我建议大家这么做
一旦修复
我希望那四个答案选项按钮
就会作为窗口的子元素
你就可以在该层级验证它
我之前展示的都是
如何使用检查功能
帮助大家进行人工审查
以及如何使用检查功能
进行应用辅助状态的调试和分析
下面我想要谈谈
设置
在所有OS平台上
我们有着很多辅助功能设置
自带内置
例如在iPhone上
在“常规辅助功能”下设置应用
你会发现
许多很棒的内置辅助功能
像Toggle一样设置
如果你想知道动态字体如何影响你的应用
你可以进入
调整字体大小
调到很大
然后返回应用
就能直观验证大字体在应用的效果
然后再返回设置应用
重新调到很小
再看看很小的字体在应用的效果
现在 你可以看到这会很繁琐
如果你一直在设置应用和自己的应用
之间来回切换
还有
你又该如何知道
那个辅助设置对测试来说很重要
好了 我们的工具可以给出答案
这是我们的设置选项
我们的设置选项显示
了一些最常见的辅助功能设置
希望你们测试一下
另外 因为工具中内置
你不必再在应用之间来回切换
这个演示告诉大家如何操作
在设置选项中 大家可以反转颜色
并立刻看到呈现在应用中的效果
我们可以对字体大小做同样的处理
调整
直接看到效果
你刚才看到的
就是设置功能带来的便利
今天我给大家展示了三大功能
第一是审查功能
帮助大家自动检测应用的辅助功能问题
并给出修复建议
让大家更快速地报告问题
然后我们看到了检查功能的强大之处
指导大家进行整个人工审查过程
并对应用的辅助功能状态进行调试和分析
最后就是刚刚看到的设置功能
便于大家查看测试
辅助功能的设置改变在应用上的效果
有关辅助检查功能的简要介绍就是这些
好极了 谢谢Patti
我们期待大家体验我们全新的辅助功能检查
也希望
大家在设计下一个应用时能努力
确保所有用户的需求
为了帮助大家实现这一目标
我们今天给大家介绍了全新的辅助功能检查
希望能让大家更便捷地找到诊断并修复
应用中的辅助功能问题
与开发流程无缝整合
这样大家就能简单地检查和审查应用
不论是在模拟器还是在设备上运行
我们很高兴告诉大家支持所有平台
包括macOS iOSwatchOS和tvOS
我们希望这款新工具
能够让大家编写出优秀的应用
让不同能力的用户都能使用的应用
你可以在该URL中的视频和文本中找到更多相关信息
我们期待收到大家的反馈真诚希望听到大家
对于如何更好支持开发工作的意见以及在
使用该检查时遇到的问题
你可以给我们传送改进和错误请求
不好意思 是报告不是请求 错误报告
在bugreport.apple.com上
也可以加入我们的开发人员论坛
网址forums.developer.apple.com
要是你昨天错过
我们推荐大家去回顾并观看这些精彩的演讲视频
包括“辅助功能新变化”的演讲
和“包容性应用设计”的演讲
今晚我们
在Buena Vista Park举行辅助功能技术和
包容性设计的讨论会
不是真正的公园而是设在一楼的会议厅
期待与大家在那儿相见
谢谢大家尽情享受接下来的大会内容