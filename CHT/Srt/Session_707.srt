00:00:19.319 --> 00:00:25.559
介紹通知

00:00:26.293 --> 00:00:27.361
大家早上好

00:00:27.427 --> 00:00:30.464
歡迎來到我們的演講
介紹通知

00:00:30.831 --> 00:00:34.101
我是Kritarth Jain
iOS通知組的工程師

00:00:34.168 --> 00:00:37.905
今天我的同事Julien會在
這個演講的下半部分加入我

00:00:38.238 --> 00:00:41.241
這個組在去年工作得很努力

00:00:41.308 --> 00:00:45.012
來給你們一個優秀的iOS 10通知

00:00:45.212 --> 00:00:47.714
我們很高興今天可以和你分享這些

00:00:49.082 --> 00:00:52.753
我們會從對通知做一個概覽開始

00:00:53.387 --> 00:00:57.925
今天我們有一個全新的框架用來
進行用戶通知

00:00:58.525 --> 00:01:01.662
作爲它的一部分 我們會覆蓋註冊

00:01:01.895 --> 00:01:05.132
創建內容 爲通知排期

00:01:05.399 --> 00:01:09.036
管理它們 和通知上的行動處理

00:01:10.103 --> 00:01:13.473
最後 我們要介紹一個新的功能

00:01:13.540 --> 00:01:17.010
叫做服務擴展
我們認爲你會很喜歡它

00:01:18.178 --> 00:01:21.849
但有更多關於iOS 10的通知要談

00:01:22.149 --> 00:01:24.284
我們不會在這次演講中涉及到所有

00:01:24.551 --> 00:01:26.687
將有一個高級通知演講

00:01:26.753 --> 00:01:29.223
在這個之後
就在這間屋子裏

00:01:29.389 --> 00:01:30.858
所以請一定要觀看

00:01:31.959 --> 00:01:34.962
我們從談談用戶通知開始

00:01:35.762 --> 00:01:39.132
現在我很確定你們都對通知是什麼
樣子的很熟悉

00:01:39.399 --> 00:01:42.603
這是你的應用如何發送信息

00:01:42.669 --> 00:01:45.506
給你的用戶
當你的應用不在前臺時

00:01:46.340 --> 00:01:48.775
這是一個發送信息的push機制

00:01:48.842 --> 00:01:50.210
相比pull機制

00:01:50.277 --> 00:01:53.714
你的用戶主動進入應用

00:01:53.780 --> 00:01:55.649
來獲得內容或信息

00:01:57.451 --> 00:01:58.552
你做爲應用開發者

00:01:58.919 --> 00:02:02.155
有不同的方式來將這些通知發送給用戶

00:02:03.257 --> 00:02:04.791
他們可以是視覺警告

00:02:04.858 --> 00:02:07.694
通知作爲一個橫幅從頂部滾下來

00:02:08.195 --> 00:02:11.665
你可以給通知關聯聲音和震動警告

00:02:11.832 --> 00:02:13.700
以及給應用圖標加角標

00:02:13.767 --> 00:02:17.337
這樣用戶知道哪個應用有可用數據

00:02:18.939 --> 00:02:20.874
根據用戶的語境

00:02:20.941 --> 00:02:23.477
他們如何看到通知有不同的方法

00:02:24.144 --> 00:02:27.948
如果設備解鎖了
通知作爲一個橫幅從頂部滾下來

00:02:28.949 --> 00:02:30.884
當設備鎖定時
通知

00:02:30.951 --> 00:02:32.986
在用戶的鎖屏上顯示

00:02:33.820 --> 00:02:36.123
如果用戶錯過了這些通知

00:02:36.190 --> 00:02:38.158
他們可以進入Notification Center

00:02:38.225 --> 00:02:41.261
並且看到所有未讀通知
在那裏等待他們

00:02:42.296 --> 00:02:44.831
所以有哪些不同種類的通知

00:02:44.898 --> 00:02:48.635
作爲一個應用開發者你可以用來
發送通知？

00:02:48.902 --> 00:02:50.470
主要有兩種

00:02:50.537 --> 00:02:53.073
本地通知和遠程通知

00:02:53.140 --> 00:02:55.175
根據它們的來源

00:02:55.375 --> 00:02:57.544
讓我們分別看看它們

00:02:58.245 --> 00:02:59.913
現在是本地通知

00:02:59.980 --> 00:03:03.350
這些被設備上的應用使用

00:03:04.084 --> 00:03:06.053
本地通知的使用例子

00:03:06.119 --> 00:03:08.622
基於時間或位置的觸發器

00:03:08.689 --> 00:03:11.992
你的應用和系統排期這些通知

00:03:12.059 --> 00:03:14.228
在用戶的設備上顯示通知

00:03:14.461 --> 00:03:16.763
當用戶處理這些通知時

00:03:16.830 --> 00:03:18.832
你的應用被回調

00:03:20.100 --> 00:03:23.670
我提到過 例子可以包括
任務提醒警告

00:03:23.737 --> 00:03:26.273
日曆警告 或者基於位置的觸發器

00:03:27.508 --> 00:03:31.745
現在不是你的所有應用都包括在
用戶的設備上

00:03:32.145 --> 00:03:34.848
很多還有服務器端的部分

00:03:34.915 --> 00:03:39.386
你的服務器端應用位於穿過網絡
的你的服務器上

00:03:39.786 --> 00:03:44.224
要方便這樣的通知我們有遠程通知

00:03:44.324 --> 00:03:46.860
讓我們看看遠程通知是怎麼工作的

00:03:47.661 --> 00:03:51.999
本次交換中包括的主要部分
是Apple Push通知服務

00:03:52.065 --> 00:03:53.534
或者簡寫爲APNs

00:03:54.201 --> 00:03:56.003
這是遠程通知的一部分

00:03:56.303 --> 00:04:00.140
你的遠程應用發送通知負載給APNs

00:04:00.207 --> 00:04:04.711
接下來APNs盡最大努力把通知
發送到用戶設備上

00:04:04.778 --> 00:04:08.515
向他們顯示通知並且轉發給用來
處理的應用

00:04:08.582 --> 00:04:10.150
當用戶操作它時

00:04:11.418 --> 00:04:14.621
遠程通知的例子是news警告

00:04:14.688 --> 00:04:17.591
當你的服務器端獲得了最新的

00:04:17.658 --> 00:04:20.861
爆炸新聞並轉發這些通知

00:04:20.928 --> 00:04:23.463
給不同設備
向所有客戶

00:04:23.530 --> 00:04:26.733
安裝了你的應用在他們的設備上
的客戶

00:04:27.334 --> 00:04:31.104
即時消息警告也是 數據庫被管理
在你自己的服務器上

00:04:31.171 --> 00:04:34.208
當一條新消息到達時
你傳遞通知

00:04:34.274 --> 00:04:35.509
到用戶設備上

00:04:37.010 --> 00:04:41.014
現在遠程通知有兩個不同的部分

00:04:41.081 --> 00:04:43.951
可以是面向用戶的或靜默更新

00:04:44.017 --> 00:04:47.020
面向用戶通知就像它的名字所暗示的

00:04:47.087 --> 00:04:50.023
在設備上顯示給用戶

00:04:50.190 --> 00:04:53.627
通過正確的設定通知負載

00:04:53.694 --> 00:04:56.663
你可以添加顯示給用戶的內容

00:04:57.464 --> 00:05:02.369
與面向用戶的通知相對照
我們還提供靜默更新通知

00:05:04.204 --> 00:05:06.940
這個靜默更新通知工作

00:05:07.007 --> 00:05:10.844
當你的通知負載包括內容可用標誌

00:05:11.378 --> 00:05:13.881
當設備收到這條通知時

00:05:13.947 --> 00:05:17.251
系統知道在後臺喚醒你的應用

00:05:17.317 --> 00:05:19.253
來進行後臺應用刷新

00:05:19.319 --> 00:05:22.990
你的客戶端應用會聯繫

00:05:23.056 --> 00:05:24.992
你的遠程服務器應用

00:05:25.058 --> 00:05:27.327
來獲得最新的可用內容

00:05:27.394 --> 00:05:30.497
下一次用戶來到設備

00:05:30.564 --> 00:05:33.934
他們將看到最新的信息

00:05:34.001 --> 00:05:36.303
給他們一個很好的用戶體驗

00:05:38.272 --> 00:05:41.008
這就是對這兩種不同通知的概括

00:05:41.074 --> 00:05:43.243
你可以使用的通知的種類

00:05:43.410 --> 00:05:46.246
現在在我們往下之前
讓我們做一個快速回顧

00:05:46.313 --> 00:05:49.883
iOS上已有的通知API

00:05:51.185 --> 00:05:55.155
你用UI應用來註冊你的應用

00:05:55.222 --> 00:05:58.792
然後排期你的應用想要發送的通知

00:05:58.959 --> 00:06:02.963
這是UIKit框架的一部分
我確定你們大部分都很熟悉

00:06:03.430 --> 00:06:06.834
然而現在已有的API有一些問題

00:06:06.900 --> 00:06:09.736
比如對本地

00:06:09.803 --> 00:06:13.273
和遠程通知有不同的回調
這有可能造成重複代碼

00:06:14.741 --> 00:06:16.343
並且只有有限的控制

00:06:16.410 --> 00:06:20.180
當你的應用已經發送通知給用戶之後

00:06:21.281 --> 00:06:22.983
並且有不同的支持

00:06:23.050 --> 00:06:26.720
針對Apple目前支持的
不同平臺上的通知

00:06:27.955 --> 00:06:31.325
所以我們很想解決這個問題
並且

00:06:31.391 --> 00:06:34.795
除此之外給你們提供一些很棒的
新功能

00:06:34.862 --> 00:06:38.498
來提升你的應用用戶的通知體驗

00:06:38.866 --> 00:06:42.769
今天我們很高興地宣佈一個新的
框架

00:06:42.836 --> 00:06:44.571
來進行用戶通知

00:06:45.072 --> 00:06:47.808
讓我們看看這個新的框架包括什麼

00:06:48.475 --> 00:06:51.512
首先它有一個熟悉的API

00:06:51.578 --> 00:06:54.014
和目前已經存在的API有同樣的功能

00:06:54.181 --> 00:06:56.683
所以把你的代碼從已有API轉移到

00:06:56.750 --> 00:06:58.986
新的框架很容易

00:07:00.220 --> 00:07:04.358
我們還擴展了你可以在通知上設置
的內容選項

00:07:04.424 --> 00:07:07.261
來發送更豐富的通知給你的用戶

00:07:08.328 --> 00:07:11.999
我們把處理本地和遠程通知的代碼
整合在了一起

00:07:12.065 --> 00:07:15.102
所以你只需要更少的代碼來處理通知

00:07:21.108 --> 00:07:23.377
我們還簡化了委託方法

00:07:23.443 --> 00:07:26.079
這是你的應用

00:07:26.146 --> 00:07:28.348
當用戶在通知上與動作互動時獲得的

00:07:29.917 --> 00:07:32.553
我們還包括了更好的通知管理

00:07:32.619 --> 00:07:36.290
這表明你的應用現在可以訪問通知

00:07:36.356 --> 00:07:39.960
不論是將要發送還是已經發送給
用戶

00:07:40.027 --> 00:07:43.130
允許你刪除和更新通知

00:07:43.197 --> 00:07:46.133
我們會在這次演講中看看所有
這些方面的更多細節

00:07:47.401 --> 00:07:50.404
從iOS 10開始我們允許你的應用

00:07:50.470 --> 00:07:53.140
來對通知進行應用內的展示

00:07:56.677 --> 00:08:00.447
現在你的應用獲得了完全相同的
外觀和感受

00:08:00.514 --> 00:08:03.283
因爲系統對你的應用提供支持

00:08:05.819 --> 00:08:09.723
你現在可以對擴展排期和處理通知

00:08:13.560 --> 00:08:15.729
最後我們添加了擴展指向

00:08:15.796 --> 00:08:18.966
通知它本身
但是我會在稍後介紹更多

00:08:20.300 --> 00:08:22.469
這個新框架還允許我們

00:08:22.536 --> 00:08:26.373
在不同平臺上都有單一的通知API

00:08:26.440 --> 00:08:30.878
Apple支持的平臺 包括iOS
watchOS和tvOS

00:08:31.712 --> 00:08:35.414
讓我們看看這對不同平臺都意味着
什麼

00:08:37.116 --> 00:08:40.220
在iOS上我們完整的支持管理

00:08:40.287 --> 00:08:43.390
排期新框架支持的通知

00:08:43.957 --> 00:08:48.028
在watchOS上我們繼續已有的
對轉發通知的支持

00:08:48.095 --> 00:08:50.664
從用戶的設備到他們的Watch

00:08:50.931 --> 00:08:54.735
但是從watchOS 3開始
我們讓你的WatchOS應用

00:08:54.801 --> 00:08:57.604
在Watch本身上進行本地通知

00:08:57.971 --> 00:08:59.373
這表示

00:09:01.775 --> 00:09:05.579
你的Watch不需要連接你的設備

00:09:05.646 --> 00:09:08.148
而你的應用還是可以進行通知

00:09:08.315 --> 00:09:11.185
比如你有健身應用

00:09:11.251 --> 00:09:12.920
你的應用的用戶

00:09:12.986 --> 00:09:16.156
出去健身 忘記了帶設備

00:09:16.223 --> 00:09:18.125
你仍然可以發送通知給他們

00:09:18.192 --> 00:09:20.961
當他們達到目標或者健身時間時

00:09:21.028 --> 00:09:22.496
就在Watch自己上

00:09:23.397 --> 00:09:26.633
關於更多在WatchOS進行通知

00:09:26.700 --> 00:09:29.403
我們有“WatchOS
快速互動技巧”的演講

00:09:30.804 --> 00:09:33.040
繼續 對tvOS

00:09:33.674 --> 00:09:39.413
我們現在支持給應用圖標加角標
爲本地和遠程通知

00:09:40.047 --> 00:09:42.316
這可以被不同方式利用
比如

00:09:42.382 --> 00:09:44.685
如果你的應用想讓用戶知道

00:09:44.751 --> 00:09:46.787
他們沒看的集數

00:09:46.854 --> 00:09:49.189
你可以在應用圖標上加角標顯示
這個數字

00:09:49.590 --> 00:09:51.291
或者對一個回合制的遊戲

00:09:51.425 --> 00:09:53.493
如果用戶有一個在等待的回合

00:09:53.560 --> 00:09:56.964
給應用圖標加角標讓用戶知道
有一個回合在等待他們

00:10:01.468 --> 00:10:05.272
這是這個新框架允許你幹什麼的概覽

00:10:05.439 --> 00:10:08.208
在Apple的所有不同平臺上

00:10:09.743 --> 00:10:13.514
讓我們繼續深入iOS上的通知

00:10:14.848 --> 00:10:18.185
你的應用是如何發送這些通知

00:10:18.252 --> 00:10:20.287
給用戶的設備使他們能夠看到？

00:10:20.954 --> 00:10:23.056
在你能夠這樣做之前

00:10:23.257 --> 00:10:27.060
第一步是你的應用需要註冊

00:10:27.661 --> 00:10:29.897
讓我們看看註冊是什麼意思

00:10:31.365 --> 00:10:34.501
通知是對用戶的打斷

00:10:34.568 --> 00:10:37.237
所以很重要的事是你獲得用戶的
授權

00:10:37.304 --> 00:10:40.174
和許可
在你發送通知給他們之前

00:10:40.240 --> 00:10:44.144
所以你可以要求許可來進行
橫幅 聲音警告

00:10:44.211 --> 00:10:47.147
或者給應用圖標加角標
你第一次這麼做時

00:10:47.214 --> 00:10:49.449
你的用戶收到有這樣消息的提示

00:10:50.317 --> 00:10:54.388
你需要爲本地和遠程通知進行註冊

00:10:55.589 --> 00:10:58.692
在代碼裏進行註冊容易得只要

00:10:58.759 --> 00:11:00.561
調用requestAuthorization

00:11:00.627 --> 00:11:04.498
在和你的應用關聯的
UNUserNotificationCenter對象上

00:11:04.565 --> 00:11:06.200
傳遞給它正確的參數

00:11:06.266 --> 00:11:07.968
你想要爲什麼註冊

00:11:10.003 --> 00:11:13.173
然而請注意現在用戶允許的設置

00:11:13.240 --> 00:11:16.343
是在設置菜單裏對每個應用高度
可配置的

00:11:16.410 --> 00:11:18.846
所以你的應用用戶總是可以回去

00:11:19.079 --> 00:11:21.715
將它們打開或關閉
取決於他們的偏好

00:11:22.916 --> 00:11:24.718
在iOS 10我們給你能力

00:11:24.785 --> 00:11:27.521
在你的應用中訪問用戶設置

00:11:27.588 --> 00:11:29.690
所以你可以在通知上更聰明

00:11:29.756 --> 00:11:32.659
根據他們的偏好
在你想要發送給用戶的通知上

00:11:37.965 --> 00:11:40.067
但是註冊並不就此結束

00:11:40.133 --> 00:11:43.804
對於遠程通知還有一步令牌註冊

00:11:43.871 --> 00:11:47.341
用UIApplication
已有的API

00:11:47.608 --> 00:11:49.910
你要註冊遠程通知

00:11:50.344 --> 00:11:54.515
你需要網絡連接這樣系統可以和
APNs聯繫

00:11:54.581 --> 00:11:57.584
爲這次註冊 爲你的設備和你的應用

00:11:58.085 --> 00:12:00.921
這個令牌返回給你的客戶端應用

00:12:00.988 --> 00:12:04.057
然後你需要把它轉發給你的
服務器端應用

00:12:04.124 --> 00:12:07.194
這很重要因爲這個令牌需要被
包括

00:12:07.261 --> 00:12:09.229
做爲通知負載的一部分

00:12:09.296 --> 00:12:12.466
你的遠程應用發送給你的APNs

00:12:12.533 --> 00:12:16.537
因爲令牌的作用是作爲鍵
識別你的設備

00:12:16.603 --> 00:12:19.706
和想要發送通知到的應用

00:12:21.375 --> 00:12:22.709
這就是註冊

00:12:22.776 --> 00:12:26.747
現在你的應用已經準備好開始
發送通知給用戶

00:12:26.813 --> 00:12:28.715
這之後你要做的第一件事

00:12:28.782 --> 00:12:31.451
是創建這個通知的內容

00:12:33.253 --> 00:12:36.423
我確信你們都看過了全新的通知
的外觀

00:12:36.490 --> 00:12:38.425
我們在iOS 10中引入的通知

00:12:38.492 --> 00:12:41.528
我們對它們允許你們做的事感到
很興奮

00:12:42.296 --> 00:12:45.299
我們從顯示你的通知的標題開始

00:12:45.399 --> 00:12:47.100
在所有iOS通知中

00:12:51.338 --> 00:12:53.841
我們還爲副標題包括了另一個域

00:12:53.907 --> 00:12:57.778
所以你可以更靈活地
發送不同信息給用戶

00:12:57.845 --> 00:13:00.280
當然 有內容主體

00:13:01.281 --> 00:13:03.917
讓我們看看怎麼在代碼中設置這些

00:13:05.152 --> 00:13:09.189
只要簡單地創建
UNmutableNotificationContent對象

00:13:09.256 --> 00:13:12.059
並設置它的不同屬性
就是這些

00:13:13.060 --> 00:13:15.429
對遠程通知 這很相似

00:13:15.596 --> 00:13:18.131
你的通知負載的結構是像這樣的

00:13:18.198 --> 00:13:21.001
再一次你設置負載的不同屬性

00:13:21.068 --> 00:13:23.971
在發送給APNs前

00:13:25.372 --> 00:13:27.074
但是對於內容還沒有完

00:13:27.140 --> 00:13:30.477
我們決定再進行一步
從iOS 10開始

00:13:30.544 --> 00:13:35.315
我們允許所有應用在通知中附加
媒體

00:13:39.720 --> 00:13:41.522
所以你可以有更豐富的

00:13:41.588 --> 00:13:44.024
更五彩繽紛的通知使你的用戶看到

00:13:44.992 --> 00:13:47.928
關於更多媒體附件
我們會進行介紹

00:13:47.995 --> 00:13:50.731
在怎樣在高級通知中設置這些
的演講中

00:13:52.599 --> 00:13:54.234
這樣你的內容就已經準備好了

00:13:54.768 --> 00:13:58.839
你的應用要做的下件事是判斷它
什麼時候想要發送這條通知

00:13:58.906 --> 00:14:00.941
因此有觸發器

00:14:02.342 --> 00:14:05.746
在iOS 10中我們支持不同的觸發器
主要是push

00:14:05.812 --> 00:14:08.949
時間間隔 日曆和基於位置的觸發器

00:14:10.217 --> 00:14:14.421
push觸發器是遠程通知獨有的

00:14:14.488 --> 00:14:17.758
當你的遠端通知發送通知給APNs

00:14:17.824 --> 00:14:20.727
它和關聯的push觸發器一起到達
設備

00:14:21.128 --> 00:14:24.865
其他的觸發器都是和本地通知
關聯的

00:14:27.334 --> 00:14:30.003
基於時間間隔的觸發器允許你安排

00:14:30.070 --> 00:14:33.073
一個離現在特定時間的通知

00:14:33.140 --> 00:14:36.777
比如 如果你想要從現在起2分鐘
後發送通知

00:14:36.844 --> 00:14:39.980
或者從現在開始每小時發送一次

00:14:40.480 --> 00:14:42.816
這還允許你馬上發送通知

00:14:42.883 --> 00:14:44.651
通過把時間間隔設置成0

00:14:46.486 --> 00:14:49.723
與基於時間間隔的觸發器對照的是
基於日曆的觸發器

00:14:49.790 --> 00:14:53.961
它允許你設定
一個未來特定的日期和時間發送通知

00:14:54.061 --> 00:14:57.531
這樣你就有更多控制來設定
通知發送的準確時間

00:14:58.098 --> 00:15:01.201
這個的例子是在明早的特定時間

00:15:01.268 --> 00:15:04.471
或者在每個星期某天的某個時刻
重複

00:15:06.106 --> 00:15:08.909
最後一種觸發器
我們有基於位置的觸發器

00:15:08.976 --> 00:15:11.411
使用你設備的絕對位置

00:15:11.478 --> 00:15:14.314
或者和藍牙燈塔的相對位置

00:15:14.414 --> 00:15:17.584
來判斷你的設備是否正在進入
或離開一個區域

00:15:17.651 --> 00:15:19.520
你可以發送通知給用戶

00:15:19.953 --> 00:15:23.290
一個例子是當用戶離開家時

00:15:23.357 --> 00:15:25.459
設備離開鄰近區域

00:15:25.526 --> 00:15:27.528
或者說用戶在雜貨店

00:15:27.594 --> 00:15:30.464
你的應用想發送一個打折的優惠券

00:15:31.765 --> 00:15:35.569
這就是不同的觸發器
做爲新框架的一部分

00:15:36.069 --> 00:15:37.704
現在你的內容已經準備好了

00:15:37.771 --> 00:15:39.973
你知道你什麼時候想要發送通知

00:15:40.040 --> 00:15:43.510
剩下的下一步是和系統爲這個通知
排期

00:15:44.945 --> 00:15:49.216
對本地通知只需簡單地調用增加
請求

00:15:49.283 --> 00:15:51.552
在UNUserNotificationCenter對象上

00:15:51.919 --> 00:15:53.353
然後在觸發器上

00:15:53.420 --> 00:15:56.123
系統向用戶顯示通知

00:15:56.790 --> 00:15:58.625
對遠程通知

00:16:00.127 --> 00:16:03.363
你服務器端的應用傳送負載給APNs

00:16:03.430 --> 00:16:05.966
APNs盡力把通知發送到

00:16:06.033 --> 00:16:07.434
用戶的設備上

00:16:08.368 --> 00:16:11.939
讓我們歸納一下目前爲止我們
討論過的發送機制

00:16:12.873 --> 00:16:15.876
你的應用在最開始和系統進行註冊

00:16:16.643 --> 00:16:18.445
然後創建內容

00:16:19.012 --> 00:16:21.548
判斷什麼時候發送通知

00:16:21.849 --> 00:16:24.251
最後和系統爲通知排期

00:16:24.318 --> 00:16:27.421
導致通知顯示在用戶的設備上

00:16:27.487 --> 00:16:28.589
就是這麼簡單

00:16:29.389 --> 00:16:31.325
讓我們對代碼進行一下總結

00:16:32.326 --> 00:16:36.263
從調用requestAuthorization
來註冊開始

00:16:37.030 --> 00:16:39.199
你創建通知的內容

00:16:40.734 --> 00:16:44.371
你創建觸發器 在這個情況下
一個簡單的基於時間間隔的觸發器

00:16:44.972 --> 00:16:47.107
然後你把所有的一切打包到

00:16:47.174 --> 00:16:49.510
一個UNNotificationRequest對象

00:16:49.576 --> 00:16:52.713
傳遞一個重要的獨特的識別符

00:16:52.779 --> 00:16:54.381
將在這次演講晚些時候談到它

00:16:54.715 --> 00:16:57.684
然後你和系統對這個通知排期

00:16:58.085 --> 00:17:00.187
完成通知的傳送

00:17:02.489 --> 00:17:05.626
目前爲止我們談論了對通知發生了什麼

00:17:05.692 --> 00:17:08.896
當你的應用在後臺並且並沒有
操作它時

00:17:08.962 --> 00:17:13.165
但是如果你的程序在前臺時收到
通知會發生什麼呢？

00:17:13.567 --> 00:17:16.369
爲此我們提供通知處理

00:17:16.435 --> 00:17:18.038
當你的應用在前臺時

00:17:18.906 --> 00:17:22.843
你的應用需要實現
UNUserNotificationCenter委託

00:17:22.976 --> 00:17:25.712
它有一個方法是
willPresent通知

00:17:25.779 --> 00:17:28.115
讓你獲得通知的內容

00:17:28.182 --> 00:17:32.219
作爲傳遞給這個方法的
UNNotification對象的一部分

00:17:32.653 --> 00:17:34.922
現在這個方法還有
CompletionHandler

00:17:34.988 --> 00:17:37.324
它必須在這個函數的最後被調用

00:17:37.925 --> 00:17:40.561
需要注意的一件事是
CompletionHandler接受

00:17:40.627 --> 00:17:42.396
顯示選項參數

00:17:43.230 --> 00:17:45.999
現在這允許你做的事是應用內
顯示

00:17:46.066 --> 00:17:47.534
我們早先談到的

00:17:47.801 --> 00:17:50.671
讓我們看看如何配置它的一個例子

00:17:51.305 --> 00:17:55.609
假設你的應用仍然希望向用戶
顯示這個視圖

00:17:55.676 --> 00:17:58.679
和你的聲音警告
當你的應用在前臺時

00:17:58.745 --> 00:18:01.114
這隻需要簡單的調用
handlerBlock

00:18:01.181 --> 00:18:02.916
使用不同的參數

00:18:03.317 --> 00:18:06.987
如果你不想要應用內顯示
你只需不傳遞任何參數

00:18:07.454 --> 00:18:11.191
這就是你的應用在前臺時的通知處理

00:18:12.159 --> 00:18:14.862
讓我們繼續談談通知管理

00:18:15.629 --> 00:18:18.298
通知管理是這個框架新加的功能

00:18:18.365 --> 00:18:22.369
它允許你訪問通知

00:18:22.436 --> 00:18:26.006
你本地已經排期的通知中等待發送的

00:18:26.273 --> 00:18:28.542
以及訪問已經發送的通知

00:18:28.609 --> 00:18:32.346
用戶可能已經收到了
包括本地和遠程通知

00:18:32.746 --> 00:18:37.117
現在你還可以刪除已經發送給用戶
的通知

00:18:37.184 --> 00:18:39.720
並且可以更新或者提升這些通知

00:18:41.121 --> 00:18:44.925
通知的重要部分是請求識別符

00:18:45.492 --> 00:18:49.029
在摘要中你看到請求識別符

00:18:49.096 --> 00:18:51.498
被設置在通知的請求對象上

00:18:51.632 --> 00:18:54.735
對遠程通知
有一個新的請求數據頭

00:18:54.801 --> 00:18:57.905
apns-collapse-id
你需要在負載中設置它

00:18:58.872 --> 00:19:02.476
系統用這個請求識別符來知道
哪個通知

00:19:02.676 --> 00:19:04.845
是你請求刪除或更新的

00:19:05.679 --> 00:19:08.515
讓我們用例子來看看通知管理

00:19:09.249 --> 00:19:12.553
假設你的應用想要給一個遊戲
發送通知

00:19:12.686 --> 00:19:15.322
它想要在遊戲開始時這麼做

00:19:15.789 --> 00:19:19.326
你從創建UNNotificationRequest
開始

00:19:20.260 --> 00:19:23.564
和系統爲它排期
但是如果遊戲取消了

00:19:24.097 --> 00:19:28.101
只需要簡單地調用
removePendingNotificationRequest

00:19:28.168 --> 00:19:30.804
傳遞給它相同的遊戲識別符

00:19:30.871 --> 00:19:33.006
你爲初始通知創建的識別符

00:19:33.841 --> 00:19:35.976
但是如果遊戲時間更新了要怎麼辦？

00:19:36.243 --> 00:19:38.912
你創建一個新的請求

00:19:39.112 --> 00:19:42.182
給它和給初始請求相同的識別符

00:19:42.916 --> 00:19:44.985
設置新的觸發器時間

00:19:45.152 --> 00:19:47.120
和系統一起給它排期

00:19:47.187 --> 00:19:49.923
這轉而導致更新通知

00:19:51.325 --> 00:19:54.261
讓我們繼續看看已經發送的通知

00:19:54.328 --> 00:19:56.263
並談談分數更新

00:19:57.397 --> 00:20:00.734
你通過創建通知請求開始

00:20:01.235 --> 00:20:02.836
把它發送給系統

00:20:03.303 --> 00:20:05.439
但是假設錯誤的分數被髮送了

00:20:06.340 --> 00:20:08.742
你可以簡單地刪除通知

00:20:08.809 --> 00:20:10.911
通過調用
removeDeliveredNotification

00:20:10.978 --> 00:20:13.013
給予相同的識別符

00:20:14.715 --> 00:20:16.583
如果分數更新了

00:20:16.650 --> 00:20:18.919
這是遊戲中常見的情況

00:20:19.052 --> 00:20:23.156
你在這種情況下能做的就是創建
一個通知請求

00:20:23.223 --> 00:20:25.425
給它相同的識別符

00:20:25.759 --> 00:20:27.794
把新的分數內容傳遞給它

00:20:27.861 --> 00:20:30.430
並簡單地和系統爲它排期

00:20:31.298 --> 00:20:34.101
這是什麼意思
讓我們把這當成例子來看看

00:20:34.168 --> 00:20:38.005
那個通知已經在那爲初始的
分數更新

00:20:38.238 --> 00:20:42.376
通過調用更新
像我在代碼裏顯示的 這導致

00:20:42.442 --> 00:20:46.446
通知在通知列表裏獲得了更新

00:20:46.513 --> 00:20:48.448
取代開始的通知

00:20:48.515 --> 00:20:51.785
這樣你不會使用戶的通知列表
變得凌亂

00:20:58.358 --> 00:21:01.728
你可以在多種方法中使用它來
彙集信息

00:21:01.795 --> 00:21:03.463
這對你的應用是合適的

00:21:04.031 --> 00:21:05.799
這就是通知管理

00:21:05.866 --> 00:21:08.535
它給你的應用很多控制

00:21:08.602 --> 00:21:11.171
在已經發送給用戶的通知上

00:21:11.939 --> 00:21:14.007
目前爲止在這次演講中我們談了

00:21:14.074 --> 00:21:17.110
你的應用怎麼發送通知給用戶

00:21:17.177 --> 00:21:19.580
那exchange的另一面呢？

00:21:19.646 --> 00:21:23.250
通知是很有互動性的
不管是默認的行動

00:21:23.317 --> 00:21:26.920
還是你的應用對它們設置的
定製的行動

00:21:27.154 --> 00:21:30.390
要談談通知行動讓我邀請

00:21:30.457 --> 00:21:32.793
我的同事Julien來繼續這次演講

00:21:32.960 --> 00:21:33.794
謝謝

00:21:41.401 --> 00:21:42.336
嘿大家

00:21:42.469 --> 00:21:43.403
我是Julien

00:21:43.470 --> 00:21:46.173
我是框架測試組的軟件工程師

00:21:46.573 --> 00:21:48.942
Kritarth向你們
展示了網絡流程

00:21:49.009 --> 00:21:51.345
和當前的用戶通知框架

00:21:51.411 --> 00:21:52.946
從註冊

00:21:53.013 --> 00:21:56.316
到通知被髮送到設備上的時候

00:21:57.150 --> 00:21:59.219
現在讓我們談談行動

00:21:59.286 --> 00:22:01.788
用戶可以在通知上進行的行動

00:22:02.389 --> 00:22:06.093
你的應用可以知道三種行動

00:22:08.829 --> 00:22:11.298
第一個是默認行動

00:22:11.532 --> 00:22:14.968
這是用戶從通知中打開你的應用

00:22:15.969 --> 00:22:18.238
當設備解鎖時可以這麼做

00:22:18.305 --> 00:22:20.407
並且用戶收到一個通知

00:22:20.474 --> 00:22:23.243
他們可以點擊橫幅
這會打開你的應用

00:22:24.678 --> 00:22:26.547
這可以在鎖屏上進行

00:22:26.613 --> 00:22:28.949
當用戶從左向右滑動

00:22:30.617 --> 00:22:32.586
也可以在Notification Center中

00:22:32.653 --> 00:22:35.889
當用戶向下滑動來
顯示Notification Center

00:22:35.956 --> 00:22:38.292
他們可以點擊任意你的通知

00:22:38.358 --> 00:22:39.893
來打開你的應用

00:22:42.262 --> 00:22:45.199
現在第二類行動是定製行動

00:22:45.332 --> 00:22:47.935
它們在可行動通知中

00:22:48.202 --> 00:22:51.672
我們在iOS 8中引入了可行動通知

00:22:51.939 --> 00:22:55.342
它們提供給用戶一個快速運行
行動的方式

00:22:55.409 --> 00:22:57.311
直接從通知中

00:22:57.444 --> 00:22:59.413
而不需要啓動你的應用

00:23:01.215 --> 00:23:04.284
現在這些定製行動
它們顯示爲按鈕

00:23:04.351 --> 00:23:07.588
在通知內容的下面
有可定製的標題

00:23:09.156 --> 00:23:12.759
在iOS 9中
我們引入了文本輸入行動

00:23:12.826 --> 00:23:16.830
這樣用戶可以快速回復消息

00:23:16.897 --> 00:23:18.966
直接在通知中

00:23:20.934 --> 00:23:25.439
這種定製行動可以是後臺的或前臺的

00:23:26.006 --> 00:23:29.176
一個後臺行動會關閉通知

00:23:29.376 --> 00:23:31.745
並且在後臺給你少量時間

00:23:31.812 --> 00:23:34.815
來處理用戶選擇的定製行動

00:23:35.516 --> 00:23:37.484
另一方面 一個前臺行動

00:23:37.951 --> 00:23:41.955
會關閉通知並且前臺啓動你的應用

00:23:42.022 --> 00:23:44.157
這樣你可以處理那個定製行動

00:23:46.059 --> 00:23:50.330
現在這些定製行動在iOS
和watchOS上都可用

00:23:52.065 --> 00:23:55.602
首先讓我們看看在iOS它看起來是
什麼樣子

00:23:56.837 --> 00:23:59.339
我們以iPhone 6S爲例

00:23:59.606 --> 00:24:04.311
在這臺設備上用戶可以
使用3D touch來展開一個通知

00:24:05.546 --> 00:24:10.117
當他們這麼做時 定製行動會出現
在通知內容下面

00:24:10.384 --> 00:24:13.554
有一些行動
像你看到的 可以是文本輸入

00:24:13.620 --> 00:24:16.590
這樣用戶可以快速回復消息

00:24:19.259 --> 00:24:20.761
現在在watchOS上

00:24:21.762 --> 00:24:25.832
一樣的 定製行動出現在通知內容
的下面

00:24:27.467 --> 00:24:30.404
一些行動也可以是文本輸入行動

00:24:30.470 --> 00:24:32.806
在watchOS上你有機會

00:24:32.873 --> 00:24:34.575
提供一些建議

00:24:34.641 --> 00:24:36.543
是用戶可能選擇的

00:24:36.944 --> 00:24:38.478
爲你的文本輸入行動

00:24:40.214 --> 00:24:43.851
關於更多關於
watchOS通知的信息

00:24:43.917 --> 00:24:46.320
你可以參加快速交互技術

00:24:46.386 --> 00:24:48.522
針對watchOS
今天晚些時候的演講

00:24:50.858 --> 00:24:54.528
現在我們談過了定製行動看起來
像什麼

00:24:54.595 --> 00:24:57.698
讓我們首先談談你可以怎樣註冊
你的定製行動

00:24:57.764 --> 00:24:59.633
並把它們顯示給用戶

00:25:01.835 --> 00:25:04.638
要註冊 你首先要做的是

00:25:04.705 --> 00:25:06.607
創建一個行動對象

00:25:06.740 --> 00:25:10.344
你給它一個獨特的識別符
還給它一個標題

00:25:10.444 --> 00:25:14.448
標題會出現在我們之前看到的
可定製按鈕上

00:25:16.016 --> 00:25:18.519
行動默認是後臺行動

00:25:18.719 --> 00:25:19.987
但你還可以提供一些選項

00:25:20.053 --> 00:25:22.322
比如如果你想要它是前臺行動

00:25:23.924 --> 00:25:27.794
現在你的所有行動需要和種類
關聯

00:25:28.428 --> 00:25:31.098
種類需要一個獨特的識別符

00:25:31.565 --> 00:25:33.600
你把它給你所有的行動

00:25:34.134 --> 00:25:37.538
你現在還可以提供一些目的識別符

00:25:38.872 --> 00:25:40.974
關於目的的更多信息

00:25:41.275 --> 00:25:43.777
你可以參加介紹SiriKit演講

00:25:44.711 --> 00:25:47.714
你還可以向種類提供一些選項

00:25:47.781 --> 00:25:50.450
我們稍後會討論其中的一個

00:25:52.252 --> 00:25:55.322
一旦你創建了所有的行動和種類

00:25:55.389 --> 00:25:58.025
你唯一需要做的就是註冊它們

00:25:58.091 --> 00:26:02.529
向你的應用關聯的
UNUserNotificationCenter對象註冊

00:26:04.665 --> 00:26:08.302
現在讓我們談談你可以如何向
用戶呈現這些定製行動

00:26:08.902 --> 00:26:12.773
你可以在本地和遠程通知中這麼做

00:26:14.575 --> 00:26:17.010
首先是遠程通知

00:26:17.077 --> 00:26:21.048
你唯一要做的事是設置種類識別符

00:26:21.114 --> 00:26:24.551
在遠程通知負載的APS字典中

00:26:25.118 --> 00:26:28.589
現在這個識別符需要匹配
識別符中的一個

00:26:28.655 --> 00:26:31.058
你之前註冊的種類識別符

00:26:33.927 --> 00:26:38.165
對本地通知你只需要設置種類識別符

00:26:38.232 --> 00:26:41.068
在你創建的可修改內容中

00:26:41.134 --> 00:26:43.337
同樣的識別符需要匹配

00:26:43.403 --> 00:26:45.806
你之前註冊的識別符

00:26:49.376 --> 00:26:52.312
讓我們談談你的應用知道的第三種
行動

00:26:52.379 --> 00:26:53.614
它是刪除行動

00:26:54.715 --> 00:26:57.417
刪除行動是iOS 10新加入的

00:26:57.684 --> 00:27:00.921
它發生在用戶刪除一條特定通知時

00:27:02.489 --> 00:27:06.126
你可以使用它
比如你有一個日曆應用

00:27:06.560 --> 00:27:10.063
並且假設你發送了一條遠程通知
給你的用戶關於

00:27:10.130 --> 00:27:11.431
即將到來的會議

00:27:11.899 --> 00:27:15.402
用戶看到了這條通知並且決定
刪除它

00:27:16.904 --> 00:27:19.439
在這種情況下你可能想要停止發送

00:27:19.506 --> 00:27:22.309
其他遠程通知到這個用戶的其他設備

00:27:22.376 --> 00:27:24.545
因爲他們已經看過這條通知了

00:27:26.213 --> 00:27:29.216
用戶可以怎樣實際上刪除通知？

00:27:29.883 --> 00:27:31.752
他們可以在鎖屏上這麼做

00:27:32.319 --> 00:27:33.954
通過從右向左滑動

00:27:34.821 --> 00:27:36.323
並且點擊清除按鈕

00:27:39.026 --> 00:27:41.495
他們也可在Notification
Center這麼做

00:27:41.662 --> 00:27:43.697
也是從右向左滑動

00:27:43.864 --> 00:27:47.034
然後點擊清除按鈕
這會刪除這條通知

00:27:50.337 --> 00:27:53.941
因爲這不是你通常要更新的情況

00:27:56.243 --> 00:27:59.980
請記得早前當我們談論你可以註冊
的種類

00:28:00.314 --> 00:28:02.783
我們談到了一些選項
這是其中一個

00:28:02.850 --> 00:28:04.551
customDismissAction選項

00:28:07.321 --> 00:28:10.991
讓我們看看早前我們用來註冊
種類的代碼

00:28:11.658 --> 00:28:13.227
你在這需要做的唯一一件事

00:28:14.061 --> 00:28:16.029
就是簡單地
添加customDismissAction

00:28:16.296 --> 00:28:18.065
給這個種類的選項

00:28:18.131 --> 00:28:20.300
你的應用會收到這個行動

00:28:20.367 --> 00:28:24.004
當刪除這個種類的通知時

00:28:27.341 --> 00:28:29.843
讓我們總結今天提到的行動

00:28:30.711 --> 00:28:32.646
首先是默認行動

00:28:32.713 --> 00:28:36.016
用戶從通知中打開你的應用

00:28:37.918 --> 00:28:41.421
第二種是可行動通知中的定製行動

00:28:41.488 --> 00:28:43.390
提供給用戶快速的方法

00:28:43.457 --> 00:28:46.326
直接從通知中
執行一個行動

00:28:48.128 --> 00:28:50.330
最後第三個是刪除行動

00:28:50.898 --> 00:28:53.400
這是iOS 10中新加入的
它允許你知道

00:28:53.467 --> 00:28:56.270
什麼時候用戶刪除了特定通知

00:29:04.711 --> 00:29:07.414
現在讓我們談談你可以怎樣處理
迴應

00:29:07.481 --> 00:29:10.551
來自這些行動 在你的應用中

00:29:11.485 --> 00:29:14.087
到目前爲止我們有多種方法基於

00:29:14.154 --> 00:29:16.657
用戶是否從通知打開應用

00:29:16.723 --> 00:29:20.727
或者我們有定製行動
或者文本輸入行動

00:29:20.794 --> 00:29:23.664
或者這是來自遠程或本地通知

00:29:24.298 --> 00:29:27.234
現在有了我們新的通知框架

00:29:28.001 --> 00:29:29.970
我們可以用單一方法來做這些

00:29:30.971 --> 00:29:35.042
它是UNUserNotificationCenter
委託協議的一部分

00:29:36.977 --> 00:29:38.912
你需要實現的方法

00:29:38.979 --> 00:29:41.949
是didReceive迴應
有CompletionHandler

00:29:43.717 --> 00:29:46.520
現在讓我們仔細看看回應對象

00:29:46.587 --> 00:29:48.856
和你能在應用中用它做什麼

00:29:50.958 --> 00:29:53.627
你的迴應對象有一個行動識別符

00:29:53.694 --> 00:29:57.364
可以是默認 刪除行動

00:29:57.431 --> 00:30:00.000
或者任何你創建的定製行動

00:30:01.268 --> 00:30:05.572
它可以有一個用戶文本屬性
如果它是一個文本輸入行動

00:30:06.507 --> 00:30:08.909
它還可以有一個通知對象

00:30:09.743 --> 00:30:13.180
有請求對象和通知的識別符

00:30:13.514 --> 00:30:15.349
以及觸發器和內容

00:30:15.983 --> 00:30:18.952
根據觸發器的種類你可以知道
是否它是

00:30:19.019 --> 00:30:21.455
來自本地或遠程通知

00:30:22.422 --> 00:30:25.158
這就是新的用戶通知框架的
全部內容

00:30:25.225 --> 00:30:27.761
你可以處理行動的迴應

00:30:30.631 --> 00:30:32.833
現在讓我們談談遠程通知

00:30:35.903 --> 00:30:38.605
這是目前遠程通知的流程

00:30:38.672 --> 00:30:40.440
我們在演講的前些時候看過

00:30:41.074 --> 00:30:42.943
你有你的服務識別

00:30:43.010 --> 00:30:45.345
它會發送遠程通知到負載

00:30:45.412 --> 00:30:47.347
給APNs

00:30:47.548 --> 00:30:50.717
然後它被髮送給設備並顯示給用戶

00:30:52.186 --> 00:30:55.522
可能你們有些人在一種情況中

00:30:55.589 --> 00:30:58.559
你有服務器端應用並且你通信

00:30:58.625 --> 00:31:00.627
到你的iOS應用可能使用一些

00:31:00.694 --> 00:31:02.963
端到端加密

00:31:04.464 --> 00:31:08.669
如果你可以使用相同的端到端加密
豈不更好嗎？

00:31:09.136 --> 00:31:11.104
也爲你的遠程通知使用
相同的端到端加密

00:31:13.440 --> 00:31:17.144
爲此在iOS 10中我們引入了服務
擴展

00:31:18.212 --> 00:31:21.448
現在我們要談談什麼是服務擴展

00:31:21.815 --> 00:31:24.651
以及你可以怎樣在應用中實現它

00:31:28.422 --> 00:31:33.160
現在服務擴展是一個非UI iOS
擴展在iOS 10中可用

00:31:33.627 --> 00:31:35.596
也就是說它運行在後臺

00:31:36.330 --> 00:31:41.368
它的主要目的是增加或替換內容

00:31:41.435 --> 00:31:45.205
屬於可見的或者遠程通知
在他們顯示給用戶前

00:31:46.907 --> 00:31:50.711
讓我們再看看目前的通知工作流程

00:31:51.778 --> 00:31:53.881
你有你的服務器端應用

00:31:53.947 --> 00:31:56.917
你發送負載給APNs

00:31:56.984 --> 00:31:58.719
然後它被髮送給設備

00:32:00.220 --> 00:32:02.222
現在有了這個擴展

00:32:02.489 --> 00:32:04.391
你可以修改內容

00:32:04.458 --> 00:32:07.928
在你從服務器端應用發送它

00:32:07.995 --> 00:32:10.664
和它在設備上顯示給用戶之間的
時間

00:32:11.098 --> 00:32:12.966
你在這個例子中可以看到

00:32:13.033 --> 00:32:16.036
我有一個標題和副標題

00:32:16.103 --> 00:32:18.605
然後我修改了通知的主體

00:32:20.874 --> 00:32:23.911
關於服務擴展的一些更多細節

00:32:23.977 --> 00:32:26.780
你會獲得一個短的運行時間
也就是說這不是

00:32:26.847 --> 00:32:28.949
爲了長時間在後臺運行的任務

00:32:30.484 --> 00:32:34.888
而且如果你沒有及時提供
一些更新了的內容

00:32:34.955 --> 00:32:37.691
你會獲得一個回退方法

00:32:38.392 --> 00:32:40.961
萬一你仍然沒法提供一些更新了
的內容

00:32:41.028 --> 00:32:45.666
我們會顯示你發送給用戶的
原本的遠程通知

00:32:47.501 --> 00:32:49.269
一些潛在的使用方法

00:32:49.336 --> 00:32:52.673
你可以爲你的遠程通知
使用端到端加密

00:32:54.074 --> 00:32:57.811
你也可以添加一些附件到你的
遠程通知

00:32:57.878 --> 00:32:59.446
使它們更豐富

00:33:00.380 --> 00:33:03.116
現在有一個詳細的例子關於如何
這麼做

00:33:03.183 --> 00:33:05.285
在高級通知演講中

00:33:07.688 --> 00:33:10.123
現在讓我們談談如何

00:33:10.190 --> 00:33:12.693
在你的應用中
實現這個新的服務擴展

00:33:14.661 --> 00:33:17.831
首先你需要在Xcode項目中

00:33:17.898 --> 00:33:19.366
添加新的目標

00:33:19.800 --> 00:33:25.172
你可以用模板 它在應用擴展部分
的下面

00:33:25.739 --> 00:33:28.108
它叫通知服務

00:33:28.575 --> 00:33:31.812
現在這個模板有一個主類

00:33:32.379 --> 00:33:35.249
我們要看看它的一個簡化版本

00:33:38.151 --> 00:33:43.657
這類是UNNotification
服務擴展的一個子類

00:33:44.391 --> 00:33:45.993
它有兩個主要的方法

00:33:48.529 --> 00:33:52.299
第一個方法是didReceive
有ContentHandler

00:33:53.500 --> 00:33:56.270
現在這個方法會給你當前的請求

00:33:56.336 --> 00:33:59.907
有通知的識別符和內容

00:34:00.974 --> 00:34:02.743
然後我們有
ContentHandler

00:34:02.809 --> 00:34:05.145
你需要調用
ContentHandler

00:34:05.212 --> 00:34:07.915
當你想要顯示通知給用戶時

00:34:07.981 --> 00:34:10.317
你需要提供一些內容給它

00:34:12.485 --> 00:34:16.657
第二種方法是服務擴展時間會過期

00:34:16.723 --> 00:34:19.659
這會被調用

00:34:19.726 --> 00:34:20.960
如果你無法及時提供更新了的內容

00:34:21.995 --> 00:34:26.199
請記住如果你沒能在這個方法中
調用ContentHandler

00:34:26.266 --> 00:34:30.337
我們會顯示你發送的原始遠程
通知內容

00:34:33.574 --> 00:34:36.643
現在讓我們談談你能怎麼觸發
這個代碼

00:34:36.710 --> 00:34:38.411
從遠程通知觸發

00:34:41.715 --> 00:34:46.320
我們有一個很簡單的例子
關於遠程通知的有警告的負載

00:34:47.120 --> 00:34:50.991
如你所見我們有一個新的鍵
可修改內容鍵

00:34:51.491 --> 00:34:54.194
我們需要利用這個鍵讓系統知道

00:34:54.261 --> 00:34:56.730
你希望服務擴展被啓動

00:34:56.797 --> 00:34:59.032
來更新遠程通知的內容

00:35:00.567 --> 00:35:02.836
你不需要每次都用這個鍵

00:35:02.903 --> 00:35:06.840
只有你想要替換通知內容時使用它

00:35:09.810 --> 00:35:13.580
現在你可以看到我還添加了
我自己的一些加密過的內容

00:35:13.847 --> 00:35:15.449
讓我們看看一些代碼

00:35:15.516 --> 00:35:18.952
可以處理這個遠程通知的負載

00:35:22.422 --> 00:35:26.260
你可看到我們有didReceive
請求方法

00:35:26.393 --> 00:35:30.364
我做的第一件事是我把加密過的
內容解密

00:35:30.430 --> 00:35:32.099
在遠程通知負載中

00:35:35.202 --> 00:35:38.906
然後我創造一個
MutableNotificationContent對象

00:35:40.807 --> 00:35:43.076
然後我賦值通知的主體

00:35:43.544 --> 00:35:46.446
和我們之前得到的解密過的內容

00:35:51.652 --> 00:35:54.855
最後我們調用ContentHandler

00:35:55.022 --> 00:35:57.558
顯示通知內容給用戶

00:35:59.893 --> 00:36:03.530
實現新的服務擴展就是這麼簡單

00:36:03.864 --> 00:36:04.898
在你的應用中實現

00:36:14.608 --> 00:36:16.777
現在讓我們回顧一下我們今天
討論過的內容

00:36:19.046 --> 00:36:23.217
我們看了通知的概覽
有本地和遠程通知

00:36:25.419 --> 00:36:28.422
我們展示給你新的用戶通知框架

00:36:28.989 --> 00:36:32.526
在iOS  watchOS
和tvOS上都可用

00:36:35.996 --> 00:36:38.932
我們說瞭如何註冊通知

00:36:40.000 --> 00:36:42.269
以及如何創建你的內容

00:36:43.904 --> 00:36:47.307
如何爲你的通知排期
本地的或遠程的

00:36:49.009 --> 00:36:50.944
我們還說了新的管理

00:36:51.011 --> 00:36:54.114
你可以對待發和已發的通知進行

00:36:56.817 --> 00:36:58.619
然後我們說了不同的行動

00:36:58.685 --> 00:37:01.021
用戶可以在你的通知上觸發

00:37:01.221 --> 00:37:05.192
如何在應用內處理這些行動的迴應

00:37:07.594 --> 00:37:10.397
最後我們展示了全新的服務擴展

00:37:10.797 --> 00:37:13.433
允許你增加或替換內容

00:37:13.500 --> 00:37:18.305
可視的遠程通知的內容
在它們顯示給用戶前

00:37:21.508 --> 00:37:26.113
關於更多信息 你可以訪問這個網址

00:37:29.816 --> 00:37:31.518
我們會有一些相關的演講

00:37:31.585 --> 00:37:34.888
這之後緊接着的是高級通知演講

00:37:35.289 --> 00:37:37.791
我們強烈建議你參加它

00:37:37.958 --> 00:37:39.927
如果你對通知感興趣

00:37:41.094 --> 00:37:44.665
如果你想知道更多Watch上的
通知的信息

00:37:44.731 --> 00:37:47.935
你可以參加“watchOS
快速互動技巧”的演講

00:37:48.936 --> 00:37:49.770
謝謝大家