00:00:19.920 --> 00:00:23.557
用Safari app extensions
來擴展你的應用

00:00:28.795 --> 00:00:29.696
大家好

00:00:29.863 --> 00:00:31.064
我是Brian Weinstein

00:00:31.265 --> 00:00:33.233
我是Safari團隊的一名工程師

00:00:33.467 --> 00:00:37.437
今天我將與Zach和Damian
在這給大家演示

00:00:37.504 --> 00:00:41.375
如何基於Safari app extensions
來擴展你的Mac應用

00:00:41.875 --> 00:00:45.579
在macOS Sierra El Capitan系統
的Safari 10瀏覽器裏

00:00:45.913 --> 00:00:47.915
我們要引進一種新方法

00:00:47.981 --> 00:00:51.818
可以編寫 打包
以及發佈Safari Extensions

00:00:52.319 --> 00:00:53.887
這些擴展涵蓋

00:00:53.954 --> 00:00:57.824
網絡技術
和Swift原生技術

00:00:58.158 --> 00:01:02.696
他們與Mac應用捆綁
可以通過App Store發佈

00:01:03.130 --> 00:01:08.035
這種新途徑叫做Safari app extensions

00:01:08.302 --> 00:01:13.307
Safari app extensions可以
自定義網絡頁面的內容

00:01:13.373 --> 00:01:15.876
通過使用
JavaScript和CSS

00:01:16.343 --> 00:01:21.615
他們也可以中斷加載
頁面特定資源和元素

00:01:22.349 --> 00:01:25.319
他們可以添加工具類
按鈕到Safari的UI

00:01:25.686 --> 00:01:27.654
這些工具類
按鈕可以

00:01:27.721 --> 00:01:32.492
爲使用純原生技術展示
這些視圖

00:01:33.160 --> 00:01:39.399
最後Safari app extensions可以添加
右鍵菜單項目到網絡頁面

00:01:40.200 --> 00:01:43.670
Safari app extensions
是基於app extensions的

00:01:43.737 --> 00:01:46.373
應用擴展
由代碼和資源組成

00:01:46.440 --> 00:01:51.144
在你的應用裏也打包了這些
提供用戶訪問

00:01:51.211 --> 00:01:55.516
通過macOS訪問應用的功能和內容

00:01:56.416 --> 00:02:00.053
這也意味着需要使用Xcode

00:02:00.120 --> 00:02:03.156
以及其他開發工具
你們已經熟悉的工具

00:02:03.657 --> 00:02:07.561
這意味着Safari app extensions
可以運行原生應用

00:02:07.628 --> 00:02:11.098
使用Mac應用上的API

00:02:11.632 --> 00:02:16.103
另一個主要的優點
是關於這些基於app extensions

00:02:16.170 --> 00:02:18.972
發佈自你的應用

00:02:19.139 --> 00:02:21.742
意味着它們可
通過Mac App Store購買

00:02:22.009 --> 00:02:26.113
這也意味着你的用戶不必
單獨下載你的擴展

00:02:26.346 --> 00:02:28.148
在安裝了你的應用之後

00:02:29.149 --> 00:02:32.586
對於你們中需要

00:02:32.653 --> 00:02:35.255
的應用和擴展間通訊功能的人

00:02:35.322 --> 00:02:38.025
Safari app extensions
主要的一個優點是

00:02:38.091 --> 00:02:41.395
你的擴展總是和你的應用綁定

00:02:41.628 --> 00:02:43.263
因爲它們是打包在一起的

00:02:43.463 --> 00:02:46.166
所以 你的用戶總是會有匹配版本

00:02:46.233 --> 00:02:48.402
的應用和擴展

00:02:49.369 --> 00:02:51.939
擴展平臺最厲害的部分

00:02:52.005 --> 00:02:55.275
是構建多類型擴展的能力

00:02:55.609 --> 00:02:58.245
今天我們要擴展三種擴展

00:02:58.712 --> 00:03:00.948
第一種是內容攔截器

00:03:01.248 --> 00:03:06.587
可以攔截加載頁面上的
特定資源和隱藏元素帶

00:03:07.154 --> 00:03:09.089
第二種是

00:03:09.156 --> 00:03:12.526
可以修改網絡頁面的通訊過程

00:03:12.593 --> 00:03:15.896
發生在JavaScript代碼中
即你的應用

00:03:16.263 --> 00:03:18.098
代碼和原生擴展之間通訊的擴展

00:03:18.899 --> 00:03:23.403
第三種類型將展示
怎麼擴展Safari的UI

00:03:23.470 --> 00:03:27.975
來添加你的應用的功能
直接和Safari交互

00:03:28.609 --> 00:03:31.178
我們開始介紹內容攔截器

00:03:31.912 --> 00:03:33.780
爲了構建一個內容攔截器

00:03:34.047 --> 00:03:35.682
我要邀請Zach上臺

00:03:35.916 --> 00:03:36.750
Zach？

00:03:36.817 --> 00:03:39.887
講下內容攔截器吧

00:03:40.020 --> 00:03:40.854
謝謝Ryan

00:03:43.023 --> 00:03:44.525
大家好 我是Zach Li

00:03:44.591 --> 00:03:47.628
我也是Safari團隊的一名工程師

00:03:48.562 --> 00:03:52.699
去年在Safari我們引入了
新的內容攔截模型

00:03:53.133 --> 00:03:58.672
除了開發擴展的代碼
來在運行時攔截加載和隱藏元素

00:03:58.739 --> 00:04:03.210
我們構建了一個模型
你可以聲明提前攔截哪些內容

00:04:03.744 --> 00:04:06.580
而且WebKit優化了
這樣的攔截機制

00:04:06.713 --> 00:04:08.949
來提高運行速度和內容使用率

00:04:09.583 --> 00:04:12.953
最好的一點是 這個模型保護用戶隱私

00:04:13.020 --> 00:04:16.857
資源攔截時 無需過問主機應用

00:04:17.824 --> 00:04:22.129
至此 已看到了許多你們所寫出色的
內容攔截器

00:04:22.196 --> 00:04:24.298
這些真正提高了瀏覽體驗

00:04:24.765 --> 00:04:25.832
用戶也喜歡

00:04:27.067 --> 00:04:29.303
我很高興向大家宣佈

00:04:29.503 --> 00:04:34.341
我們很輕鬆地把現有iOS
內容攔截器遷移到macOS

00:04:34.808 --> 00:04:37.978
對於之前沒寫過內容攔截器的開發者

00:04:38.045 --> 00:04:39.146
開發變得更加簡單了

00:04:39.546 --> 00:04:44.117
你們可以看看去年WWDC演講
developer.Apple.com上就有

00:04:44.918 --> 00:04:48.055
我們來看看內容攔截器
可以做哪些事情

00:04:48.989 --> 00:04:50.157
我很喜歡甜點

00:04:50.424 --> 00:04:51.959
我基本上一直在吃好吃的

00:04:52.826 --> 00:04:57.197
顯然 我有一個美食博客
專注寫我想要嘗試的甜點

00:04:58.498 --> 00:05:02.236
但是不幸的是 額 確實不幸

00:05:02.402 --> 00:05:05.639
我會參加我好朋友的婚禮
在下個月以伴郎的身份參加

00:05:05.873 --> 00:05:07.040
我還得保持身材

00:05:07.474 --> 00:05:09.843
至少我需要不至於穿不下禮服

00:05:10.911 --> 00:05:13.447
因此 我開發了個iOS內容攔截器

00:05:13.547 --> 00:05:16.016
會攔截所有來自我網站的甜點

00:05:16.283 --> 00:05:20.521
即使我餓暈了 我到美食博客找東西

00:05:20.587 --> 00:05:22.289
我也不會看到一個甜點

00:05:23.924 --> 00:05:26.260
我來演示下甜點攔截器怎麼工作的

00:05:31.064 --> 00:05:32.432
這是我的源代碼

00:05:32.799 --> 00:05:35.536
我的甜點攔截器已經在運行了

00:05:36.770 --> 00:05:37.804
打開Safari

00:05:40.407 --> 00:05:41.808
甜點展示出來了

00:05:42.176 --> 00:05:45.412
我們重寫加載頁面
開啓甜點阻塞器

00:05:47.381 --> 00:05:48.615
所有的甜點都消失了

00:05:49.583 --> 00:05:50.484
太棒了

00:05:50.717 --> 00:05:52.019
我還是會想念它們的

00:05:52.486 --> 00:05:56.590
我是一個iOS開發者
開發了這個內容攔截器

00:05:56.957 --> 00:06:01.128
我也很想把它遷移到Mac平臺
並且通過App Store發佈出去

00:06:01.995 --> 00:06:03.463
事實上這很簡單

00:06:03.864 --> 00:06:07.868
因爲內容攔截器的API
在這兩個平臺是一樣的

00:06:08.869 --> 00:06:10.804
我們先打開Xcode

00:06:12.973 --> 00:06:16.276
創建一個新的
Mac應用目標

00:06:18.846 --> 00:06:20.881
叫做Mac甜點攔截器

00:06:27.020 --> 00:06:30.023
我們快速切換
到Mac應用主題

00:06:30.123 --> 00:06:33.527
因爲我們現在在構建一個
Mac應用

00:06:34.294 --> 00:06:37.998
創建一新的Mac應用
擴展目標

00:06:42.836 --> 00:06:45.205
使用內容攔截器擴展模板

00:06:48.208 --> 00:06:53.213
叫做Mac攔截器擴展

00:06:56.517 --> 00:06:59.453
當用戶從App Store
獲取應用的時候

00:06:59.520 --> 00:07:01.388
他們不必運行應用

00:07:01.455 --> 00:07:03.891
爲Safari
找到app extension就可以了

00:07:04.258 --> 00:07:06.627
但是除了App Store

00:07:06.693 --> 00:07:10.464
應用必須運行
在Safari裏找擴展

00:07:10.864 --> 00:07:12.766
因此 在這種狀況下我想要

00:07:12.833 --> 00:07:15.335
繼續使用應用方案

00:07:15.836 --> 00:07:18.405
我只要點擊取消按鈕

00:07:21.008 --> 00:07:23.644
這個模板可以正確的設置
一切需要的東西

00:07:24.178 --> 00:07:26.947
這就導致了一個簡單的內容攔截規則

00:07:27.848 --> 00:07:31.485
爲了創建自己的內容攔截器
你只需要修改曾JSON文件

00:07:31.818 --> 00:07:33.153
這真的很方便

00:07:33.687 --> 00:07:37.791
在我們的例子裏 我們可以
和iOS應用分享資源

00:07:38.425 --> 00:07:40.627
因此我們可以不管這個JSON文件

00:07:42.296 --> 00:07:43.230
和Swift文件

00:07:45.165 --> 00:07:47.835
我們可以使
我們已經有的東西

00:07:47.901 --> 00:07:51.071
對Mac應用、
Mac app extension對象可見

00:07:52.606 --> 00:07:55.776
爲了實現這個功能 我們看這個實用側邊欄

00:07:56.476 --> 00:08:01.181
在對象會員資格這裏
勾選Mac應用擴展目標

00:08:01.481 --> 00:08:03.450
那些我們希望分享的資源

00:08:06.119 --> 00:08:08.121
真棒 現在一切順利

00:08:08.555 --> 00:08:12.993
在此之前 我想要我的
甜點攔截器更加文雅

00:08:13.060 --> 00:08:15.863
需要換一個更好的名字
和描述

00:08:16.029 --> 00:08:18.065
在Safari Extensions偏好裏配置

00:08:18.665 --> 00:08:23.303
爲了實現這個功能 我們看下
app extension信息列表

00:08:26.206 --> 00:08:28.375
不叫它Mac甜點攔截器擴展了

00:08:28.442 --> 00:08:30.511
我們勾選下 就重命名叫甜點攔截器

00:08:33.313 --> 00:08:34.982
我要提供描述的內容是

00:08:35.048 --> 00:08:39.686
該內容攔截器攔截了
我美食博客的甜點圖片

00:08:41.020 --> 00:08:45.626
另外 我想要提供一個更好的
圖標給我的這個擴展

00:08:46.560 --> 00:08:48.662
我們移走這個默認的資源目錄

00:08:49.596 --> 00:08:55.068
然後拖動已經設計好的
冰淇淋圖標到我的Xcode項目

00:08:57.704 --> 00:09:01.308
好了 我們來運行和瀏覽
這個Mac應用

00:09:04.478 --> 00:09:06.613
應用運行了

00:09:07.281 --> 00:09:08.615
我們轉到Safari

00:09:11.585 --> 00:09:14.688
你可以看到 它顯示在了
擴展偏好裏了

00:09:14.755 --> 00:09:19.126
像所有其他的Safari Extensions一樣
內容攔截器默認是關閉的

00:09:19.593 --> 00:09:21.361
我們開啓這個甜點攔截器

00:09:23.764 --> 00:09:24.831
刷新頁面

00:09:27.534 --> 00:09:29.236
真棒
所有甜點都消失了

00:09:30.270 --> 00:09:31.104
酷斃了

00:09:32.105 --> 00:09:35.275
現在我吃
甜點的慾望完全被攔截了

00:09:35.342 --> 00:09:37.477
我已經準備好做新郎了

00:09:45.619 --> 00:09:52.426
如你所見 我們不用寫代碼就可把
iOS內容攔截器遷移到macOS

00:09:53.293 --> 00:09:56.096
提前聲明一點
我們已經收到你們的反饋

00:09:56.163 --> 00:09:59.700
可以最好讓人知道
你的內容攔截器是否開啓了

00:10:00.200 --> 00:10:02.903
因此我們引入一個新的API

00:10:03.203 --> 00:10:06.006
就是getStateOfContent
Blocker(identifier

00:10:08.075 --> 00:10:10.410
有了這個API 舉個例子

00:10:10.477 --> 00:10:14.214
如果你回一下我
應用不怎麼好的UI

00:10:14.281 --> 00:10:16.950
我可以爲用戶提供一個更好的體驗

00:10:17.317 --> 00:10:20.888
只要通過說明怎麼開啓內容攔截器

00:10:21.154 --> 00:10:24.091
如果我偵測到內容攔截器是關閉的

00:10:25.092 --> 00:10:31.098
該API和其他API將由我的同事
Brian和Damian介紹

00:10:31.331 --> 00:10:37.704
如果用戶安裝了Safari 10
這些API已在Sierra和El Capitan裏了

00:10:39.273 --> 00:10:45.679
因爲El Capitan的API是
依賴於Safari 10

00:10:46.180 --> 00:10:49.483
我們提供給你了
一個方便的Swift API

00:10:49.550 --> 00:10:52.119
你們可以在運行時確認

00:10:52.186 --> 00:10:55.355
Safari Services
APIs是否可用

00:10:56.190 --> 00:10:58.525
我們來看看Swift代碼的API

00:10:59.593 --> 00:11:02.596
如果SFSafari服務
可用會返回真

00:11:03.130 --> 00:11:05.399
你可以安全的使用API

00:11:05.933 --> 00:11:08.669
如果不是 轉向其他處理行爲

00:11:09.670 --> 00:11:12.139
這些都是內容攔截器帶的新特性

00:11:12.206 --> 00:11:17.477
要講下其他有用的特性
你可以看下Safari app extensions

00:11:17.544 --> 00:11:20.013
我要把講臺交給Brian

00:11:20.113 --> 00:11:26.053
Safari App Extensions

00:11:26.119 --> 00:11:27.054
謝謝Zach

00:11:28.121 --> 00:11:30.924
因此 下一個擴展類型
我要展示的是

00:11:30.991 --> 00:11:33.594
可以修改頁面的內容

00:11:33.660 --> 00:11:38.098
也可以與原生代碼通訊

00:11:38.165 --> 00:11:39.333
通過你的應用擴展

00:11:39.633 --> 00:11:41.335
我們要構建一個應用

00:11:41.401 --> 00:11:45.472
可以在網絡裏取代一個單詞
使用另一個單詞

00:11:45.906 --> 00:11:49.343
它可以獲得要取代的單詞
和取代的單詞內容

00:11:49.409 --> 00:11:51.378
通過Swift代碼的應用擴展

00:11:51.879 --> 00:11:56.250
有兩種方法可以給Safari app extension
修改網絡頁面的內容

00:11:56.617 --> 00:12:02.189
擴展可以注入CSS樣式表
和JavaScript內容腳本到頁面上

00:12:02.689 --> 00:12:05.158
我們來看看怎麼注入樣式表

00:12:06.059 --> 00:12:08.562
樣式表可以通過指定注入在

00:12:08.695 --> 00:12:12.799
應用擴展Info.plist文件裏
這文件在NSExtension部分

00:12:13.200 --> 00:12:17.671
樣式表通過指定使用
SFSafari樣式表部分

00:12:17.971 --> 00:12:20.908
Info.plist文件
檢查一個數組

00:12:20.974 --> 00:12:23.744
這個數組包含了每個樣式表的字典定義

00:12:24.278 --> 00:12:28.815
每個樣式表由鍵值對組成

00:12:28.882 --> 00:12:32.452
值是指到相關樣式表的路徑

00:12:32.519 --> 00:12:35.522
關於這個資源字典的擴展包

00:12:36.123 --> 00:12:38.258
你之前已經寫下的任何一個樣式表

00:12:38.325 --> 00:12:42.396
Safari擴展只會與Safari
app extensions工作

00:12:43.063 --> 00:12:45.199
下一步是注入腳本

00:12:45.265 --> 00:12:48.969
這幾乎是一模一樣的
只是有不同兩個鍵

00:12:49.169 --> 00:12:53.807
腳本由SFSafari指定的
字典裏的內容腳本鍵

00:12:54.374 --> 00:12:58.312
這個鍵表示
腳本的路徑而不是樣式表的

00:12:59.179 --> 00:13:03.684
你所有的擴展腳本
都在他們自己的執行環境下運行

00:13:03.784 --> 00:13:06.019
這也意味着
永遠沒有命名衝突

00:13:06.086 --> 00:13:08.655
不會和網絡頁面裏的腳本變量衝突

00:13:09.122 --> 00:13:13.126
這也使得Safari可以提供
特殊的JavaScript API

00:13:13.360 --> 00:13:15.162
到應用擴展的內容腳本

00:13:15.362 --> 00:13:17.497
對於所有的網絡頁面不可見

00:13:17.831 --> 00:13:20.701
比如 你的擴展可能需要通信

00:13:20.767 --> 00:13:23.971
和你的應用裏的原生代碼通信讀取偏好

00:13:24.238 --> 00:13:27.808
或者執行
只能在原生代碼裏做的操作

00:13:28.375 --> 00:13:31.879
爲了實現這個功能 我們已經
添加了一個消息傳遞API

00:13:32.012 --> 00:13:34.548
所以你的應用擴展的
JavaScript代碼

00:13:34.748 --> 00:13:37.518
和Swift代碼可以
相互通信

00:13:38.452 --> 00:13:40.754
所以 來看看這個圖

00:13:41.121 --> 00:13:45.192
你可以看到我們擁有Safari
和你的應用擴展

00:13:45.359 --> 00:13:49.897
這個盒子代表Swift代碼
在你擴展的進程裏運行了

00:13:49.963 --> 00:13:51.932
這當然就是沙盒啦

00:13:52.332 --> 00:13:56.370
擴展已經注入腳本
到了Apple.com

00:13:56.703 --> 00:13:59.273
腳本會問
這個應用擴展

00:13:59.339 --> 00:14:00.874
應該替換哪個單詞

00:14:01.475 --> 00:14:06.647
爲了實現這個 它只需要調用
Safari.extension.dispatch

00:14:06.713 --> 00:14:08.382
然後傳遞消息名稱

00:14:08.849 --> 00:14:12.119
我們來看看Swift代碼
監聽這個消息的代碼

00:14:12.186 --> 00:14:15.289
響應返回的
是應該替換掉的單詞

00:14:16.256 --> 00:14:19.693
每個Safari app extension
有一個基類

00:14:19.927 --> 00:14:22.696
這個類會被
Safari調用方法

00:14:22.763 --> 00:14:24.698
當用戶和Safari交互的時候

00:14:25.365 --> 00:14:29.436
當消息分發自
腳本到應用擴展的時候

00:14:29.503 --> 00:14:34.608
消息會收到調用的
userInfo頁面的名字

00:14:35.609 --> 00:14:39.246
一旦這個方法調用了
我們的擴展的主要對象

00:14:39.680 --> 00:14:43.984
我們要確認的第一件事情是
消息名稱 然後在上面操作

00:14:44.518 --> 00:14:48.255
要操作我們的擴展
會發送回去一個消息

00:14:48.322 --> 00:14:51.692
給SFSafari頁面
代表Apple.com

00:14:51.959 --> 00:14:55.662
要替換的單詞
及以什麼單詞替換

00:14:55.963 --> 00:14:58.365
我們在構造這個東西
就在字典裏

00:14:58.432 --> 00:15:01.735
每個鍵代表
我們要替換的單詞

00:15:01.969 --> 00:15:05.138
指表示
我們的替換內容

00:15:05.806 --> 00:15:10.210
所以 當應用擴展調用

00:15:10.277 --> 00:15:14.181
dispatchMessageTo
Script(withName,userInfo方法時

00:15:14.248 --> 00:15:18.785
消息從擴展進程發出回到內容腳本

00:15:18.986 --> 00:15:21.021
腳本以及注入到Apple.com

00:15:21.555 --> 00:15:23.991
我們看看腳本是怎麼監聽

00:15:24.057 --> 00:15:26.159
這些消息並且在上面操作

00:15:27.361 --> 00:15:30.197
爲了在內容腳本里
實現監聽

00:15:30.264 --> 00:15:33.834
我們先添加個事件
監聽器到Safari.self

00:15:34.001 --> 00:15:38.071
因此 腳本可以監聽
這個應用擴展的消息事件

00:15:38.505 --> 00:15:40.607
如果你之前寫過Safari Extension

00:15:40.941 --> 00:15:42.543
這看起來是不是很熟悉

00:15:42.843 --> 00:15:46.446
接受消息的API
在這個內容腳本里

00:15:46.513 --> 00:15:48.382
幾乎是一樣的

00:15:49.383 --> 00:15:51.051
當我們事件監聽器開啓的時候

00:15:51.118 --> 00:15:53.453
因爲我們獲得了一個消息
來自我們的應用擴展

00:15:53.954 --> 00:15:56.857
我們首先要做的事情還是
卻消息名稱

00:15:56.924 --> 00:16:00.894
最佳實踐是
然後纔在上面操作

00:16:01.261 --> 00:16:05.365
爲了操作這個消息
我們想要遍歷我們的字典

00:16:05.632 --> 00:16:09.536
我們已在userInfo指定Swift代碼裏的消息

00:16:09.603 --> 00:16:13.073
作爲event.message
暴露於JavaScript代碼

00:16:13.307 --> 00:16:16.210
到這裏 我們已經拿到
單詞詞典和替換內容

00:16:16.643 --> 00:16:18.178
我們要開始遍歷它們

00:16:18.245 --> 00:16:23.517
然後在我們的腳本里調用方法
執行替換

00:16:23.851 --> 00:16:27.721
單詞替換擴展
我們已經討論了的

00:16:27.788 --> 00:16:29.690
已經可以在每個網站上工作

00:16:30.023 --> 00:16:34.194
但是一些擴展只針對
一些特點的網址起作用

00:16:34.661 --> 00:16:37.531
Safari app extensions
支持豐富的系統

00:16:37.598 --> 00:16:40.067
通過指定特定的目標網站

00:16:40.133 --> 00:16:44.438
另外Safari 10新增加了功能
用戶可以看到

00:16:44.571 --> 00:16:47.774
你的Safari
擴展需要訪問哪些站點

00:16:49.209 --> 00:16:52.746
像內容腳本
和樣式表

00:16:53.013 --> 00:16:57.551
你的擴展的網站可以訪問的在
擴展的Info.plist裏有描述

00:16:57.851 --> 00:17:00.587
以SFSafariWebsiteAccess/key的形式

00:17:00.954 --> 00:17:02.789
這是一個由兩部分組成的字典

00:17:03.090 --> 00:17:05.626
第一部分是
網站訪問級別

00:17:06.193 --> 00:17:09.663
這個擴展指定了
所有的訪問級別

00:17:09.963 --> 00:17:13.767
意思是它要訪問
用戶打開的每一個網頁

00:17:14.167 --> 00:17:17.204
你看到了
Safari的擴展偏好

00:17:17.271 --> 00:17:20.507
警告用戶相關信息當
用戶打開這個擴展的時候

00:17:21.608 --> 00:17:25.679
在這個例子裏
這個擴展的訪問級別是some

00:17:26.313 --> 00:17:28.382
當訪問級別是some的時候

00:17:28.448 --> 00:17:33.220
擴展指定了一個列表
包含了它想要訪問的域名

00:17:33.287 --> 00:17:36.223
在字典的
允許訪問域名部分

00:17:36.757 --> 00:17:39.826
如果一個允許訪問的域名
以星標起始

00:17:39.893 --> 00:17:44.398
它被通配符標示
可以訪問所有的子域名

00:17:45.332 --> 00:17:49.536
我們已經討論了
你的擴展我們可以修改哪些頁面

00:17:49.603 --> 00:17:52.072
通過注入腳本和樣式表

00:17:52.372 --> 00:17:56.343
和這些腳本怎麼和你的
擴展Swift代碼通信

00:17:56.710 --> 00:18:00.380
你如何指定你的擴展可訪問的網站

00:18:00.848 --> 00:18:02.850
我要把所有這些要點集合到一個演示裏

00:18:02.916 --> 00:18:06.119
然後編寫我們之前一直在討論的
單詞替換擴展

00:18:10.224 --> 00:18:14.628
Safari Extensions有趣的一點是

00:18:14.695 --> 00:18:20.000
從代碼開始和基於
JavaScript的網頁交互開始

00:18:20.067 --> 00:18:23.136
很容易就可以把你寫的代碼挪過來

00:18:23.203 --> 00:18:27.107
到一個不同的瀏覽器的擴展裏
然後直接指向Safari

00:18:27.474 --> 00:18:31.144
我要做的事情是
舉個Chrome擴展的例子

00:18:31.378 --> 00:18:33.146
這個擴展也可以實現單詞替換

00:18:33.213 --> 00:18:36.450
我要基於現在的代碼創建一個
Safari app extension

00:18:36.850 --> 00:18:41.321
我會擴展這個代碼
以便於我們獲取要替換的單詞

00:18:41.388 --> 00:18:44.157
以及使用Swift代碼替換內容

00:18:44.858 --> 00:18:48.128
所以我已有了一個應用帶有一個圖標

00:18:48.362 --> 00:18:50.597
我要新建一個Safari Extension

00:18:51.198 --> 00:18:53.901
因此 我在Xcode創建了一個目標

00:18:54.968 --> 00:18:59.907
然後選擇macOS Application Extension
再選擇Safari extension

00:19:01.008 --> 00:19:03.443
我們就叫它Animalify

00:19:03.510 --> 00:19:07.581
因爲我們通過使用表情符號
替換動物Animalify網頁

00:19:10.217 --> 00:19:13.887
Zach之前也提到了
我們要運行這個應用

00:19:13.954 --> 00:19:16.823
因此我準備激活這個擴展的方案

00:19:19.593 --> 00:19:24.331
因此我們現在的擴展
我們調到Info.plist部分

00:19:24.565 --> 00:19:26.800
然後打開NSextension部分

00:19:29.336 --> 00:19:32.773
你可以看到模板自動爲我們創建了

00:19:32.840 --> 00:19:35.876
我們有了內容腳本 一個工具欄項目

00:19:35.943 --> 00:19:39.079
而要求訪問網站
就是我們的擴展要求訪問的

00:19:39.146 --> 00:19:42.449
我準備丟棄這個工具欄項目
因爲我們的擴展不需要它

00:19:43.016 --> 00:19:45.886
然後改變訪問級別爲all

00:19:46.153 --> 00:19:48.155
然後丟棄運行的域名列表

00:19:48.222 --> 00:19:51.592
因爲我們希望這個擴展
可以在任何一個頁面上運行

00:19:53.260 --> 00:19:55.863
下一件事是打開我們的腳本

00:19:56.363 --> 00:19:58.565
然後我要引入

00:19:58.632 --> 00:20:01.502
我已大量爲Chrome擴展寫的腳本

00:20:03.337 --> 00:20:06.940
你可以看到
當腳本注入頁面的時候

00:20:07.007 --> 00:20:11.512
它會調用我們的替換函數
然後替換熊爲熊的表情符號

00:20:12.145 --> 00:20:16.884
現在 我希望我的應用可以被替代爲

00:20:16.950 --> 00:20:20.521
我希望它展示一個列表
羅列了各種動物 用戶可以選擇

00:20:20.587 --> 00:20:22.723
他們希望替換掉的動物種類

00:20:23.090 --> 00:20:25.959
現在我準備設計一個UI

00:20:26.293 --> 00:20:30.097
爲了實現這一點
我們需要一個替換列表

00:20:30.163 --> 00:20:31.331
從應用擴展獲得該列表

00:20:31.832 --> 00:20:35.536
因此 我沒有通過
直接的替換

00:20:36.136 --> 00:20:38.805
而是通過發送
JavaScript消息實現

00:20:38.872 --> 00:20:42.643
通過發送給app extension詢問
替換的單詞和要替換的內容

00:20:43.443 --> 00:20:47.414
所以有趣的一點是Safari Extensions

00:20:47.481 --> 00:20:52.319
的內容腳本
在DOM加載之前就注入了

00:20:52.386 --> 00:20:54.488
這是爲了更好的彈性支持你的擴展

00:20:54.955 --> 00:20:59.226
但是 一個單詞替換器什麼也不會做
直到dom加載完成

00:20:59.293 --> 00:21:02.796
我們要等待dom
加載後再發送消息

00:21:03.630 --> 00:21:05.666
因此 我們來看看我們的主要類

00:21:06.633 --> 00:21:09.303
你可以看到
我們已經有了一個實現

00:21:09.369 --> 00:21:13.841
實現那些收到userInfo網頁的
具名消息

00:21:14.608 --> 00:21:17.477
然而 我們準備丟棄這個

00:21:17.544 --> 00:21:22.783
然後替換爲some級別 通過
我們之前幻燈片裏講過的代碼

00:21:23.150 --> 00:21:25.385
它做的事情只是
檢查消息名稱

00:21:25.886 --> 00:21:28.388
然後發送迴響應給內容腳本

00:21:28.789 --> 00:21:32.059
我們在這有兩個替換
只是因爲我們可以

00:21:33.260 --> 00:21:37.798
我們回到腳本
然後監聽消息然後響應

00:21:43.036 --> 00:21:47.040
再次 這又是之前已討論過了的代碼

00:21:47.441 --> 00:21:51.879
我們在開始時添加一個針對
Safari.self消息事件的事件監聽器

00:21:52.679 --> 00:21:56.617
當消息事件觸發的時候
我們檢查消息名稱

00:21:57.384 --> 00:22:00.220
然後從event.message
獲取替換內容

00:22:00.687 --> 00:22:03.991
我們通過遍歷所有這些替換內容來操作

00:22:04.258 --> 00:22:06.226
然後調用同樣的替換方法

00:22:06.293 --> 00:22:08.428
這個方法就在之前腳本的起始部分

00:22:08.862 --> 00:22:11.431
所以 現在我要創建和運行一個應用了

00:22:11.498 --> 00:22:13.700
Safari可以發現這個新的擴展

00:22:20.841 --> 00:22:23.877
你可想象這裏有一長串動物名稱
而我已經勾選了其中的一些

00:22:24.745 --> 00:22:29.816
這是我第一次試試該Safari
app extension

00:22:30.017 --> 00:22:31.718
我還沒有註冊這個應用

00:22:31.785 --> 00:22:34.288
我也沒註冊參加Apple
Developer Program

00:22:34.354 --> 00:22:36.557
意味着我沒有開發者認證

00:22:36.890 --> 00:22:40.027
默認的Safari只會顯示

00:22:40.093 --> 00:22:42.563
允許用戶啓用

00:22:42.629 --> 00:22:44.064
已簽署開發者認證的擴展

00:22:44.398 --> 00:22:46.567
但是對於那些只是想要試用的人來說

00:22:46.867 --> 00:22:51.471
我們已經增加了一個途徑可以使你
能夠測試你沒有註冊的擴展

00:22:51.872 --> 00:22:55.909
爲了實現這個
我準備打開“高級設置”

00:22:56.276 --> 00:22:58.679
然後展示你們菜單工具欄的
Develop菜單

00:22:59.112 --> 00:23:00.581
在這個菜單裏

00:23:00.647 --> 00:23:03.784
我要選擇
允許未簽署擴展選項

00:23:04.084 --> 00:23:05.519
我要輸入我的密碼

00:23:06.186 --> 00:23:11.592
然後這個動物擴展就顯示
在我們的擴展列表裏了

00:23:11.959 --> 00:23:15.596
我要開啓它
在每個人獲得它之前

00:23:15.662 --> 00:23:17.497
我之前在研究灰熊的食譜

00:23:17.764 --> 00:23:21.668
我要重新加載頁面
就像你看到的那樣

00:23:21.802 --> 00:23:24.571
熊已經被替換
爲熊的表情符號

00:23:24.638 --> 00:23:27.374
鮭魚已經被替換爲
美味的壽司表情

00:23:31.879 --> 00:23:35.249
這可以使得網頁
在瀏覽時更加有趣

00:23:40.387 --> 00:23:44.358
這都說明瞭一個Safari應用
擴展如何實現修改頁面內容

00:23:44.424 --> 00:23:48.262
你的擴展如何指定
允許訪問的網站

00:23:49.029 --> 00:23:51.765
我們將要展示的最後一種擴展類型是

00:23:52.299 --> 00:23:55.602
一種可以擴展Safari的UI
並且增強

00:23:55.669 --> 00:23:59.806
原生代碼的功能
並且可以直接引入到Safari

00:24:00.374 --> 00:24:03.744
爲了給大家演示
我想邀請Damian上臺

00:24:03.810 --> 00:24:04.711
Damian ？

00:24:04.778 --> 00:24:05.946
擴展Safari的UI

00:24:06.013 --> 00:24:06.847
謝謝

00:24:09.583 --> 00:24:10.551
大家好

00:24:10.951 --> 00:24:14.154
我是Damian Kaleta
是Safari團隊的一個工程師

00:24:15.022 --> 00:24:18.592
Brian已告訴大家Safari
App Extensions的基礎性知識

00:24:18.659 --> 00:24:20.794
現在我要在此之上構建一個應用

00:24:20.861 --> 00:24:23.230
我要告訴給怎麼實現
擴展Safari的UI

00:24:23.830 --> 00:24:24.798
好 我們開始

00:24:25.832 --> 00:24:28.435
我已寫好了這個簡單的macOS應用

00:24:28.635 --> 00:24:29.536
這是一個筆記本應用

00:24:30.070 --> 00:24:34.308
你們可以從截圖上看到
這個圖標傾注了設計者的愛

00:24:34.374 --> 00:24:35.876
不幸的是應用本身沒有

00:24:36.276 --> 00:24:38.912
但是沒關係
這個應用可以讓我添加筆記

00:24:39.079 --> 00:24:41.281
保存之後可以之後再閱讀

00:24:42.883 --> 00:24:47.254
但是我想要
從網頁上直接抓取筆記內容

00:24:47.321 --> 00:24:49.723
然後在Safari上修改筆記

00:24:50.424 --> 00:24:52.826
而且
有了新的Safari app extension模型

00:24:53.560 --> 00:24:57.064
我有了一整套工具
可以極大簡化我構建擴展的過程

00:24:58.265 --> 00:25:00.501
我需要完全不同的兩個東西

00:25:00.567 --> 00:25:05.272
我想要可以選擇文本
然後可以保存它

00:25:06.240 --> 00:25:09.309
因此我需要一個上下文菜單

00:25:10.344 --> 00:25:14.915
其次 我希望可以展示我最近的筆記

00:25:15.282 --> 00:25:17.017
而且還可以修改它

00:25:17.584 --> 00:25:20.821
因此我需要一個彈出框

00:25:21.788 --> 00:25:25.125
在用戶點擊工具欄按鈕時
彈出框會顯示

00:25:25.459 --> 00:25:28.295
我們先來談談

00:25:28.362 --> 00:25:29.530
工具欄按鈕

00:25:30.097 --> 00:25:33.800
工具欄按鈕默認在智能搜索框下面

00:25:34.468 --> 00:25:37.337
這樣子用戶可以快速而方便找到

00:25:37.404 --> 00:25:40.707
擴展提供的功能

00:25:41.575 --> 00:25:43.310
你可能期望
如果你是一個事件用戶

00:25:43.377 --> 00:25:45.379
你當然可以
簡單的移動它

00:25:46.480 --> 00:25:48.882
那麼我怎麼添加我的按鈕呢？

00:25:50.984 --> 00:25:53.120
我到了我的擴展Info.plist

00:25:53.187 --> 00:25:56.223
我添加了
SFSafariToolbarItem

00:25:56.924 --> 00:25:59.660
以及四個不同的鍵值對

00:26:00.494 --> 00:26:05.532
標識符 標籤 圖片和活動

00:26:06.800 --> 00:26:11.171
且和所有系統工具欄上面的項目在一起

00:26:11.471 --> 00:26:14.341
請注意 我在這使用的一個PDF文件

00:26:15.609 --> 00:26:18.278
好的 Safari現在展示的是
我的工具欄按鈕

00:26:18.345 --> 00:26:22.916
但在用戶點擊這個按鈕時
我的擴展會有什麼反應？

00:26:24.151 --> 00:26:29.389
Safari發送窗口工具欄的
點擊元素給你principal對象

00:26:30.123 --> 00:26:32.993
提醒下
你的principal對象是

00:26:33.427 --> 00:26:37.831
可以處理所有
Safari和你擴展之間通信的對象

00:26:39.166 --> 00:26:43.170
而且如果你想要
你的按鈕根據加上下文的情況變灰

00:26:43.237 --> 00:26:45.772
Safari提供了驗證方法

00:26:46.340 --> 00:26:49.543
並且你也可以批量設置你的按鈕的文本

00:26:50.110 --> 00:26:53.380
這通常表示爲一個數值類型的值
比如 紅細胞計數

00:26:55.449 --> 00:26:57.584
我們已經給自己設計了一個按鈕

00:26:57.651 --> 00:27:01.655
但是現在我要展示一個彈出框

00:27:01.722 --> 00:27:03.557
當用戶點擊按鈕的時候展示

00:27:03.891 --> 00:27:07.294
這個彈出框讓我在其中插入
任意的NSview

00:27:07.628 --> 00:27:12.399
這很棒 因爲你之前已寫了一些
macOS應用代碼

00:27:12.466 --> 00:27:16.303
你會複用這些代碼
而且過程很簡單

00:27:16.904 --> 00:27:18.505
讓我給大家看看這如何工作

00:27:20.240 --> 00:27:23.677
你現在有一個基於
principal對象的擴展

00:27:24.378 --> 00:27:28.815
然後你希望定義一個
popoverViewController方法

00:27:28.882 --> 00:27:30.817
在你的principal對象裏面

00:27:31.952 --> 00:27:36.390
此方法裏你希望返回自定義
視圖控制器

00:27:36.456 --> 00:27:40.160
這個控制器代表一個視圖
你希望在彈出框裏插入的視圖

00:27:41.762 --> 00:27:43.897
另一方面 還包含有Safari進程

00:27:44.598 --> 00:27:47.768
Safari進程可以調用遠程視圖

00:27:48.936 --> 00:27:51.538
遠程視圖可以簡化你抓取回顧的過程

00:27:51.605 --> 00:27:55.776
以及在彈出框展示的內容

00:27:56.643 --> 00:27:59.346
如你們所期望的 我們會向你們提供

00:27:59.413 --> 00:28:01.281
所有的事件 比如點擊事件

00:28:02.916 --> 00:28:06.486
有一種展示彈出框的方法是
僅僅指定彈出框行爲

00:28:06.553 --> 00:28:11.358
而不是通過
SFSafariToolbarItem裏的命令

00:28:11.725 --> 00:28:12.559
就是這些

00:28:12.626 --> 00:28:15.229
現在Safari知道
你們希望展示一個彈出框

00:28:15.295 --> 00:28:17.531
你們會使用自定義
視圖控制器

00:28:19.833 --> 00:28:22.736
彈出框也帶來了一些
方便實用的API

00:28:23.170 --> 00:28:24.671
你們看這裏

00:28:24.738 --> 00:28:27.741
兩個方法是popoverWillShow
和popoverWillClose

00:28:28.275 --> 00:28:30.344
他們可以幫助你做一些
啓動配置和清理的工作

00:28:31.311 --> 00:28:33.113
第三個方法我們已經談過了

00:28:33.180 --> 00:28:36.283
這個方法可返回給你自定義
視圖控制器

00:28:36.984 --> 00:28:38.385
好的 我們添加了這個按鈕

00:28:38.452 --> 00:28:40.721
我們可以展示一個彈出框了

00:28:41.154 --> 00:28:44.658
我們現在來討論下上下文菜單項

00:28:47.594 --> 00:28:51.398
你們通常想要使用
上下文菜單項的場景是

00:28:51.465 --> 00:28:54.535
當你們想要操作頁面的一部分內容時

00:28:54.968 --> 00:28:59.506
但在我的例子裏 我要能夠
選擇文本然後保存它

00:29:00.440 --> 00:29:02.776
我又去修改
我擴展的Info.plist代碼

00:29:03.010 --> 00:29:06.246
然後添加了
SFSafariContextMenu

00:29:07.414 --> 00:29:12.019
這是一個字典數組
保存了兩個不同的鍵值對

00:29:12.553 --> 00:29:14.555
文本和命令

00:29:16.190 --> 00:29:20.594
然後當用戶按下或者
點擊你的上下文菜單項的時候

00:29:21.395 --> 00:29:24.198
Safari會發送
contextMenuItemSelected對象

00:29:24.565 --> 00:29:25.832
給我們的principal對象

00:29:27.835 --> 00:29:31.371
請注意我們也在同時發送
userInfo信息

00:29:32.039 --> 00:29:35.442
這可以簡單代表任何額外信息

00:29:35.509 --> 00:29:38.946
你可能希望包括進你注入的腳本

00:29:39.446 --> 00:29:45.319
比如在我的例子裏 我希望
一同發送selectedText值

00:29:45.519 --> 00:29:49.890
因此在我的注入腳本里 我添加了
上下文菜單的事件監聽器

00:29:50.791 --> 00:29:56.129
然後在方法裏我調用
setContextMenuEventUserInfo方法

00:29:56.196 --> 00:29:58.098
Safari擴展對象上

00:29:59.299 --> 00:30:03.070
注意 我實際上一同
發送了selectedText

00:30:04.304 --> 00:30:09.376
好 我很興奮地給大家演示macOS
應用如何擴展到Safari

00:30:09.843 --> 00:30:11.044
我們開始

00:30:15.949 --> 00:30:17.751
在我展示代碼前

00:30:17.818 --> 00:30:20.487
這是簡易的macOS應用

00:30:20.554 --> 00:30:22.623
你可以看到我只有兩個便籤

00:30:22.990 --> 00:30:26.593
我可以在這插入我的便籤
刪除上一個便籤等

00:30:27.361 --> 00:30:29.029
我們轉到Xcode

00:30:29.096 --> 00:30:31.164
我要給大家看的是三個不同的東西

00:30:31.932 --> 00:30:34.001
第一個是Info.plist

00:30:35.836 --> 00:30:40.774
請注意我在此處添加上下文菜單項

00:30:41.441 --> 00:30:43.410
這是我的文本和命令

00:30:44.311 --> 00:30:46.213
我也添加了我的工具欄項

00:30:46.446 --> 00:30:50.617
現在我有了不同的四個字段

00:30:51.051 --> 00:30:54.488
你們可以看到我在使用PDF文件

00:30:55.656 --> 00:30:59.927
第二件 我要展示給你看的是
我的principal對象

00:31:02.462 --> 00:31:04.865
讓我把它做成那樣

00:31:05.332 --> 00:31:09.636
我已重載了principal對象
的兩個不同方法

00:31:09.803 --> 00:31:11.738
第一個方法是
popoverViewController

00:31:12.172 --> 00:31:15.375
這個方法可以返回
我的視圖控制器

00:31:15.642 --> 00:31:19.646
代表了彈出框增加
和移走的視圖

00:31:20.214 --> 00:31:21.048
第二個是

00:31:21.114 --> 00:31:23.283
contextMenuItem
Selected(withCommand方法

00:31:24.051 --> 00:31:26.820
你看到
我從這裏獲取我的userInfo

00:31:27.955 --> 00:31:31.925
可以在這裏分配便籤

00:31:32.693 --> 00:31:36.864
第三個我要展示的是
我怎麼複用

00:31:36.930 --> 00:31:41.702
和分享
macOS應用和我的擴展間的代碼

00:31:42.803 --> 00:31:45.372
當然通常你們
不會使用簡單的文件

00:31:45.439 --> 00:31:48.642
你們使用會帶來啓發的框架

00:31:49.443 --> 00:31:51.178
這是我的便籤管理器

00:31:51.612 --> 00:31:55.716
它會讀取和
保存用戶的默認設置

00:31:55.983 --> 00:31:57.417
它有一些簡單的方法

00:31:57.484 --> 00:32:00.821
比如removeAllNotes
removeLastNote等等

00:32:01.455 --> 00:32:04.591
請注意我的目標設定是

00:32:04.658 --> 00:32:10.397
我的筆記本應用可以設置所有的目標
即macOS應用和擴展程序

00:32:11.932 --> 00:32:17.371
好了 我們來到Safari

00:32:17.771 --> 00:32:22.342
可以看到 我的擴展就在
智能檢索字段的旁邊

00:32:23.410 --> 00:32:27.681
我可以單擊它 然後
我最近的便籤就會顯示出來

00:32:28.081 --> 00:32:32.119
讓我帶上筆記本應用

00:32:33.020 --> 00:32:33.854
對比下

00:32:34.288 --> 00:32:39.560
比如我在瀏覽博客的一些帖子

00:32:41.628 --> 00:32:43.030
我們選這個

00:32:43.430 --> 00:32:47.868
我們打算要將便籤保存下來

00:32:47.935 --> 00:32:49.703
所以我選擇了這個

00:32:50.904 --> 00:32:54.441
我命令 CTL點擊它

00:32:54.942 --> 00:32:57.644
然後我添加片段到筆記本上

00:32:58.445 --> 00:33:03.917
你看到了
我的便籤也添加到這裏了

00:33:05.552 --> 00:33:09.122
我可以打開擴展
就在這裏

00:33:09.489 --> 00:33:11.558
我現在要修改它

00:33:11.859 --> 00:33:16.029
因爲假設我不想要最後一個句子

00:33:16.129 --> 00:33:20.234
我只要簡單一刪
點擊修改 瞧

00:33:20.400 --> 00:33:22.069
在macOS應用裏也反應出來了

00:33:22.469 --> 00:33:26.373
因此 分析代碼就這麼簡單

00:33:26.440 --> 00:33:29.810
在你的macOS應用和擴展之間

00:33:33.780 --> 00:33:36.216
我演示給大家看
怎麼添加一個按鈕

00:33:36.383 --> 00:33:41.188
我給你們看了怎麼顯示彈出框
然後添加多個上下文菜單項

00:33:42.589 --> 00:33:44.291
我現在要把講臺交給Brian

00:33:54.301 --> 00:33:55.135
感謝Damian

00:33:55.769 --> 00:33:57.571
除了把遙控器落在這了

00:33:59.306 --> 00:34:02.209
總結下 今天我們展示了三種擴展

00:34:02.276 --> 00:34:04.745
都是基於新的擴展模型而成爲可能

00:34:05.512 --> 00:34:08.382
我們展示了把你的內容攔截器

00:34:08.482 --> 00:34:10.449
從iOS遷移到Mac是多簡單

00:34:10.516 --> 00:34:14.288
我們引入了新的API
獲取你的內容攔截器狀態

00:34:14.353 --> 00:34:15.989
也是我們對大家反饋的迴應

00:34:16.657 --> 00:34:19.525
同樣簡單的是把

00:34:19.592 --> 00:34:23.830
修改網頁內容的Chrome擴展遷移到Safari
並且使其

00:34:23.897 --> 00:34:26.766
在你的應用擴展裏
和原生Swift代碼通信

00:34:27.400 --> 00:34:30.838
最後我們看到了它強大的功能

00:34:30.904 --> 00:34:33.340
你的應用是如何直接影響Safari

00:34:34.341 --> 00:34:38.779
記住Safari app extension
都是基於app extensions的

00:34:39.079 --> 00:34:43.016
意思是可以利用
那些原生的技術和API

00:34:43.083 --> 00:34:47.454
擴展的代碼以及你的
JavaScript和CSS代碼

00:34:47.521 --> 00:34:49.822
用來修改和改善網頁

00:34:50.623 --> 00:34:54.795
因爲Safari app extensions
和Mac應用一起發佈

00:34:55.161 --> 00:34:58.498
爲你們的用戶提供了簡單的安裝體驗

00:34:58.565 --> 00:35:01.702
你可在 Mac App Store
銷售你的擴展了

00:35:02.703 --> 00:35:05.772
欲瞭解更多本場演講和有用鏈接的信息

00:35:05.973 --> 00:35:07.541
請訪問這個頁面

00:35:07.841 --> 00:35:10.344
Safari app extensions
是大勢所趨

00:35:10.410 --> 00:35:13.313
我們需要你們的幫助使它越來越完美

00:35:13.647 --> 00:35:17.784
若你們發現了任何漏洞或API缺陷
請向我們提供反饋

00:35:18.051 --> 00:35:20.687
在詳情頁面
你會發現有個鏈接

00:35:20.754 --> 00:35:24.157
可以留下反饋並且發郵件給
John Davis

00:35:24.224 --> 00:35:26.360
他是Safari和
WebKit佈道者

00:35:27.060 --> 00:35:28.495
相關的演講

00:35:28.562 --> 00:35:33.133
我推薦大家去找一下
往年的關於app extension的演講

00:35:34.368 --> 00:35:35.502
非常感謝