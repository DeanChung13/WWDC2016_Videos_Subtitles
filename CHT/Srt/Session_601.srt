00:00:20.187 --> 00:00:21.021
早上好

00:00:21.522 --> 00:00:23.757
歡迎各位出席
“用ReplayKit直播”

00:00:24.324 --> 00:00:26.026
在這次演講中
我們將告訴你關於

00:00:26.093 --> 00:00:28.529
我們加入到這個框架中的所有新特性

00:00:28.996 --> 00:00:30.063
我是Ben Harry

00:00:30.130 --> 00:00:32.999
Apple遊戲技術組的軟件工程師

00:00:33.400 --> 00:00:35.802
稍後你們會聽到
Edwin Iskander的演講

00:00:37.137 --> 00:00:39.773
現在我們知道人們喜歡錄製他們
的遊戲

00:00:40.073 --> 00:00:42.042
並在社交媒體上分享那些錄像

00:00:43.210 --> 00:00:45.379
ReplayKit給
我們的用戶提供這些功能

00:00:45.546 --> 00:00:47.915
而只需要你 開發者 做很少量的
工作

00:00:49.716 --> 00:00:50.918
今天的開始

00:00:50.984 --> 00:00:51.985
我會花幾分鐘

00:00:52.052 --> 00:00:55.122
談談ReplayKit已提供的功能

00:00:57.691 --> 00:01:01.195
ReplayKit提供錄製應用的
音頻和視覺內容的功能

00:01:01.828 --> 00:01:04.397
此外你可以啓用麥克風錄製

00:01:05.032 --> 00:01:08.902
通過這樣做 你的用戶在玩遊戲時
可以提供聲音說明

00:01:09.369 --> 00:01:10.904
當用戶完成了一個錄像

00:01:11.371 --> 00:01:13.607
他們可以在遊戲中分享錄像

00:01:13.674 --> 00:01:15.008
通過系統共享表

00:01:16.643 --> 00:01:19.580
ReplayKit有一個簡單API
你今天會看到它

00:01:19.980 --> 00:01:23.450
將這些功能加入你的遊戲
需要少量的代碼

00:01:25.285 --> 00:01:28.689
以後ReplayKit將產生
HD質量的視頻

00:01:29.022 --> 00:01:31.191
並且對遊戲性能的影響很小

00:01:31.325 --> 00:01:34.461
並且從設備電池中使用最少的電量

00:01:35.929 --> 00:01:39.566
在Apple 用戶隱私對我們很重要

00:01:40.200 --> 00:01:42.436
所以我們實現了一些隱私保護措施

00:01:42.703 --> 00:01:46.373
比如我們在用戶開始錄製前會
顯示一個提示

00:01:46.907 --> 00:01:50.043
用戶可以在錄製他們的遊戲前
給予許可

00:01:50.844 --> 00:01:51.678
而且

00:01:52.179 --> 00:01:55.182
錄製會排除系統UI
包括通知

00:01:55.782 --> 00:01:56.617
所以

00:01:56.817 --> 00:01:59.186
當你在玩遊戲時收到文字消息時

00:01:59.253 --> 00:02:01.054
這條消息不會被錄下來

00:02:03.190 --> 00:02:06.460
最後 ReplayKit
在iOS 9中可用

00:02:07.160 --> 00:02:10.364
這是一個ReplayKit目前的
特性的列表

00:02:11.031 --> 00:02:13.367
現在我會花一些時間

00:02:13.433 --> 00:02:16.503
來列舉ReplayKit框架中
加入的新特性

00:02:17.704 --> 00:02:20.507
首先 我們把ReplayKit
支持帶到了Apple TV

00:02:21.308 --> 00:02:23.877
所以現在
你可以錄製你的遊戲

00:02:23.944 --> 00:02:26.246
並且直接分享它
從你的tvOS遊戲中

00:02:27.114 --> 00:02:29.716
下一個我們加入的新特性是直播

00:02:30.217 --> 00:02:33.554
現在用戶可以廣播遊戲

00:02:33.620 --> 00:02:36.323
實時地發送給第三方廣播服務

00:02:37.457 --> 00:02:39.059
第三個也是最後一個特性

00:02:39.426 --> 00:02:42.396
我們增加了錄製FaceTime
攝像頭的支持

00:02:43.263 --> 00:02:47.134
此外 我們增強了麥克風錄製API

00:02:49.570 --> 00:02:51.772
所以當我進入ReplayKit
和Apple TV之前

00:02:51.839 --> 00:02:54.708
我會給你一個ReplayKit
結構的概覽

00:02:55.475 --> 00:02:56.877
我想向你們展示你們的應用如何

00:02:56.944 --> 00:02:59.813
使用這個框架來和操作系統互動

00:02:59.880 --> 00:03:00.981
來創建錄像

00:03:03.684 --> 00:03:05.152
所以這裏我們有你的應用

00:03:05.552 --> 00:03:07.721
你的應用通知操作系統

00:03:07.788 --> 00:03:09.256
它什麼時候想要開始錄製

00:03:10.324 --> 00:03:13.193
所以ReplayKit提供
RPScreenRecorder類

00:03:13.560 --> 00:03:15.529
你會告訴這個類開始錄製

00:03:16.330 --> 00:03:19.066
這時
一條消息被髮送給重播守護進程

00:03:19.499 --> 00:03:22.202
重播守護進程會開始寫入你應用的數據

00:03:22.703 --> 00:03:24.037
到一個電影文件

00:03:25.939 --> 00:03:28.475
當你告訴RPScreenRecorder停止錄像

00:03:28.842 --> 00:03:31.512
重播守護進程會結束你的電影

00:03:32.246 --> 00:03:34.081
現在我們在系統裏有一個電影

00:03:34.248 --> 00:03:37.050
現在這個電影需要回到你的應用

00:03:37.117 --> 00:03:41.455
這樣用戶可以預覽他們剛完成的
錄製

00:03:42.022 --> 00:03:42.856
要這麼做

00:03:43.724 --> 00:03:46.360
我們提供RPpreviewViewController

00:03:46.927 --> 00:03:48.996
你在遊戲中使用這個視圖控制器

00:03:49.396 --> 00:03:51.899
這樣用戶有一個界面來預覽

00:03:51.965 --> 00:03:54.902
他們可以編輯和分享剛完成的視頻

00:03:57.938 --> 00:04:00.874
就像我們剛剛看到的 我們有
RPScreenRecorder類

00:04:01.074 --> 00:04:04.778
你會用這個類來開始 停止和拋棄錄製

00:04:05.312 --> 00:04:08.782
你還會用它來檢查
是否能在這臺設備上錄像

00:04:09.716 --> 00:04:12.152
RPScreenRecorder
有一個代理屬性

00:04:12.219 --> 00:04:15.856
當能否在設備上錄像發生改變時
會通知你

00:04:16.523 --> 00:04:19.927
它也會在因爲錯誤停止錄製時通知你

00:04:21.928 --> 00:04:24.631
第二個類是RPPreviewController

00:04:24.998 --> 00:04:27.000
這個視圖控制器出現在你的遊戲中

00:04:27.167 --> 00:04:30.804
使你的用戶能夠預覽錄像

00:04:30.871 --> 00:04:32.773
在iOS上編輯和剪接錄像

00:04:33.240 --> 00:04:35.676
直接從遊戲裏分享錄像

00:04:36.643 --> 00:04:38.612
這個類還有委託方法

00:04:38.812 --> 00:04:41.181
它們會讓你知道什麼時候用戶完成了

00:04:41.248 --> 00:04:42.716
在預覽用戶界面中完成了

00:04:44.518 --> 00:04:47.387
這就是你要使用的

00:04:47.454 --> 00:04:51.024
用來在iOS和tvOS上
錄製和分享內容的結構和類

00:04:51.658 --> 00:04:53.961
現在讓我來到ReplayKit和Apple TV

00:04:54.394 --> 00:04:56.396
我會從一個演示開始

00:05:06.073 --> 00:05:08.175
我有一個遊戲叫做狐狸

00:05:08.242 --> 00:05:12.412
狐狸是爲2015年的 WWDC
開發的它是用SceneKit開發的

00:05:13.614 --> 00:05:14.748
你可能認出它了

00:05:14.815 --> 00:05:17.684
因爲在我們的開發者網站上它被
做爲代碼的例子

00:05:18.285 --> 00:05:19.953
目標是在這關走動

00:05:20.020 --> 00:05:22.022
收集這些花像我剛剛得到的這朵

00:05:22.723 --> 00:05:25.459
我會走過這一關並收集花

00:05:25.526 --> 00:05:27.594
這關有三朵花並且我得到了第一朵

00:05:28.128 --> 00:05:30.564
你可以在路上選擇性的收集這些珍珠

00:05:31.031 --> 00:05:33.400
但是我會把注意力集中在花上
我得到了兩朵

00:05:33.867 --> 00:05:36.770
我知道第三朵花在頂部的中間

00:05:36.837 --> 00:05:38.005
在這塊石頭上

00:05:40.507 --> 00:05:42.709
所以在此我要打開

00:05:42.776 --> 00:05:44.978
我要打開遊戲菜單

00:05:45.979 --> 00:05:48.715
我想要錄製它 前面有一個障礙

00:05:48.782 --> 00:05:51.018
我上週練習了很多

00:05:51.318 --> 00:05:54.054
所以我想要把這和我的朋友分享
來向他們表明

00:05:54.488 --> 00:05:56.523
現在大部分時間我都可以穿過這個障礙

00:05:57.357 --> 00:05:58.892
我要開始我的錄製

00:05:58.959 --> 00:06:01.061
這是我提過的同意提示

00:06:01.862 --> 00:06:03.330
我會給許可

00:06:04.631 --> 00:06:05.766
所以我現在在錄製

00:06:06.867 --> 00:06:09.469
請注意在屏幕頂端的錄製指示器

00:06:10.838 --> 00:06:12.906
這表明錄製正在進行

00:06:12.973 --> 00:06:14.274
好的 我穿過了火

00:06:14.775 --> 00:06:16.910
現在我要做的就是走到終點

00:06:17.244 --> 00:06:18.478
來得到最後一朵花

00:06:19.613 --> 00:06:20.714
這樣我就能結束這關

00:06:21.148 --> 00:06:22.916
並且結束錄製

00:06:26.720 --> 00:06:27.588
就是這些了

00:06:28.388 --> 00:06:29.756
我要停止錄製

00:06:30.390 --> 00:06:32.559
一旦停止了 我可以選擇

00:06:32.626 --> 00:06:35.963
預覽或分享我剛錄製的視頻
所以我要開始預覽

00:06:36.997 --> 00:06:38.365
所以我們有一個視頻播放

00:06:38.432 --> 00:06:40.934
我們有一個進度條可以用來向前向後跳

00:06:41.535 --> 00:06:43.070
我要開始播放它

00:06:44.872 --> 00:06:48.041
請注意錄製指示器不會出現在錄像中

00:06:48.208 --> 00:06:50.711
我等會會向你們展示這是如何完成的

00:06:51.545 --> 00:06:54.147
我有一個視頻 我對它感到滿意

00:06:54.781 --> 00:06:55.849
所以想要分享它

00:06:56.650 --> 00:06:58.385
我會來到這選擇分享

00:07:00.153 --> 00:07:02.422
我們會看到一個AirDrop界面

00:07:03.056 --> 00:07:04.324
我會拿到我的手機

00:07:08.562 --> 00:07:09.863
我會選擇我的手機

00:07:15.202 --> 00:07:19.540
當我在手機上接受這個文件

00:07:19.606 --> 00:07:20.774
文件被傳輸了

00:07:21.074 --> 00:07:23.277
一旦它在我的手機上

00:07:23.343 --> 00:07:24.711
我可以預覽視頻

00:07:25.012 --> 00:07:27.447
如果我想我可以編輯和剪接視頻

00:07:27.514 --> 00:07:30.217
我可把它分享到最喜歡的社交媒體網站

00:07:36.290 --> 00:07:38.926
這就是ReplayKit在
Apple TV上看起來的樣子

00:07:39.826 --> 00:07:41.395
我現在想花一點時間

00:07:41.461 --> 00:07:43.730
來強調這個演示裏的4個主要重點

00:07:44.464 --> 00:07:46.133
然後我會向你們展示代碼

00:07:46.200 --> 00:07:48.836
和那些重點對應的代碼

00:07:49.303 --> 00:07:51.371
讓我開始 我會有遊戲中的菜單

00:07:51.438 --> 00:07:52.773
在這我可以開始錄製

00:07:54.474 --> 00:07:57.544
然後我們繼續玩遊戲
屏幕上會有錄製指示器

00:07:59.213 --> 00:08:01.548
回到遊戲菜單來停止錄製

00:08:02.516 --> 00:08:04.551
當我停止錄製時 我有不同的選項

00:08:04.618 --> 00:08:07.321
預覽或者分享錄製的視頻

00:08:08.488 --> 00:08:10.090
我會瀏覽它們每一個

00:08:10.157 --> 00:08:12.092
並向你們展示相應的代碼

00:08:12.593 --> 00:08:14.027
讓我們從開始錄製開始

00:08:14.828 --> 00:08:16.697
當我按下開始錄製按鈕

00:08:16.763 --> 00:08:20.267
首先我要獲得共享的
RPScreeningRecorder實例

00:08:21.401 --> 00:08:23.637
我簡單地告訴它開始錄製

00:08:24.037 --> 00:08:26.907
一旦我在錄製
我們顯示指示器視圖

00:08:29.676 --> 00:08:31.211
像我在視頻中提到的

00:08:31.278 --> 00:08:33.447
指示器不會包含在錄像中

00:08:33.714 --> 00:08:37.484
這是因爲ReplayKit
只會錄製應用的主窗口

00:08:37.784 --> 00:08:38.652
所以

00:08:38.919 --> 00:08:40.921
我會新建一個UI窗口

00:08:42.289 --> 00:08:43.190
這個指示器視圖

00:08:43.256 --> 00:08:45.993
創建這個指示器視圖是你的責任

00:08:46.360 --> 00:08:49.263
這是因爲你可使它和你的遊戲樣式匹配

00:08:49.329 --> 00:08:50.397
一個指示器視圖

00:08:50.464 --> 00:08:53.133
我會初始化一個指示器視圖的實例

00:08:53.200 --> 00:08:56.036
並簡單地把它做爲一個子視圖
加到我創建的主窗口中

00:08:56.103 --> 00:08:58.138
在我上面創建的窗口

00:08:58.572 --> 00:09:00.374
現在指示器視圖出現在屏幕上

00:09:01.175 --> 00:09:02.442
我們知道我們在錄製

00:09:03.644 --> 00:09:04.845
當我們完成了錄製

00:09:05.445 --> 00:09:06.880
我們按下停止錄製按鈕

00:09:07.447 --> 00:09:10.584
再一次 我要獲得共享的
RPScreenRecorder實例

00:09:11.552 --> 00:09:13.954
現在注意我們返回預覽視圖控制器

00:09:14.021 --> 00:09:17.324
是我早前提過的
RPPreviewController類

00:09:18.625 --> 00:09:20.227
我要隱藏我的指示器視圖

00:09:20.827 --> 00:09:23.063
在這有一個重要的地方是保留一個引用

00:09:23.130 --> 00:09:24.665
預覽視圖控制器的引用

00:09:25.132 --> 00:09:27.467
因爲我們會用它來顯示下一步

00:09:27.534 --> 00:09:29.903
用來預覽或分享視頻

00:09:30.904 --> 00:09:32.606
最後我會設置代表

00:09:34.775 --> 00:09:36.944
這樣我們看到我們有一個預覽控制器

00:09:37.010 --> 00:09:39.880
但是我們有兩個界面
一個用來預覽 一個用來分享

00:09:41.181 --> 00:09:43.750
在Apple TV中
我們引入了一個新的模式屬性

00:09:44.852 --> 00:09:47.855
當我們想要預覽時
我們簡單地把模式設置成預覽

00:09:47.921 --> 00:09:49.656
然後顯示一個視圖控制器

00:09:51.191 --> 00:09:52.593
類似的 要分享

00:09:53.327 --> 00:09:54.761
我們有模式屬性

00:09:55.128 --> 00:09:57.798
我們要把模式設置成分享

00:09:57.865 --> 00:09:59.600
再一次顯示視圖控制器

00:09:59.900 --> 00:10:02.236
現在我們會顯示AirDrop界面

00:10:04.872 --> 00:10:07.641
在兩種情況下 當用戶完成了每個界面

00:10:07.708 --> 00:10:09.743
我們有委託方法會被調用

00:10:10.010 --> 00:10:11.645
預覽控制器結束

00:10:12.679 --> 00:10:15.015
很重要的一點是它會被調用時
你剛好——

00:10:15.082 --> 00:10:16.783
你讓預覽控制器離開

00:10:16.850 --> 00:10:19.319
因爲你的應用需要負責顯示它

00:10:21.588 --> 00:10:22.589
最後

00:10:22.656 --> 00:10:25.859
當你完成了錄製而且我們知道
我們不再需要它

00:10:25.926 --> 00:10:28.095
一個好的慣例是刪除錄像

00:10:28.395 --> 00:10:31.431
現在ReplayKit
會自動刪除之前的錄像

00:10:31.498 --> 00:10:32.900
當新的錄像開始時

00:10:33.500 --> 00:10:36.303
這是因爲一次一個應用只允許一個錄像

00:10:37.337 --> 00:10:39.673
你也可以明確的刪除這個錄像

00:10:39.740 --> 00:10:41.975
當你知道預覽不可用

00:10:42.276 --> 00:10:44.144
比如 可能在這關的最後

00:10:44.211 --> 00:10:46.880
沒有機會顯示預覽

00:10:47.281 --> 00:10:49.149
這樣你就可以明確地刪除它

00:10:49.216 --> 00:10:51.985
通過調用RPScreenRecorder的
刪除錄像方法

00:10:54.254 --> 00:10:55.856
在最後這幾張幻燈片中

00:10:55.923 --> 00:10:58.125
我向你們展示了需要的代碼量

00:10:58.192 --> 00:11:00.894
來把這些功能加入你的tvOS遊戲

00:11:01.828 --> 00:11:04.731
我鼓勵你們都把ReplayKit
添加到你們的tvOS應用中

00:11:04.998 --> 00:11:07.501
也添加到iOS應用中
如果你們還沒有這麼做

00:11:10.671 --> 00:11:13.473
我們花點時間總結ReplayKit
和Apple TV

00:11:14.374 --> 00:11:15.876
現在有了ReplayKit
和Apple TV

00:11:15.943 --> 00:11:18.745
你可以錄製應用的音頻和視頻內容

00:11:19.980 --> 00:11:23.483
在Apple TV中
麥克風被系統保留了

00:11:23.917 --> 00:11:27.054
所以你不能在這個平臺上提供語音說明

00:11:27.788 --> 00:11:30.257
但是你可以允許用戶預覽視頻

00:11:30.324 --> 00:11:32.860
而且直接在遊戲中分享視頻

00:11:34.962 --> 00:11:37.064
如你所見 我們有一個很簡單的API

00:11:37.130 --> 00:11:40.400
其實這和我們提供給
iOS的API是相同的

00:11:41.268 --> 00:11:45.405
現在所有提供給Apple TV的
這些特性將在tvOS 10中可用

00:11:47.107 --> 00:11:48.942
這就是ReplayKit
和Apple TV

00:11:49.409 --> 00:11:52.045
現在是時間來到我們的第二個新特性

00:11:52.112 --> 00:11:54.448
我個人對它感到很興奮

00:11:55.048 --> 00:11:58.252
現在請歡迎
Edwin Iskandar上臺

00:12:02.523 --> 00:12:03.624
好的謝謝大家

00:12:05.559 --> 00:12:06.527
嘿你們好嗎？

00:12:06.593 --> 00:12:08.996
我是Edwin Iskandar
軟件工程師

00:12:09.062 --> 00:12:11.064
在Apple的遊戲技術組

00:12:11.331 --> 00:12:13.433
和Ben一樣我也非常高興

00:12:13.500 --> 00:12:15.369
和你們談論我們的下一個特性

00:12:15.769 --> 00:12:16.737
直播

00:12:18.672 --> 00:12:19.740
有了直播

00:12:19.806 --> 00:12:23.644
玩家可以廣播他們的遊戲到第三方服務

00:12:23.710 --> 00:12:26.513
直接從他們的iOS或tvOS設備

00:12:27.381 --> 00:12:28.615
這很令人興奮

00:12:28.682 --> 00:12:31.018
因爲這第一次成爲可能

00:12:31.084 --> 00:12:32.553
無需額外的硬件

00:12:32.886 --> 00:12:34.188
或者第三方SDK

00:12:35.622 --> 00:12:37.124
允許用戶利用

00:12:37.191 --> 00:12:40.627
他們的設備的強大的FaceTime
攝像頭和麥克風

00:12:40.694 --> 00:12:42.796
來提供實時的豐富的說明

00:12:43.864 --> 00:12:45.866
最後我們所做的一切都是安全的

00:12:45.933 --> 00:12:49.603
保證所有的音頻和視頻都只有
系統

00:12:50.270 --> 00:12:51.471
以及廣播服務可以訪問

00:12:52.973 --> 00:12:54.441
那麼它是怎麼工作的

00:12:54.508 --> 00:12:57.578
我們和Flaregames
一起實現了廣播功能

00:12:57.644 --> 00:12:59.847
及他們的旗艦遊戲
Olympus Rising

00:13:00.347 --> 00:13:02.749
它現是app store中
一個很棒的遊戲

00:13:03.450 --> 00:13:07.087
它獨特的混合了
策略 RPG和動作元素

00:13:08.322 --> 00:13:10.390
現在我們有一個遊戲作爲廣播源

00:13:10.724 --> 00:13:12.693
我們還需要廣播目標

00:13:13.794 --> 00:13:15.963
所以我們還和
Mob Crush一起工作

00:13:16.029 --> 00:13:18.632
它是一個特別針對移動遊戲的廣播服務

00:13:19.867 --> 00:13:22.970
所以現在我們有了一個遊戲和
一個服務 我們準備好開始了

00:13:23.237 --> 00:13:24.471
讓我們看看在運行的它們

00:13:26.006 --> 00:13:27.941
在Olympus Rising中
Flare的開發者們

00:13:28.008 --> 00:13:30.978
實現了遊戲中的一個按鈕來開始廣播

00:13:31.578 --> 00:13:33.947
要開始廣播 用戶點擊這個按鈕

00:13:34.648 --> 00:13:36.583
然後顯示

00:13:36.650 --> 00:13:38.719
他們已經在設備上安裝好的廣播服務

00:13:39.019 --> 00:13:42.022
在這個例子中
用戶安裝了Mob Crush應用

00:13:42.256 --> 00:13:43.357
所以它出現在該列表中

00:13:45.225 --> 00:13:47.494
在這時用戶點擊
Mob Crush圖標

00:13:47.928 --> 00:13:50.864
他們接着看到Mob Crush
用來設置廣播的UI

00:13:52.366 --> 00:13:55.135
用戶繼續添加一個標題給這個廣播

00:13:56.170 --> 00:13:57.137
一旦完成了

00:13:57.204 --> 00:13:59.373
他們簡單的按開始廣播按鈕

00:14:00.541 --> 00:14:03.477
會回到遊戲並顯示一個倒計時

00:14:03.544 --> 00:14:04.978
所以用戶可以預備

00:14:05.412 --> 00:14:06.380
並且最後開始直播

00:14:08.315 --> 00:14:10.717
現在他們在直播
當用戶遊玩時

00:14:10.784 --> 00:14:13.520
視頻和音頻數據會流入廣播服務

00:14:13.820 --> 00:14:16.523
全球觀衆可以啓動
Mob Crush應用

00:14:16.590 --> 00:14:19.960
從他們的設備並且幾乎實時地觀看遊戲

00:14:20.494 --> 00:14:21.662
在Mob Crush應用中

00:14:21.728 --> 00:14:24.398
觀衆還可以在觀看的同時討論遊戲

00:14:24.464 --> 00:14:28.068
更酷的是廣播者甚至可以馬上收到通知

00:14:28.135 --> 00:14:29.870
當這發生時 當玩他們的遊戲時

00:14:30.904 --> 00:14:32.005
就像在體育中

00:14:32.072 --> 00:14:35.108
看一些直播的事件會有一些很特別的事

00:14:35.809 --> 00:14:40.581
現在iOS和tvOS遊戲原生
有這些功能

00:14:43.951 --> 00:14:45.686
我們現在已經看過了整個流程

00:14:45.853 --> 00:14:47.020
做爲一個遊戲開發者

00:14:47.087 --> 00:14:49.790
你可能想知道怎麼在你的遊戲中
實現這些？

00:14:51.225 --> 00:14:52.826
這是分解了的玩家流程

00:14:53.126 --> 00:14:54.962
如你所見 有很多步

00:14:55.429 --> 00:14:56.630
初始化廣播

00:14:57.564 --> 00:14:58.999
選擇一個廣播服務

00:14:59.333 --> 00:15:00.501
設置這個廣播

00:15:02.803 --> 00:15:04.538
開始和停止廣播

00:15:04.872 --> 00:15:06.773
標明一個廣播正在進行中

00:15:07.207 --> 00:15:10.310
上傳視頻和音頻數據到後臺服務器

00:15:10.711 --> 00:15:12.813
這最初看起來可能讓人望而卻步

00:15:12.880 --> 00:15:14.982
但是對遊戲開發者的好消息是

00:15:15.048 --> 00:15:18.452
其中的三步被ReplayKit
和廣播服務處理

00:15:24.958 --> 00:15:27.327
所以讓我們看看每一步的代碼

00:15:27.694 --> 00:15:29.963
要用程序初始化一次廣播

00:15:30.030 --> 00:15:33.400
我們用一個新的類名叫RP
BroadcastActivityViewController

00:15:33.467 --> 00:15:35.569
且調用它的載入方法
來獲得它的一個實例

00:15:36.236 --> 00:15:39.439
然後我們簡單地顯示它
就像其他UI視圖控制器一樣

00:15:40.040 --> 00:15:42.809
會給用戶顯示一個廣播服務的列表

00:15:42.876 --> 00:15:45.345
最終允許用戶建立廣播

00:15:46.213 --> 00:15:47.548
在我們開始做這些前

00:15:47.614 --> 00:15:50.450
我們還設置
ActivityViewController委託方法

00:15:51.285 --> 00:15:53.820
因爲我們想要當設置完成時收到通知

00:15:55.722 --> 00:15:58.492
在這時 用戶可以選擇要廣播到的服務

00:15:58.825 --> 00:16:00.093
建立廣播

00:16:00.460 --> 00:16:01.828
一旦你完成了設置

00:16:02.095 --> 00:16:04.698
活動視圖控制器的委託方法就被觸發

00:16:05.232 --> 00:16:08.802
這個委託方法被另一個新類提供

00:16:08.869 --> 00:16:10.470
RPBroadcastController

00:16:10.537 --> 00:16:12.306
它允許我們開始廣播

00:16:12.940 --> 00:16:15.375
但是在我們這麼做之前 我們還希望

00:16:15.943 --> 00:16:19.546
拋棄ActivityViewController
因爲是我們顯示了它

00:16:20.214 --> 00:16:22.049
開始在遊戲中顯示倒計時

00:16:22.616 --> 00:16:24.184
當倒計時結束

00:16:24.918 --> 00:16:28.355
我們最終開始廣播
通過調用開始廣播

00:16:28.422 --> 00:16:32.359
在新的RPBroadcastController
被傳入的實例

00:16:34.294 --> 00:16:35.128
現在我們在直播了

00:16:35.529 --> 00:16:37.130
因爲我們在直播

00:16:37.264 --> 00:16:39.233
我們需要清楚地向用戶指明這點

00:16:39.933 --> 00:16:41.969
Olympus Rising
在這點上做得很好

00:16:42.035 --> 00:16:43.637
通過給廣播按鈕加動畫效果

00:16:44.538 --> 00:16:46.607
因爲這個遊戲有很複雜的操作

00:16:46.673 --> 00:16:50.310
他們重用按鈕UI
來指示正在進行的廣播

00:16:50.611 --> 00:16:52.412
來最大化可用的屏幕空間

00:16:53.447 --> 00:16:57.150
一些需要注意的事是指示器是
廣播過程中嚴格要求的

00:16:57.217 --> 00:16:58.986
會在應用審覈時強制實行

00:17:00.287 --> 00:17:01.755
在你把它加入遊戲前

00:17:02.723 --> 00:17:05.392
所以用程序檢查是否在進行廣播

00:17:05.459 --> 00:17:08.929
簡單地查詢broadcastController
的isBroadcasting屬性

00:17:09.396 --> 00:17:11.397
你可以使用這個屬性的值

00:17:11.464 --> 00:17:14.334
來開始或停止你的指示UI動畫

00:17:16.869 --> 00:17:20.174
要允許用戶結束廣播
Flare的開發者實現了

00:17:20.240 --> 00:17:23.844
一個彈出式UI來顯示一個包含
停止按鈕的子菜單

00:17:24.678 --> 00:17:26.579
當用戶按下停止按鈕

00:17:27.146 --> 00:17:30.417
我們簡單地在控制器上調用
結束廣播

00:17:31.385 --> 00:17:34.021
當廣播結束時 我們更新UI

00:17:35.088 --> 00:17:36.924
現在我們覆蓋了基本的流程

00:17:36.990 --> 00:17:39.860
讓我們看看更多細節 比如錯誤處理

00:17:41.862 --> 00:17:44.031
因爲這個功能有很多部分

00:17:44.097 --> 00:17:45.966
有可能事情出錯

00:17:46.266 --> 00:17:48.268
所以優美的處理它很重要

00:17:49.002 --> 00:17:51.605
讓我們看看在廣播中我們怎麼做

00:17:52.773 --> 00:17:55.943
要處理錯誤 簡單地在廣播控制器中
設置代表

00:17:57.411 --> 00:18:00.881
一旦設定好 你的代表會有
它的didFinishWithError方法

00:18:00.948 --> 00:18:02.316
當錯誤發生時被調用

00:18:02.983 --> 00:18:04.184
當這被觸發時

00:18:04.251 --> 00:18:07.354
你應該讓用戶知道它並且
對UI做任何需要的更新

00:18:09.456 --> 00:18:12.159
現在另一個細節要考慮是當用戶
把應用放入後臺

00:18:12.226 --> 00:18:14.862
或者應用在廣播過程中被打斷了

00:18:14.928 --> 00:18:16.730
比如說接到來電

00:18:17.698 --> 00:18:19.499
應用進入後臺

00:18:19.566 --> 00:18:22.169
ReplayKit會自動暫停廣播

00:18:23.170 --> 00:18:25.105
在這個例子中 當應用

00:18:25.172 --> 00:18:27.508
被重新激活並回到前臺

00:18:27.574 --> 00:18:30.677
我們提示用戶並詢問他們
是否想要繼續廣播

00:18:31.078 --> 00:18:32.412
如果用戶想要繼續

00:18:32.913 --> 00:18:34.915
調用繼續廣播的方法

00:18:35.215 --> 00:18:38.185
如果他們不想繼續
調用結束廣播的方法

00:18:39.653 --> 00:18:40.754
這樣就行了

00:18:40.821 --> 00:18:43.223
對這整個流程 遊戲開發者需要

00:18:43.290 --> 00:18:45.659
和兩個類及它們的代表互動

00:18:45.726 --> 00:18:49.296
RPBroadcastActivityView
Controller代表廣播服務

00:18:49.363 --> 00:18:51.031
允許用戶建立一個廣播

00:18:51.565 --> 00:18:56.236
RPBroadcastController用來開始
暫停 繼續和結束一個廣播

00:18:57.137 --> 00:19:00.807
如你所見 把廣播添加到你的遊戲
中不能更容易了

00:19:00.874 --> 00:19:03.410
我催促你這麼做 因爲好處很大

00:19:04.011 --> 00:19:06.113
沒有更好的方法來傳播口碑

00:19:06.446 --> 00:19:07.948
增加玩家的參與

00:19:08.248 --> 00:19:10.517
甚至圍繞你的遊戲創建一個社區

00:19:12.953 --> 00:19:14.588
所以這些覆蓋了遊戲的實現

00:19:14.755 --> 00:19:17.858
但是關於玩家廣播去的
那些廣播服務呢？

00:19:17.958 --> 00:19:19.059
比如Mob Crush？

00:19:20.227 --> 00:19:23.697
讓我們花點時間簡短地談談這些
服務的職責是什麼

00:19:24.164 --> 00:19:27.367
對所有在座及在網上觀看的開發者們

00:19:27.434 --> 00:19:28.836
我想使它很清楚

00:19:28.902 --> 00:19:31.038
在下一部分討論的話題

00:19:31.104 --> 00:19:33.640
不是你要負責在你的遊戲中實現的

00:19:35.809 --> 00:19:37.444
讓我們回到那個流程圖

00:19:37.978 --> 00:19:41.281
我們看到玩家有責任開始一次廣播

00:19:41.882 --> 00:19:44.184
並控制什麼時候開始和結束廣播

00:19:44.785 --> 00:19:47.287
我們還看到用來選擇廣播的UI是

00:19:47.354 --> 00:19:50.757
ReplayKit的BroadcastActivity
ViewController負責

00:19:51.258 --> 00:19:53.160
這留給我們兩個任務

00:19:53.961 --> 00:19:55.095
建立廣播

00:19:55.963 --> 00:19:58.665
上傳視頻和音頻數據給後臺服務器

00:20:00.167 --> 00:20:02.503
使廣播服務能完成它們的步驟

00:20:02.569 --> 00:20:04.705
我們引入了一對新的應用擴展

00:20:04.771 --> 00:20:06.073
特別針對這個功能

00:20:07.574 --> 00:20:10.711
一個UI擴展允許用戶建立一個廣播

00:20:11.879 --> 00:20:13.780
一個非UI擴展爲了處理

00:20:13.847 --> 00:20:16.149
和上傳音頻和視頻數據

00:20:18.385 --> 00:20:20.387
對那些不熟悉擴展的人

00:20:20.621 --> 00:20:23.991
它們會嵌入你的母應用
並且是一種方法

00:20:24.057 --> 00:20:26.960
來擴展你的應用這樣你可以和
別的應用一起運行

00:20:28.161 --> 00:20:30.664
它們在一個來自你的母應用的
一個分開的進程中運行

00:20:30.864 --> 00:20:32.933
但是可以和你的母應用共享數據

00:20:32.999 --> 00:20:36.403
可以很方便地用來共享東西
比如授權數據

00:20:37.437 --> 00:20:39.039
一件要記住的事

00:20:39.173 --> 00:20:42.342
是和應用相比擴展的資源受限

00:20:42.709 --> 00:20:46.213
所以避免在它們中進行需要大量
資源的任務

00:20:47.447 --> 00:20:50.884
我們使得通過Xcode模板來建立
這些擴展變得難以置信的容易

00:20:51.685 --> 00:20:55.088
這些是iOS和tvOS中新的目標

00:20:56.623 --> 00:20:59.459
如果從這些模板中創建
擴展將會預先設置好

00:20:59.526 --> 00:21:02.796
所以他們會出現在廣播活動控制
列表中 你看到的那個

00:21:04.231 --> 00:21:06.400
讓我們看看這兩個新擴展

00:21:06.466 --> 00:21:08.468
一個廣播服務需要實現

00:21:08.769 --> 00:21:10.704
從廣播UI擴展開始

00:21:12.472 --> 00:21:14.842
UI擴展有一些關鍵職責

00:21:15.209 --> 00:21:17.544
它負責授權用戶

00:21:17.611 --> 00:21:20.047
並且提供註冊
如果用戶還沒有註冊

00:21:20.647 --> 00:21:23.016
理想地 這些都應該在擴展中完成

00:21:23.083 --> 00:21:25.319
這樣用戶體驗就沒有被打斷

00:21:25.919 --> 00:21:27.654
但是完全可以接受

00:21:27.721 --> 00:21:29.556
和母應用連接

00:21:29.623 --> 00:21:32.626
只要用戶有辦法回到遊戲

00:21:34.494 --> 00:21:36.797
在註冊過程中要求顯示給用戶

00:21:36.864 --> 00:21:38.699
使用這個服務的條款和條件

00:21:39.132 --> 00:21:42.536
並且可以接受或拒絕這些條款和條件

00:21:44.037 --> 00:21:45.105
我們早前看到

00:21:45.172 --> 00:21:47.441
UI擴展負責允許用戶

00:21:47.508 --> 00:21:49.843
設置他們的廣播
比如添加標題

00:21:50.878 --> 00:21:52.846
它還允許用戶

00:21:52.913 --> 00:21:56.450
通過社交媒體通知其他人
廣播將要開始

00:21:58.352 --> 00:22:01.121
其最終職責是通知ReplayKit

00:22:01.188 --> 00:22:02.789
以及最終這個遊戲

00:22:03.090 --> 00:22:04.758
廣播已經完成設置

00:22:07.227 --> 00:22:11.031
現在我們看過了UI擴展
讓我們轉到上傳擴展

00:22:11.732 --> 00:22:15.035
它負責接收和處理視頻和音頻數據

00:22:15.903 --> 00:22:18.071
並且上傳數據給後端服務器

00:22:19.373 --> 00:22:21.608
我們知道有很多實現

00:22:21.675 --> 00:22:24.378
關於數據處理和上傳到直播流

00:22:24.845 --> 00:22:27.181
所以我不會進入到

00:22:27.247 --> 00:22:28.215
這個會話中的特定實現

00:22:28.615 --> 00:22:29.449
反而

00:22:29.783 --> 00:22:31.151
如果你是廣播服務

00:22:31.251 --> 00:22:34.321
請聯繫我們 這樣我們可以直接
和你合作

00:22:34.888 --> 00:22:36.323
這樣我們可以實現一個方案

00:22:36.390 --> 00:22:38.792
將最好的體驗帶給我們的客戶

00:22:41.328 --> 00:22:42.930
回到我們的流程圖

00:22:43.230 --> 00:22:45.832
我們看過了廣播的建立和上傳

00:22:47.234 --> 00:22:49.336
我們已經看過了整個廣播流程

00:22:50.504 --> 00:22:53.373
而且我們清楚地劃分了職責給遊戲

00:22:54.274 --> 00:22:56.643
ReplayKit和廣播服務

00:22:58.145 --> 00:22:59.580
這就是直播的全部內容

00:23:00.214 --> 00:23:02.683
我們真的覺得這是一個
改變遊戲規則的功能

00:23:03.283 --> 00:23:04.985
你的玩家會愛上它

00:23:05.352 --> 00:23:07.554
對開發者 這會帶來一個新方式

00:23:07.621 --> 00:23:10.757
爲你的粉絲體驗你的遊戲
不僅僅是玩它們

00:23:10.824 --> 00:23:12.192
還可以觀看它們

00:23:14.595 --> 00:23:15.495
在我們結束前

00:23:15.562 --> 00:23:18.398
我想要以我們對API做的一些增強
做爲結尾

00:23:18.465 --> 00:23:20.234
關於iOS上的註釋

00:23:20.300 --> 00:23:22.369
也就是支持前置攝像頭

00:23:22.469 --> 00:23:24.638
和新的麥克風功能

00:23:26.206 --> 00:23:28.542
首先 我們加入了
FaceTime攝像頭支持

00:23:28.775 --> 00:23:31.612
使你可以方便添加
picture in picture

00:23:31.678 --> 00:23:33.113
視頻註釋到你的遊戲中

00:23:33.747 --> 00:23:35.349
玩家的反應是無價的

00:23:35.682 --> 00:23:38.852
永遠把這種獨特的風味添加到
錄像和廣播中

00:23:39.586 --> 00:23:41.388
要在Olympus Rising中
啓用它

00:23:41.455 --> 00:23:42.990
Flare開發者添加了一個按鈕

00:23:43.056 --> 00:23:44.758
在彈出菜單中切換攝像頭

00:23:45.459 --> 00:23:47.261
按這個按鈕啓用攝像頭

00:23:47.327 --> 00:23:48.962
在左上角顯示一個預覽

00:23:50.831 --> 00:23:53.033
讓我們看看他們做到這使用的API

00:23:55.035 --> 00:23:56.103
要打開攝像頭

00:23:56.170 --> 00:23:59.673
我們簡單地設置IsCameraEnabled
屬性爲真 在RPScreenRecorder中

00:24:00.340 --> 00:24:01.875
這打開攝像頭硬件

00:24:02.276 --> 00:24:04.811
並彈出一個新的
RPScreenRecorder

00:24:04.878 --> 00:24:08.115
叫做CameraPreviewView
是UIView的一個子類

00:24:08.949 --> 00:24:10.284
因爲它是UIView

00:24:10.350 --> 00:24:12.586
可簡單把它做爲一個子視圖
加到遊戲視圖中

00:24:12.920 --> 00:24:16.557
並且可以自由的給它設定位置來
避免妨礙遊戲

00:24:17.991 --> 00:24:19.960
你還可以附加一個調整或識別它

00:24:20.027 --> 00:24:22.362
來允許你手動調整它的位置
如果你想的話

00:24:23.564 --> 00:24:25.032
來看看這的代碼

00:24:25.232 --> 00:24:27.367
我們設置IsCameraEnabled屬性爲

00:24:27.434 --> 00:24:29.069
真 在錄製廣播時

00:24:29.536 --> 00:24:31.939
然後我們獲得
一個CameraPreviewView實例

00:24:34.408 --> 00:24:38.111
然後設置它的幾何來給它定位

00:24:38.912 --> 00:24:41.481
然後簡單地把它作爲子視圖添加
到你的遊戲視圖

00:24:43.750 --> 00:24:47.154
所以現在我們有了視頻註釋
我們還想要添加音頻

00:24:47.788 --> 00:24:51.058
麥克風錄製被包括在了
去年的iOS 9中

00:24:51.391 --> 00:24:54.795
但是現在我們要添加在錄製時
靜音的功能

00:24:55.529 --> 00:24:56.597
我們知道廣播者

00:24:56.663 --> 00:25:00.634
總是有一些有趣的事想說
但是有時他們要休息一下

00:25:01.835 --> 00:25:03.937
Olympus Rising
使得這變得簡單 通過包括

00:25:04.004 --> 00:25:05.873
麥克風切換在他們的彈出菜單中

00:25:07.708 --> 00:25:10.777
實現麥克風的切換不能更簡單了

00:25:11.211 --> 00:25:13.614
已有的IsMicrophoneEnabled屬性

00:25:13.680 --> 00:25:15.983
RPScreenRecorder中
可以被設爲真

00:25:16.116 --> 00:25:19.920
如果你想要啓用麥克風
或爲假如果你想將它靜音

00:25:20.888 --> 00:25:24.558
這可以在廣播或錄製會話中進行

00:25:27.561 --> 00:25:30.731
本場演講到此結束
我希望你們喜歡

00:25:31.064 --> 00:25:34.835
有了強大的新廣播功能和新的
對Apple TV的支持

00:25:34.902 --> 00:25:36.503
我們等不及去玩

00:25:36.570 --> 00:25:40.240
和觀看你的遊戲直播
在iOS和tvOS上

00:25:41.375 --> 00:25:45.379
想要了解更多信息
請瀏覽屏幕上的網址

00:25:46.647 --> 00:25:48.749
在這週中 確保觀看

00:25:48.815 --> 00:25:50.450
我們的其他遊戲技術演講

00:25:50.517 --> 00:25:54.254
GameplayKit SpriteKit和
Game Center中的新特性

00:25:55.556 --> 00:25:56.690
好的 我要說的就這麼多

00:25:56.757 --> 00:25:58.458
謝謝參加這次演講

00:25:58.525 --> 00:26:02.095
希望你們喜歡這周接下來的 WWDC

00:26:02.162 --> 00:26:03.096
謝謝