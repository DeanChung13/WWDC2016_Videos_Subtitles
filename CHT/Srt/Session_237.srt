00:00:19.419 --> 00:00:26.426
CareKit開發入門

00:00:35.502 --> 00:00:37.237
謝謝 大家下午好

00:00:37.304 --> 00:00:39.606
歡迎來到
“CareKit開發入門”演講

00:00:39.673 --> 00:00:41.775
我叫Umer
CareKit團隊工程師

00:00:43.210 --> 00:00:45.712
今天的日程包括
講述CareKit的故事

00:00:45.779 --> 00:00:46.813
以及它的由來

00:00:47.281 --> 00:00:48.482
介紹其中一個應用

00:00:48.549 --> 00:00:51.451
分析它如何使用CareKit
來提升就醫體驗

00:00:52.286 --> 00:00:55.455
瞭解CareKit架構
並以此創建一個應用

00:00:55.923 --> 00:00:58.725
演示一個定製的CareKit應用

00:00:59.326 --> 00:01:02.629
最後 Apple和開發者社區

00:01:02.696 --> 00:01:04.565
如何同心協力
使它更上一個新的臺階

00:01:07.000 --> 00:01:09.870
在介紹CareKit之前
先看看它的由來

00:01:12.239 --> 00:01:14.408
大家可能熟悉ResearchKit

00:01:14.608 --> 00:01:16.543
它是我們去年發佈的框架

00:01:16.610 --> 00:01:19.246
幫助醫療機構和研究人員

00:01:19.313 --> 00:01:22.783
在iPhone上進行大規模的研究

00:01:24.885 --> 00:01:27.888
如果有興趣 可以參看今早的演講

00:01:27.955 --> 00:01:29.356
ResearchKit新特性

00:01:29.423 --> 00:01:31.124
由Bunny Laden和
Yuen Xiou主持

00:01:31.491 --> 00:01:33.093
以及去年ResearchKit演講

00:01:33.160 --> 00:01:35.495
由John Roll主持
“使用ResearchKit創建應用”

00:01:38.498 --> 00:01:39.833
在ResearchKit發佈後的過去一年裏

00:01:39.900 --> 00:01:42.503
我們收到了很多請求
希望對患者進行研究

00:01:42.569 --> 00:01:45.606
或者查看他們提供的醫學數據

00:01:45.939 --> 00:01:48.509
我們開始頭腦風暴
以病人爲中心的模塊

00:01:49.076 --> 00:01:52.713
隨後我們發現
這些模塊的應用範圍

00:01:52.779 --> 00:01:54.848
遠高於醫學研究

00:01:55.682 --> 00:01:59.853
所以在ResearchKit基礎上
進化出了新框架 CareKit

00:02:02.756 --> 00:02:06.360
CareKit是一個開源框架
協助醫療機構開發應用

00:02:06.426 --> 00:02:09.329
來幫助病人恢復治療

00:02:09.830 --> 00:02:12.332
CareKit有益於
各種慢性和急性病治療

00:02:13.467 --> 00:02:16.270
一個很好的慢性病的例子是精神疾病

00:02:16.537 --> 00:02:18.438
它的用藥追蹤極其有效

00:02:18.672 --> 00:02:21.608
對於抑鬱和焦慮的評估

00:02:21.675 --> 00:02:22.643
也能做到及時反饋

00:02:23.143 --> 00:02:25.612
還能監督日常活動

00:02:25.679 --> 00:02:29.750
它能做到互助小組和入院治療以外的
幾乎一切事情

00:02:32.186 --> 00:02:34.821
另外一個例子是手術治療

00:02:34.888 --> 00:02:38.225
其中最重要的是術後恢復

00:02:38.692 --> 00:02:40.127
我們仔細思考這個用例

00:02:40.194 --> 00:02:43.096
回想一下現有的就醫體驗

00:02:46.600 --> 00:02:49.136
如今 如果你離開醫院或者醫生

00:02:49.203 --> 00:02:51.205
可能會收到這樣一張紙

00:02:51.271 --> 00:02:53.907
列舉了你的術後恢復活動

00:02:54.007 --> 00:02:56.210
它包含了許多詳細的指導說明

00:02:56.276 --> 00:02:57.845
隨着時間推移而改變

00:02:58.645 --> 00:03:01.048
這方面的監管十分糟糕

00:03:01.114 --> 00:03:03.217
患者經常會陷入困惑

00:03:04.251 --> 00:03:05.385
由於這些計劃並非動態

00:03:05.452 --> 00:03:08.188
因此它們不能根據情況主動調整

00:03:08.255 --> 00:03:10.924
最終可能導致患者再次入院

00:03:11.825 --> 00:03:14.094
CareKit的推出
就是爲了解決這個問題

00:03:14.161 --> 00:03:16.330
拿起這一張紙

00:03:16.797 --> 00:03:18.832
把它變成Care Card

00:03:19.933 --> 00:03:23.337
Care Card
允許病人查看完整的治療計劃

00:03:23.504 --> 00:03:26.306
互動性強 動態更新

00:03:26.373 --> 00:03:28.642
它能實時地反饋病人的康復進展

00:03:29.810 --> 00:03:31.478
在開發這個模塊的過程中

00:03:31.545 --> 00:03:33.447
我們發現了一個全新的世界

00:03:33.514 --> 00:03:35.115
因爲iPhone提供了無限可能性

00:03:35.282 --> 00:03:39.386
我們又創建了另外三個模塊
來提升病人的護理體驗

00:03:41.421 --> 00:03:43.023
症狀與測量追蹤器

00:03:43.090 --> 00:03:45.292
記錄了各種主觀和客觀的測量數據

00:03:46.560 --> 00:03:49.296
Insights概覽頁
顯示了各種應用數據

00:03:49.363 --> 00:03:52.199
幫助病人掌握病情恢復進展

00:03:53.967 --> 00:03:55.969
以及連接模塊 用來實現

00:03:56.036 --> 00:03:58.505
與家庭成員和護理團隊之間的交流溝通

00:04:01.175 --> 00:04:04.478
我們來看看它們是如何協作
來提高就醫體驗的

00:04:04.845 --> 00:04:07.314
德克薩斯醫療中心是
CareKit早期合作伙伴

00:04:07.915 --> 00:04:09.016
他們運用了這些模塊

00:04:09.082 --> 00:04:11.351
打造了一份獨特的就醫體驗

00:04:11.418 --> 00:04:13.053
來看看這些模塊的實際運行

00:04:14.154 --> 00:04:15.923
首先 你會看到一個歡迎界面

00:04:15.989 --> 00:04:18.257
你能創建登錄賬戶

00:04:19.059 --> 00:04:21.195
我們的病人
John Appleseed已註冊

00:04:21.261 --> 00:04:22.529
完成了應用配置

00:04:23.864 --> 00:04:27.434
John起牀後收到一條提醒
他需要量體重

00:04:29.069 --> 00:04:31.271
他使用密碼進入應用

00:04:33.140 --> 00:04:35.175
在智能秤上量完體重

00:04:35.442 --> 00:04:37.177
體重值被傳入HealthKit

00:04:37.744 --> 00:04:40.914
CareKit會自動提取數據

00:04:41.715 --> 00:04:43.150
CareKit輕易完成

00:04:43.217 --> 00:04:46.119
因爲它與HealthKit無縫銜接

00:04:48.722 --> 00:04:50.991
記錄體重後
John進入Care Card

00:04:51.058 --> 00:04:54.461
查看今天的待辦事項

00:04:55.229 --> 00:04:58.098
Care Card和
症狀與測量追蹤器

00:04:58.165 --> 00:04:59.333
正在自動更新內容

00:04:59.399 --> 00:05:02.336
從德克薩斯醫療中心的
ERM健康系統裏提取

00:05:04.705 --> 00:05:08.141
John不太記得其活動之一 短走
的具體要求

00:05:08.208 --> 00:05:09.676
他點擊進入那一欄

00:05:09.743 --> 00:05:12.079
開始瀏覽這項活動的說明

00:05:14.948 --> 00:05:18.385
John完成了第一項運動
接下來服用第一份藥物

00:05:22.489 --> 00:05:24.191
他點擊進入了評估卡

00:05:24.258 --> 00:05:26.527
查看今天需要完成的評估種類

00:05:26.894 --> 00:05:28.395
在症狀與測量追蹤器裏

00:05:28.462 --> 00:05:30.964
他想記錄下自己的術後疼痛症狀

00:05:31.565 --> 00:05:33.534
以及一些感染的跡象

00:05:34.101 --> 00:05:37.871
他首先進入疼痛評估 輸入了疼痛指數

00:05:41.708 --> 00:05:43.977
接着拍一張感染區域的照片

00:05:44.044 --> 00:05:45.245
上傳到應用

00:05:45.312 --> 00:05:47.681
這一切直接在症狀與測量追蹤器內完成

00:05:47.748 --> 00:05:49.750
數據被傳送到醫院

00:05:56.823 --> 00:05:59.159
最後 他要完成一些起立行走

00:05:59.593 --> 00:06:01.528
當他四處走動的時候

00:06:01.595 --> 00:06:04.264
iPhone的傳感器會記錄步數

00:06:04.565 --> 00:06:06.433
當他完成行走後

00:06:06.500 --> 00:06:08.735
數據會被直接傳給醫院

00:06:13.707 --> 00:06:15.909
John想打開Insights界面

00:06:15.976 --> 00:06:17.811
看一看過去幾周的數據

00:06:18.111 --> 00:06:20.347
他可以看到本週的信息提示和圖表

00:06:20.647 --> 00:06:24.184
這樣視覺化的數據呈現方式
更加便於用戶使用

00:06:24.852 --> 00:06:26.954
接着他切換到上一週

00:06:27.454 --> 00:06:29.823
對比這兩週的表現

00:06:34.795 --> 00:06:37.231
同時他依然擔心可能受到感染

00:06:37.297 --> 00:06:39.166
儘管已經上報過了

00:06:39.233 --> 00:06:41.602
他還是決定給護理人員發一條信息

00:06:43.470 --> 00:06:44.938
他開始創建信息

00:06:45.005 --> 00:06:47.441
他決定發郵件給
Paul Cashman醫生

00:06:48.275 --> 00:06:51.011
他不需要再上傳一次照片

00:06:51.078 --> 00:06:53.280
因它已被髮送給Cashman醫生了

00:06:53.347 --> 00:06:54.948
通過之前的感染評估

00:06:59.553 --> 00:07:01.755
當天的晚些時候
他收到了回覆郵件

00:07:01.822 --> 00:07:03.524
醫療團隊成員
Paul Cashman醫生

00:07:03.590 --> 00:07:04.858
他重新進入應用

00:07:04.925 --> 00:07:07.561
閱讀醫生的信息

00:07:09.229 --> 00:07:13.133
德克薩斯醫療中心就是這樣使用
CareKit創建出一個應用

00:07:13.200 --> 00:07:16.537
打造了閉環的就醫體驗

00:07:23.076 --> 00:07:26.647
謝謝
我們來看看創建類似應用需要的步驟

00:07:27.814 --> 00:07:30.551
這是四種前端模塊 我們已經見過了

00:07:31.218 --> 00:07:32.920
再加上兩個後臺的模塊

00:07:32.986 --> 00:07:35.055
Care Plan Store和
Document Exporter

00:07:35.689 --> 00:07:38.959
我們先從Care Plan Store
開始介紹

00:07:40.360 --> 00:07:42.796
Care Plan Store
由活動和事件組成

00:07:43.430 --> 00:07:46.033
我們先解釋活動和事件的含義

00:07:46.867 --> 00:07:49.203
然後創建一個活動
添加到store裏

00:07:49.636 --> 00:07:52.005
尋找活動和事件的關係

00:07:52.072 --> 00:07:53.807
最後把它們集成到UI裏面

00:07:55.509 --> 00:07:57.244
若仔細看這張Care Card

00:07:57.477 --> 00:08:00.347
我們可以想象出活動和事件的含義

00:08:01.014 --> 00:08:02.482
以ibuprofen爲例

00:08:03.150 --> 00:08:05.686
Ibuprofen 200mg
是一個活動

00:08:05.752 --> 00:08:08.288
下面的圓圈代表事件

00:08:10.657 --> 00:08:13.994
活動和事件一起構成了
Care Plan Store

00:08:16.296 --> 00:08:17.464
這是一次活動

00:08:17.531 --> 00:08:19.433
我們創建這個ibuprofen活動

00:08:19.733 --> 00:08:22.002
先創建一個標識符

00:08:22.069 --> 00:08:24.238
這裏使用的是
ibuprofenMedication

00:08:24.571 --> 00:08:27.541
它能獨特地標識出這個活動

00:08:28.542 --> 00:08:31.111
接着創建羣組標識符
來標識不同的活動

00:08:31.178 --> 00:08:33.280
方便以後在後臺被調用

00:08:34.481 --> 00:08:35.982
標題是Ibuprofen

00:08:36.049 --> 00:08:37.518
內容是200 mg

00:08:37.851 --> 00:08:39.385
這些屬性直接面向用戶

00:08:39.453 --> 00:08:41.855
請確保它們的準確性

00:08:43.624 --> 00:08:46.660
tintColor可以是任何UI顏色
我們選擇藍色

00:08:47.027 --> 00:08:48.529
除了選擇填充色

00:08:48.595 --> 00:08:51.465
CareKit還提供其它自定義選項

00:08:51.532 --> 00:08:53.133
我們稍後會討論到

00:08:54.535 --> 00:08:57.571
我最關心兩個屬性
類型和時刻表

00:08:58.305 --> 00:09:01.675
類型決定了活動的類型

00:09:01.875 --> 00:09:04.211
舉個例子
我們有干涉

00:09:04.278 --> 00:09:05.646
它屬於Care Card模塊

00:09:06.413 --> 00:09:09.249
還有評估
它顯示在症狀與測量追蹤器下

00:09:11.185 --> 00:09:12.986
因爲我們創建的是一個服藥活動

00:09:13.053 --> 00:09:14.288
它屬於Care Card模塊

00:09:14.354 --> 00:09:16.356
所以 活動類型是
干涉

00:09:18.725 --> 00:09:20.360
接下來看一看時刻表

00:09:20.594 --> 00:09:24.498
時刻表決定了
活動發生的頻率和時間

00:09:25.666 --> 00:09:29.136
有三種方法定義時刻表

00:09:29.336 --> 00:09:31.672
每天的日程
每週的日程

00:09:31.738 --> 00:09:33.473
你還可以創建自定義的日程

00:09:34.007 --> 00:09:35.275
你可以定義頻率

00:09:35.342 --> 00:09:38.111
來指定每天的活動次數

00:09:38.812 --> 00:09:40.948
聽起來有點麻煩
其實很簡單

00:09:41.014 --> 00:09:42.082
我們來簡化它

00:09:43.016 --> 00:09:45.052
我們來給活動定義一個日程

00:09:46.854 --> 00:09:47.955
這是一個周計劃

00:09:48.021 --> 00:09:52.326
我們希望病人在週一 週三 週五服藥

00:09:53.327 --> 00:09:55.329
再定義一個頻率

00:09:55.529 --> 00:09:56.697
週一服用四次

00:09:56.763 --> 00:09:58.932
週三兩次 週五四次

00:10:00.033 --> 00:10:03.370
綜合起來
就組成了活動的一個日程對象

00:10:04.571 --> 00:10:07.841
現在這項完整活動可被添加給
Care Plan Store

00:10:08.876 --> 00:10:11.178
接下來我們學習如何使用代碼
創建Care Plan Store

00:10:11.245 --> 00:10:12.679
在把這項活動添加進去之前

00:10:12.846 --> 00:10:15.115
我們快速學習一下事件的定義

00:10:15.582 --> 00:10:19.386
事件不是由開發者直接初始化的

00:10:19.453 --> 00:10:21.855
其實它是由Care Plan Store
自動創建的

00:10:22.222 --> 00:10:24.224
爲了深入瞭解創建的過程

00:10:24.291 --> 00:10:26.193
我們回到剛纔的日程

00:10:26.894 --> 00:10:30.397
一個日程對象會根據自定義的頻率
生成不同的事件

00:10:30.464 --> 00:10:35.169
舉個例子 我們有四次事件在星期一

00:10:35.235 --> 00:10:37.204
因此 有四次事件在6月20日

00:10:37.437 --> 00:10:40.574
兩次事件在星期三
所以兩次事件在6月22日

00:10:40.641 --> 00:10:42.376
以此類推

00:10:42.442 --> 00:10:44.645
要停止事件的繼續生成

00:10:44.711 --> 00:10:46.046
需要定義截止日期

00:10:46.113 --> 00:10:47.781
一旦爲活動定義了截止日期

00:10:47.848 --> 00:10:50.150
Care Plan Store
會停止生成事件

00:10:51.885 --> 00:10:53.720
即使開發者沒有直接創建事件

00:10:53.787 --> 00:10:55.722
他也提供了很多有用信息

00:10:55.923 --> 00:10:58.525
從事件對象你可以得到具體日期

00:10:58.692 --> 00:11:00.928
可以看到事件的狀態 比如初始狀態

00:11:00.994 --> 00:11:04.498
代表用戶還沒有調用它
它可能被完成了 也可能沒有

00:11:05.232 --> 00:11:08.035
結果對象包含了完成的狀態

00:11:08.101 --> 00:11:10.204
它是什麼時候被完成的

00:11:10.270 --> 00:11:12.606
以及其它相關的信息

00:11:12.973 --> 00:11:16.210
還有這個指針 它指向了這次事件

00:11:17.945 --> 00:11:20.247
在Care Plan Store裏
活動生成事件

00:11:20.314 --> 00:11:23.917
組合在一起
構成Care Plan Store

00:11:23.984 --> 00:11:25.752
我們來看看具體的代碼

00:11:26.920 --> 00:11:29.489
創建Care Plan Store
步驟非常簡單

00:11:29.556 --> 00:11:30.691
先定義一個變量

00:11:30.757 --> 00:11:34.661
我的變量是myCarePlanStore
類型是OCKCarePlanStore

00:11:35.429 --> 00:11:37.497
再定義一個永久的URL鏈接

00:11:37.564 --> 00:11:40.467
在這裏我使用了應用的文檔目錄

00:11:42.336 --> 00:11:44.371
再使用URL進行初始化

00:11:44.438 --> 00:11:46.440
就得到了可用的
Care Plan Store

00:11:48.942 --> 00:11:52.179
現在我們把剛創建的
ibuprofen活動添加進去

00:11:52.479 --> 00:11:53.981
首先創建一個日程對象

00:11:54.047 --> 00:11:57.050
設定開始日期爲今年年初

00:11:57.217 --> 00:11:58.619
然後使用一個週日程

00:11:58.685 --> 00:12:00.954
我們可以用數組來記錄事件的頻率

00:12:01.021 --> 00:12:02.689
也就是每天發生的次數

00:12:02.956 --> 00:12:04.791
舉個例子
我們的數組從週日開始

00:12:04.858 --> 00:12:08.695
週日爲0 週一爲4 週二爲0

00:12:09.096 --> 00:12:10.364
以此類推

00:12:12.399 --> 00:12:15.435
定義好了日程對象
就可以初始化care plan活動

00:12:15.969 --> 00:12:17.671
再定義一個標識符
一個羣組標識符

00:12:17.738 --> 00:12:19.573
以及其它所有的參數

00:12:19.640 --> 00:12:23.177
其中兩個參數我們尚未討論
instructions和imageURL

00:12:23.443 --> 00:12:25.646
它們被用來描述活動的細節

00:12:25.712 --> 00:12:28.415
如 當John Appleseed
點擊“短走”

00:12:28.482 --> 00:12:30.417
他可以看到具體的說明

00:12:30.484 --> 00:12:33.887
我們也需額外信息描述
ibuprofen及圖片說明

00:12:33.954 --> 00:12:36.456
等下在Care Card裏
就能看到其具體模樣

00:12:37.658 --> 00:12:39.826
要把這個活動添加到
Care Plan Store

00:12:39.893 --> 00:12:42.396
我們只需調用一個添加函數
然後傳遞創建好的活動

00:12:42.462 --> 00:12:45.766
最後使用completionHandler
處理異常情況

00:12:47.901 --> 00:12:51.004
以上即如何創建Care Plan Store
及如何向它添加活動

00:12:51.271 --> 00:12:54.541
我們來看看如何把它們的數據
呈現在Care Card上

00:12:56.343 --> 00:12:58.712
創建Care Plan Store
和添加活動是最難的部分

00:12:58.779 --> 00:13:01.815
呈現在Care Card上
相對簡單和直接很多

00:13:03.483 --> 00:13:06.987
這就是我們添加的活動
注意它的活動類型

00:13:07.054 --> 00:13:09.456
它屬於干涉
因我們已把它設置成干涉

00:13:09.523 --> 00:13:12.192
Care Plan Store自動
將它顯示在Care Card上

00:13:13.193 --> 00:13:14.628
要創建一個Care Card

00:13:14.695 --> 00:13:18.065
需要先初始化CareCardViewController
使用carePlanStore對象

00:13:18.999 --> 00:13:20.934
把它內嵌到NavigationController

00:13:21.001 --> 00:13:24.371
這一步很必要 因爲它能提供
barButtonItem

00:13:24.438 --> 00:13:26.073
用來操控日曆

00:13:26.139 --> 00:13:29.443
以及將信息推送到導航堆棧上

00:13:30.377 --> 00:13:31.645
現在可以直接將其顯示

00:13:32.045 --> 00:13:33.947
也可以把它內嵌到
tabBarController

00:13:34.114 --> 00:13:37.351
僅僅三行代碼
我們就生成了一個Care Card

00:13:44.791 --> 00:13:47.160
這裏你能看到
我們擁有ibuprofen活動

00:13:47.227 --> 00:13:49.162
和其它建好的一些活動

00:13:49.863 --> 00:13:52.065
我們看看這個UI的其它部分

00:13:52.132 --> 00:13:53.600
瞭解它們的具體作用

00:13:54.268 --> 00:13:56.737
headerView
顯示了本週活動的預覽

00:13:56.803 --> 00:13:59.239
你可以左右滑動切換到另一週

00:13:59.406 --> 00:14:02.109
你可以選擇特定日期查看當天的細節

00:14:02.543 --> 00:14:05.179
心型圖案是由程序自動計算和更新的

00:14:05.245 --> 00:14:07.347
根據Care Plan Store
現有信息

00:14:08.148 --> 00:14:10.551
心型圖案和填充顏色都可以定製

00:14:10.817 --> 00:14:13.954
你可以選擇更適合的圖片

00:14:14.021 --> 00:14:16.690
也可以改變填充色來搭配自定義圖片

00:14:16.757 --> 00:14:20.093
等會兒我們將展示一個自定義的
Care Card

00:14:22.429 --> 00:14:23.964
標頭下面是治療方案

00:14:24.031 --> 00:14:27.267
它包含了當天要完成的幹預治療

00:14:27.734 --> 00:14:31.171
每次從Care Plan Store裏
添加或刪除活動

00:14:31.238 --> 00:14:32.840
這個UI也會自動更新

00:14:32.906 --> 00:14:35.609
開發者不需要額外的工作

00:14:37.778 --> 00:14:39.980
這是我們剛添加的
ibuprofen活動

00:14:40.547 --> 00:14:42.015
點擊這一欄

00:14:42.082 --> 00:14:45.352
你將進入詳細信息頁
包括具體的用法說明

00:14:45.652 --> 00:14:47.120
以及藥物的圖片

00:14:47.187 --> 00:14:50.257
方便用戶把它和其他藥物區分開來

00:14:53.827 --> 00:14:55.896
我們看一種不同的幹預治療

00:14:56.196 --> 00:14:58.665
這個項目要求病人起立行走

00:14:59.132 --> 00:15:02.269
點擊進去
用戶就可以自行完成病情報告

00:15:03.537 --> 00:15:07.007
也可以通過Apple Watch
的傳感器自動更新

00:15:07.674 --> 00:15:09.276
這正好引出下一點

00:15:09.343 --> 00:15:10.978
我們如何更新這些事件？

00:15:11.912 --> 00:15:14.715
有多種方法
其中之一 用戶自主報告

00:15:14.781 --> 00:15:16.049
比如服藥追蹤

00:15:16.116 --> 00:15:18.285
患者可以報告服藥狀態

00:15:18.819 --> 00:15:21.722
他們可以在完成任務後
將其標註爲完成

00:15:21.788 --> 00:15:23.624
如ResearchKit活動任務

00:15:24.725 --> 00:15:27.761
還可以通過設備的傳感器自動更新

00:15:27.828 --> 00:15:30.731
比如Apple Watch或
iPhone的HealthKit

00:15:32.766 --> 00:15:33.867
這就是Care Card

00:15:33.967 --> 00:15:35.302
它是一個互動的治療計劃

00:15:35.369 --> 00:15:38.338
使用Care Plan Store
規劃活動和事件

00:15:38.405 --> 00:15:41.141
幫助用戶實時監控每日病情進展

00:15:43.343 --> 00:15:44.611
就如Care Card一樣

00:15:45.045 --> 00:15:47.848
“症狀與測量追蹤器”也使用了
Care Plan Store

00:15:47.915 --> 00:15:50.484
來記錄主觀和客觀的病情測量數據

00:15:51.618 --> 00:15:53.320
添加評估的過程

00:15:53.387 --> 00:15:57.291
和添加ibuprofen活動的過程
十分相似

00:15:57.591 --> 00:16:01.728
如果添加一個後背的痛感調查

00:16:02.362 --> 00:16:04.598
它的代碼和創建這個幾乎一樣

00:16:04.665 --> 00:16:07.434
假設它已被加入了
Care Plan Store

00:16:08.168 --> 00:16:10.204
我們來看看如何創建症狀追蹤器

00:16:10.270 --> 00:16:11.805
來展示這個評估

00:16:12.539 --> 00:16:15.442
像Care Card一樣
先初始化symptomTrackerViewController

00:16:15.509 --> 00:16:16.944
使用Care Plan Store
對象

00:16:17.411 --> 00:16:20.280
這裏可以使用代理函數
我等下會講到

00:16:20.480 --> 00:16:22.816
然後把它內嵌到
NavigationController

00:16:23.283 --> 00:16:25.819
然後把它展示出來
效果就像這樣

00:16:27.187 --> 00:16:28.622
如果我們分解這個UI

00:16:29.556 --> 00:16:32.559
headerView包含了
和Care Card一樣的導航模式

00:16:32.626 --> 00:16:34.628
你可以左右滑動來切換至另一週

00:16:34.695 --> 00:16:36.964
選擇具體日期 來顯示當日詳細信息

00:16:37.631 --> 00:16:39.633
當我們正在完成當天的評估時

00:16:39.700 --> 00:16:42.135
這個環形的圖表 可以顯示當前的進展

00:16:42.202 --> 00:16:44.471
一旦全部完成 圖表會自動打勾

00:16:44.538 --> 00:16:46.907
這表示當天的評估已經全部完成

00:16:47.307 --> 00:16:50.944
圖表和勾號的顏色都是可以自定義的

00:16:52.746 --> 00:16:55.916
在這下面 是今天待完成的評估列表

00:16:55.983 --> 00:16:58.719
評估多種多樣
我們來看看其中一些

00:16:59.686 --> 00:17:00.754
這是一個痛感調查

00:17:00.821 --> 00:17:03.290
要實現它 我們可調用
ResearchKit的調查模塊

00:17:03.357 --> 00:17:05.259
來呈現出精心設計的調查表

00:17:06.359 --> 00:17:07.528
它們也可以是活動任務

00:17:08.028 --> 00:17:10.664
你可以進行點擊測驗
或者創建自定義活動

00:17:10.731 --> 00:17:12.999
使用ResearchKit
如“運動範圍”

00:17:14.367 --> 00:17:17.003
它也可是自主報告的
你可爲客戶展示viewController

00:17:17.069 --> 00:17:19.306
就像德克薩斯醫療中心應用所做的一樣

00:17:19.373 --> 00:17:22.709
請求用戶拍攝感染圖片並傳回醫院

00:17:23.676 --> 00:17:26.280
傳回的也可以是任何類型數據
如HealthKit或Bluetooth設備

00:17:26.346 --> 00:17:28.415
在德克薩斯醫療中心應用裏

00:17:28.482 --> 00:17:30.517
John使用了智能體重計

00:17:30.584 --> 00:17:32.753
自動上傳了數據
更新CareKit應用

00:17:34.788 --> 00:17:35.923
代理函數就在這裏派上了用場

00:17:35.989 --> 00:17:37.658
爲了更好地展示評估結果

00:17:37.724 --> 00:17:39.760
我們需要實現症狀追蹤器的代理功能

00:17:39.826 --> 00:17:40.994
爲開發者提供回調函數

00:17:41.061 --> 00:17:43.864
每當用戶點擊評估欄時被調用

00:17:44.198 --> 00:17:47.067
這個回調函數會返回一個評估事件

00:17:47.134 --> 00:17:50.604
你可決定使用哪個視圖控制器
呈現這個事件

00:17:53.073 --> 00:17:55.976
如果你想顯示一個痛感調查事件

00:17:56.043 --> 00:17:58.979
首先你需要使用它的數據計算疼痛數值

00:18:00.414 --> 00:18:01.982
然後創建一個結果對象

00:18:02.049 --> 00:18:06.220
記下它的數值和單位

00:18:06.286 --> 00:18:10.224
如果你要添加其它額外信息
你還必須更新userInfo目錄

00:18:11.225 --> 00:18:13.493
在Care Plan Store裏
更新這項事件

00:18:13.560 --> 00:18:15.896
以及它的結果對象 事件的當前狀態

00:18:15.963 --> 00:18:18.465
最後使用completionHandler
處理異常情況

00:18:20.167 --> 00:18:21.735
彙總所有的信息

00:18:22.035 --> 00:18:24.538
你最後看到的就是
症狀與測量追蹤器

00:18:30.277 --> 00:18:32.412
Insights概覽頁能調用
Care Plan Store數據

00:18:32.479 --> 00:18:33.680
生成信息和圖表

00:18:34.248 --> 00:18:38.018
方便用戶更好地理解數據

00:18:38.352 --> 00:18:41.989
爲了讓開發者更容易生成它們

00:18:42.055 --> 00:18:43.657
我們推出了insight部件

00:18:43.724 --> 00:18:46.193
能導入它們到Insights概覽頁

00:18:46.260 --> 00:18:49.129
它們包括各種信息
比如提示和警告

00:18:49.563 --> 00:18:50.664
它們也可以是圖表

00:18:50.731 --> 00:18:53.133
如從CareKit引進的分組條形表

00:18:53.200 --> 00:18:54.334
以及各種自定義的圖表

00:18:54.401 --> 00:18:56.403
比如 ResearchKit的圖表

00:18:56.470 --> 00:18:59.006
能夠輕易地被轉換成
我們需要的圖表對象

00:19:01.108 --> 00:19:03.343
我們看看這個概覽頁裏
包括的insight部件

00:19:04.545 --> 00:19:06.813
這是一個用藥追蹤的信息部件

00:19:06.880 --> 00:19:09.349
信息部件能鼓勵用戶完成治療任務

00:19:09.416 --> 00:19:11.818
通過推送重要信息的方式

00:19:12.186 --> 00:19:14.288
這個信息部件使用
Care Plan Store數據

00:19:14.354 --> 00:19:16.990
計算出上週服用ibuprofen
的遵循度

00:19:17.424 --> 00:19:19.693
這些信息也能通過遠程服務器生成

00:19:19.760 --> 00:19:21.695
傳遞到Insights概覽頁

00:19:22.863 --> 00:19:25.732
我們來看看代碼
如何向後臺store請求數據

00:19:26.366 --> 00:19:28.936
在這裏你可以指定開始日期和截止日期

00:19:29.269 --> 00:19:31.471
我使用上個星期天

00:19:31.538 --> 00:19:34.107
和之後的星期六
分別作爲開始和截止日期

00:19:35.342 --> 00:19:37.277
然後調用
enumerateEvents函數

00:19:37.344 --> 00:19:38.378
在Care Plan Store上

00:19:38.445 --> 00:19:40.714
標註我們想要枚舉的活動

00:19:40.781 --> 00:19:43.050
以及枚舉的日期

00:19:43.417 --> 00:19:47.054
隨後活動的的事件
被返回給handler

00:19:47.487 --> 00:19:50.057
我們可以枚舉這些事件
查看它們的狀態

00:19:50.123 --> 00:19:53.026
判定它們是否被完成
計算執行度

00:19:55.562 --> 00:19:59.333
完成了執行度計算之後
如果想要生成一個信息部件

00:20:00.367 --> 00:20:02.936
在這裏你需要把計算得出的執行度

00:20:03.003 --> 00:20:04.638
變成一條易讀的信息

00:20:04.705 --> 00:20:07.875
方便用戶理解

00:20:08.909 --> 00:20:11.645
你需要先初始化信息 給它添加標題

00:20:11.845 --> 00:20:15.115
信息內容
顏色 以及信息類型

00:20:15.182 --> 00:20:16.650
比如說 這是一條提示

00:20:20.320 --> 00:20:21.788
接下來 我們講講分組條形圖

00:20:21.855 --> 00:20:24.491
它能在一張圖表裏
顯示多組信息

00:20:24.691 --> 00:20:27.828
比如說 這個圖表對比了
pain和ibuprofen

00:20:27.895 --> 00:20:29.162
用戶可以從這些數據中

00:20:29.229 --> 00:20:32.399
瞭解病情恢復進展

00:20:35.335 --> 00:20:37.371
我定義一個變量
barChartItem

00:20:37.437 --> 00:20:39.173
類型是OCKInsightItem

00:20:40.174 --> 00:20:43.043
barChartItem
包括不同的圖表系列

00:20:43.110 --> 00:20:45.445
我們已見過painSeries
和ibuprofenSeries

00:20:45.679 --> 00:20:46.813
要創建這個圖表

00:20:46.880 --> 00:20:50.050
首先需定義painSeries
及初始化BarSeries

00:20:50.484 --> 00:20:53.620
然後指定標題、數組以及字符串組

00:20:53.687 --> 00:20:54.655
和圖表填充色

00:20:55.722 --> 00:20:58.458
數組的元素數目是不受限制的

00:20:58.525 --> 00:21:00.694
所以你的圖表可以展示
每週數據、月度數據

00:21:00.761 --> 00:21:02.162
或者任意數量的數據

00:21:02.963 --> 00:21:06.166
數值決定了條形圖的長度

00:21:06.233 --> 00:21:08.902
字符串會出現在條形圖的右邊

00:21:09.303 --> 00:21:10.838
大多數時候它們的含義都不相同

00:21:11.004 --> 00:21:12.906
舉個例子
在ibuprofenSeries裏

00:21:12.973 --> 00:21:15.242
數值決定了條形圖的長度

00:21:15.309 --> 00:21:17.077
但它們並不代表數據本身

00:21:17.144 --> 00:21:19.746
再舉個例子
這些1-5-4之類的數字

00:21:19.813 --> 00:21:23.784
會很容易被誤解成藥品劑量
1片藥 5片藥 或者4片藥

00:21:24.151 --> 00:21:27.821
標籤值幫助用戶知道
他們遵循用藥量

00:21:27.888 --> 00:21:30.157
10%、50%以及40%

00:21:31.258 --> 00:21:33.627
我們已經知道想要顯示哪些系列了

00:21:33.694 --> 00:21:35.596
需先初始化
一個barChartItem

00:21:36.196 --> 00:21:38.432
然後指定它的標題、
文字內容、填充顏色

00:21:38.699 --> 00:21:41.268
我們有兩組數列
分別作爲座標軸標題和副標題

00:21:41.335 --> 00:21:43.136
顯示在每組條形圖的左邊

00:21:43.437 --> 00:21:45.739
你可以註明需要顯示的系列數目

00:21:45.806 --> 00:21:47.441
可能有1組 2組 或10組

00:21:48.442 --> 00:21:50.444
還有兩個可選的參數需要定義
也就是量程

00:21:50.511 --> 00:21:52.846
最小量程
和最大量程

00:21:52.913 --> 00:21:54.047
如果你不註明它們

00:21:54.114 --> 00:21:56.917
它們會被自動生成
根據你提供的數據

00:21:57.117 --> 00:21:59.453
如果你想要註明
那麼請小心

00:21:59.520 --> 00:22:01.154
不要讓數據出現偏差

00:22:01.588 --> 00:22:04.591
舉個例子 如果數據的範圍從1到10

00:22:04.658 --> 00:22:06.560
但註明的量程是從5到10

00:22:06.627 --> 00:22:09.363
那麼所有低於5的數字就被隱去

00:22:09.429 --> 00:22:11.598
數據就會失真

00:22:13.467 --> 00:22:16.837
終於我們建好了信息部件和圖表部件

00:22:17.204 --> 00:22:18.906
我們創建一個Insights概覽頁

00:22:18.972 --> 00:22:22.042
首先使用這兩種部件的數組
來初始化InsightsViewController

00:22:22.109 --> 00:22:24.144
指定一個標頭和一個副標題

00:22:24.478 --> 00:22:25.579
一個標題和副標題

00:22:26.246 --> 00:22:28.649
接下來直接展示它
得到這樣的

00:22:35.222 --> 00:22:37.090
這是創建Insights模塊方法

00:22:38.525 --> 00:22:39.860
下一項是連接模塊

00:22:40.494 --> 00:22:42.262
連接允許用戶分享數據

00:22:42.329 --> 00:22:44.164
給醫療組成員或者家庭成員

00:22:45.365 --> 00:22:47.501
爲了簡化這一操作

00:22:47.568 --> 00:22:49.503
我們創建了CareKit聯繫人

00:22:49.570 --> 00:22:50.838
它有兩種類型

00:22:51.405 --> 00:22:54.041
醫療組聯繫人
包括醫生或護士

00:22:54.274 --> 00:22:56.276
或者其他醫療組成員

00:22:56.643 --> 00:22:57.678
還有私人聯繫人

00:22:57.744 --> 00:22:59.847
可能包括密友或者家人

00:23:00.380 --> 00:23:03.383
觀察連接模塊時你會發現
聯繫人是根據類型分組的

00:23:04.151 --> 00:23:05.953
醫療組成員在上面

00:23:06.820 --> 00:23:08.789
下面是朋友和家人

00:23:09.156 --> 00:23:11.325
我們來看看代碼
怎樣創建聯繫人羣組

00:23:13.160 --> 00:23:15.128
要創建一個醫療聯繫人
首先定義一個變量

00:23:15.195 --> 00:23:17.364
類型是OCKContact的
PhysicianContact

00:23:17.965 --> 00:23:20.334
接着初始化聯繫人對象

00:23:20.400 --> 00:23:22.102
然後指定careTeam的類型
姓名

00:23:22.369 --> 00:23:24.538
他和病人的關係

00:23:24.738 --> 00:23:25.639
以及填充色

00:23:25.939 --> 00:23:28.775
接着是電話號碼、信息號碼
是CNPhoneNumber對象

00:23:28.842 --> 00:23:30.143
方便格式統一

00:23:30.911 --> 00:23:32.446
郵箱地址是字符串

00:23:32.713 --> 00:23:34.948
定義monogram數值

00:23:35.015 --> 00:23:36.283
或者指定圖片

00:23:36.350 --> 00:23:38.785
來顯示醫生或者醫療成員的頭像

00:23:41.154 --> 00:23:44.558
當所有聯繫人都創建完成後 請初始化
connectViewController

00:23:44.625 --> 00:23:47.394
然後把它展示出來

00:23:47.528 --> 00:23:49.530
但是這裏你依然需要編寫一個代理函數

00:23:49.596 --> 00:23:51.098
我們等一下會提到

00:23:51.932 --> 00:23:53.100
在我們呈現它之前

00:23:53.166 --> 00:23:54.868
需要把它內嵌到
NavigationController

00:23:54.935 --> 00:23:57.538
因爲連接模塊
同時包含主頁面和詳請頁面

00:23:59.139 --> 00:24:02.643
最後的連接模塊是這樣的
包含了ConnectViewController

00:24:03.410 --> 00:24:06.647
我們看看剛創建的聯繫人
Paul Cashman醫生

00:24:07.080 --> 00:24:08.248
如果點擊這一欄

00:24:08.315 --> 00:24:11.418
進入詳情頁
就能得到他的詳細名片

00:24:11.818 --> 00:24:15.022
在名片裏你能看到他所有的聯繫方式

00:24:15.088 --> 00:24:17.124
告訴你怎樣打電話發信息

00:24:17.491 --> 00:24:19.359
發短信或者郵件

00:24:20.994 --> 00:24:23.997
還能在下面發送報告給他

00:24:24.264 --> 00:24:26.099
代理在這裏產生作用

00:24:27.568 --> 00:24:31.538
連接代理讓聯繫人之間
數據共享成爲可能

00:24:31.605 --> 00:24:34.007
舉個例子
當用戶點擊分享按鈕

00:24:34.441 --> 00:24:35.542
這個函數被調用

00:24:35.976 --> 00:24:38.645
你會收到一個聯繫人對象

00:24:38.712 --> 00:24:42.282
你可以決定生成哪種報告
然後分享報告

00:24:43.116 --> 00:24:46.520
創建報告和分享報告的過程非常繁瑣

00:24:46.587 --> 00:24:48.989
看看我們是如何簡化它的

00:24:49.823 --> 00:24:54.394
爲了更方便地使用
連接模塊分享數據

00:24:54.461 --> 00:24:57.531
我們推出了
Document Exporter

00:24:58.599 --> 00:25:01.468
它從Care Plan Store
抓取信息

00:25:01.535 --> 00:25:05.205
甚至從其它來源
生成富文本PDF以供分享

00:25:06.640 --> 00:25:08.509
就像我們爲CareKit
做的所有事一樣

00:25:08.575 --> 00:25:11.278
爲了簡化流程
我們創建了CareKit文檔元素

00:25:11.945 --> 00:25:13.380
包括頁眉和頁腳

00:25:13.981 --> 00:25:19.353
文字和段落
圖片 圖表 和表格

00:25:19.887 --> 00:25:24.157
彙總這些元素
創建一個這樣的富文本PDF

00:25:30.631 --> 00:25:33.300
在這份PDF中
包含了病人的照片

00:25:33.667 --> 00:25:35.602
一份易讀的病情進展報告

00:25:35.969 --> 00:25:38.572
同Insights概覽頁一樣的圖表

00:25:38.639 --> 00:25:39.940
現在醫生也能看到了

00:25:40.007 --> 00:25:42.509
他們能看出病人的恢復情況

00:25:43.043 --> 00:25:45.846
還有一個表格
展示了所有的主觀和客觀的測量數據

00:25:45.913 --> 00:25:47.781
關於上一週的

00:25:48.515 --> 00:25:50.517
我們來看看創建這個PDF的代碼

00:25:50.617 --> 00:25:54.154
首先定義一個DocumentElementParagraph
對象 只包含了文本內容

00:25:54.221 --> 00:25:56.490
這些文本內容也可以來自
Care Plan Store

00:25:56.557 --> 00:25:57.658
或者遠程服務器

00:25:59.126 --> 00:26:01.428
然後定義一個
DocumentElementChart對象

00:26:01.495 --> 00:26:05.165
它幾乎使用了Insights
概覽頁同樣的圖表元素

00:26:05.232 --> 00:26:08.168
所以我們不用編寫任何新代碼
或者生成任何新圖表

00:26:09.269 --> 00:26:12.406
這個表格包含了許多的標題欄

00:26:12.673 --> 00:26:14.875
以及許多的數組

00:26:14.942 --> 00:26:17.678
每一個數組都包含了
每一行將要顯示的數據

00:26:17.744 --> 00:26:19.680
比如 一個星期的疼痛值數據

00:26:19.746 --> 00:26:21.782
或者 一個星期的點擊測試結果

00:26:23.450 --> 00:26:25.752
當你擁有了創建文檔的全部元素

00:26:25.819 --> 00:26:28.255
先初始化一個文檔對象
給它添加一個標題

00:26:28.655 --> 00:26:30.624
和一個包含所有元素的數組

00:26:31.658 --> 00:26:34.628
把這些文檔元素轉換成PDF
非常簡單直接

00:26:34.695 --> 00:26:36.663
只要調用
createPDFData方法

00:26:36.864 --> 00:26:39.166
使用返回到completionBlock的NSData

00:26:39.233 --> 00:26:40.567
最後輸出到文件URL

00:26:42.369 --> 00:26:44.771
現在 當用戶點擊分享按鈕

00:26:45.439 --> 00:26:48.909
PDF就被生成了 使用剛創建的
Document Exporter

00:26:49.877 --> 00:26:53.046
用戶可以預覽PDF
他們就能知道被分享的內容

00:26:53.814 --> 00:26:56.550
他們可以點擊分享按鈕
進入分享頁面

00:26:56.617 --> 00:26:59.052
選擇不同的方式來分享PDF

00:27:00.554 --> 00:27:03.624
這就是Document Exporter
它和連接模塊一同協作

00:27:03.690 --> 00:27:04.958
實現了數據分享

00:27:11.732 --> 00:27:14.701
所有的模塊放在一起
構成了CareKit框架

00:27:15.302 --> 00:27:18.172
Patient PAL
最近改變他們的就醫體驗

00:27:18.238 --> 00:27:19.139
使用CareKit

00:27:19.540 --> 00:27:21.608
我將爲大家展示
他們如何利用自定義功能

00:27:21.675 --> 00:27:23.177
來提升用戶體驗

00:27:23.243 --> 00:27:24.745
創建干涉活動
和評估

00:27:24.811 --> 00:27:26.613
來幫助病人恢復健康

00:27:27.748 --> 00:27:31.318
在他們的Care Card中
心型圖案被鍛鍊的小人替換

00:27:31.785 --> 00:27:33.287
他們應用的主要功能

00:27:33.520 --> 00:27:36.123
是幫助病人進行特定的鍛鍊

00:27:36.990 --> 00:27:39.560
比如說 如果你專心於髖關節伸展運動

00:27:39.626 --> 00:27:40.794
粉色的這一個

00:27:41.195 --> 00:27:43.430
需要點擊剩餘的圓圈來完成它

00:27:43.730 --> 00:27:47.000
但是在標註它爲完成之前
我們必須完成這組鍛鍊

00:27:49.036 --> 00:27:51.605
這組鍛鍊任務
包含了一則詳細的描述

00:27:51.672 --> 00:27:53.507
還有一個視頻

00:27:53.574 --> 00:27:55.742
保證用戶使用正確的方式鍛鍊

00:27:56.109 --> 00:27:58.779
他們甚至還幫助患者
記錄下自己的鍛鍊過程

00:27:58.846 --> 00:28:01.915
醫療機構也能看到這些信息

00:28:03.183 --> 00:28:06.220
點擊觀看視頻按鈕
會顯示出內嵌的視頻

00:28:06.286 --> 00:28:10.123
當你懂得這組鍛鍊後
點擊開始

00:28:10.190 --> 00:28:13.160
這個過程中將會有一個活動任務
引領你做完每一組鍛鍊

00:28:14.561 --> 00:28:15.796
一旦完成了鍛鍊

00:28:15.863 --> 00:28:18.699
你能看到完成進展度
自動被更新

00:28:18.765 --> 00:28:21.668
這個小圓圈就被標註成完成

00:28:21.735 --> 00:28:26.073
在Care Card上
我們爲每一組活動提供詳盡的信息

00:28:26.139 --> 00:28:28.775
同時你可以編寫代理函數
自主提供顯示信息

00:28:28.842 --> 00:28:30.744
他們另外一項自定義

00:28:30.811 --> 00:28:34.414
當用戶點擊其中一個細節界面時

00:28:34.481 --> 00:28:36.083
比如說韌帶拉伸頁面

00:28:36.683 --> 00:28:39.186
會喚起一個視圖控制器

00:28:39.253 --> 00:28:41.488
讓你設置鍛鍊提醒

00:28:41.722 --> 00:28:44.324
我已經完成了兩項

00:28:44.391 --> 00:28:47.828
第三項 我想在“晚上8點做”

00:28:48.729 --> 00:28:50.631
應用會給我推送提醒

00:28:50.697 --> 00:28:53.400
繼續完成我的鍛鍊

00:28:54.134 --> 00:28:56.303
CareKit提供了高度的可塑性

00:28:56.370 --> 00:28:58.438
你可以定製這些模塊
來滿足你的需求

00:28:58.972 --> 00:29:00.307
這只是其中一部分

00:29:02.276 --> 00:29:05.179
我們來到了最後一個部分
CareKit的下一步計劃是什麼

00:29:06.580 --> 00:29:09.349
目前 CareKit幫助你編寫
以患者爲中心的應用

00:29:10.350 --> 00:29:11.952
接下來 我們將專注於

00:29:12.019 --> 00:29:14.087
創建應用程序和雲服務器的連接

00:29:14.154 --> 00:29:16.023
以及把醫療信息

00:29:16.089 --> 00:29:18.058
從雲端傳遞給醫療團隊

00:29:18.725 --> 00:29:21.395
這一類架構
已經被運用到德克薩斯醫療中心應用

00:29:21.461 --> 00:29:23.063
和Patient PAL的應用上了

00:29:23.397 --> 00:29:24.665
我們由衷地希望

00:29:24.731 --> 00:29:27.734
你們在開發CareKit應用
並且連接到雲服務器時

00:29:27.801 --> 00:29:29.136
你們能分享自己的經驗

00:29:29.203 --> 00:29:32.739
回饋整個社區

00:29:32.806 --> 00:29:36.076
讓使用類似雲端解決方案的人
也能受益其中

00:29:37.978 --> 00:29:39.213
CareKit是開源項目

00:29:39.680 --> 00:29:41.448
它的未來取決於你

00:29:45.285 --> 00:29:46.520
請貢獻你的力量

00:29:46.587 --> 00:29:48.155
你能在GitHub找到該項目

00:29:48.488 --> 00:29:51.391
地址是
github.com/carekit-apple/carekit

00:29:53.060 --> 00:29:55.429
如果你想幫助我們完善CareKit

00:29:56.196 --> 00:29:59.366
請瀏覽GitHub上的
issues部分

00:29:59.700 --> 00:30:02.002
你可建立新的issue
或者選擇已經創建的

00:30:02.870 --> 00:30:03.837
進行開發

00:30:03.904 --> 00:30:05.539
請隨時聯繫我們或者社區成員

00:30:05.606 --> 00:30:07.774
如果開發中遇到任何問題

00:30:08.642 --> 00:30:10.477
和我們一起審查代碼

00:30:10.544 --> 00:30:13.647
這通常需要你、社區
和Apple工程師的參與

00:30:14.448 --> 00:30:16.617
我們的工作始於這裏

00:30:16.683 --> 00:30:19.386
當我們收到開發審查過的功能後

00:30:19.453 --> 00:30:23.056
我們將接手這項功能
給予它更多的訪問權限

00:30:23.724 --> 00:30:26.460
我們將使功能本地化
翻譯成CareKit支持的所有語言

00:30:27.427 --> 00:30:30.130
在所有平臺上
進行QA測試

00:30:30.864 --> 00:30:33.267
這個過程可能也會需要你們的幫助

00:30:33.433 --> 00:30:36.170
一旦這個功能可以使用
我們會把它併入框架

00:30:36.770 --> 00:30:39.506
有了CareKit
我們非常渴望和大家一起工作

00:30:39.573 --> 00:30:41.808
一起打造全新的醫療體驗

00:30:43.243 --> 00:30:45.012
更多信息 請瀏覽這個URL

00:30:45.078 --> 00:30:47.748
包括我們網站和GitHub的鏈接

00:30:48.148 --> 00:30:49.950
以及我們的聯繫信息

00:30:50.017 --> 00:30:51.552
如果有任何技術問題

00:30:51.618 --> 00:30:54.087
或者有任何CareKit應用
的想法要分享

00:30:55.756 --> 00:30:59.059
請瀏覽這些相關演講
幫你們創建自己的CareKit應用

00:30:59.326 --> 00:31:00.794
謝謝大家出席本場演講