00:00:19.786 --> 00:00:22.723 
iMessage應用和貼圖
第一部分介紹信息應用和貼圖

00:00:30.898 --> 00:00:32.698 
大家早上好

00:00:33.267 --> 00:00:36.003 
歡迎來到第一部分
iMessage應用和貼圖

00:00:36.270 --> 00:00:40.007 
我是Bhaskar 我是一個工程師
來自蘋果的信息團隊

00:00:41.675 --> 00:00:43.677 
今天我們要介紹iMessage應用

00:00:43.844 --> 00:00:46.246 
它的意義是你將能編寫應用

00:00:46.313 --> 00:00:49.082 
它運行在
短信應用的上下文中

00:00:51.118 --> 00:00:53.820 
iMessage應用可以提供
三種主要的內容

00:00:55.822 --> 00:00:58.559 
第一 它們可以
提供可交互的短信息

00:00:58.825 --> 00:01:02.196 
可交互的短信息是一種
你的應用生成的信息

00:01:02.262 --> 00:01:05.832 
而當你的用戶點擊這條信息時
它會啓動你的應用

00:01:06.433 --> 00:01:09.036 
比如說 在這裏展示的這個截圖中

00:01:09.436 --> 00:01:12.306 
我正使用DoorDash應用
向我的朋友們發送菜單

00:01:12.372 --> 00:01:14.308 
有關我們今晚的派對

00:01:14.808 --> 00:01:17.678 
他們將可以在手機上
看到這條短信息

00:01:17.945 --> 00:01:20.247 
而如果它們已經
安裝了這個應用

00:01:20.314 --> 00:01:23.417 
他們就可以點擊它
而點擊操作會啓動DoorDash

00:01:23.650 --> 00:01:25.919 
此時他們
就可以修改菜單了

00:01:25.986 --> 00:01:28.288 
向其中添加信息
並回復給我

00:01:30.257 --> 00:01:32.125 
iMessage應用也可提供貼圖

00:01:32.492 --> 00:01:35.963 
貼圖是你的應用
所生成的圖片

00:01:36.063 --> 00:01:38.532 
我們相信它可以創造一種很有趣的

00:01:38.599 --> 00:01:41.735 
交互性體驗
在iMessage用戶之間

00:01:44.505 --> 00:01:47.908 
最後 iMessage應用
可以提供任意其他種類的

00:01:47.975 --> 00:01:51.445 
短信息所能包含的內容
比如照片

00:01:51.678 --> 00:01:54.481 
視頻 文本 鏈接等等

00:01:57.518 --> 00:02:01.154 
且在iOS X中我們會提供一個
Message App Store

00:02:01.622 --> 00:02:03.724 
這意味着
你寫的應用

00:02:03.790 --> 00:02:06.460 
與你創造的應用會被
顯示並展示

00:02:06.527 --> 00:02:07.728 
在Messages App Store中

00:02:08.262 --> 00:02:11.331 
用戶可以通過短信息
來訪問這個App Store

00:02:11.398 --> 00:02:13.967 
它們將可以
下載你的應用

00:02:15.068 --> 00:02:17.504 
你的用戶
所下載的應用

00:02:17.571 --> 00:02:19.606 
將被展示在短信息的UI中

00:02:19.673 --> 00:02:21.475 
我們稱之爲Messages App Drawer

00:02:23.810 --> 00:02:26.914 
我們還有這個很強大的
功能 可以允許你的用戶

00:02:26.980 --> 00:02:29.116 
很輕鬆的
發現你的應用

00:02:29.383 --> 00:02:31.718 
我們稱之爲內聯應用歸屬

00:02:32.452 --> 00:02:34.922 
讓我們通過一個例子
來理解其含義

00:02:35.522 --> 00:02:38.792 
在這裏展示的截圖中
我收到了一個貼圖

00:02:38.859 --> 00:02:43.130 
來自我的朋友 但我沒有
安裝相關的應用

00:02:43.230 --> 00:02:44.598 
即他發送貼圖所使用的應用

00:02:45.332 --> 00:02:48.302 
這種情況下
你可以看到放大的單元格

00:02:48.669 --> 00:02:51.405 
在貼圖之下 我們可以看到
應用的名稱

00:02:51.471 --> 00:02:53.040 
也就是發送貼圖的應用

00:02:53.340 --> 00:02:56.009 
點擊這段文本就會啓動這個
Message App Store

00:02:56.076 --> 00:03:00.080 
並將發送貼圖的應用
展示給我

00:03:00.480 --> 00:03:02.716 
然後我就可以下載
這個應用並使用它

00:03:02.783 --> 00:03:04.051 
就像我使用
任何其他iMessage應用一樣

00:03:05.085 --> 00:03:10.390 
在這裏展示的這個例子中
我使用了貼圖作爲示例

00:03:10.457 --> 00:03:12.392 
來演示內聯應用歸屬

00:03:12.826 --> 00:03:17.064 
但它也適用於任何其他
iMessage應用所能生成的內容

00:03:20.667 --> 00:03:23.804 
並且創建一個iMessage應用
很類似於

00:03:23.871 --> 00:03:26.974 
創建任何的iOS應用
也就是你已經創建過的應用

00:03:27.374 --> 00:03:29.710 
你將可以使用
同一套技術

00:03:29.776 --> 00:03:31.912 
和框架
也就是你正在使用的

00:03:32.546 --> 00:03:35.983 
舉例來說 你可以使用的
一些工具包括

00:03:38.819 --> 00:03:41.255 
集成in-app purchase到你應用中

00:03:42.222 --> 00:03:44.024 
你可以訪問Apple Pay

00:03:45.392 --> 00:03:48.428 
而且你的iMessage應用
將可以使用相機

00:03:48.695 --> 00:03:53.500 
我們相信這些功能可以讓你
爲你的用戶創造很棒的應用

00:03:55.736 --> 00:03:57.838 
現在讓我們聊聊支持的平臺

00:03:58.038 --> 00:04:00.807 
iMessage應用
只能運行在iOS X中

00:04:02.376 --> 00:04:05.679 
但是 你的應用所
所生成的內容將被

00:04:05.746 --> 00:04:09.917 
發送到watchOS
和macOS設備並被查看

00:04:12.586 --> 00:04:15.822 
在watchOS 3.0中
在Messages應用中

00:04:15.889 --> 00:04:18.158 
我們將提供一個新頁面
叫做Recents Page

00:04:18.524 --> 00:04:22.296 
Recents Page
與其他頁面不同 會展示貼圖

00:04:22.396 --> 00:04:24.865 
你的用戶最近通過手機
所發送的

00:04:25.532 --> 00:04:28.101 
而你的用戶不止會看到
這些最近的貼圖

00:04:28.168 --> 00:04:31.271 
他們還可以在手錶上
發送這些貼圖

00:04:31.338 --> 00:04:33.340 
就好像是在手機上發送一樣

00:04:36.176 --> 00:04:38.045 
這就是有關Messages App Store

00:04:38.111 --> 00:04:39.713 
和短信息平臺的內容了

00:04:39.780 --> 00:04:42.583 
現在讓我們談談創建
iMessage應用的相關細節

00:04:43.350 --> 00:04:46.453 
這也是我們在剩下部分中
將要講述的內容

00:04:47.754 --> 00:04:49.857 
首先我們要說到
短信息框架

00:04:50.123 --> 00:04:53.827 
短信息框架是
你必須要熟悉的框架

00:04:53.894 --> 00:04:55.362 
來創建iMessage應用

00:04:56.797 --> 00:04:59.766 
然後我們會談到創建
Sticker Pack應用

00:05:01.435 --> 00:05:04.371 
而後我們要探索
有關貼圖文件格式的細節

00:05:04.505 --> 00:05:06.607 
以及其他有關貼圖的限制

00:05:08.108 --> 00:05:10.744 
最後我們會講到創建
一個定製貼圖體驗

00:05:10.811 --> 00:05:12.312 
通過使用短信息框架

00:05:13.580 --> 00:05:16.049 
我們不會在今天的演講中
講如何

00:05:16.116 --> 00:05:18.919 
創建一個應用
來提供交互性信息

00:05:19.286 --> 00:05:22.623 
我們會在第二部分講述
如何創建這樣的應用

00:05:22.689 --> 00:05:24.925 
在我們的談話中 我請求大家

00:05:24.992 --> 00:05:26.293 
一定要回來看第二部分

00:05:26.527 --> 00:05:29.229 
將會繼續在這裏進行
在週四下午1:40

00:05:31.498 --> 00:05:32.533 
短信息框架

00:05:32.833 --> 00:05:36.403 
短信息框架是一個全新的
我們要在iOS X中引入的框架

00:05:36.937 --> 00:05:38.906 
短信息框架扮演一個接口的角色

00:05:38.972 --> 00:05:41.808 
在你的iMessages應用
和短信息應用之間

00:05:42.643 --> 00:05:45.679 
當你的用戶點擊你的應用圖標
來啓動你的應用時

00:05:45.746 --> 00:05:48.482 
需要通過這個框架
讓我們發現你的應用

00:05:48.849 --> 00:05:51.818 
啓動你的應用 並將數據
提供給你的應用

00:05:51.885 --> 00:05:53.954 
以及其他你的應用所需要的上下文

00:05:54.021 --> 00:05:55.055 
來展示其UI

00:05:55.789 --> 00:05:59.426 
一旦你的應用
展示出UI且你的用戶

00:05:59.493 --> 00:06:00.661 
準備好與之交互時

00:06:01.328 --> 00:06:04.264 
並且在與應用
交互結束之時

00:06:04.331 --> 00:06:08.569 
最好能生成一些
你的用戶想要的內容

00:06:08.635 --> 00:06:14.007 
來通過短信息分享
你的應用將這個內容返回給

00:06:14.074 --> 00:06:15.843 
給短信息 通過這個框架

00:06:16.109 --> 00:06:19.513 
此時你的用戶已準備好
將返回的內容通過短信息分享

00:06:19.580 --> 00:06:21.348 
給他們正在聊天的人

00:06:22.916 --> 00:06:25.986 
我需要在這裏提到
短信息框架

00:06:26.153 --> 00:06:28.222 
和iMessage應用是構建在頂層

00:06:28.288 --> 00:06:30.490 
在現存的應用擴展技術中

00:06:31.291 --> 00:06:35.028 
在這個意義上
iMessage應用是一個應用擴展

00:06:35.128 --> 00:06:37.764 
而且在這種情況下
短信息應用扮演着

00:06:37.831 --> 00:06:40.767 
你的iMessage應用的
宿主應用的角色

00:06:42.736 --> 00:06:44.605 
如果你不熟悉

00:06:44.671 --> 00:06:47.875 
或者之前沒有寫過擴展的話
我建議

00:06:47.941 --> 00:06:50.878 
你返回去
看一看這個 WWDC 演講

00:06:50.944 --> 00:06:55.883 
在2014年介紹了
iOS和OS X的擴展

00:06:58.452 --> 00:07:01.755 
所以就如我剛剛提到的
iMessage應用是擴展

00:07:01.822 --> 00:07:03.690 
但是有一個很重要的區別

00:07:03.757 --> 00:07:06.059 
相較於其他iOS擴展而言

00:07:06.760 --> 00:07:09.496 
不像其他的擴展點
你不需要

00:07:09.563 --> 00:07:11.298 
提供一個容器應用

00:07:11.365 --> 00:07:12.633 
爲你的iMessage應用

00:07:12.699 --> 00:07:15.469 
你可以只在你想要時
裝載你的iMessage應用

00:07:16.336 --> 00:07:19.706 
但如果你已經有
一個容器應用

00:07:19.773 --> 00:07:21.909 
或者你已經傳送到了
App Store

00:07:21.975 --> 00:07:26.046 
你總是可以將iMessage應用
集成在容器應用中

00:07:26.113 --> 00:07:28.248 
因爲 正如我之前所說
這些都是擴展

00:07:31.051 --> 00:07:33.453 
所以如果你提供一個
容器應用

00:07:33.520 --> 00:07:36.523 
那你的應用將展示在
主界面中

00:07:36.590 --> 00:07:39.326 
在你的用戶的手機上
以及在Messages App Drawer

00:07:39.393 --> 00:07:40.294 
在短信息中

00:07:40.594 --> 00:07:42.663 
它同時還會展示在
主App Store

00:07:42.863 --> 00:07:44.398 
以及在Messages App Store中

00:07:45.165 --> 00:07:48.435 
但如果你不提供
一個容器應用 那麼

00:07:48.502 --> 00:07:50.871 
正如你所見
你的應用不會展示在

00:07:50.938 --> 00:07:53.874 
主界面以及
主App Store中

00:07:53.974 --> 00:07:56.677 
它只會展示在
Messages App Drawer中

00:07:56.743 --> 00:07:58.312 
以及在Messages App Store中

00:07:59.680 --> 00:08:03.984 
我想提一下如果你
不提供一個容器應用的話

00:08:04.051 --> 00:08:07.554 
你依然需要提供一個圖標
對應着你的容器應用

00:08:08.188 --> 00:08:11.124 
這個圖標會在
系統的其他部分中使用

00:08:11.191 --> 00:08:12.492 
比如設置應用中

00:08:12.559 --> 00:08:14.695 
要展示你的應用
的相關信息

00:08:14.761 --> 00:08:16.864 
比如
它所佔用的存儲空間

00:08:19.499 --> 00:08:21.101 
所以現在讓我們談談貼圖

00:08:21.535 --> 00:08:24.338 
貼圖是一種很有趣的
全新的交流方式

00:08:24.404 --> 00:08:25.906 
與其他iMessage用戶

00:08:27.040 --> 00:08:29.776 
你的用戶可以發送內聯貼圖

00:08:29.843 --> 00:08:32.379 
像你的用戶
已發送過的其他iMessage一樣

00:08:33.746 --> 00:08:36.717 
或者你的用戶 不是你的貼圖

00:08:36.783 --> 00:08:40.220 
或者你的用戶可以拖拽貼圖
到應用之外

00:08:40.287 --> 00:08:42.322 
並將它們附加到
其他短信息氣泡中

00:08:42.489 --> 00:08:45.959 
我們相信這會
帶來一種很具表現性的

00:08:46.026 --> 00:08:48.161 
且吸引人的短信息體驗

00:08:50.864 --> 00:08:52.399 
但貼圖對你而言意味着什麼？

00:08:52.999 --> 00:08:56.069 
貼圖根本上說是
你的應用所提供的圖片

00:08:57.171 --> 00:09:00.374 
這些圖片可以是動態的
也可以是靜態的

00:09:01.642 --> 00:09:04.044 
我們相信貼圖
是一種很好的分享

00:09:04.111 --> 00:09:06.346 
或提升你
所擁有的內容的方式

00:09:06.613 --> 00:09:09.049 
而且我們普遍認爲
貼圖應用將

00:09:09.116 --> 00:09:11.852 
會變得非常 非常流行
在iMessages用戶中

00:09:14.354 --> 00:09:16.223 
現在讓我們聊聊
創建貼圖應用

00:09:16.990 --> 00:09:18.825 
有兩種方式可以
創建一個貼圖應用

00:09:18.992 --> 00:09:22.963 
首先你可使用Xcode創建一個
Sticker Pack應用

00:09:23.297 --> 00:09:25.866 
如果你使用這種方式
你就無需

00:09:25.933 --> 00:09:28.302 
爲你的應用提供任何代碼

00:09:28.468 --> 00:09:30.304 
你只需要提供資源

00:09:30.370 --> 00:09:32.406 
爲了你的貼圖與應用圖標

00:09:33.874 --> 00:09:37.110 
但如果你想定製你的應用
你就可以通過提供代碼來實現

00:09:37.177 --> 00:09:39.913 
這種情況下 你的代碼
可以提供貼圖通過

00:09:39.980 --> 00:09:40.948 
短信息框架

00:09:43.717 --> 00:09:45.819 
現在讓我
展示一個演示

00:09:45.886 --> 00:09:48.388 
來使用Xcode創建一個
Sticker Pack應用

00:09:49.823 --> 00:09:54.094 
所以我現在要用我的電腦
我現在要啓動Xcode

00:09:55.996 --> 00:09:57.764 
現在我將要

00:09:57.831 --> 00:09:59.733 
創建一個新的Xcode項目

00:10:01.535 --> 00:10:03.904 
在應用的名稱中
我將要

00:10:03.971 --> 00:10:06.039 
選擇Sticker Pack應用

00:10:06.807 --> 00:10:08.342 
而後我將點擊Next

00:10:09.176 --> 00:10:12.212 
然後我將要命名我的項目
SFStickers作爲資源文件

00:10:12.346 --> 00:10:14.281 
我將要使用這些資源文件

00:10:14.348 --> 00:10:17.985 
作爲資源來描述不同的
舊金山地標

00:10:18.785 --> 00:10:19.820 
我點擊Next

00:10:20.821 --> 00:10:23.223 
現在讓我
創建在我的桌面上

00:10:24.024 --> 00:10:28.061 
我完成了 讓我很快速的
放大我的Xcode

00:10:28.462 --> 00:10:32.499 
太棒了 所以 如你所見
在你現在獲得的模板

00:10:32.566 --> 00:10:35.802 
在一個Sticker Pack
應用中沒有源代碼文件

00:10:36.303 --> 00:10:39.072 
這是這個模板的
慎重的設計

00:10:39.139 --> 00:10:40.874 
讓我重申一點

00:10:40.941 --> 00:10:42.843 
若創建Sticker Pack應用

00:10:42.910 --> 00:10:44.478 
你不用提供任何代碼

00:10:44.545 --> 00:10:47.281 
你只需提供貼圖
和應用圖標資源

00:10:47.881 --> 00:10:49.149 
所以讓我們看看如何實現

00:10:50.050 --> 00:10:51.418 
我進入Stickers

00:10:51.585 --> 00:10:53.587 
這是一個目錄
裏面有兩個文件

00:10:53.687 --> 00:10:56.857 
Sticker Pack
另是iMessage應用圖標

00:10:57.724 --> 00:10:59.259 
點擊Sticker Pack

00:10:59.927 --> 00:11:03.063 
現在 如你所見 它說
我沒有任何貼圖 我需要

00:11:03.130 --> 00:11:05.699 
拖放圖片
來添加新的貼圖

00:11:05.866 --> 00:11:06.700 
所以我照做

00:11:08.001 --> 00:11:11.705 
我進入Finder並進入桌面

00:11:12.272 --> 00:11:14.608 
我這裏有一些資源
我正好使用它們

00:11:15.442 --> 00:11:18.212 
所以我要點擊
第一個 我將要

00:11:18.278 --> 00:11:19.513 
將它拖拽到這裏

00:11:19.680 --> 00:11:21.081 
那就是金門大橋

00:11:22.516 --> 00:11:25.018 
我將要拖拽第二張了
這是唐人街

00:11:26.320 --> 00:11:28.522 
爲了更快速 我將

00:11:28.589 --> 00:11:32.326 
選擇剩下的所有
圖片並拖拽到這裏

00:11:33.327 --> 00:11:34.828 
太棒了 我現有所有資源了

00:11:35.596 --> 00:11:37.531 
這些資源是PNG類型的

00:11:37.831 --> 00:11:41.235 
Xcode還允許你
創建一個APNG貼圖

00:11:41.301 --> 00:11:43.370 
要使用PNG獨立幀

00:11:43.971 --> 00:11:45.339 
讓我演示一下如何完成

00:11:45.939 --> 00:11:48.442 
現在我將要點擊
或者在這裏右鍵單擊

00:11:48.809 --> 00:11:50.511 
我將要添加資源

00:11:51.311 --> 00:11:53.514 
我將要選擇New Sticker Sequence

00:11:54.414 --> 00:11:56.316 
當你創建一個新的
Sticker sequence時

00:11:56.383 --> 00:11:59.520 
Xcode需要你提供
獨立幀畫面

00:11:59.586 --> 00:12:01.522 
來構建你想創建的貼圖

00:12:02.789 --> 00:12:04.525 
所以我要返回到桌面

00:12:05.225 --> 00:12:07.761 
我要點擊這裏
我有我需要的獨立幀

00:12:09.129 --> 00:12:10.631 
我將要拖拽第一個

00:12:12.199 --> 00:12:13.734 
我將要把第二個也拖拽進去

00:12:15.302 --> 00:12:16.170 
第三個

00:12:16.970 --> 00:12:18.238 
最後是第四個

00:12:19.139 --> 00:12:21.542 
現在讓我們返回Xcode
來看看它完成了什麼

00:12:21.608 --> 00:12:24.344 
如你所見
我有一個放大的版本

00:12:24.411 --> 00:12:26.113 
屬於這個貼圖 通過點擊

00:12:26.180 --> 00:12:28.682 
它的中心會真實的
將動畫展示給我

00:12:28.749 --> 00:12:29.583 
看起來不錯

00:12:30.417 --> 00:12:32.486 
現在讓我把應用圖標也拖拽進來

00:12:33.587 --> 00:12:35.389 
我進入應用圖標分類

00:12:37.224 --> 00:12:38.225 
我進入這裏

00:12:39.660 --> 00:12:41.728 
我選擇這些東西

00:12:44.231 --> 00:12:45.165 
拖拽進這裏

00:12:45.332 --> 00:12:47.868 
我可能漏了一個
讓我很快再做一次

00:12:52.272 --> 00:12:54.274 
好了
現在我提供了應用圖標

00:12:54.608 --> 00:12:55.909 
現在我準備好了

00:12:55.976 --> 00:12:56.910 
我的應用完成了

00:12:56.977 --> 00:12:58.712 
現在讓我看看
它是什麼樣子

00:12:59.947 --> 00:13:01.882 
我將要進入這裏
來測試我的應用

00:13:01.949 --> 00:13:03.083 
使用模擬器

00:13:03.584 --> 00:13:06.787 
我將要選擇iPhone 6s
作爲用於測試的設備

00:13:07.788 --> 00:13:10.190 
我將要進入“產品”
並點擊“運行”

00:13:11.491 --> 00:13:14.294 
我現在只需要等待
讓它出現

00:13:14.962 --> 00:13:17.998 
太棒了 短信息已顯示
我在創建一個iMessage應用

00:13:18.065 --> 00:13:19.766 
我將要通過
Messages應用來測試

00:13:20.534 --> 00:13:21.568 
然後我要運行它

00:13:22.903 --> 00:13:24.404 
模擬器啓動了

00:13:24.471 --> 00:13:29.076 
太棒了 如你所見
我有兩段模擬對話

00:13:29.142 --> 00:13:30.811 
在模擬器Messages應用中

00:13:31.411 --> 00:13:34.147 
通過模擬對話
我想要表達的是如果你進入一個

00:13:34.214 --> 00:13:36.149 
併發送
一條短信息

00:13:36.216 --> 00:13:39.019 
它會展示一個來信
在另一個對話中

00:13:39.453 --> 00:13:42.623 
澄清一下 你將
無法發送短信息

00:13:42.689 --> 00:13:46.093 
從模擬器發送到真實設備上

00:13:46.393 --> 00:13:50.664 
所以我進入第一段對話
我輸入一點東西

00:13:52.866 --> 00:13:54.835 
此時我只是在自言自語

00:13:55.402 --> 00:13:57.471 
如你所見 這是我的短信息
太棒了

00:13:58.639 --> 00:14:00.541 
現在讓我看看
我的應用是什麼樣子

00:14:00.607 --> 00:14:03.243 
現在我進入App Drawer
你可以看到

00:14:03.410 --> 00:14:06.079 
我的應用在這裏已經準備好了
等待被啓動

00:14:06.647 --> 00:14:07.581 
我點擊它

00:14:09.082 --> 00:14:11.285 
看 資源在這裏顯示了

00:14:11.351 --> 00:14:15.389 
這些正是我
剛剛添加的資源 我可以下滑

00:14:17.457 --> 00:14:18.659 
看看他們是什麼樣子

00:14:18.725 --> 00:14:20.961 
現在 如你所見
動態PNG也在這裏

00:14:21.628 --> 00:14:24.464 
我可以點擊其中一個 拖出

00:14:24.965 --> 00:14:28.669 
並拖拽到應用之外
將其固定於一個短信息氣泡中

00:14:28.869 --> 00:14:31.505 
太棒了 如你所見
我可以退出

00:14:31.939 --> 00:14:34.374 
進入到另一個對話中
我在這裏看到了貼圖

00:14:35.275 --> 00:14:37.878 
所以這就是創建
一個Sticker Pack應用的全過程

00:14:38.111 --> 00:14:40.714 
但是 我還想
給你展示一點

00:14:40.781 --> 00:14:44.618 
那就是如何定製
這個應用的特定方面

00:14:45.085 --> 00:14:46.787 
所以現在回到資源貼圖

00:14:47.254 --> 00:14:49.990 
我現在會展示

00:14:50.057 --> 00:14:54.061 
如何改變你的貼圖
展示單元格的大小

00:14:54.394 --> 00:14:55.863 
在這個網格中

00:14:56.630 --> 00:14:58.832 
所以要實現這個目的
讓我回到Xcode

00:14:59.733 --> 00:15:03.470 
我將要點擊“去頂部”

00:15:03.804 --> 00:15:06.607 
如你所見
有一個下拉式菜單

00:15:06.673 --> 00:15:07.808 
名字是Sticker Size

00:15:08.041 --> 00:15:08.942 
我點擊它

00:15:09.176 --> 00:15:11.912 
有三個選項——大中小

00:15:12.379 --> 00:15:14.381 
我要點擊“大”
來看看如何

00:15:14.448 --> 00:15:15.883 
它能改變我的應用

00:15:17.084 --> 00:15:18.085 
我再次運行它

00:15:22.456 --> 00:15:23.857 
短信息應用被啓動

00:15:23.924 --> 00:15:25.592 
讓我回到我的應用

00:15:27.928 --> 00:15:28.929 
如你所見

00:15:29.329 --> 00:15:33.834 
貼圖現在一行
只展示兩個單元格更大

00:15:33.901 --> 00:15:35.369 
之間的空間也更大了

00:15:35.936 --> 00:15:39.239 
我將要深入
一些細節

00:15:39.306 --> 00:15:42.442 
來改變貼圖單元格的尺寸
在這個部分的後面

00:15:43.110 --> 00:15:44.077 
在這個演示中

00:15:44.611 --> 00:15:47.347 
我展示瞭如何創建
一個Sticker Pack應用

00:15:47.414 --> 00:15:49.783 
使用Xcode在這個技術中
正如我所展示給你

00:15:49.850 --> 00:15:51.585 
你不需要提供任何代碼

00:15:51.652 --> 00:15:55.756 
你只需要提供貼圖
的資源和你的應用圖標

00:15:57.090 --> 00:16:00.394 
我還展示瞭如何使用
Xcode內置的工具

00:16:00.460 --> 00:16:03.797 
來創建一個APNG貼圖
通過使用獨立幀

00:16:03.864 --> 00:16:04.898 
來組成APNG

00:16:06.166 --> 00:16:08.101 
最後 我們講到了如何

00:16:08.168 --> 00:16:09.970 
改變貼圖展示單元格的尺寸

00:16:11.438 --> 00:16:14.708 
現在讓我們說說支持的
貼圖文件格式

00:16:15.008 --> 00:16:16.577 
我們支持四種格式

00:16:16.677 --> 00:16:20.814 
它們是PNG APNG
JPEG和GIF

00:16:21.281 --> 00:16:23.016 
在這四種格式之外

00:16:23.083 --> 00:16:25.519 
如果你想提供動畫貼圖

00:16:25.586 --> 00:16:27.654 
我們還支持APNG和GIF

00:16:28.255 --> 00:16:31.658 
我還進行了特定優化來

00:16:31.825 --> 00:16:34.328 
讓貼圖的發送更加
快速 相較於

00:16:34.394 --> 00:16:37.497 
其他的iMessages附件
而且爲了降低

00:16:37.564 --> 00:16:39.533 
貼圖的磁盤存儲空間

00:16:39.800 --> 00:16:42.469 
並幫助我們
實現這些優化

00:16:42.536 --> 00:16:45.606 
我們需要限制文件大小
貼圖最大隻能有500kb

00:16:48.008 --> 00:16:50.878 
正如我剛纔所提到
我們支持四種文件格式

00:16:51.111 --> 00:16:56.083 
但是 我建議你
儘量使用PNG和APNG

00:16:56.149 --> 00:16:57.784 
若不能全部使用這兩種格式

00:16:58.285 --> 00:17:00.721 
爲了理解我們爲何
做此推薦 我們

00:17:00.787 --> 00:17:02.656 
看一下這些截圖

00:17:02.956 --> 00:17:07.027 
在這裏我有兩段對話
看起來幾乎一樣

00:17:07.094 --> 00:17:08.862 
但有一個微小的區別

00:17:09.195 --> 00:17:11.265 
讓我放大
來展示區別是什麼

00:17:13.534 --> 00:17:17.938  
如你所見
左邊的對話中的貼圖

00:17:18.005 --> 00:17:20.641  
放在照片上 是PNG格式的

00:17:21.474 --> 00:17:24.744  
右邊的對話
有同樣的圖片

00:17:24.810 --> 00:17:29.516  
和同樣的貼圖
但貼圖是GIF格式的

00:17:30.284 --> 00:17:33.453  
如果你仔細觀察
在放大區域中

00:17:33.720 --> 00:17:35.956  
左邊的那個 也就是PNG

00:17:36.190 --> 00:17:39.226  
不會顯示出任何鋸齒
在其邊界周圍

00:17:39.826 --> 00:17:42.162  
但右邊的那一個 也就是GIF

00:17:42.229 --> 00:17:43.697  
顯示出了一定的鋸齒

00:17:43.764 --> 00:17:45.299  
在貼圖的邊界區域

00:17:46.033 --> 00:17:47.835  
發生這種區別的原因是PNG

00:17:47.901 --> 00:17:51.638  
和APNG可以很好地處理透明

00:17:52.005 --> 00:17:54.608 
但GIF不能那麼好的
處理透明

00:17:55.275 --> 00:17:57.945 
然後如果你想要比較
透明屬性

00:17:58.011 --> 00:18:02.249 
JPEG事實上
根本不處理透明

00:18:02.649 --> 00:18:06.653 
所以要記住
你的貼圖可以被拖拽到

00:18:06.720 --> 00:18:09.256 
你的應用之外
並附加在短信息氣泡中

00:18:09.523 --> 00:18:12.993 
所以透明
是一個很重要的因素

00:18:13.060 --> 00:18:15.395 
需要在設計貼圖時加以考慮

00:18:16.163 --> 00:18:19.166 
我還建議你
親自嘗試你的貼圖

00:18:19.233 --> 00:18:20.801 
在不同的背景顏色中

00:18:20.868 --> 00:18:24.671 
比如黑色 白色
甚至多色背景

00:18:24.738 --> 00:18:27.174 
因爲 再說一次
你的貼圖會放到圖片上

00:18:29.042 --> 00:18:32.279 
在我剛剛所展示的演示用於改變尺寸

00:18:32.346 --> 00:18:35.349 
也就是貼圖所展示的單元格尺寸

00:18:35.849 --> 00:18:37.951 
有三種支持的單元格尺寸

00:18:38.018 --> 00:18:40.521  
它們是——大中小

00:18:41.188 --> 00:18:44.358  
對於每一種尺寸
我們有一個推薦的最大

00:18:44.424 --> 00:18:46.527  
貼圖尺寸
被支持

00:18:46.994 --> 00:18:51.732  
對於小貼圖是100乘100
像素在3x比例中

00:18:52.199 --> 00:18:56.003  
對於中等是136
乘136像素在3x比例中

00:18:56.203 --> 00:18:59.139  
對於大圖最大的
支持尺寸是206

00:18:59.239 --> 00:19:01.542  
乘206像素在3x比例中

00:19:02.109 --> 00:19:06.446 
如果你提供的貼圖比
大於這些尺寸

00:19:06.513 --> 00:19:09.249 
也就是你選擇的單元格大小
所支持的尺寸

00:19:09.416 --> 00:19:12.920 
那你的貼圖將被
短信息框架壓縮並展示

00:19:12.986 --> 00:19:17.958 
在這種情況下它們可能看起來
並不像你所想象的那樣

00:19:18.425 --> 00:19:22.396 
但如果你的貼圖是在範圍之內
那麼就可以正常展示

00:19:23.230 --> 00:19:26.533 
我還想澄清一點
我們總是需要你

00:19:26.600 --> 00:19:30.070 
不論如何要提供
3x比例的貼圖

00:19:30.137 --> 00:19:31.805 
相對於設備的分辨率

00:19:31.872 --> 00:19:33.841 
也就是應用所運行的設備

00:19:34.474 --> 00:19:37.544 
Messages應用負責
縮小你的貼圖

00:19:37.678 --> 00:19:39.546 
如果對於某設備而言需要縮小

00:19:39.613 --> 00:19:42.149 
也就是你的貼圖
正在展示的設備

00:19:43.884 --> 00:19:47.788 
這就是有關短信息框架
和創建貼圖應用的全部內容了

00:19:47.955 --> 00:19:50.057 
此時我將餘下任務
交給Lily

00:19:50.123 --> 00:19:53.160 
她會講解如何創建
一個定製貼圖體驗 謝謝大家

00:19:58.599 --> 00:19:59.633 
謝謝你 Bhaskar

00:19:59.933 --> 00:20:02.769 
我叫Lily 我是
短信息團隊的一個工程師

00:20:03.003 --> 00:20:06.406 
我將爲大家講解如何創建
一個定製貼圖應用

00:20:07.508 --> 00:20:10.544 
首先 爲什麼需要
創建一個定製貼圖應用呢？

00:20:10.911 --> 00:20:13.480 
你將獲得的
首要好處是

00:20:13.547 --> 00:20:16.583 
可以定製如何在你的
應用中展示貼圖

00:20:16.817 --> 00:20:19.686 
在我們剛纔的例子中
我們看到了展示的貼圖

00:20:19.753 --> 00:20:21.121 
在一個很漂亮的網格佈局中

00:20:21.255 --> 00:20:23.557 
但是如果你想
放置你的貼圖

00:20:23.624 --> 00:20:26.260 
以另外一種格式
甚至是改變背景顏色

00:20:26.326 --> 00:20:28.862 
你需要創建一個
定製貼圖應用

00:20:30.163 --> 00:20:32.566 
一個定製貼圖應用
還將允許你

00:20:32.633 --> 00:20:34.201 
動態的創建貼圖

00:20:34.434 --> 00:20:37.104 
在我們之前的例子中
我們將資源捆綁到

00:20:37.171 --> 00:20:38.939 
我們的應用中 而爲了

00:20:39.006 --> 00:20:40.807 
更新這些資源我們需要

00:20:40.874 --> 00:20:42.609 
向App Store推送更新

00:20:43.076 --> 00:20:45.145 
如果你想從服務器
獲取資源

00:20:45.212 --> 00:20:47.948 
或者允許你的用戶
在設備上動態的創建它們

00:20:48.015 --> 00:20:51.285 
若能這樣做 那麼你就不需要
想App Store上傳更新了

00:20:52.786 --> 00:20:56.023 
短信息擴展還
提供了相機的訪問權限

00:20:56.089 --> 00:20:59.092 
來允許你的用戶使用相機
創建有趣的貼圖

00:21:00.460 --> 00:21:04.097 
最終你的應用還可集成
In-app purchase

00:21:04.164 --> 00:21:06.400 
來允許你的用戶解鎖特定貼圖

00:21:06.967 --> 00:21:09.369 
我們可以創建一個定製
貼圖應用 通過使用

00:21:09.436 --> 00:21:10.470 
短信息框架

00:21:10.804 --> 00:21:13.073 
短信息框架
提供了構件

00:21:13.140 --> 00:21:14.942 
來創建一個貼圖應用

00:21:15.309 --> 00:21:18.512 
在通過Xcode構建的
Sticker Pack應用示例中

00:21:18.579 --> 00:21:20.848 
它們使用了同樣的類
在這個框架中

00:21:20.948 --> 00:21:23.483 
所以理想情況下你可以
創建同樣的應用通過使用

00:21:23.550 --> 00:21:24.518 
短信息框架

00:21:25.018 --> 00:21:27.554 
在屏幕上的截圖中

00:21:27.621 --> 00:21:30.190 
我們有一個應用
正在展示貼圖

00:21:30.257 --> 00:21:32.593 
你可以發現
背景顏色是粉色的

00:21:32.860 --> 00:21:36.363 
所以我將向大家展示如何定製
並創建一個這樣的應用

00:21:36.496 --> 00:21:37.664 
現在讓我們看一個演示

00:21:40.234 --> 00:21:41.835 
我現在要打開Xcode

00:21:43.837 --> 00:21:45.539 
我要創建一個新的項目

00:21:46.807 --> 00:21:48.909 
Bhaskar創建了一個
Sticker Pack應用

00:21:48.976 --> 00:21:51.578 
但這次我們要創建
一個短信息應用

00:21:51.945 --> 00:21:53.280 
所以我要選擇這個

00:21:54.181 --> 00:21:56.917 
然後我將項目命名爲
“Nature Stickies”

00:21:56.984 --> 00:21:59.319 
因爲我們要使用自然資源

00:21:59.686 --> 00:22:02.256 
我們要繼續
創建這個項目

00:22:02.489 --> 00:22:03.857 
我們要在桌面上打開它

00:22:04.892 --> 00:22:05.726 
很棒

00:22:07.094 --> 00:22:09.229 
如你所見
我們這裏有兩個文件夾

00:22:09.296 --> 00:22:11.532 
Nature Stickies
和Messages Extension

00:22:11.698 --> 00:22:13.400 
Nature Stickies
不包含任何源代碼

00:22:13.467 --> 00:22:15.769 
因爲它包含了
捆綁的應用

00:22:15.836 --> 00:22:19.006 
你將需要提供一個應用圖標
給系統的設置

00:22:19.139 --> 00:22:22.643 
但是 我們更感興趣的是
Messages Extension文件夾

00:22:23.076 --> 00:22:25.746 
所以現在我們要點擊
MessagesViewController

00:22:26.513 --> 00:22:28.549 
然後我們可以看到
MessagesViewController

00:22:28.615 --> 00:22:30.217 
將是我們最主要的類

00:22:30.450 --> 00:22:33.520 
它是
MSMessagesAppViewController的子類

00:22:33.820 --> 00:22:37.491 
MSMessagesAppViewController
將作爲控制器

00:22:37.558 --> 00:22:40.127 
來處理來自
短信息應用的回調

00:22:40.627 --> 00:22:42.596 
我們將會更多的說到
這些回調

00:22:42.663 --> 00:22:44.865 
以及你的應用
如何處理它們

00:22:44.932 --> 00:22:46.200 
在我們講座的第二部分中

00:22:46.300 --> 00:22:49.002 
現在讓我們來刪掉這些函數

00:22:49.903 --> 00:22:54.875 
我將要選擇他們
並點擊“刪除”

00:22:55.576 --> 00:22:58.579 
很棒 現在我們看看
短信息框架

00:22:59.346 --> 00:23:03.250 
如果我們點擊這裏就會有一個
MSStickerBrowserViewController

00:23:03.483 --> 00:23:05.219 
MSStickerBrowseViewController

00:23:05.285 --> 00:23:06.987 
將允許我們展示貼圖

00:23:07.287 --> 00:23:08.655 
它有兩個屬性

00:23:08.956 --> 00:23:10.924 
它有一個MSStickerBrowserView

00:23:10.991 --> 00:23:13.527 
這是用於展示
貼圖的視圖

00:23:13.594 --> 00:23:17.664 
它還有一個MSStickerSize
來決定展示單元格的尺寸

00:23:17.731 --> 00:23:20.701 
在我們MSStickerBrowserView的網格中

00:23:21.101 --> 00:23:24.171 
我們還可以看到
MSStickerBrowserViewController

00:23:24.238 --> 00:23:27.474 
符合MSStickerBrowserView
DataSource協議

00:23:27.774 --> 00:23:30.744 
這個協議被實現時
會返回一個數字

00:23:30.811 --> 00:23:33.046 
也就是應用正在
展示的貼圖的數字

00:23:33.113 --> 00:23:36.884 
和與給定數字對應的貼圖
提供給MSStickerBrowserView

00:23:37.217 --> 00:23:38.685 
所以爲了展示我們的貼圖

00:23:38.752 --> 00:23:41.522 
我們需要創建
一個MSStickerBrowserViewController

00:23:41.588 --> 00:23:44.791 
爲了實現數據源
我們將要寫一個子類

00:23:45.025 --> 00:23:47.861 
所以我現在要
創建一個新文件

00:23:49.897 --> 00:23:52.432 
我要選擇Swift
並點擊“下一步”

00:23:52.866 --> 00:23:58.172 
我將把它命名爲
NatureStickerBrowserViewController

00:24:01.341 --> 00:24:04.278 
太棒了 現在我要
導入UIKit

00:24:06.480 --> 00:24:09.216 
然後我要
導入短信息

00:24:10.217 --> 00:24:13.220 
太棒了 現在讓我們創建我們的類

00:24:13.887 --> 00:24:15.889 
我將要創建

00:24:15.956 --> 00:24:18.425 
我們的NatureStickerBrowser
ViewController類

00:24:18.492 --> 00:24:21.228 
作爲MSStickerBrowserViewController
的子類

00:24:21.562 --> 00:24:24.264 
如我剛纔所提到的
MSStickerBrowserViewController

00:24:24.364 --> 00:24:26.767 
有兩個數據源方法
我們需要實現它們

00:24:26.834 --> 00:24:29.069 
所以我要填充它們

00:24:30.504 --> 00:24:31.538 
我們需要一個方法

00:24:31.605 --> 00:24:33.373 
來創建我們的貼圖並存儲

00:24:33.740 --> 00:24:37.444 
我將要創建
一個隊列來持有我們的貼圖

00:24:38.879 --> 00:24:42.416 
然後我們將看到
我們的貼圖在MSSticker中

00:24:42.482 --> 00:24:45.619 
MSSticker是一個對象
它持有一個文件URL

00:24:45.686 --> 00:24:47.321 
指向一個磁盤上的資源

00:24:47.654 --> 00:24:49.823 
它還將有一個局部的描述

00:24:49.890 --> 00:24:51.758 
用於限制可訪問性

00:24:52.492 --> 00:24:54.328 
現在讓我們創建一個貼圖

00:24:55.229 --> 00:24:58.298 
我將直接
添加資源進bundle包

00:24:58.599 --> 00:25:02.569 
我現在要點擊Add Files
並進入我的桌面

00:25:03.203 --> 00:25:06.139 
並選擇這裏的資源

00:25:07.407 --> 00:25:09.243 
我將它們添加到了我的應用中

00:25:09.510 --> 00:25:12.212 
在這個例子中
我們只是添加資源進了我們的應用

00:25:12.279 --> 00:25:16.183 
但你可以想象你的應用
既不能從你的服務器獲取這些資源

00:25:16.250 --> 00:25:18.418 
也不能允許你的用戶
在設備上創建

00:25:18.785 --> 00:25:20.787 
所以現在我們需要創建一個貼圖

00:25:22.789 --> 00:25:24.892 
我們要寫一個函數來實現這個目的

00:25:25.859 --> 00:25:28.929 
太棒了 現在我們使用Bundle

00:25:28.996 --> 00:25:31.932 
我們創建一個文件URL
指向磁盤上我們的資源

00:25:31.999 --> 00:25:34.034 
然後初始化我們的MSSticker

00:25:34.101 --> 00:25:36.870 
並提供一個局部化描述
然後添加到我們的數列中

00:25:37.171 --> 00:25:40.407 
所以現在讓我們寫一個函數
它會加載所有的貼圖

00:25:43.544 --> 00:25:47.114 
酷 我們可以回到
MessagesViewController

00:25:47.981 --> 00:25:49.850 
並創建一個實例

00:25:51.585 --> 00:25:53.820 
我們將要創建一個NatureStickerBrowser

00:25:53.887 --> 00:25:57.791 
ViewController將其
實例化並調用viewDidLoad

00:26:01.061 --> 00:26:04.898  
太棒了 我們實例化了
browserViewController

00:26:04.965 --> 00:26:06.400  
並提供了一個貼圖尺寸

00:26:06.466 --> 00:26:09.236  
這將允許你的應用
來顯示你的貼圖

00:26:09.303 --> 00:26:11.371 
在我們剛纔所展示的
網格佈局中

00:26:11.738 --> 00:26:16.276 
這個應用會創建一個貼圖應用就像剛纔
使用Xcode沒寫代碼創建的一樣

00:26:16.376 --> 00:26:18.212 
現在讓我們繼續定製它

00:26:18.345 --> 00:26:21.415 
我要寫一個函數
它將改變背景顏色

00:26:21.481 --> 00:26:23.217 
也就是MSStickerBrowserView的背景顏色

00:26:24.451 --> 00:26:26.386 
所以我們要在這裏寫這個函數

00:26:26.820 --> 00:26:29.790 
我們只是要改變背景顏色

00:26:30.123 --> 00:26:32.693 
我將回到
MessagesViewController

00:26:32.759 --> 00:26:33.627 
並調用它

00:26:36.797 --> 00:26:39.766 
所以現在我們可以改變背景

00:26:39.967 --> 00:26:42.636 
讓我們繼續
運行一下我們的應用

00:26:44.238 --> 00:26:46.139 
我要選擇iPhone 6s

00:26:46.573 --> 00:26:47.774 
我要點擊“運行”

00:26:52.513 --> 00:26:56.083 
唉 我忘記了 我們沒有
實現我們的數據源

00:26:56.350 --> 00:26:57.651 
所以我們現在要做這件事

00:26:58.452 --> 00:27:02.890  
我要返回
貼圖的數字並

00:27:02.956 --> 00:27:07.194  
返回一個貼圖
與給定數字對應

00:27:07.828 --> 00:27:09.229  
現在我們準備好運行了

00:27:11.265 --> 00:27:13.834 
我要選擇Message應用
用於運行應用

00:27:20.641 --> 00:27:23.343  
太棒了 現在我們可以
打開App Drawer

00:27:25.646 --> 00:27:26.580 
然後

00:27:26.880 --> 00:27:29.449 
你看 我們沒有一個圖標
因爲我們忘記添加了

00:27:29.516 --> 00:27:32.352 
我們也將看到
應用叫Messages Extension

00:27:32.553 --> 00:27:34.521 
爲了改變
展示的名稱

00:27:34.588 --> 00:27:36.356 
我們需要進入我們的項目

00:27:36.423 --> 00:27:39.960 
點擊Messages Extension Target
然後可以在這裏修改

00:27:42.796 --> 00:27:45.599 
現在我們只需看看
我們的應用是什麼樣子

00:27:49.136 --> 00:27:52.306 
你可以看到我們有
一個應用能提供貼圖

00:27:52.372 --> 00:27:53.574 
在粉紅背景色

00:27:54.007 --> 00:27:55.275 
這就是一個小例子了

00:27:55.342 --> 00:27:57.711 
有關你如何定製
你的貼圖應用

00:27:57.911 --> 00:27:59.379 
現在讓我們回到幻燈片

00:27:59.813 --> 00:28:01.481 
來重述一下我們剛纔所講的

00:28:01.982 --> 00:28:05.185 
我們介紹了
MSStickerBrowserViewController

00:28:05.252 --> 00:28:07.221 
這個ViewController
將展示貼圖

00:28:07.287 --> 00:28:10.591 
在你的應用中
使用MSStickerBrowserView

00:28:10.924 --> 00:28:12.860  
這個控制器遵守

00:28:12.926 --> 00:28:15.462  
MSStickerBrowserViewDataSource協議

00:28:15.929 --> 00:28:17.698  
這個協議會返回一個數字

00:28:17.764 --> 00:28:20.067  
與你的應用將要展示
的貼圖相對應

00:28:20.133 --> 00:28:21.201  
以及給定的貼圖

00:28:21.268 --> 00:28:24.404  
我們還介紹了
MSMessagesAppViewController

00:28:24.705 --> 00:28:28.075  
這個ViewController
是你的主要類將要繼承的類

00:28:28.375 --> 00:28:31.144  
這個MSMessagesAppViewController
處理回調

00:28:31.211 --> 00:28:32.779  
來自Messages應用

00:28:32.846 --> 00:28:34.848  
我們將分享更多的內容 在第二部分中

00:28:34.915 --> 00:28:37.217  
以及你的應用如何
能處理這些回調

00:28:37.651 --> 00:28:40.888 
這就是一個小例子
展示瞭如何定製一個貼圖應用

00:28:40.954 --> 00:28:44.224 
它只是改變了背景顏色
如果我們還想進行更多的改變呢？

00:28:45.392 --> 00:28:49.930 
你的應用可以添加貼圖
支持通過使用兩個類

00:28:49.997 --> 00:28:52.232 
MSStickerView
和MSSticker

00:28:52.866 --> 00:28:55.602 
所以如果我們想創建一個應用
能展示貼圖

00:28:55.669 --> 00:28:58.872 
以一種與MSStickerBrowserViewController
不同的方法

00:28:58.939 --> 00:29:02.042 
我們就可以通過
使用這兩個類來完成

00:29:02.409 --> 00:29:05.479 
在這個例子中
我有一個應用

00:29:05.546 --> 00:29:09.116 
這個應用實際上就在使用
UICollectionViewController

00:29:09.183 --> 00:29:10.384 
來展示貼圖

00:29:10.884 --> 00:29:14.688 
每一個UICollectionView的單元格
都有一個MSStickerView

00:29:14.755 --> 00:29:17.691 
MSStickerView這個類
將能提供

00:29:17.758 --> 00:29:19.826 
貼圖的拖拽釋放功能

00:29:19.893 --> 00:29:21.395 
進入短信息文本中

00:29:22.095 --> 00:29:24.431 
我們還可以看到
這裏有一個Plus圖標

00:29:24.498 --> 00:29:26.333 
它並沒MSStickerView

00:29:26.400 --> 00:29:28.735 
點擊它就會擴展我們的應用

00:29:28.902 --> 00:29:31.905 
允許我們選擇一個貼圖
並添加到我們的收藏中

00:29:33.740 --> 00:29:35.209  
還有要注意我們可以

00:29:35.275 --> 00:29:37.744  
改變我們的貼圖的展示形式

00:29:37.811 --> 00:29:39.580  
你的應用可以由

00:29:39.646 --> 00:29:42.049  
緊湊模式進入到擴展模式

00:29:42.316 --> 00:29:44.117  
你的用戶可以切換

00:29:44.184 --> 00:29:46.520  
通過點擊
底部的人字形圖案

00:29:46.587 --> 00:29:49.022  
所以你的應用將
需要能處理

00:29:49.089 --> 00:29:51.258  
處在緊湊模式
和擴展模式

00:29:51.491 --> 00:29:53.627  
我將展示給大家
如何處理這些回調

00:29:53.694 --> 00:29:55.462  
並創建一個這樣的應用

00:29:55.629 --> 00:29:57.097  
現在讓我們進入另一個演示

00:29:59.566 --> 00:30:01.935 
我將打開一個
我已經準備好的應用

00:30:02.669 --> 00:30:04.171 
它叫Sticker Picker

00:30:07.875 --> 00:30:09.376 
我們把它放大

00:30:09.743 --> 00:30:12.412 
太棒了 我們現回到了
MessagesViewController

00:30:12.546 --> 00:30:14.381 
再一次 這是我們的主要類

00:30:14.448 --> 00:30:17.317 
它繼承了
MSMessagesAppViewController

00:30:17.885 --> 00:30:19.820 
我們展示了兩個視圖

00:30:19.887 --> 00:30:22.422 
UICollectionView
它持有MSStickerViews

00:30:22.489 --> 00:30:26.193 
我們還有一個視圖
來添加貼圖進入我們的應用

00:30:26.260 --> 00:30:28.161 
這兩個視圖
將表現在

00:30:28.228 --> 00:30:30.430 
一個StickerPickerCollection
ViewController中

00:30:30.564 --> 00:30:32.499 
以及在一個AddStickersViewController中

00:30:33.133 --> 00:30:36.336 
現在讓我們看一看
StickerPickerCollectionViewController

00:30:37.271 --> 00:30:39.439 
StickerPickerCollectionViewController

00:30:40.007 --> 00:30:42.910 
繼承了UICollectionViewController

00:30:43.143 --> 00:30:45.479 
我們將操作的Item稱作
CollectionViewItem

00:30:45.712 --> 00:30:48.649 
它還可以是
AddSticker Item

00:30:48.715 --> 00:30:49.983 
或者可以是一個貼圖

00:30:50.117 --> 00:30:52.219 
現在讓我們繼續
看看貼圖單元格

00:30:53.053 --> 00:30:55.422 
貼圖單元格中有一個
MSStickerView

00:30:55.789 --> 00:30:58.759 
MSStickerView
將有一個貼圖

00:30:59.693 --> 00:31:03.363 
並且 爲了處理你的
動態貼圖的動畫

00:31:03.430 --> 00:31:06.800 
我們需要調用
startAnimating和stopAnimating

00:31:06.867 --> 00:31:09.036 
在我們展示
MSStickerView的時候

00:31:09.870 --> 00:31:12.906 
所以我們回到
StickerPickerCollectionViewController

00:31:14.808 --> 00:31:19.479 
很棒 當我們創建
ViewController時

00:31:19.546 --> 00:31:21.348 
創建我們所有的Item

00:31:21.782 --> 00:31:23.650 
我們將創建一個
AddStickerItem

00:31:23.717 --> 00:31:26.753 
然後我們將加載所有的貼圖
就像我們剛纔所做的一樣

00:31:27.120 --> 00:31:29.590 
返回collectionView
中Item的數量

00:31:29.957 --> 00:31:32.993 
然後我們要創建貼圖單元格
或Add Sticker 單元格

00:31:33.060 --> 00:31:34.995 
給一個Item與給定數字路徑對應

00:31:36.396 --> 00:31:38.799 
當創建貼圖單元格時
我們想要

00:31:38.866 --> 00:31:41.668 
賦予stickerView的貼圖值

00:31:41.735 --> 00:31:43.136 
我們就這樣做了

00:31:48.509 --> 00:31:51.211 
我們已經將一個貼圖
放到了stickerView中

00:31:51.712 --> 00:31:54.281 
並且 如我所提到的
我們的貼圖可以是動態的

00:31:54.381 --> 00:31:57.484 
我們將需要調用
啓動動畫和終止動畫

00:31:57.551 --> 00:31:59.253 
來控制這些動畫

00:31:59.353 --> 00:32:01.955 
當我們要展示
我們的貼圖時我們想要

00:32:02.022 --> 00:32:05.158 
調用startAnimating
我們再展示我們的貼圖時

00:32:05.225 --> 00:32:07.194 
我們將要調用
stopAnimating

00:32:07.461 --> 00:32:08.929 
我們可以寫一個函數來檢查

00:32:08.996 --> 00:32:10.931 
貼圖是否是可動的

00:32:11.098 --> 00:32:15.369 
通過加載圖片文件URL
並通過CG圖片源

00:32:15.435 --> 00:32:17.137 
統計幀數

00:32:17.204 --> 00:32:18.672 
如果有多於一幀

00:32:18.739 --> 00:32:20.607 
那麼我們就知道
這是一個動態貼圖

00:32:21.308 --> 00:32:23.610 
所以我們就要
實現這個方法

00:32:24.778 --> 00:32:26.146 
我們將檢查來看看

00:32:26.213 --> 00:32:28.615 
我們的貼圖單元格中的貼圖是否動態

00:32:28.682 --> 00:32:31.451 
如果是 那麼我們
就調用startAnimating

00:32:32.619 --> 00:32:34.555 
當我們結束展示單元格時

00:32:36.423 --> 00:32:40.961 
我們就要檢查
貼圖是否在動 如果是

00:32:41.028 --> 00:32:42.596 
我們就調用
stopAnimating

00:32:43.497 --> 00:32:46.600 
太棒了 讓我們回到
MessagesViewController

00:32:47.668 --> 00:32:50.571 
我們將實例化
StickerPickerViewController

00:32:50.637 --> 00:32:54.441 
因爲我們需要在啓動應用
時加載這個視圖

00:32:54.608 --> 00:32:57.377 
在viewDidLoad完成
這個操作 然後展示

00:32:57.911 --> 00:33:00.180 
當用戶點擊Add圖標時

00:33:00.848 --> 00:33:03.283 
我們需要創建
AddStickersViewController

00:33:03.584 --> 00:33:06.420 
然後我們就需要
轉換到擴展模式

00:33:06.486 --> 00:33:09.389 
我們可以通過調用
requestPresentationStyle來完成

00:33:09.456 --> 00:33:11.391 
這會告訴Messages應用

00:33:11.458 --> 00:33:13.760 
你的應用需要被擴展

00:33:14.094 --> 00:33:16.396 
你會收到一個來自
Messages應用回調

00:33:16.463 --> 00:33:18.165 
一旦你完成轉換

00:33:18.298 --> 00:33:22.135 
在didTransitiontopresentationStyle
中我們將收到回調

00:33:22.336 --> 00:33:23.704 
我們需要先檢查

00:33:23.770 --> 00:33:25.806 
我們是否有AddStickersViewController

00:33:25.873 --> 00:33:29.009 
如果是的話
我們的展示風格是擴展的

00:33:29.076 --> 00:33:30.677 
我們就展示這個視圖

00:33:30.744 --> 00:33:34.047 
不然我們就展示另一個視圖
用在緊湊模式下

00:33:34.114 --> 00:33:37.084 
在我們選擇一個貼圖後
我們需要返回到緊湊模式

00:33:37.150 --> 00:33:40.020 
所以我們要再一次調用
requestPresentationStyle

00:33:40.087 --> 00:33:40.954 
.compact

00:33:41.421 --> 00:33:44.625 
所以如果我們運行應用我們就可以
看到真實情況

00:33:46.193 --> 00:33:48.295 
所以我現在要
選擇Messages應用

00:33:48.362 --> 00:33:50.030 
作爲運行的應用

00:33:53.333 --> 00:33:55.402  
然後我們要啓動

00:33:56.303 --> 00:33:58.238 
我將要點擊App Drawer

00:33:59.740 --> 00:34:02.075 
我們將要
點擊Sticker Picker

00:34:04.645 --> 00:34:05.812 
等待它加載好

00:34:09.449 --> 00:34:13.085 
太棒了 現在我們可以
添加一個貼圖

00:34:14.655 --> 00:34:16.556 
我要選擇這個很可愛的大熊貓

00:34:17.558 --> 00:34:19.226 
我們可以看到它是動態的

00:34:19.293 --> 00:34:20.761 
然後我們就可以發送貼圖

00:34:22.896 --> 00:34:25.899 
重述一下我們剛纔
所講的 我們首先介紹了

00:34:25.966 --> 00:34:30.137 
展示瞭如何創建一個貼圖應用
使用UICollectionView

00:34:30.204 --> 00:34:32.639 
然後在每一個單元格中
UICollectionView中

00:34:32.706 --> 00:34:34.507 
我們有個MSStickerView

00:34:34.608 --> 00:34:37.643  
MSStickerView允許
我們拖拽釋放貼圖

00:34:37.710 --> 00:34:40.514  
進入編輯文本中
它也有一個MSSticker

00:34:41.614 --> 00:34:44.217  
我們還展示瞭如何你
可以從緊湊模式轉換到

00:34:44.284 --> 00:34:46.053  
擴展展示模式

00:34:46.253 --> 00:34:48.856  
我們還展示了你如何
可以處理這些回調

00:34:48.922 --> 00:34:50.357  
來自Messages 應用

00:34:50.489 --> 00:34:54.527  
要記住你的用戶可以通過
點擊人字形圖案來切換

00:34:54.594 --> 00:34:57.231  
所以在設計應用時
記住這一點

00:34:59.099 --> 00:35:01.768 
Bhaskar講了我們使用的
貼圖文件格式

00:35:01.835 --> 00:35:03.971 
創建Sticker Pack應用時

00:35:04.104 --> 00:35:07.941 
這些同樣的文件格式
適用於創建一個定製貼圖應用

00:35:08.208 --> 00:35:10.010 
所以總結一下我們今天所講的

00:35:10.244 --> 00:35:14.147 
我們介紹了iMessage應用
作爲一個平臺提供給各位開發者

00:35:14.648 --> 00:35:18.018 
這是一種新的與短信息
交互的方法 很有趣且令人激動

00:35:18.485 --> 00:35:22.556 
我們還介紹了短信息框架以及如何創建
Sticker Pack應用

00:35:22.623 --> 00:35:23.991 
通過短信息框架

00:35:25.058 --> 00:35:27.461 
展示如何創建
Sticker Pack應用

00:35:27.528 --> 00:35:29.296 
使用Xcode 不用寫代碼

00:35:29.863 --> 00:35:33.834 
以及如何通過寫程序
創建一個定製貼圖應用

00:35:34.434 --> 00:35:35.736 
在我們講話的第二部分中

00:35:35.802 --> 00:35:37.704 
我們將向大家展示如何創建一個應用

00:35:37.771 --> 00:35:40.974 
能允許你的應用
發送可交互的短信息

00:35:41.441 --> 00:35:43.710 
如需更多信息
請訪問網站

00:35:44.278 --> 00:35:46.880 
我們會有一個相關會話
依舊在Presidio

00:35:46.947 --> 00:35:48.649 
週四下午1:40

00:35:48.916 --> 00:35:49.950 
很感謝大家

00:35:50.217 --> 00:35:53.320 
我們等不及看到你們的創造
請一定要來我們的實驗室

00:35:53.387 --> 00:35:54.521 
接下來的會議過得愉快