00:00:19.553 --> 00:00:22.689
高級通知推送 演講708

00:00:31.231 --> 00:00:32.131
早上好

00:00:32.399 --> 00:00:34.701
歡迎來到“高級通知推送”

00:00:35.435 --> 00:00:39.540
我是Michele
今天我們的話題

00:00:39.606 --> 00:00:41.742
包括在iOS X系統上的新通知

00:00:42.910 --> 00:00:45.779
我們會從新通知的用戶界面開始

00:00:45.846 --> 00:00:49.850
我們會先介紹一下本次演講的大致內容
然後會講iOS X系統中的改動

00:00:51.218 --> 00:00:53.654
之後我們會介紹如何把媒體附件

00:00:53.720 --> 00:00:56.857
插入新通知
我們會給大家介紹

00:00:56.990 --> 00:01:01.295
如何在新的iOS X系統通知中
定製用戶界面

00:01:03.163 --> 00:01:05.899
我們先來聊一聊
用戶界面的概況

00:01:07.901 --> 00:01:11.572
iOS X的用戶通知設計十分精美

00:01:11.805 --> 00:01:13.740
大家可以看到這個鎖屏界面

00:01:14.007 --> 00:01:16.410
看這動畫製作以及擡起喚醒

00:01:17.945 --> 00:01:19.546
這個是橫幅

00:01:19.713 --> 00:01:22.015
可以看出相比以往版本可讀性更高了

00:01:22.082 --> 00:01:23.317
裏面的內容量也更大了

00:01:23.383 --> 00:01:27.888
上面顯示了標題 副標題
這個是Notification Center

00:01:28.088 --> 00:01:31.425
在這三個不同模塊裏
每一條通知樣式相同

00:01:37.297 --> 00:01:41.001
在iOS 8中 我們引入了
動作通知

00:01:41.201 --> 00:01:43.837
你可以給通知添加動作

00:01:43.904 --> 00:01:45.272
互動性也因此變得更高

00:01:45.339 --> 00:01:47.975
也讓用戶處理推送消息
更快捷方便

00:01:49.543 --> 00:01:55.315
我們在iOS 9引入了快速回復
來增強可操作通知

00:01:55.382 --> 00:01:58.318
這項功能使用戶
通過在推送消息中輸入

00:01:58.385 --> 00:02:00.621
用文字來回復

00:02:01.154 --> 00:02:04.725
在iOS X推送功能比以往更加強大

00:02:04.791 --> 00:02:07.928
因爲現在推送功能
對我們的設備而言更加重要

00:02:07.995 --> 00:02:09.395
因爲我們每時每刻都在使用推送

00:02:09.463 --> 00:02:12.799
它是我們與設備互動的重要方式

00:02:12.866 --> 00:02:16.236
同時也是用戶與你的應用
互動的重要方式

00:02:16.603 --> 00:02:21.475
所以在iOS X系統中
你可以點擊一條推送消息

00:02:21.575 --> 00:02:23.310
消息欄會展開

00:02:23.377 --> 00:02:26.980
顯示更具體且有針對性的用戶界面

00:02:27.047 --> 00:02:30.317
針對你的應用
爲你的內容服務

00:02:30.551 --> 00:02:34.121
它顯示更多細節
對用戶來說更實用

00:02:35.756 --> 00:02:38.158
用戶可以點擊不同操作

00:02:38.258 --> 00:02:41.795
用戶界面會更新且顯示出變化

00:02:41.862 --> 00:02:44.665
以及操作的結果

00:02:49.636 --> 00:02:51.538
日曆就是一個簡單的例子

00:02:51.805 --> 00:02:54.541
還有“找朋友”

00:02:54.608 --> 00:02:57.444
當你的朋友跟你共享位置

00:02:57.711 --> 00:03:00.781
你可以立即在推送中
看到他們的位置

00:03:00.848 --> 00:03:03.450
你就可以估計這次會面
他們會遲到多久

00:03:04.885 --> 00:03:08.155
還有用於“照片分享”的通知

00:03:08.288 --> 00:03:12.025
當你在iCloud上分享一張照片時
你可以直接看到這張照片

00:03:12.092 --> 00:03:14.328
在推送欄中 而不用打開應用

00:03:14.661 --> 00:03:17.631
你還可以點贊或者回復
而不用打開應用

00:03:17.698 --> 00:03:19.566
專門查看那張照片

00:03:19.867 --> 00:03:21.201
最後 消息

00:03:21.301 --> 00:03:22.436
這還不是所有的

00:03:23.303 --> 00:03:26.373
從iOS 8起 消息開始支持快速回復

00:03:26.874 --> 00:03:31.545
但每次只能看到一條消息
而且也只能回覆一條

00:03:32.212 --> 00:03:34.314
現在你可以看到整個對話

00:03:34.381 --> 00:03:36.917
當你打開通知回覆

00:03:36.984 --> 00:03:41.221
你可以等待朋友的回覆
也可以發送更多消息

00:03:41.288 --> 00:03:43.991
這就是新版的
iOS X中通知的力量

00:03:46.059 --> 00:03:50.297
但是如果這就完了的話

00:03:50.364 --> 00:03:52.766
我就不用在這裏站半個小時了

00:03:52.833 --> 00:03:55.335
並給你演示iOS X裏所有新通知了

00:03:55.802 --> 00:03:59.506
所以我今天想介紹給大家
最重要的功能是

00:03:59.573 --> 00:04:02.476
剛纔我演示的所有那些

00:04:02.543 --> 00:04:06.480
都是用iOS X中我們擴展的
新的API實現的

00:04:06.747 --> 00:04:09.583
你也同樣可以像我們這樣做到這些

00:04:09.716 --> 00:04:14.254
並把所有這些功能添加到你自己的
應用和通知中

00:04:16.023 --> 00:04:19.560
第一個可以做的是媒體附件

00:04:19.625 --> 00:04:20.827
媒體附件

00:04:22.229 --> 00:04:26.500
我從朋友那裏最經常收到的通知

00:04:27.134 --> 00:04:29.736
是他們分享的照片或視頻

00:04:30.037 --> 00:04:33.574
所以很重要的是把這些內容

00:04:33.640 --> 00:04:35.409
這些已經分享的內容
放到通知中

00:04:35.475 --> 00:04:37.077
以便能更快看到

00:04:37.144 --> 00:04:39.213
而不用打開應用下載

00:04:41.481 --> 00:04:44.184
不過這樣做的問題是 你也知道

00:04:44.751 --> 00:04:48.388
推送通知是通過推送負載消息來傳送的

00:04:49.056 --> 00:04:52.693
儘管我們去年將大小增到了4KB

00:04:53.026 --> 00:04:56.530
這依然遠不夠發送一整張照片

00:04:56.597 --> 00:04:59.566
即使添加到通知的是很小的一張照片

00:05:00.434 --> 00:05:01.768
我們該如何解決呢？

00:05:03.003 --> 00:05:04.938
我們使用新的服務擴展

00:05:05.005 --> 00:05:07.875
在今天早些時候的演講中介紹過

00:05:10.077 --> 00:05:14.948
從服務擴展下載附件時

00:05:15.382 --> 00:05:18.118
你需要先將通知設爲可變的

00:05:18.585 --> 00:05:21.288
就像這裏的消息負載

00:05:21.355 --> 00:05:26.093
我發送一個可變的內容標註
然後添加一個引用

00:05:26.159 --> 00:05:28.862
指向需要推送的附件

00:05:29.363 --> 00:05:31.331
在這個例子裏我用了一個簡單的鏈接

00:05:31.865 --> 00:05:33.500
你也可以使用一個標識符

00:05:33.567 --> 00:05:36.603
只要你的程序知道如何從
你的服務器中下載即可

00:05:38.172 --> 00:05:39.306
做完這些後

00:05:39.373 --> 00:05:41.775
推送成功發送到設備

00:05:42.242 --> 00:05:44.311
系統會自動運行你的服務擴展

00:05:44.912 --> 00:05:46.113
在服務擴展中

00:05:46.180 --> 00:05:48.615
你可以通過各種方式下載附件

00:05:49.082 --> 00:05:51.385
比如你可以使用URL會話

00:05:51.451 --> 00:05:54.021
這樣系統就可以幫你管理資源

00:05:55.556 --> 00:05:59.626
隨後通知就會和附件一起被推送到設備

00:06:02.129 --> 00:06:04.298
我們來看看
一小段關於如何實現的代碼

00:06:06.567 --> 00:06:10.070
這只是服務擴展最基本的一個例子

00:06:11.605 --> 00:06:15.108
在最上方 我實現了
didReceive請求

00:06:15.342 --> 00:06:16.710
withContentHandler

00:06:17.377 --> 00:06:20.013
它會在收到通知時被調用

00:06:20.080 --> 00:06:22.416
然後就要下載附件了

00:06:24.051 --> 00:06:28.222
我可以使用URL會話下載附件

00:06:28.288 --> 00:06:30.624
或其它你喜歡的技術

00:06:31.225 --> 00:06:33.527
當文件下載到本地時

00:06:34.094 --> 00:06:36.763
我可以創建一個通知附件對象

00:06:38.432 --> 00:06:42.035
創建完成後
把它添加到通知的內容裏

00:06:42.870 --> 00:06:45.739
然後傳給系統 準備發送給用戶

00:06:47.841 --> 00:06:50.978
完成這些之後 這就是我的通知

00:06:52.145 --> 00:06:55.449
附帶精美的圖片
用戶可以直接看到

00:06:55.516 --> 00:06:58.886
而不需等待下載或者打開應用

00:07:00.220 --> 00:07:02.789
而且你可以看到 通知附件

00:07:03.357 --> 00:07:05.392
同樣支持可操作通知

00:07:05.459 --> 00:07:09.663
你可以直接在這裏點贊或評論

00:07:12.566 --> 00:07:15.269
媒體附件 簡單回顧一下

00:07:15.802 --> 00:07:18.505
它支持本地或遠程通知

00:07:19.306 --> 00:07:20.874
我們只談到了本地的

00:07:20.941 --> 00:07:24.311
我們只談了遠程的 因爲本地的簡單

00:07:24.378 --> 00:07:27.080
你只需創建通知附件對象

00:07:27.347 --> 00:07:29.983
在安排通知時創建 就可以了

00:07:32.319 --> 00:07:35.956
附件支持圖片 音頻 或者視頻

00:07:36.623 --> 00:07:41.795
系統會爲這三種類型
提供可自定義的UI

00:07:44.298 --> 00:07:47.067
你需要在服務擴展中下載附件

00:07:47.301 --> 00:07:48.635
但是一定要記住

00:07:48.836 --> 00:07:52.206
服務擴展的運行時間是有限制的

00:07:52.272 --> 00:07:57.444
附件大小也是有限制的

00:07:57.511 --> 00:08:00.581
因爲它們的目的是和通知一起發送

00:08:00.647 --> 00:08:03.617
而不是爲了把完整內容發送給用戶

00:08:03.951 --> 00:08:07.521
你可能希望發送一個縮小版的圖片

00:08:07.921 --> 00:08:11.058
然後讓用戶打開應用下載高清圖片

00:08:11.625 --> 00:08:14.294
或者你也可以發送一個短的視頻剪輯

00:08:14.361 --> 00:08:15.529
如果發送的是視頻內容

00:08:15.729 --> 00:08:18.298
然後讓用戶打開程序來下載完整視頻

00:08:21.101 --> 00:08:24.838
當你下載它時 把它添加到通知

00:08:25.539 --> 00:08:28.742
這時系統會接管

00:08:29.009 --> 00:08:31.011
幫你管理這個文件

00:08:31.378 --> 00:08:33.847
你不用操心這個文件

00:08:33.914 --> 00:08:37.317
系統會把它放到一個單獨的區域

00:08:37.650 --> 00:08:38.818
處理所有數據

00:08:42.022 --> 00:08:43.524
哦對 我差點忘記了

00:08:43.991 --> 00:08:45.792
當然了 我們支持GIF格式

00:08:55.435 --> 00:08:57.237
附件功能非常棒

00:08:57.304 --> 00:09:00.874
並且爲通知提供了豐富的界面

00:09:01.341 --> 00:09:04.745
最開始的時候我說過
你可以實現所有的

00:09:04.811 --> 00:09:07.781
所有我演示過的新的通知功能

00:09:07.848 --> 00:09:10.117
以及日曆 消息

00:09:10.184 --> 00:09:13.453
它們肯定不用附件

00:09:13.687 --> 00:09:15.756
它們用的是自定義用戶界面

00:09:16.757 --> 00:09:18.792
這就是我們現在要說的

00:09:20.160 --> 00:09:21.995
創建自定義用戶操作界面時

00:09:24.531 --> 00:09:28.869
你要用到我們給標準通知添加的
第二個擴展點

00:09:29.102 --> 00:09:31.071
它就是
NotificationContentExtension

00:09:33.240 --> 00:09:35.342
NotificationContentExtension
允許你

00:09:35.409 --> 00:09:38.111
添加自己的自定義視圖

00:09:38.178 --> 00:09:39.780
你可以隨心所欲地設計

00:09:40.581 --> 00:09:43.050
但是最重要的限制在於

00:09:43.116 --> 00:09:45.352
你的視圖是不可交互的

00:09:45.419 --> 00:09:47.955
它不接受點擊事件 用戶不能點擊

00:09:48.922 --> 00:09:53.327
但是通知依然是可交互的
因爲你可以使用通知動作

00:09:53.627 --> 00:09:55.696
擴展可以處理這些動作

00:09:55.762 --> 00:09:57.731
我們一會兒會演示如何做到

00:09:57.798 --> 00:09:58.999
自定義用戶界面

00:10:01.435 --> 00:10:04.838
我說過我們可以實現

00:10:04.905 --> 00:10:06.240
和系統相同的功能

00:10:06.340 --> 00:10:08.709
我們先看看日曆的行爲

00:10:08.775 --> 00:10:10.644
然後再來看我們如何模仿

00:10:11.945 --> 00:10:13.213
這是一個日曆通知

00:10:13.280 --> 00:10:15.883
在最上方有一個頁眉

00:10:15.949 --> 00:10:19.119
頁眉上有通知圖標
點擊它會打開應用

00:10:19.653 --> 00:10:22.322
應用名和關閉按鈕

00:10:22.422 --> 00:10:25.893
這是系統爲所有類型通知
提供的標準UI

00:10:27.361 --> 00:10:29.930
頁眉下方是自定義內容

00:10:30.364 --> 00:10:33.066
這是你的通知擴展存在的地方

00:10:33.133 --> 00:10:35.002
是你繪製內容的地方

00:10:35.202 --> 00:10:38.005
顯示所有你希望用戶看到的細節

00:10:39.640 --> 00:10:40.807
在它們下面

00:10:43.510 --> 00:10:45.913
是系統顯示的默認內容

00:10:47.047 --> 00:10:49.783
和負載一起發送的內容

00:10:49.850 --> 00:10:54.555
它是iOS 9之前版本通知裏的可見信息

00:10:56.490 --> 00:10:58.358
在最下方

00:11:01.195 --> 00:11:05.832
是通知中用戶可點擊和交互的動作

00:11:06.166 --> 00:11:10.671
用戶點擊後 用戶界面會更新

00:11:10.904 --> 00:11:12.072
顯示操作結果

00:11:13.974 --> 00:11:16.343
來看看我們自己怎麼實現

00:11:16.410 --> 00:11:17.878
通知內容擴展

00:11:17.945 --> 00:11:21.682
首先以派對邀請爲例

00:11:22.349 --> 00:11:24.685
派對很有趣 我們週四就有對吧？

00:11:25.686 --> 00:11:28.689
這是要展示的基本通知

00:11:28.755 --> 00:11:31.291
當你推送通知
用戶就會看到它

00:11:31.592 --> 00:11:34.061
和你期待的很像

00:11:34.661 --> 00:11:36.396
咱們看看如何擴展

00:11:36.597 --> 00:11:39.299
讓它顯示我們想要的自定義界面

00:11:40.367 --> 00:11:41.702
首先要做的是

00:11:41.768 --> 00:11:44.505
在你的應用裏添加新的目標

00:11:44.838 --> 00:11:48.175
通過使用Xcode提供的模板

00:11:48.542 --> 00:11:50.644
NotificationContentExtension
模板

00:11:51.778 --> 00:11:55.549
這個模板會在新目標裏
創建三個文件

00:11:56.250 --> 00:11:59.853
一個視圖控制器
主界面的StoryBoard

00:12:00.387 --> 00:12:04.491
以及info.plist
你可以在它裏面自定義擴展

00:12:08.362 --> 00:12:11.698
這是NotificationContentExtension
的視圖控制器

00:12:12.332 --> 00:12:16.403
如你所見
它不過是一個UI視圖控制器的子類

00:12:16.904 --> 00:12:19.439
就是你熟悉的普通視圖控制器

00:12:21.041 --> 00:12:24.378
它還實現了
NotificationContentExtension協議

00:12:24.711 --> 00:12:26.313
通過它系統就會知道

00:12:26.380 --> 00:12:29.516
你想把這個視圖控制器應用於通知

00:12:31.785 --> 00:12:34.821
這個協議只有一個強制方法

00:12:35.189 --> 00:12:37.391
這個強制方法是
didReceive notification

00:12:37.457 --> 00:12:38.492
如你所見

00:12:38.892 --> 00:12:40.827
這個方法

00:12:41.361 --> 00:12:45.699
會和視圖控制器的生命週期方法
一起被調用

00:12:45.766 --> 00:12:48.402
在通知被髮送出去

00:12:48.836 --> 00:12:49.970
發送到擴展的時候

00:12:51.638 --> 00:12:54.474
所以當用戶展開通知

00:12:55.375 --> 00:12:57.578
你會接收到所有視圖控制器的調用

00:12:57.644 --> 00:12:58.812
以及額外的這個方法

00:12:58.879 --> 00:13:00.981
所以你可以接收通知對象

00:13:01.148 --> 00:13:03.750
更新UI 顯示不同的東西

00:13:07.187 --> 00:13:10.724
下一步是告訴系統

00:13:10.791 --> 00:13:12.626
如何找到你的內容擴展

00:13:13.894 --> 00:13:17.764
內容擴展使用的通知類別

00:13:17.831 --> 00:13:20.367
和你用來註冊通知動作的相同

00:13:21.134 --> 00:13:22.936
在這個例子裏
我使用的是event-invite

00:13:23.370 --> 00:13:25.305
爲我的派對邀請函

00:13:27.040 --> 00:13:29.176
擴展也可以關聯

00:13:29.243 --> 00:13:31.912
多個類型 以便你想把同樣的UI

00:13:31.979 --> 00:13:35.015
應用到類型不同但界面類似的通知

00:13:35.616 --> 00:13:38.452
在這個例子裏 我使用的是
event-invite或event-update

00:13:38.752 --> 00:13:40.654
它們的UI非常相似

00:13:40.721 --> 00:13:44.491
我可以使用不同的種類
因爲它們的動作不同

00:13:46.493 --> 00:13:47.761
我都設置好了

00:13:49.029 --> 00:13:50.297
我有了視圖控制器

00:13:50.564 --> 00:13:54.268
現在我想添加些自定義視圖
繪製我自己的UI

00:13:54.735 --> 00:13:58.739
這是個視圖控制器
我在Storyboard里加入了一些標籤

00:13:58.805 --> 00:14:00.140
我在此沒把標籤顯示出來

00:14:02.242 --> 00:14:06.380
收到通知時 我從內容中抽取信息

00:14:07.414 --> 00:14:11.785
獲取我需要的信息 然後設置內容

00:14:12.186 --> 00:14:14.021
設置我剛剛創建的標籤

00:14:15.088 --> 00:14:18.692
你可以看到 我還有些自定義信息

00:14:18.759 --> 00:14:21.228
而不只有隨負載傳遞的標準信息

00:14:21.628 --> 00:14:26.366
因爲我想展示些
負載的標準信息之外的內容

00:14:26.533 --> 00:14:28.202
在這個例子裏 我展示了位置

00:14:28.268 --> 00:14:30.838
因爲知道派對在哪兒至關重要

00:14:33.240 --> 00:14:35.709
這就是我的通知了

00:14:37.110 --> 00:14:39.746
可以看到 有一些自定義內容

00:14:40.147 --> 00:14:44.117
我用不同風格的自定義標籤
繪製了自己的UI

00:14:45.118 --> 00:14:47.821
但這個通知有兩個問題

00:14:49.456 --> 00:14:52.659
第一個是內容區域太大

00:14:53.527 --> 00:14:56.396
我不需要那麼多空間 全都是空的

00:14:56.663 --> 00:14:58.932
我需要展示的內容小得多

00:14:59.833 --> 00:15:03.871
第二個問題就是默認內容重複了

00:15:04.338 --> 00:15:06.707
我並不需要它
因爲已經展示過了

00:15:06.974 --> 00:15:09.543
同樣的信息
在我自定義樣式的最上方

00:15:11.245 --> 00:15:13.213
這兩個問題都可以解決

00:15:13.814 --> 00:15:16.817
我們先解決第二個
因爲它更簡單

00:15:17.751 --> 00:15:20.754
這是你info.plist裏
一個附加屬性

00:15:20.954 --> 00:15:23.357
你可以把隱藏默認信息

00:15:23.457 --> 00:15:25.993
設置爲“是”
這樣就看不到默認信息了

00:15:26.093 --> 00:15:27.995
系統不會再添加

00:15:30.130 --> 00:15:33.300
第二個問題是我的通知尺寸

00:15:34.034 --> 00:15:36.103
但因爲這只是視圖控制器的問題

00:15:36.370 --> 00:15:39.907
我可以像重設視圖控制器尺寸一樣
重設通知尺寸

00:15:40.374 --> 00:15:43.343
在這個例子中 我重設內容大小

00:15:43.510 --> 00:15:47.347
你也可以拋開佈局設置約束

00:15:47.414 --> 00:15:52.019
你也可以用Storyboard
兩個方法都可行

00:15:52.753 --> 00:15:54.888
處理完這兩個問題之後

00:15:55.756 --> 00:15:57.257
我的推送就是這個樣子

00:15:58.325 --> 00:15:59.326
看起來好了不少

00:16:00.260 --> 00:16:01.895
大小正合適

00:16:02.095 --> 00:16:03.864
沒有重複內容

00:16:04.498 --> 00:16:07.100
但你發現新問題了嗎？

00:16:07.868 --> 00:16:11.371
通知剛出現時尺寸不對

00:16:11.505 --> 00:16:16.043
所以系統不得不顯示動畫
並重設通知大小

00:16:16.109 --> 00:16:17.444
讓它達到合適的尺寸

00:16:17.878 --> 00:16:19.046
我再來演示一遍

00:16:21.415 --> 00:16:24.184
看到了嗎？我們可以改進它

00:16:25.252 --> 00:16:29.122
發生這個的原因在於
系統需要知道

00:16:29.189 --> 00:16:32.726
最終展示的通知尺寸
在一開始顯示時就要知道

00:16:33.794 --> 00:16:35.596
這樣動畫纔會正常

00:16:36.196 --> 00:16:39.099
但你的擴展還沒有加載

00:16:39.233 --> 00:16:41.668
當系統開始顯示通知的時候

00:16:41.935 --> 00:16:44.004
所以你需要提前告訴系統

00:16:44.071 --> 00:16:47.808
你最終想要的尺寸
在你的代碼運行之前

00:16:49.376 --> 00:16:51.712
問題在於這些通知

00:16:51.778 --> 00:16:55.115
運行在不同設備上
環境不同尺寸不同

00:16:55.749 --> 00:17:00.921
所以我們的解決方法就是
設定內容尺寸比例

00:17:02.055 --> 00:17:05.858
這裏定義了長寬比

00:17:06.593 --> 00:17:08.494
你希望把它應用於內容部分

00:17:09.762 --> 00:17:12.432
但是 當然了
這個辦法並不一定可行

00:17:12.532 --> 00:17:14.935
因爲不同內容的尺寸不同

00:17:15.135 --> 00:17:16.637
你不知道接收的內容會是什麼

00:17:16.703 --> 00:17:18.305
但你依然需要顯示所有內容

00:17:18.372 --> 00:17:20.674
所以有的時候這個方法不可行

00:17:20.741 --> 00:17:24.578
但是如果你可以找到
適用於你的通知的尺寸的話

00:17:24.845 --> 00:17:26.480
用這個方法足矣

00:17:27.748 --> 00:17:29.516
使用這個方法後的結果

00:17:30.617 --> 00:17:33.053
就是現在這個新的通知

00:17:33.153 --> 00:17:36.156
它從展示最初就是合適的尺寸

00:17:36.456 --> 00:17:38.325
回顧一下剛纔的內容

00:17:39.359 --> 00:17:41.595
我們想創建自定義通知UI

00:17:42.095 --> 00:17:45.032
我們從自定義UI開始

00:17:45.098 --> 00:17:48.602
非常基礎
但包括了我所有的自定義內容

00:17:48.836 --> 00:17:51.572
還包括了負載以外的附加信息

00:17:52.072 --> 00:17:53.407
但是尺寸不對

00:17:53.540 --> 00:17:57.711
所以我們修改了顯示尺寸
通過設置初始長寬比

00:17:58.779 --> 00:18:01.014
然後我們解決了重複內容

00:18:01.448 --> 00:18:04.017
通過設置隱藏默認信息標誌

00:18:05.085 --> 00:18:07.988
從最初到現在這個樣子

00:18:09.623 --> 00:18:11.592
這看起來比最初好得多

00:18:11.992 --> 00:18:14.595
仍然不算完美
但是我今天確實打算

00:18:14.661 --> 00:18:16.563
接着改進它

00:18:21.168 --> 00:18:25.239
我還知道另一個讓
通知看起來更好的技巧

00:18:25.939 --> 00:18:27.040
我們可以添加圖片

00:18:27.241 --> 00:18:30.611
圖片總是好的
尤其是發派對邀請函的時候

00:18:31.378 --> 00:18:34.982
同樣我們使用媒體附件

00:18:35.082 --> 00:18:39.486
就是在Notification
ContentExtensions裏用過的

00:18:40.921 --> 00:18:43.290
因爲它們會被添加到通知內容裏去

00:18:43.590 --> 00:18:46.293
你可以在內容擴展裏看到它們

00:18:46.760 --> 00:18:48.862
所以當你收到通知的時候

00:18:49.196 --> 00:18:51.031
在didReceive:notification方法裏

00:18:52.866 --> 00:18:55.402
你可以從內容中抽取附件

00:18:57.838 --> 00:18:59.039
我剛纔說過

00:18:59.106 --> 00:19:01.275
附件是系統管理的

00:19:01.341 --> 00:19:03.210
被移動到了一個單獨的區域

00:19:03.477 --> 00:19:05.679
所以你是訪問不到的

00:19:05.879 --> 00:19:08.815
所以你需要告訴系統你想開始使用它

00:19:09.049 --> 00:19:10.951
並告訴系統什麼時候完成

00:19:12.252 --> 00:19:15.322
當你可以訪問了
就如同文件一樣使用

00:19:15.656 --> 00:19:18.192
在這個例子裏
我要把它加到圖片視圖中

00:19:19.726 --> 00:19:22.462
這就是我現在的通知

00:19:24.765 --> 00:19:26.500
你能看出這個人準備來派對了

00:19:34.241 --> 00:19:36.443
比最初的好多了

00:19:36.877 --> 00:19:38.745
而且是我們的自定義UI

00:19:38.812 --> 00:19:41.782
我們想讓用戶看到額外信息

00:19:41.882 --> 00:19:43.016
就添加了它們

00:19:43.083 --> 00:19:45.519
我們想添加圖片
也做到了

00:19:47.321 --> 00:19:48.989
現在我們就差最後一步了

00:19:49.156 --> 00:19:50.824
我們想讓它具有交互性

00:19:51.024 --> 00:19:53.126
我們想實現動作

00:19:55.395 --> 00:19:56.330
我們現在就做

00:19:56.463 --> 00:19:58.131
動作

00:20:00.534 --> 00:20:03.537
默認動作
在默認情況下的工作方式

00:20:03.604 --> 00:20:05.973
和你在iOS 8裏用的一樣

00:20:07.107 --> 00:20:09.877
它們會傳送給應用
當用戶點擊按鈕之後

00:20:10.244 --> 00:20:12.246
應用會接收到請求

00:20:13.213 --> 00:20:15.616
然後這條推送就立即關閉了

00:20:16.450 --> 00:20:18.852
非常方便 因爲這種行爲

00:20:18.919 --> 00:20:22.322
你經常會用到
實現起來也很簡單

00:20:22.990 --> 00:20:26.159
但有時 你想讓用戶知道動作的結果

00:20:26.226 --> 00:20:29.730
就像剛纔的日曆邀請例子裏那樣

00:20:30.030 --> 00:20:31.732
就是當用戶點接受之後

00:20:32.599 --> 00:20:36.069
內容裏會高亮顯示我接受的邀請

00:20:37.271 --> 00:20:40.374
你可以在NotificationContent
Extensions裏做到

00:20:41.441 --> 00:20:45.479
你需要在通知擴展裏攔截這個動作

00:20:46.346 --> 00:20:50.450
之後動作會傳給擴展

00:20:51.084 --> 00:20:54.388
它可以決定延遲通知的關閉

00:20:54.454 --> 00:20:58.392
這樣就有時間處理動作 更新UI

00:20:58.625 --> 00:20:59.826
結束之後再關閉

00:21:01.261 --> 00:21:03.630
這很簡單

00:21:03.830 --> 00:21:07.501
你通過NotificationContentExtension
協議中的第二個方法

00:21:09.036 --> 00:21:10.370
這個辦法是可選的

00:21:10.437 --> 00:21:11.772
你不必實現它

00:21:11.839 --> 00:21:13.674
如果你不需要攔截動作的話

00:21:13.740 --> 00:21:15.242
但如果你確定要實現它

00:21:15.342 --> 00:21:17.444
那你就要自己處理所有動作

00:21:17.511 --> 00:21:19.079
通知裏的全部動作

00:21:19.179 --> 00:21:22.916
你不能只管其一不管別的

00:21:25.352 --> 00:21:27.821
當你收到通知時

00:21:29.223 --> 00:21:31.425
你可以給服務器發送一條迴應

00:21:31.558 --> 00:21:33.527
更新服務器上的信息

00:21:33.594 --> 00:21:35.696
當收到來自服務器的迴應

00:21:35.762 --> 00:21:39.867
你需要更新UI 表示用戶會參加派對
這是當然的啦

00:21:40.634 --> 00:21:43.270
完成之後 你就可以關閉通知了

00:21:44.238 --> 00:21:47.975
這樣界面就在關閉之前得到了更新

00:21:50.277 --> 00:21:53.480
如果你想把動作轉發給應用的話

00:21:53.547 --> 00:21:55.949
也是可以的

00:21:56.550 --> 00:21:58.719
如果你需要進行額外處理

00:21:58.785 --> 00:22:01.622
或者你想要把代碼集中到一起

00:22:01.688 --> 00:22:05.526
你只需使用不同參數
調用completionHandler

00:22:07.594 --> 00:22:11.331
我們這樣做話 當我們收到推送

00:22:11.698 --> 00:22:13.800
點擊它 然後可以更新UI

00:22:15.202 --> 00:22:16.236
然後再關閉

00:22:18.639 --> 00:22:21.742
你在我的示例代碼中也看到了

00:22:22.476 --> 00:22:26.146
我們實現了接受和拒絕兩個動作

00:22:27.014 --> 00:22:28.715
最下方還有第三個動作

00:22:29.316 --> 00:22:32.920
因爲有時當你回覆派對邀請
你想要知道

00:22:32.986 --> 00:22:35.255
我們想告訴你的朋友
能去參加有多興奮

00:22:35.322 --> 00:22:37.758
或者不能去參加有多遺憾

00:22:38.325 --> 00:22:39.893
你可以點擊評論按鈕

00:22:40.627 --> 00:22:41.662
文字輸入動作

00:22:41.728 --> 00:22:44.198
評論動作是文字輸入動作

00:22:45.132 --> 00:22:47.000
就像我們在iOS 9引入的那個

00:22:47.401 --> 00:22:48.802
用法是一樣的

00:22:49.469 --> 00:22:52.272
除了全新的非常棒的構架

00:22:54.174 --> 00:22:55.976
這一個文字輸入動作

00:22:56.610 --> 00:22:58.679
它的新一點的API

00:22:58.812 --> 00:23:01.181
你可以在文本區設置佔位符

00:23:02.749 --> 00:23:07.221
當你創建動作時
你可以把它加入到你的類別裏

00:23:07.554 --> 00:23:09.823
這樣它就會和通知一起顯示了

00:23:13.427 --> 00:23:15.929
所以當用戶點擊評論按鈕時

00:23:16.563 --> 00:23:17.698
文字會顯示出來

00:23:21.034 --> 00:23:25.105
由於它是個動作 和其它一樣

00:23:25.172 --> 00:23:26.874
你可以以同樣方式處理

00:23:26.940 --> 00:23:29.576
你可以在你的擴展裏攔截它

00:23:29.643 --> 00:23:30.744
在那裏進行處理

00:23:32.045 --> 00:23:33.113
下面是做法

00:23:33.447 --> 00:23:34.982
你收到通知

00:23:37.217 --> 00:23:40.787
你檢查看它是不是文字輸入動作

00:23:43.123 --> 00:23:46.927
你抽取用戶輸入的文字
併發送到服務器

00:23:48.195 --> 00:23:50.797
結束之後 關閉通知

00:23:53.634 --> 00:23:54.968
流程就是這樣

00:23:55.702 --> 00:23:57.371
你點擊 然後打字

00:23:59.173 --> 00:24:02.109
這個通知也有個需要處理的問題

00:24:02.609 --> 00:24:06.780
我想要回復邀請
但是上面只有一個發送按鈕

00:24:07.014 --> 00:24:09.816
我沒法選擇是接受還是拒絕

00:24:11.852 --> 00:24:15.622
我們想要保留文本區

00:24:15.689 --> 00:24:19.560
但同時增加兩個按鍵
這樣我就可以選擇是接受還是拒絕

00:24:20.427 --> 00:24:21.828
比如這樣

00:24:23.130 --> 00:24:23.964
可以嗎？

00:24:25.732 --> 00:24:27.835
沒有新的API能做到這一點

00:24:27.901 --> 00:24:30.504
沒有新的API是因爲
已有的就可以做到

00:24:30.771 --> 00:24:36.543
你可以使用已有的UIKit
自定義輸入輔助視圖API

00:24:36.844 --> 00:24:39.980
給通知中的文字區
添加自己的自定義視圖

00:24:49.056 --> 00:24:52.292
爲了做到這一點
首先要做的是

00:24:52.359 --> 00:24:54.595
確保你的控制器可以成爲第一響應器

00:24:55.362 --> 00:24:58.532
這會讓UIKit系統知道

00:24:59.066 --> 00:25:02.903
它是事件響應鏈中的一環
同時也讓通知系統知道

00:25:02.970 --> 00:25:05.038
你不想使用默認的文字區

00:25:07.641 --> 00:25:11.979
然後你創建一個自定義的
inputAccessoryView

00:25:12.112 --> 00:25:15.549
在這個例子裏
我添加了一個文本區和兩個按鈕

00:25:18.218 --> 00:25:22.456
然後當我接收到用戶的回覆
也就是動作

00:25:22.523 --> 00:25:24.191
來自用戶的評論動作

00:25:24.658 --> 00:25:28.061
我可以將它設置成第一響應器
這樣我的文字區

00:25:28.128 --> 00:25:29.363
以及鍵盤就都出現了

00:25:29.429 --> 00:25:31.265
這兩個調用都要進行

00:25:31.331 --> 00:25:34.301
因爲第一個把視圖控制器
設置成第一響應器

00:25:34.368 --> 00:25:35.869
這樣文字區就顯示出來了

00:25:35.936 --> 00:25:38.205
第二個將文字區設置成第一響應器

00:25:38.272 --> 00:25:39.706
這樣鍵盤也顯示出來了

00:25:42.376 --> 00:25:45.312
你會發現在這個例子中

00:25:45.379 --> 00:25:47.848
我不關心它是否是可編輯的動作

00:25:47.915 --> 00:25:49.183
你可以使用常規操作

00:25:49.249 --> 00:25:54.721
因爲我會從自己的inputAccessory
View中獲取來自用戶文本

00:25:54.788 --> 00:25:56.390
所以我可以訪問那個UI

00:25:59.459 --> 00:26:02.563
這樣做的結果就是當你點擊評論之後

00:26:03.197 --> 00:26:05.165
你可以輸入你的回覆

00:26:05.832 --> 00:26:07.968
同時還能同意或拒絕這次邀請

00:26:12.606 --> 00:26:15.976
關於NotificationContentExtensions
今天就說這麼多

00:26:16.276 --> 00:26:19.246
還有一些別的小API

00:26:19.713 --> 00:26:23.150
若有興趣 可在這周稍後的實驗室
與我們探討

00:26:26.286 --> 00:26:31.391
我們今天講了
如何在自定義UI中使用附件

00:26:31.458 --> 00:26:34.027
在iOS X系統中的通知內容擴展中

00:26:35.162 --> 00:26:40.200
我們學習瞭如何下載
以及在通知中插入附件

00:26:40.267 --> 00:26:41.768
通過使用服務擴展程序

00:26:43.136 --> 00:26:46.106
我們瞭解瞭如何自定義UI
徹底自定義UI

00:26:46.173 --> 00:26:49.176
使用內容擴展
加入你的特別內容

00:26:49.443 --> 00:26:53.580
可以使用媒體附件
也可以處理用戶的交互

00:26:56.850 --> 00:27:01.221
想了解更多的話
有一個專門有關這次演講的網頁

00:27:04.157 --> 00:27:08.061
今天早些時候我們辦了另一場演講
沒有參加的話建議看看

00:27:08.128 --> 00:27:10.430
瞭解更多新用戶通知框架

00:27:10.497 --> 00:27:13.066
以及更多的有關服務擴展的細節

00:27:14.735 --> 00:27:15.602
謝謝