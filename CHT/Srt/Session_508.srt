00:00:19.653 --> 00:00:23.390
用Apple News Format
創造豐富和響應性的新聞報道

00:00:25.926 --> 00:00:29.429
你好 歡迎來到
Apple News Format演講

00:00:29.630 --> 00:00:32.366
我是Casey
今天我和同事Dan

00:00:32.432 --> 00:00:34.134
會向你們展示你如何創建

00:00:34.201 --> 00:00:39.106
一些漂亮和迷人的新聞文章
使用Apple News Format來創建

00:00:39.540 --> 00:00:42.876
在今天演講的最後
你會有一個詳盡的理解

00:00:42.943 --> 00:00:46.380
Apple News Format
的所有設計能力

00:00:47.047 --> 00:00:50.584
和理解所有用來構建那些新聞報道
的代碼

00:00:51.852 --> 00:00:55.088
不管你是否相信 我們還要識別
一些效率

00:00:55.155 --> 00:00:56.790
在你的設計和標記之間

00:00:58.025 --> 00:01:01.595
Dan會覆蓋一系列的特性
它們允許你創建

00:01:01.662 --> 00:01:06.967
一些漂亮的佈局
它們是雜誌風格的回憶錄

00:01:07.034 --> 00:01:12.272
包括的特性有首字放大 側欄
畫廊和動畫

00:01:13.073 --> 00:01:18.946
有了Apple News Format
你的文章在iPad上看起來會很好

00:01:19.346 --> 00:01:23.917
它們會不費力地適應所有屏幕尺寸

00:01:24.818 --> 00:01:28.622
因爲Apple News Format
是內在響應的

00:01:29.122 --> 00:01:32.693
它確保你的新聞報道總是有最好的外觀

00:01:33.460 --> 00:01:37.564
很明顯今天有很多特性要深入的
看一看

00:01:37.631 --> 00:01:40.734
但是首先很重要的一點是我給你們
一些背景

00:01:40.801 --> 00:01:42.503
關於News應用本身

00:01:43.136 --> 00:01:47.174
因爲News是
你的用戶

00:01:47.241 --> 00:01:49.910
將如何發現和體驗你的新聞報道的基礎

00:01:51.879 --> 00:01:54.948
News是一個新聞聚合應用

00:01:55.015 --> 00:01:59.319
它在iOS上被預裝
在美國、英國和澳大利亞

00:01:59.386 --> 00:02:02.356
這很乏味是嗎？
新聞聚合

00:02:02.489 --> 00:02:06.894
我更願把News想成一種媒人服務

00:02:07.761 --> 00:02:11.832
News幫助讀者找到他們會喜歡的
新聞報道

00:02:12.065 --> 00:02:14.601
這對發行者是很好的消息

00:02:14.668 --> 00:02:17.204
因爲這表明他們將找到新粉絲

00:02:18.172 --> 00:02:22.676
News做出它的推薦
基於頻道和主題

00:02:22.743 --> 00:02:24.378
讀者選擇關注

00:02:24.611 --> 00:02:29.116
然後它把相關的新聞報道放入
讀者的For You摘要

00:02:30.217 --> 00:02:33.153
這個For You摘要是關鍵

00:02:33.220 --> 00:02:36.390
對於用戶和出版商的內容發現而言

00:02:37.090 --> 00:02:43.130
作爲讀者我可以找到任何我感興趣的
從CNN到精釀啤酒

00:02:43.664 --> 00:02:46.233
這是Eddy's For You Feed

00:02:46.300 --> 00:02:51.271
一級方程式和超跑

00:02:52.072 --> 00:02:56.643
在任何情況下 關鍵在於 是否在
新聞裏有這個幅度的內容

00:02:56.710 --> 00:03:01.181
這個幅度 事實上任何人都可以
發佈到News應用

00:03:02.082 --> 00:03:06.086
你今天就可以發佈並開始連接讀者

00:03:06.153 --> 00:03:07.721
並且開始賺錢

00:03:07.788 --> 00:03:09.857
你可以用不同方法來這麼做

00:03:09.923 --> 00:03:16.930
包括RSS News Publisher
創作工具和Apple News Format

00:03:17.764 --> 00:03:19.199
如果你還沒有看過

00:03:19.266 --> 00:03:23.003
你應該看看
“Apple News入門”演講

00:03:23.070 --> 00:03:25.672
是這周早些時候進行的
現在視頻已經可獲得了

00:03:25.906 --> 00:03:28.775
那個演講回顧了所有三種方法

00:03:29.243 --> 00:03:32.479
這個部分只聚焦在Apple
News Format上

00:03:33.213 --> 00:03:37.117
這是因爲Apple News
Format對很多事很有幫助

00:03:37.184 --> 00:03:40.754
你會想要做
包括漢字創作的文章

00:03:41.822 --> 00:03:45.259
可能在你在CMS加一個翻譯層

00:03:45.325 --> 00:03:48.795
這樣你可以用程序發送內容
文章和新聞報道

00:03:48.862 --> 00:03:51.598
從你的CMS到
Apple News應用

00:03:52.132 --> 00:03:56.403
甚至貢獻一些平臺的插件

00:03:56.470 --> 00:03:58.238
如WordPress和Drupal

00:03:59.306 --> 00:04:02.242
知道Apple News
Format真的很有幫助

00:04:02.309 --> 00:04:04.645
而且它只是JSON

00:04:06.146 --> 00:04:10.784
Apple News Format
用JSON來創造強大的設計

00:04:10.851 --> 00:04:13.353
而且會很快並且是響應式的

00:04:14.621 --> 00:04:18.325
JSON也很適合用來在不同格式間
進行轉換

00:04:18.659 --> 00:04:23.363
它允許我們有可擴展的格式

00:04:23.931 --> 00:04:27.701
Apple News Format
的可擴展屬性

00:04:27.935 --> 00:04:33.207
非常重要因爲這允許我們快速開發特性

00:04:33.574 --> 00:04:35.442
不需要額外的依賴

00:04:36.844 --> 00:04:40.180
所以我認爲我們圍繞News
給了你們很好的背景

00:04:40.581 --> 00:04:45.052
我們可以深入到Apple
News Format的具體細節

00:04:45.385 --> 00:04:46.553
交給Dan了

00:04:48.088 --> 00:04:49.022
謝謝Casey

00:04:49.857 --> 00:04:53.694
現在我們對文章所在的世界
有了一定了解

00:04:53.827 --> 00:04:56.597
讓我們深入具體細節來看看你
如何創建文章

00:04:56.663 --> 00:04:57.631
用
Apple News Format

00:04:57.698 --> 00:05:00.501
我們今天要做的是
我們要用這個示例文章

00:05:01.568 --> 00:05:03.337
我們要把它拆解成骨架

00:05:04.137 --> 00:05:06.707
然後我們要再把它組裝加來
這樣我們能瞭解基本知識

00:05:08.008 --> 00:05:09.343
我們要使它是響應的

00:05:10.043 --> 00:05:11.745
最後我們要添加一些動畫

00:05:13.780 --> 00:05:15.315
這是我們文章的骨架

00:05:15.916 --> 00:05:17.618
讓我們看一看一些屬性

00:05:18.352 --> 00:05:19.686
第一個屬性是標題

00:05:20.153 --> 00:05:23.390
這是一個標題它會顯示給
瀏覽摘要的用戶

00:05:25.325 --> 00:05:27.628
接下來我們有摘錄
這是我們的第一個元數據

00:05:27.928 --> 00:05:31.698
這是一些文本的片斷
它們也和標題一起顯示在摘要中

00:05:32.399 --> 00:05:36.203
最後你要定義縮略圖
使用縮略圖URL

00:05:37.004 --> 00:05:40.307
現在讓我們後退一下談談縮略圖
的一些提示

00:05:40.374 --> 00:05:42.075
縮略圖提示

00:05:42.142 --> 00:05:46.180
首先接受的縮略圖格式是JPEG
和PNG

00:05:47.381 --> 00:05:49.917
接下來當然是發送給我們高分辨率
的圖像

00:05:50.117 --> 00:05:52.653
我們會在我們的後臺處理向下取樣

00:05:54.388 --> 00:05:57.024
最小尺寸是300乘300像素

00:05:57.157 --> 00:05:59.693
如果小於這的話你的圖片不會顯示

00:05:59.760 --> 00:06:01.328
所以一定要把你最好的發送給我們

00:06:02.896 --> 00:06:05.933
我們有一些適度的關於寬度和高度
比例的要求

00:06:07.367 --> 00:06:10.971
對縮略圖你的寬度至少要是1比2

00:06:11.705 --> 00:06:13.507
但是不能寬於3比1

00:06:15.809 --> 00:06:20.247
接下來我們今天要談論的最後元數據是
cannonicalURL

00:06:20.314 --> 00:06:22.950
這只是你文章的網絡版本

00:06:23.550 --> 00:06:26.386
如果你有請一定包含這個元數據

00:06:26.453 --> 00:06:30.757
這對用戶分享你的文章很重要

00:06:30.824 --> 00:06:32.526
對那些無法訪問
Apple News的人

00:06:32.726 --> 00:06:36.063
有這麼一個版本可以後退提供
更好的體驗

00:06:38.098 --> 00:06:39.733
我們談過了元數據

00:06:40.167 --> 00:06:41.468
讓我們深入看看內容

00:06:42.302 --> 00:06:46.473
內容存在於你的文章的一個頂層
數組中 叫做組件

00:06:47.074 --> 00:06:51.712
你的內容的每一個部分都是由
一個JSON對象來表示

00:06:51.778 --> 00:06:53.347
這就是組件

00:06:53.480 --> 00:06:59.653
每一個都有一個語義角色 比如
標題1、標題、介紹、署名和主體

00:07:00.988 --> 00:07:02.589
爲你的內容選擇最合適的角色

00:07:02.656 --> 00:07:05.025
這對無障礙性是關鍵的

00:07:08.462 --> 00:07:11.231
我們涉及了語義
但是如果你要給你的文本加上式樣呢？

00:07:11.298 --> 00:07:13.534
這時就需要組件文本式樣

00:07:14.334 --> 00:07:16.970
組件文本式樣是一個頂層的字典

00:07:18.105 --> 00:07:20.407
我們會在三個不同的層定義式樣

00:07:20.841 --> 00:07:23.844
我們要做的第一件事是定義默認式樣

00:07:23.911 --> 00:07:26.680
這會爲所有文本提供一個基本式樣

00:07:27.881 --> 00:07:30.851
然後我們會定義一系列角色特定的式樣

00:07:30.918 --> 00:07:32.686
它們會以默認爲基礎

00:07:34.054 --> 00:07:36.423
最後我們會定義非默認式樣

00:07:36.490 --> 00:07:38.992
這用於當你需要一些角色的例外情況時

00:07:41.628 --> 00:07:43.564
這就是我們的默認式樣

00:07:43.630 --> 00:07:45.532
讓我們看看其中的屬性

00:07:45.599 --> 00:07:46.733
首先我們有字體名

00:07:47.534 --> 00:07:50.003
要記住的一點是字體名不是

00:07:50.404 --> 00:07:53.240
申明你的字體和在CSS中不完全一樣

00:07:53.540 --> 00:07:54.775
請記住兩件事

00:07:54.842 --> 00:07:55.676
引用字體

00:07:55.742 --> 00:07:58.712
首先當引用字體時你需要調用它們

00:07:58.779 --> 00:08:01.448
通過它們的PostScript名
而不是家族名

00:08:02.649 --> 00:08:06.353
第二你使用的字體需要在iOS上可用

00:08:06.720 --> 00:08:10.457
如果你想表達那些甜蜜的90後的
設計技能

00:08:10.524 --> 00:08:12.926
你可以用黑板家族

00:08:12.993 --> 00:08:14.394
用這PostScript名

00:08:16.997 --> 00:08:18.232
接下來我們有文本顏色

00:08:18.298 --> 00:08:20.067
文本顏色使用16進制值

00:08:20.901 --> 00:08:22.669
如果你想你可以用短的格式

00:08:22.870 --> 00:08:25.639
如果你需要透明度你可以用8個
字符的版本

00:08:27.207 --> 00:08:30.010
然後我們有字體大小
字體大小是用點來申明的

00:08:30.677 --> 00:08:31.979
但我們把它簡寫成一整數

00:08:33.212 --> 00:08:35.916
現在因爲它是點
不要把它想成一個絕對的值

00:08:36.482 --> 00:08:38.919
應用會用你的字體大小

00:08:38.986 --> 00:08:41.355
當用戶在不同設備上看時

00:08:41.421 --> 00:08:45.259
它會做一些調整來優化易讀性

00:08:45.893 --> 00:08:51.064
一個好的規則是儘量不要讓你的
主體小於16點

00:08:53.700 --> 00:08:56.069
類似 行高也是用點定義的

00:08:56.703 --> 00:09:00.007
你想定義你的行高和你選擇的字體
大小是相關的

00:09:00.073 --> 00:09:02.042
我們會在所有設備上保持這個比例

00:09:04.411 --> 00:09:05.546
最後我們有鏈接式樣

00:09:05.612 --> 00:09:07.848
這裏你需要定義一些覆蓋

00:09:08.382 --> 00:09:11.151
爲任何你的組件的文本中的鏈接

00:09:11.718 --> 00:09:13.720
這裏我們有一個文本顏色

00:09:13.787 --> 00:09:16.590
但是顯然沒有什麼會阻止我加
一個下劃線

00:09:20.894 --> 00:09:24.965
所以現在我們有默認式樣
讓我們添加第一個角色特定的默認

00:09:26.400 --> 00:09:29.903
這一個有一個特殊的名字
就像默認 它叫默認主體

00:09:30.237 --> 00:09:33.707
它會爲所有主體組件提供默認式樣

00:09:34.541 --> 00:09:36.243
有兩個新屬性

00:09:36.443 --> 00:09:39.813
我們有段落前和後間隔

00:09:39.880 --> 00:09:42.749
你可能希望它們影響段落間隔

00:09:43.183 --> 00:09:45.919
但是在基於組件的系統中有段落
是什麼意思

00:09:47.287 --> 00:09:49.790
讓我們看看我們的第一個主體組件

00:09:49.857 --> 00:09:52.192
這個組件實際上有兩個段落在其中

00:09:53.327 --> 00:09:54.328
這是第一個

00:09:55.596 --> 00:09:56.763
這是第二個

00:09:57.231 --> 00:10:00.400
我們用兩個新行把它們分開
標記形式

00:10:01.101 --> 00:10:05.506
你可能注意到這個格式申明

00:10:06.006 --> 00:10:09.443
Apple News Format
中 你要選擇純文本或標記

00:10:09.510 --> 00:10:10.677
你的文本格式

00:10:11.378 --> 00:10:14.214
在這個例子中我們要利用它

00:10:14.281 --> 00:10:16.617
有了這個標記式樣、鏈接和文本

00:10:19.419 --> 00:10:21.321
不論你選擇純文本還是標記

00:10:21.388 --> 00:10:23.457
你可以用這些段落間隔屬性

00:10:23.790 --> 00:10:27.227
來影響組件中的段落間的間隔

00:10:30.297 --> 00:10:33.267
所以現在我們看到了怎麼創建
角色特定的默認

00:10:33.700 --> 00:10:36.036
讓我們快速完成剩下的

00:10:36.970 --> 00:10:39.840
對我們頂部的標題
我添加了一些字距

00:10:39.907 --> 00:10:41.842
給字母一點空間

00:10:43.210 --> 00:10:48.382
增加了標題的大小
添加了一些顏色讓介紹的顏色變淺

00:10:49.483 --> 00:10:53.954
署名的一些細小改變
以及繼續往下的副標題

00:10:55.822 --> 00:10:57.191
我們把這些障礙清除了

00:10:57.591 --> 00:10:58.892
讓我們看些更有趣的東西

00:10:58.959 --> 00:11:00.827
讓我們創建第一個非默認式樣

00:11:01.094 --> 00:11:03.530
我們會用這個機會來添加首字放大

00:11:08.435 --> 00:11:15.242
一個需要記得的事是因爲我們要
在三層中做這些

00:11:15.309 --> 00:11:18.312
我們已經包括了大部分
我們想要的針對主體組件的式樣

00:11:18.545 --> 00:11:20.113
在默認和默認主體中

00:11:20.414 --> 00:11:23.183
所以在第三層中
有這些定製式樣

00:11:23.750 --> 00:11:26.553
我們要做的是定義首字放大看起來
應該是怎樣的

00:11:26.920 --> 00:11:29.623
我們要在一個特殊的首字放大屬性
中這麼做

00:11:30.657 --> 00:11:34.061
在那個裏面你需要爲首個字符
定義一些覆蓋式樣

00:11:34.461 --> 00:11:35.929
在組件的第一段中

00:11:37.030 --> 00:11:40.100
有趣的事是這個行數屬性

00:11:40.567 --> 00:11:44.538
你要在這定義你的首字放大應該
跨越多少行文本

00:11:45.739 --> 00:11:49.209
你可以看到我只用一個很簡單的
兩行首字放大

00:11:50.744 --> 00:11:51.678
所以我們完成了我們的式樣

00:11:51.745 --> 00:11:54.014
但是因爲那沒有語義關係

00:11:54.081 --> 00:11:57.017
在組件的文本式樣和特定組件
之間

00:11:57.384 --> 00:11:58.452
我們需要解決它

00:11:59.286 --> 00:12:01.922
我們添加文本樣式屬性到組件中

00:12:02.389 --> 00:12:04.725
並且給式樣命名

00:12:04.858 --> 00:12:07.160
在這個例子中它叫做主體第一個
首字放大

00:12:08.195 --> 00:12:09.263
一旦你這麼做了

00:12:09.329 --> 00:12:11.765
在右邊你可以看到我們得到了
兩行的首字放大

00:12:14.034 --> 00:12:17.704
返回 和我們開始的原始文本傾倒相比

00:12:17.771 --> 00:12:20.274
現在我們有一些文本樣式
看起來好多了

00:12:20.607 --> 00:12:21.808
但是它有一點雜亂

00:12:21.875 --> 00:12:23.510
我們顯然在這需要一些邊緣

00:12:23.944 --> 00:12:26.013
這是用到組件佈局的地方

00:12:26.747 --> 00:12:30.217
組件佈局是我們的下一個要添加的
頂層字典

00:12:30.717 --> 00:12:33.754
在其中我們可以定義佈局
這允許我們添加

00:12:33.820 --> 00:12:36.089
頂部和底部邊緣到我們的組件中

00:12:36.557 --> 00:12:38.659
我們還做一些其他事
我們晚點會涉及

00:12:39.860 --> 00:12:42.529
我們把組件佈局應用於組件上

00:12:42.596 --> 00:12:44.097
通過添加布局屬性

00:12:47.067 --> 00:12:49.703
一旦我們這麼做
我們給文章加了一些留白

00:12:49.770 --> 00:12:51.905
和排版
看起來好多了

00:12:51.972 --> 00:12:55.742
但是讓我們利用另一個簡單的酷方法

00:12:55.809 --> 00:12:58.312
來添加更多對垂直間隔的控制

00:12:58.679 --> 00:12:59.780
讓我們添加分隔符

00:13:00.247 --> 00:13:04.418
讓我們把它放在標題、頂部和文章標題之間

00:13:05.652 --> 00:13:06.854
這是我們的分隔符

00:13:07.154 --> 00:13:09.890
你可以看到我們有一些對筆畫的控制

00:13:09.957 --> 00:13:11.725
我們可以改變寬度和顏色

00:13:12.192 --> 00:13:14.261
但是我認爲很酷的是

00:13:14.828 --> 00:13:16.363
發生在佈局上的事

00:13:17.164 --> 00:13:18.365
讓我們看看分隔符

00:13:18.432 --> 00:13:21.401
看它怎麼延伸到屏幕右邊

00:13:22.169 --> 00:13:24.271
分隔符沒有內在東西

00:13:24.605 --> 00:13:27.441
是我們在組件佈局中做的一些事

00:13:27.574 --> 00:13:30.744
我們用一個特殊屬性叫做
ignoreDocumentMargin

00:13:31.445 --> 00:13:33.780
你可以看到我給它一個值右邊

00:13:33.847 --> 00:13:39.853
這的意思是忽略邊緣一直延伸到邊界

00:13:42.923 --> 00:13:47.628
所以我們有組件文本樣式
我們有組件佈局和分隔符

00:13:47.694 --> 00:13:51.365
文章看起來很好
你知道的 從文本的角度

00:13:51.999 --> 00:13:53.567
現在是時候加一些有趣的東西了

00:13:54.401 --> 00:13:57.337
最好的開始方法是添加圖片

00:13:58.438 --> 00:14:00.073
所以有我的圖片組件

00:14:00.841 --> 00:14:02.676
在下面我添加標題組件

00:14:02.976 --> 00:14:08.782
但是在頁腳組件中
你可以看到標題屬性

00:14:08.849 --> 00:14:11.251
看起來和標題組件是重複的

00:14:11.785 --> 00:14:14.655
在這裏發生的是我們定義一個標題

00:14:14.721 --> 00:14:17.257
如果用戶點擊圖片它會出現

00:14:17.457 --> 00:14:20.027
會進入全屏視圖
像你在右邊看到的

00:14:21.361 --> 00:14:24.398
這出於無障礙性的原因是一個需要
包括的關鍵的東西

00:14:24.464 --> 00:14:28.101
因爲這個標題會被
讀給VoiceOver用戶

00:14:31.371 --> 00:14:33.407
接下來回到我們的佈局

00:14:34.408 --> 00:14:35.976
你可以看到這個圖片是等屏寬的

00:14:36.043 --> 00:14:37.845
它從屏幕的左邊一直到

00:14:37.911 --> 00:14:38.979
屏幕的右邊

00:14:39.046 --> 00:14:42.382
這不是圖片組件的內在東西

00:14:42.716 --> 00:14:45.752
我們又一次使用
ignoreDocumentMargin屬性

00:14:46.253 --> 00:14:49.690
然而這次所用的值不是右而是真

00:14:49.756 --> 00:14:51.758
意思是忽略兩邊的邊緣

00:14:54.928 --> 00:14:57.731
最後我們有我們的URL指向圖像
資源

00:14:58.365 --> 00:14:59.933
我會返回去談談

00:15:00.334 --> 00:15:03.437
關於一些顯示在文章視圖裏的
圖片的要求

00:15:05.038 --> 00:15:09.142
圖片可以被本地或遠程引用
只要使用正確的計劃

00:15:09.209 --> 00:15:10.811
圖片要求

00:15:10.878 --> 00:15:14.681
再一次的和縮略URL一樣
請一定發送給我們高分辨率的圖片

00:15:14.748 --> 00:15:16.984
我們會根據設備處理向下取樣

00:15:19.753 --> 00:15:23.857
對於文章視圖裏的圖片
你可以使用JPEG、PNG和GIF

00:15:23.924 --> 00:15:25.993
我們當然支持動畫GIF

00:15:29.897 --> 00:15:31.698
這是一張圖片
但若你有很多張圖片

00:15:31.765 --> 00:15:33.367
在主題上是一起的？

00:15:33.967 --> 00:15:36.737
這是使用畫廊組件的地方

00:15:37.204 --> 00:15:39.039
要實現很簡單

00:15:39.339 --> 00:15:41.108
你簡單地定義一個畫廊角色

00:15:41.942 --> 00:15:43.277
你提供給它一個圖片數組

00:15:44.044 --> 00:15:47.047
你獲得的是優秀的用戶體驗
用戶可以使用

00:15:47.114 --> 00:15:49.550
這個文章視圖中的幻燈片

00:15:49.850 --> 00:15:53.620
他們可以點擊 進入全屏視圖
查看圖片的標題

00:15:54.555 --> 00:15:56.557
當你完成了 滑出並繼續閱讀

00:15:59.593 --> 00:16:02.996
現在在這的基礎上我們有一個標準
畫廊的替代物

00:16:03.063 --> 00:16:04.298
叫做馬賽克畫廊

00:16:05.065 --> 00:16:06.900
它有相同的實現

00:16:07.201 --> 00:16:09.670
除了你把角色從畫廊切換成馬賽克

00:16:09.970 --> 00:16:12.439
你獲得的是很酷的混合的圖片

00:16:13.006 --> 00:16:15.075
來自你的所有圖片
你可以在右邊看到

00:16:15.275 --> 00:16:19.680
最好的是用戶仍然能夠點擊進入
畫廊

00:16:19.746 --> 00:16:21.548
並獲得相同的全屏體驗

00:16:24.051 --> 00:16:25.686
接下來我們有社交媒體嵌入

00:16:26.186 --> 00:16:30.123
Apple News Format支持它們中一系列
包括Facebook、Vine

00:16:30.290 --> 00:16:31.692
和你能看到Twitter

00:16:32.192 --> 00:16:35.262
實現真的和知道

00:16:35.329 --> 00:16:37.030
你想要嵌入東西的URL一樣簡單

00:16:40.567 --> 00:16:44.605
接下來是更復雜的嵌入
我們支持Apple Maps

00:16:45.205 --> 00:16:47.708
這是來自旅行的好例子

00:16:47.774 --> 00:16:49.810
很酷使用了Apple Maps特性

00:16:51.178 --> 00:16:54.648
包括其中的一個
是當你想向用戶顯示一個位置

00:16:54.715 --> 00:16:57.918
但是給他們機會獲得一些和他們
有關的語境

00:16:58.018 --> 00:17:01.922
所以如果你添加了所有的這些很棒
的特性和有趣的內容

00:17:01.989 --> 00:17:05.526
你可能在尋找個方法讓你的付出金錢化
這時可以用到廣告

00:17:05.592 --> 00:17:08.127
讓我們快速的涉及一下兩種方式

00:17:08.194 --> 00:17:10.964
你可以添加廣告到
Apple News Format文章中

00:17:11.732 --> 00:17:15.002
首先如果你需要控制
廣告組件是你要用的方法

00:17:15.536 --> 00:17:18.137
你把這些放入你的內容

00:17:18.204 --> 00:17:21.175
當你覺得在那裏顯示一個廣告是合適的

00:17:21.241 --> 00:17:22.509
廣告

00:17:22.576 --> 00:17:24.511
如果你不需要太多控制

00:17:24.912 --> 00:17:27.814
更簡單的選擇是使用動態廣告功能

00:17:28.415 --> 00:17:31.852
有了它 你要做的僅僅是指定頻率

00:17:31.919 --> 00:17:35.489
你的廣告出現的頻率
應用會幫你放置廣告

00:17:36.223 --> 00:17:40.394
目前爲止我們有針對手機的很好
的移動體驗

00:17:40.460 --> 00:17:42.462
但把這些放到iPad上時
發生什麼？

00:17:43.830 --> 00:17:46.567
所以我們的移動優先方法
在此時 留給我們

00:17:46.633 --> 00:17:48.635
一些設計機會

00:17:48.702 --> 00:17:50.604
我們的文章在iPad上

00:17:50.671 --> 00:17:53.240
我們當然可以更好地利用空白空間

00:17:54.408 --> 00:17:56.710
像這是一種大塊無聊的文本

00:17:57.211 --> 00:17:59.713
最好加一些變化來保持對讀者
的吸引

00:18:01.014 --> 00:18:03.450
我們有一個很壞的行長度問題

00:18:03.851 --> 00:18:06.787
特別是你把iPad放在橫向方向時

00:18:08.121 --> 00:18:11.725
對所有這些問題的解決辦法
是Apple News Format的列系統

00:18:12.392 --> 00:18:16.897
這是我們在數字時代解決經典的
問題

00:18:16.964 --> 00:18:18.599
你怎麼爲多個屏幕設計

00:18:18.665 --> 00:18:19.499
爲多個屏幕設計

00:18:19.566 --> 00:18:22.603
當然有一些已有的方法

00:18:23.070 --> 00:18:26.640
尤其是響應式設計
你對你的屏幕大小反應

00:18:27.574 --> 00:18:30.077
有移動優先設計
你用它增強體驗

00:18:30.143 --> 00:18:31.478
因爲你獲得更多屏幕空間

00:18:32.513 --> 00:18:34.014
這是嘗試過的有效的方法

00:18:34.681 --> 00:18:38.986
但是讓它們工作是不容易的

00:18:39.419 --> 00:18:41.121
有時你以重新設計告終

00:18:41.188 --> 00:18:44.625
你的文章或者內容針對不同情況

00:18:45.158 --> 00:18:46.193
有了Apple News Format

00:18:46.260 --> 00:18:48.462
我們真希望你
有那麼一次只設計你的文章

00:18:49.296 --> 00:18:52.666
此外我們希望你設計最豐富的體驗

00:18:53.467 --> 00:18:55.636
我們希望你聚焦在大的漂亮版本

00:18:56.203 --> 00:19:00.007
我們不希望你陷入媒體查詢和斷點中

00:19:00.073 --> 00:19:04.111
因爲應用內在設計爲你處理
這類縮放問題

00:19:07.047 --> 00:19:08.048
它是怎麼工作的？

00:19:08.615 --> 00:19:11.585
它開始於一個橫向的iPad

00:19:12.352 --> 00:19:16.623
我們做爲內容創作者
把屏幕分成多列

00:19:17.191 --> 00:19:20.961
現在我已經分成了10列
但是作爲內容創作者

00:19:21.028 --> 00:19:22.729
你可以選擇你想用多少列

00:19:23.130 --> 00:19:25.232
是多少並沒有固定不變的規定

00:19:25.299 --> 00:19:30.838
只要記得你加入越多列
你加入越多複雜性到你的設計中

00:19:30.904 --> 00:19:32.072
把屏幕分成列

00:19:32.139 --> 00:19:33.340
賦予列跨度

00:19:33.407 --> 00:19:36.710
一旦我們決定了我們一共要在
文章中用多少列

00:19:36.977 --> 00:19:39.947
接下來我們要賦予內容列的跨度

00:19:41.248 --> 00:19:45.752
在這個例子中我們的主體內容的
主塊

00:19:45.819 --> 00:19:47.955
使用10列中的前7列

00:19:49.223 --> 00:19:51.758
右邊的標題使用最後幾列

00:19:54.828 --> 00:19:56.230
當我們拿到設計

00:19:56.296 --> 00:19:59.233
我們在不同方向不同設備上看它

00:19:59.299 --> 00:20:01.001
我們看到應用

00:20:01.068 --> 00:20:04.738
自動收縮可用的列數來適應屏幕
大小

00:20:05.339 --> 00:20:07.574
神奇的地方是

00:20:08.141 --> 00:20:13.780
智能的決定如何修改組件

00:20:13.847 --> 00:20:15.449
對應新的屏幕大小

00:20:16.283 --> 00:20:18.585
你可以看到當iPad是縱向時

00:20:19.152 --> 00:20:21.488
東西變得更窄
但是在手機上

00:20:21.555 --> 00:20:22.556
那並不合適

00:20:23.257 --> 00:20:24.791
所有東西返回到堆疊順序

00:20:28.295 --> 00:20:31.832
在此時你可能有興趣開始做一些
算術

00:20:31.899 --> 00:20:33.834
找出對這個和這個屏幕寬度

00:20:33.901 --> 00:20:38.839
有這個和這個佈局
列跨度是什麼？

00:20:39.072 --> 00:20:40.908
這會變得複雜和煩人

00:20:41.608 --> 00:20:44.144
Apple News Format
的精神並非如此

00:20:44.211 --> 00:20:47.414
因爲我們想要你集中在你的設計
的視覺效果上

00:20:48.348 --> 00:20:51.885
爲了幫助你我們開發了一個很棒
的OS X應用叫新聞預覽

00:20:53.086 --> 00:20:56.523
作爲設計師或開發者或兩者都是

00:20:56.590 --> 00:20:58.625
你需要能夠快速遍歷你的設計

00:20:58.692 --> 00:21:00.127
並且知道它們會看起來很好

00:21:00.794 --> 00:21:01.929
這就是新聞預覽的作用

00:21:02.896 --> 00:21:06.667
因爲它允許你獲得視覺更新
關於你的文章看起來會是怎樣

00:21:07.301 --> 00:21:08.869
當你忙於代碼時

00:21:09.803 --> 00:21:14.041
它最好的是利用Xcode模擬器
這樣你可以看到多臺設備

00:21:14.107 --> 00:21:18.111
多個方向 都是實時更新
在你工作的同時

00:21:19.246 --> 00:21:22.783
所有Apple開發者都可在
developer.apple.com獲得它

00:21:25.018 --> 00:21:28.722
回到我們的JSON
我們談論了列系統的概念

00:21:28.789 --> 00:21:32.793
讓我們看看我們怎麼讓這些發生
在文章JSON中

00:21:34.261 --> 00:21:36.363
我們要返回到我們的文章骨架

00:21:36.430 --> 00:21:38.298
我們要看一個頂層屬性叫做佈局

00:21:38.866 --> 00:21:40.367
這是你的文檔佈局

00:21:40.801 --> 00:21:42.002
它有四個屬性

00:21:42.803 --> 00:21:45.239
關於這些屬性你在說的是

00:21:45.339 --> 00:21:49.142
對一個指定寬度 假設1024
對一個橫向iPad

00:21:50.544 --> 00:21:55.182
我想把屏幕分成10列
在中間有20點的間隔

00:21:56.183 --> 00:21:59.319
對左邊和右邊我們有85點的邊緣

00:21:59.920 --> 00:22:01.321
當然這些數字是可設置的

00:22:01.388 --> 00:22:03.490
它們爲這個演示被選擇

00:22:05.459 --> 00:22:07.661
接下來 一旦我們有了文檔佈局

00:22:08.061 --> 00:22:11.031
我們需要開始應用一些列跨度
到單獨的組件上

00:22:11.565 --> 00:22:15.536
因爲顯然的行長度可讀性問題

00:22:15.602 --> 00:22:17.905
我要聚焦在我們的主體組件上

00:22:18.739 --> 00:22:21.875
我們在我們的第一個主體組件

00:22:21.942 --> 00:22:23.977
我們要用一個叫沒有邊緣的佈局

00:22:24.044 --> 00:22:25.779
讓我們看看定義

00:22:27.714 --> 00:22:29.416
並添加兩個新屬性

00:22:30.784 --> 00:22:32.753
第一個新屬性是開始列

00:22:32.920 --> 00:22:35.856
它簡單地表示在屏幕上從左到向

00:22:36.223 --> 00:22:38.825
那個內容佔據的第一列是什麼

00:22:39.660 --> 00:22:41.361
我選擇了0作爲第一列

00:22:42.796 --> 00:22:45.766
然後我們有列跨度
不出所料

00:22:45.832 --> 00:22:49.269
你可以決定該內容總共跨過幾列

00:22:50.037 --> 00:22:54.441
我把它設成10
這也是文檔的總列數

00:22:55.108 --> 00:22:57.778
你可能不奇怪文章中沒有東西改變了

00:22:58.512 --> 00:23:00.647
默認對所有組件

00:23:00.714 --> 00:23:03.183
是跨過它們的容器的整個寬度

00:23:04.618 --> 00:23:05.752
讓我們讓它更有趣

00:23:06.286 --> 00:23:09.623
讓我們實現一個居中的佈局
爲我們的10列布局

00:23:11.291 --> 00:23:12.826
已經看起來好多了

00:23:13.060 --> 00:23:14.595
這裏發生了什麼？

00:23:15.662 --> 00:23:19.533
我設置了它所以我們的主體內容
佔據的第一列

00:23:19.600 --> 00:23:22.135
是我們10列布局的第3列

00:23:22.769 --> 00:23:26.106
當然如果你從0開始
第3列的索引值是2

00:23:27.474 --> 00:23:29.776
那麼我減少了內容的寬度

00:23:29.843 --> 00:23:32.012
現在它只佔據10列中的6列

00:23:33.747 --> 00:23:34.581
這看起來很好

00:23:34.648 --> 00:23:37.551
但是我個人更喜歡不對稱設計

00:23:37.618 --> 00:23:41.054
所以我要把它移到左邊

00:23:41.355 --> 00:23:43.824
轉而佔據前7列

00:23:46.860 --> 00:23:49.463
現在如果我們把它應用到我們其他
的組件上

00:23:50.464 --> 00:23:52.633
開始看到我們的設計集合在一起

00:23:53.534 --> 00:23:55.836
我們切換方向
看起來仍然不錯

00:23:56.770 --> 00:24:00.040
我們維持了從一開始就有的很好的體驗

00:24:02.209 --> 00:24:05.112
我們的一個設計無縫縮放到多個設備上

00:24:05.913 --> 00:24:06.813
很容易

00:24:07.080 --> 00:24:09.683
讓我們把它作爲基礎
在其上進行建設

00:24:11.018 --> 00:24:14.888
之前我們談到
我們有很長的一塊文本很無聊

00:24:15.355 --> 00:24:16.790
我們可以用一些視覺變化

00:24:16.857 --> 00:24:20.127
當然經典的對這個問題的解決
方法是添加擡升式引用

00:24:20.661 --> 00:24:24.498
讓我們從一個主體組件中提取一些文本

00:24:24.565 --> 00:24:26.099
讓我們放入一個擡升式引用

00:24:27.935 --> 00:24:32.272
接下來讓我們用我們的組件佈局
和擡升式引用

00:24:32.339 --> 00:24:34.541
並把它推到邊緣

00:24:36.109 --> 00:24:38.812
所以我爲開始列和列跨度選擇一個值

00:24:40.881 --> 00:24:43.383
來允許擡升式引用清除所有主體組件

00:24:43.450 --> 00:24:46.320
你能看到它成功地做到了這些

00:24:46.386 --> 00:24:48.222
它向上浮動直到遇到障礙

00:24:48.755 --> 00:24:50.290
這不是我們想要的

00:24:50.991 --> 00:24:54.127
我們需要做的是創造一個視覺關係

00:24:54.461 --> 00:24:56.697
在擡升式引用和一些東西之間

00:24:56.930 --> 00:24:59.666
幸運的是我們有一個內在語義關係

00:24:59.933 --> 00:25:03.303
在擡升式引用和它提取自的文本間

00:25:03.837 --> 00:25:09.109
所以我們要使用叫錨的東西

00:25:09.176 --> 00:25:10.344
Apple News Format 中

00:25:10.410 --> 00:25:13.780
我們要錨定擡升式引用到主體組件

00:25:13.847 --> 00:25:16.683
幷包含我們爲擡升式引用提取出的文本

00:25:17.618 --> 00:25:20.254
第一步是添加一個標識符

00:25:20.320 --> 00:25:22.689
給我們的主體組件
這樣我們可以調用它

00:25:23.891 --> 00:25:27.194
然後我們要添加一個錨屬性
到擡升式引用組件中

00:25:28.061 --> 00:25:31.398
在裏面我們會調用
剛剛創建的標識符

00:25:32.666 --> 00:25:36.003
然後我們定義我們想怎麼對齊這兩東西

00:25:36.670 --> 00:25:38.238
這個例子裏我們的意思是

00:25:38.305 --> 00:25:41.975
我們想頂部對齊來源
也就是擡升式引用

00:25:42.910 --> 00:25:45.379
和目標、主體組件

00:25:46.947 --> 00:25:49.983
我們一旦這麼做
我們得到很酷的效果

00:25:50.050 --> 00:25:51.919
我們的擡升式引用懸掛在邊緣

00:25:51.985 --> 00:25:54.855
就在最相關的內容邊上

00:25:55.022 --> 00:25:57.324
我們有更多空白空間的有趣用法

00:25:57.558 --> 00:26:00.794
但是因爲我們有內在文本關係

00:26:00.861 --> 00:26:03.630
在擡升式引用和它提取自的文本之間

00:26:03.697 --> 00:26:05.832
我們實際上可以更進一步

00:26:06.533 --> 00:26:09.203
錨定到文本本身

00:26:11.605 --> 00:26:12.940
這是一個兩步的過程

00:26:13.006 --> 00:26:16.076
首先我們要返回到擡升式引用佈局

00:26:16.677 --> 00:26:18.245
更新它

00:26:18.312 --> 00:26:20.881
這樣它和主體組件有1列重疊

00:26:23.083 --> 00:26:24.818
然後調用文本範圍

00:26:25.118 --> 00:26:26.954
擡升式引用是從它之中提取出來的

00:26:27.855 --> 00:26:33.527
一旦我們這麼做了 我們得到很酷
的把擡升式引用嵌入文本的效果

00:26:36.396 --> 00:26:37.331
跨設備

00:26:37.397 --> 00:26:40.868
當然你把它放到其他方向的設備上時

00:26:40.934 --> 00:26:44.204
它總是做正確的事
包括減少寬度

00:26:44.271 --> 00:26:47.908
或者在手機上
返回到一個邏輯的堆疊順序上

00:26:52.012 --> 00:26:54.982
此時事情都集合在一起

00:26:55.382 --> 00:26:59.620
我們可以停止並開始把
它做爲我們內容的模板來使用

00:27:00.587 --> 00:27:04.558
但是如果我們在文章中滾動看看
目前的體驗

00:27:06.260 --> 00:27:07.694
看起來少了什麼

00:27:08.495 --> 00:27:12.132
比如看看這篇來自Harper的文章

00:27:12.799 --> 00:27:17.471
看看主體內容是怎麼向上滑動
到頂部的圖片之上的

00:27:17.538 --> 00:27:21.842
當圖片進入視口時會淡入

00:27:22.743 --> 00:27:23.577
這是很酷的效果

00:27:23.644 --> 00:27:25.445
我們可以從中受到啓發

00:27:26.180 --> 00:27:28.515
所以讓我們在文章中添加一些運動

00:27:28.582 --> 00:27:29.917
添加運動

00:27:29.983 --> 00:27:31.451
我們今天要做的

00:27:31.818 --> 00:27:34.087
是利用很酷的
Apple News Format特性

00:27:34.154 --> 00:27:35.489
叫場景動畫

00:27:37.624 --> 00:27:40.928
第一步我們要得到我們的圖片

00:27:41.228 --> 00:27:44.097
我們要移動它成爲文章的第一個組件

00:27:45.499 --> 00:27:47.901
接下來我們做一些轉化

00:27:47.968 --> 00:27:49.303
我們要得到這些圖片

00:27:49.369 --> 00:27:51.638
把它從圖片組件

00:27:52.072 --> 00:27:54.374
變成一個容器的背景填充

00:27:55.943 --> 00:27:57.845
要這麼做我們要首先添加一個容器

00:27:57.911 --> 00:28:01.081
我們用一個語義容器組件叫做頁頭

00:28:01.949 --> 00:28:04.852
現在並沒有任何變化
因爲我們只有一個空的容器

00:28:04.918 --> 00:28:06.720
爲了調試原因

00:28:07.020 --> 00:28:10.023
我會添加高度和背景色

00:28:10.090 --> 00:28:11.391
這樣能看到我們的容器

00:28:12.426 --> 00:28:14.294
現在我們有可愛的灰盒子

00:28:14.928 --> 00:28:16.797
在JSON中有些事情需要注意

00:28:16.864 --> 00:28:21.168
首先我添加了背景顏色
用一個新屬性叫式樣

00:28:21.802 --> 00:28:23.837
這允許我們找到一個組件式樣

00:28:24.538 --> 00:28:30.577
組件式樣使你能訪問更高層的設計元素
比如背景填充和邊界

00:28:32.646 --> 00:28:35.916
下一個有趣的事是它定義了

00:28:35.983 --> 00:28:39.620
我們的內聯式樣
我之前沒有這麼做過

00:28:41.388 --> 00:28:43.257
在技術層面 這並沒有區別

00:28:43.323 --> 00:28:50.063
在內聯定義和放到其他地方
做爲主引用

00:28:50.430 --> 00:28:53.200
這只是組織和方便方面的事

00:28:55.102 --> 00:28:56.069
然後我們有高度

00:28:56.336 --> 00:28:59.106
我控制了容器的高度

00:28:59.173 --> 00:29:03.844
通過一個屬性叫最小高度
在組件佈局中

00:29:04.845 --> 00:29:08.849
我給它一個值44vmax

00:29:08.916 --> 00:29:10.150
它的意思是

00:29:10.217 --> 00:29:15.455
我們希望這個容器至少有最大
視口方向的44％長

00:29:16.290 --> 00:29:19.927
vmax單位是一些特殊尺寸單位之一

00:29:19.993 --> 00:29:21.828
Apple News Format
中可用

00:29:24.198 --> 00:29:27.568
現在我們有可愛大小的灰盒子

00:29:27.634 --> 00:29:32.706
讓我們繼續把它
從背景顏色切換成圖片填充

00:29:33.674 --> 00:29:35.042
這很簡單

00:29:35.108 --> 00:29:38.312
只需要添加填充屬性到式樣中

00:29:40.147 --> 00:29:42.216
有了這我們可以擺脫圖片

00:29:42.583 --> 00:29:43.884
我們完成了轉換

00:29:44.551 --> 00:29:46.086
我們更接近我們的場景動畫

00:29:46.687 --> 00:29:49.556
下一步我們需要建立一個場景

00:29:49.890 --> 00:29:54.394
我們要做的是把整個文章分成

00:29:54.461 --> 00:29:58.332
兩個容器 語義容器叫章節

00:29:59.833 --> 00:30:02.836
我們的第一個章節是我們的場景

00:30:02.903 --> 00:30:04.137
動畫會在這發生

00:30:04.438 --> 00:30:06.440
所以我把頁頭容器放在這裏面

00:30:07.241 --> 00:30:10.577
文章的其他東西
我會放在第二個章節

00:30:12.846 --> 00:30:14.748
爲了讓我們的場景發生

00:30:14.815 --> 00:30:16.717
這很容易

00:30:16.783 --> 00:30:20.387
你簡單地添加一個場景屬性
到第一個章節

00:30:21.388 --> 00:30:23.390
然後你定義你想要的動畫

00:30:23.891 --> 00:30:26.260
在這 我用一個叫褪色固定頁頭

00:30:26.727 --> 00:30:29.863
它的意思是使頁頭容器

00:30:29.930 --> 00:30:33.100
當用戶滾動時
它會固定在視口頂部

00:30:33.433 --> 00:30:35.536
文章其他部分會向上滑動到它上面

00:30:35.736 --> 00:30:38.572
頁頭上的背景填充會淡出

00:30:38.972 --> 00:30:40.040
讓我們看看實際演示

00:30:40.974 --> 00:30:41.975
這是我們的文章

00:30:42.042 --> 00:30:46.280
用戶滾動而且文本向上移動到圖片之上
圖片開始淡出

00:30:47.181 --> 00:30:51.552
這是這個效果的要點
但是不完全是我想要的

00:30:52.085 --> 00:30:55.889
我們有那些無裝飾的文本向上移動
變得不可閱讀

00:30:56.790 --> 00:30:57.758
不是我想要的效果

00:30:58.525 --> 00:31:00.427
幸運的是解決辦法非常簡單

00:31:00.928 --> 00:31:04.364
我們只需要給第二個章節
添加背景顏色

00:31:04.698 --> 00:31:08.101
我們會讓剩餘內容保持

00:31:08.168 --> 00:31:10.337
白色背景並且整潔地向上移動

00:31:10.504 --> 00:31:12.005
讓我們看看實際效果

00:31:13.574 --> 00:31:16.109
我們仍然得到一個淡出背景動畫

00:31:16.643 --> 00:31:17.845
它還是可讀的

00:31:17.911 --> 00:31:19.079
體驗好多了

00:31:20.013 --> 00:31:22.082
現在我們加入了動畫

00:31:22.816 --> 00:31:25.519
我們需要更關注一些設計元素

00:31:25.919 --> 00:31:29.022
在文章體驗之上 使它看起來更好

00:31:30.691 --> 00:31:35.462
第一個我要處理的問題是
當我們移動圖片時

00:31:35.996 --> 00:31:39.032
突然標題變得奇怪並且有很多東西

00:31:39.099 --> 00:31:41.134
在它和它描述的東西之間

00:31:41.735 --> 00:31:44.671
有不同方法解決這個問題

00:31:45.339 --> 00:31:47.975
我今天要用的是利用我們的錨定技能

00:31:48.575 --> 00:31:51.245
把它放到邊緣去

00:31:51.545 --> 00:31:53.547
它的效果是

00:31:53.614 --> 00:31:56.683
使用一條垂直的線使關聯更清晰

00:31:56.750 --> 00:32:00.020
而且它使頂部的空白空間更有趣

00:32:02.089 --> 00:32:03.891
接下來我要做的是

00:32:03.957 --> 00:32:06.560
我想利用我們在使用容器的事實

00:32:06.627 --> 00:32:08.695
頂部是一個圖片填充容器
而不是一個圖片

00:32:09.530 --> 00:32:11.198
關於它最酷的事

00:32:11.265 --> 00:32:13.066
是你把東西放在容器裏

00:32:13.267 --> 00:32:14.201
主要是文本

00:32:14.601 --> 00:32:17.104
表明我們可以分層讓文本在圖片之上

00:32:17.171 --> 00:32:20.407
使我們的文章頂部看起來更有趣

00:32:22.876 --> 00:32:27.414
所以我拿出標題們

00:32:27.481 --> 00:32:30.751
把它們放到頁頭容器中

00:32:32.119 --> 00:32:35.155
這看起來很酷
除了它們很奇怪地浮動到頂部

00:32:35.522 --> 00:32:37.624
如果我能把它們和底部對齊就好了

00:32:37.691 --> 00:32:41.562
我可以 用錨屬性的另一個功能

00:32:42.829 --> 00:32:47.267
如果你在一個容器內的對象上使用錨

00:32:47.334 --> 00:32:50.070
你可以它的調整對齊 與容器相對

00:32:50.571 --> 00:32:53.574
在這個例子中
我要用錨的目標位置是底部

00:32:53.640 --> 00:32:57.444
你可以看到文本固定在頁頭容器底部

00:32:58.111 --> 00:32:59.546
看起來好多了

00:33:02.749 --> 00:33:04.318
我們很接近了

00:33:04.751 --> 00:33:07.688
我們用分層把文本放在圖片上方

00:33:07.754 --> 00:33:10.090
我們有漂亮的空白空間使用
我們有好的排版

00:33:10.691 --> 00:33:14.161
我想在宣佈文章頂部體驗完成前
做最後一件事

00:33:14.428 --> 00:33:16.430
我想添加一些內聯文本式樣

00:33:17.831 --> 00:33:20.634
讓我們再次來到文章骨架

00:33:21.335 --> 00:33:23.837
我們要添加一個新的頂層字典
叫文本式樣

00:33:24.638 --> 00:33:27.207
文本式樣和組件文本式樣類似

00:33:27.641 --> 00:33:30.744
除了它不是給組件中的所有文本加式樣

00:33:31.078 --> 00:33:36.149
文本式樣允許你只給一個範圍的
文本加式樣並有兩個式樣

00:33:36.950 --> 00:33:39.453
一個爲灰色文本
一個爲加粗文本

00:33:41.288 --> 00:33:42.723
要運用它們
我要利用

00:33:42.789 --> 00:33:45.993
Apple News Format
中 一個很酷的標記擴展

00:33:47.160 --> 00:33:49.630
這是我想影響的兩個組件

00:33:49.696 --> 00:33:52.599
我們有標題組件和第一個主體組件

00:33:54.134 --> 00:33:56.370
要應用我的式樣

00:33:56.436 --> 00:34:01.108
我要做的是用中括號包裹
我想要影響的文本

00:34:02.176 --> 00:34:05.812
緊跟着的是
我要應用的式樣在大括號裏

00:34:07.147 --> 00:34:10.417
一旦你這麼做你可以看到這個例子標題

00:34:10.484 --> 00:34:14.121
我給了一些灰色文本顏色到一些單詞上

00:34:16.190 --> 00:34:19.493
然後在第一個主體組件上看到加粗效果

00:34:21.594 --> 00:34:23.630
我很滿意

00:34:23.697 --> 00:34:26.333
可以說我們的文章頂部的體驗完成了

00:34:27.434 --> 00:34:31.371
只差一個調整就可以說整個文章完成了

00:34:31.438 --> 00:34:33.040
我想給一些元素加些移動

00:34:33.106 --> 00:34:34.208
在文章下面一些地方

00:34:34.608 --> 00:34:37.077
比如在右邊的這個擡升式引用

00:34:37.143 --> 00:34:39.012
如果它能從右邊滑入那會很酷

00:34:40.581 --> 00:34:43.283
如果畫廊也能滑入那就酷了

00:34:44.083 --> 00:34:46.053
但是對馬賽克和標題

00:34:46.520 --> 00:34:49.422
我想要當視口到達它們的時候
它們能淡入

00:34:51.190 --> 00:34:52.860
要實現這些很簡單

00:34:53.594 --> 00:34:54.594
這是擡升式引用

00:34:55.262 --> 00:35:00.133
添加動畫我要做的是添加一個動畫屬性

00:35:00.834 --> 00:35:02.469
在裏面我申明想要的種類

00:35:02.536 --> 00:35:04.204
此時我想要移動進入動畫

00:35:04.972 --> 00:35:07.374
有了移動進入我需要指明它進來的方向

00:35:07.875 --> 00:35:09.409
我要它從右邊滑入

00:35:10.744 --> 00:35:13.747
現在我要把同樣的事應用在畫廊上

00:35:14.348 --> 00:35:18.886
然後我要添加淡入動畫
到馬賽克和兩個標題

00:35:19.720 --> 00:35:21.021
讓我們看看總體效果

00:35:21.955 --> 00:35:24.791
我們有場景動畫
這是擡升式引用

00:35:26.126 --> 00:35:26.960
滑入

00:35:27.027 --> 00:35:30.397
畫廊 馬賽克 標題
淡入 淡入

00:35:31.398 --> 00:35:32.566
看起來好多了

00:35:33.734 --> 00:35:37.004
用一些動畫
我們使在文章中滾動

00:35:37.070 --> 00:35:38.405
更有趣更動態

00:35:39.239 --> 00:35:41.742
這個地方看起來是很適合結束

00:35:41.808 --> 00:35:44.178
Apple News Format
細節的速成課

00:35:44.611 --> 00:35:46.213
我們覆蓋了很多

00:35:46.480 --> 00:35:48.348
我們添加了一些文本和圖片內容

00:35:50.217 --> 00:35:52.819
我們看到如何使佈局跨設備運行

00:35:53.854 --> 00:35:56.023
我們用錨來創造視覺關係

00:35:57.124 --> 00:35:59.893
用幾行代碼
我們添加了很酷的動畫

00:36:00.661 --> 00:36:02.529
當然這只是冰山一角

00:36:02.596 --> 00:36:05.966
我鼓勵你們下載工具 閱讀文檔
自己玩一玩它們

00:36:07.601 --> 00:36:09.536
我很想看到
我們的內容創造者會做些什麼

00:36:10.437 --> 00:36:11.338
交回給Casey

00:36:17.144 --> 00:36:20.314
嘿 Dan給你們一個很好的關於
Apple News Format介紹

00:36:20.380 --> 00:36:22.382
並展示瞭如何使用新聞預覽工具

00:36:22.449 --> 00:36:26.353
來創造將在每臺設備上
看起來很棒的新聞報道

00:36:26.420 --> 00:36:30.324
我希望我們今天鼓舞了你們去
註冊news publisher

00:36:30.390 --> 00:36:33.961
查看資料 發佈新聞報道 賺錢

00:36:34.027 --> 00:36:37.497
幫助作者曝光 爲平臺的插件做貢獻

00:36:37.731 --> 00:36:40.400
這個鏈接會帶你到你想去的所有地方

00:36:40.467 --> 00:36:42.402
爲了得到那些材料來開始

00:36:42.469 --> 00:36:47.374
包括你的文檔
和Dan今天展示的一些示例代碼

00:36:48.275 --> 00:36:51.378
確保你觀看那個News演講

00:36:51.445 --> 00:36:54.581
它覆蓋了你可以發佈的多種方式

00:36:54.648 --> 00:36:57.117
謝謝你們本週的出席

00:36:57.317 --> 00:37:00.087
很高興有你們在這兒
演講至此結束