00:00:19.319 --> 00:00:23.790
通過主動建議增加應用使用

00:00:28.462 --> 00:00:29.563
大家好

00:00:29.997 --> 00:00:33.901
感謝大家到場
與我們共度週五的下午

00:00:34.268 --> 00:00:38.372
希望你在WWDC度過精彩的一週

00:00:39.406 --> 00:00:42.242
我現在對這次演講
感到十分興奮

00:00:42.309 --> 00:00:47.247
因爲我們將討論的東西
我認爲是大家都想要的

00:00:48.248 --> 00:00:50.517
從根本講
大家都在這裏

00:00:50.584 --> 00:00:54.221
是因爲你們喜歡
打造優質的應用

00:00:54.288 --> 00:00:58.492
而且你可能想有更多的用戶
使用那些優質的應用

00:00:59.126 --> 00:01:04.498
好消息是
我們想研究出機會

00:01:04.565 --> 00:01:07.835
讓你的應用在恰當的時候
提供給我們的客戶

00:01:07.901 --> 00:01:10.270
這樣你會得到更多的參與

00:01:11.171 --> 00:01:14.875
我們將在這整場的演講中討論

00:01:14.942 --> 00:01:17.978
你可以那麼做的不同方法

00:01:19.279 --> 00:01:23.817
現今我們在整個操作系統上
以各種形式推薦應用

00:01:23.884 --> 00:01:25.586
在許多不同地方

00:01:26.386 --> 00:01:29.623
我們的客戶可以使用
Siri應用建議

00:01:29.690 --> 00:01:33.727
當他們從主屏幕向左滑動
以及調用搜索的時候

00:01:35.128 --> 00:01:36.897
甚至在輸入查詢之後

00:01:37.064 --> 00:01:41.401
你可以在其他
第三方應用內部得到結果

00:01:43.670 --> 00:01:48.942
Handoff是我們宣傳第三方
應用和你的應用的另一種方式

00:01:49.009 --> 00:01:53.247
隨着你從一個設備上開始活動
然後轉移到下一個

00:01:53.313 --> 00:01:56.216
我們試着預測
你將要做的事情

00:01:56.283 --> 00:01:59.953
然後在屏幕的左下角
提供那個應用的圖標

00:02:01.822 --> 00:02:05.125
在某些情況下
當我們認爲你非常想做的

00:02:05.192 --> 00:02:06.894
是播放一種媒體

00:02:06.960 --> 00:02:10.964
我們會將你的應用內容
推薦到設備的鎖屏上

00:02:11.198 --> 00:02:15.836
比如在你插入耳機
或者Bluetooth配對

00:02:15.903 --> 00:02:18.472
到你的車或者音響之後

00:02:18.539 --> 00:02:21.875
如果有一款應用是你
在那種情況下經常使用的

00:02:21.942 --> 00:02:23.377
系統會得知

00:02:23.443 --> 00:02:26.413
而且不僅提供那款應用
還有應用的內容

00:02:26.480 --> 00:02:30.017
我們今天將談談
如何能夠構建精彩的體驗

00:02:30.083 --> 00:02:31.218
爲那種環境

00:02:33.353 --> 00:02:37.391
在你使用操作系統時
例如閱讀新聞文章

00:02:37.558 --> 00:02:39.326
你可以創建提醒

00:02:39.426 --> 00:02:42.462
與你所看的內容
有前後關聯

00:02:42.896 --> 00:02:45.065
例如 如果你在讀一篇文章

00:02:45.132 --> 00:02:49.269
然後你想再看一眼
或回家再讀

00:02:49.336 --> 00:02:52.906
因爲你正在觀看WWDC展示

00:02:53.373 --> 00:02:54.575
你可以調出Siri

00:02:55.075 --> 00:03:00.914
當你說“提醒我這件事”時
Siri會理解你的意思

00:03:00.981 --> 00:03:04.952
它會有當前
在屏幕顯示的前後關聯

00:03:05.619 --> 00:03:08.655
這會在任何應用上奏效
只要採用一些API

00:03:08.755 --> 00:03:10.824
今天晚些時候我們會討論

00:03:10.924 --> 00:03:14.061
大家會對此感到尤爲興奮
因爲這意味着

00:03:14.127 --> 00:03:17.331
當客戶打開
Reminders應用時

00:03:17.431 --> 00:03:21.235
他們可以瞬間
回到你的內容上

00:03:22.769 --> 00:03:27.908
iOS 10上新出現的是
整個系統上的地點推薦

00:03:27.975 --> 00:03:30.978
當我們認爲客戶有某種意圖

00:03:31.411 --> 00:03:34.181
想去某個地方
或者使用一個地點時

00:03:34.248 --> 00:03:36.083
是他們最近看過的

00:03:36.149 --> 00:03:40.988
我們過會將談談
如何讓你應用的數據

00:03:41.154 --> 00:03:42.523
在整個系統中流動

00:03:44.958 --> 00:03:47.794
Multitasking
也是另一種界面

00:03:47.961 --> 00:03:52.399
我們會將我們認爲客戶會
感興趣的地點推薦給他們

00:03:52.766 --> 00:03:56.803
你可以將你的應用
圖標推薦在上面

00:03:56.870 --> 00:04:00.474
在多任務UI
的醒目位置上

00:04:02.276 --> 00:04:06.046
同樣是iOS 10中的新功能
就是我們將

00:04:06.146 --> 00:04:13.020
你應用的聯繫方式推薦到
原生聯繫人應用的內部

00:04:14.621 --> 00:04:19.660
這裏你會注意到在
WhatsApp中發現了一個句柄

00:04:20.093 --> 00:04:23.697
我們過會將談談
如果能夠讓你的應用內容

00:04:23.764 --> 00:04:25.098
進入那個界面

00:04:27.501 --> 00:04:28.335
所以...

00:04:29.002 --> 00:04:34.741
要得知何時推薦
操作系統需要學習

00:04:34.808 --> 00:04:36.977
你的數據和應用

00:04:37.711 --> 00:04:43.183
好消息是
幾個簡單的API就會將

00:04:43.250 --> 00:04:46.119
更大價值提供給你
比我之前說的要更多

00:04:47.054 --> 00:04:50.224
除了將你的應用在各種時刻推薦

00:04:50.290 --> 00:04:53.961
你還會得到更深的Siri整合
就像我說的

00:04:54.361 --> 00:04:56.597
前後關聯提醒那樣

00:04:57.865 --> 00:05:01.368
所以今天我們要做的是
談談這些API

00:05:01.602 --> 00:05:05.272
並且我們會講解
如何恰當採用它們

00:05:05.506 --> 00:05:10.143
這樣你們都會得到
用戶更多的參與

00:05:10.544 --> 00:05:12.646
藉助在整個OS上的推薦

00:05:12.946 --> 00:05:17.184
首先我們將談談
NSUserActivity和schema.org

00:05:17.484 --> 00:05:22.289
NSUserActivity
這種API相當於操作系統的眼睛

00:05:22.356 --> 00:05:27.928
它幫助我們瞭解客戶當前
在屏幕上所看的內容

00:05:27.995 --> 00:05:31.999
而schema.org在
網頁上有相同的作用

00:05:33.467 --> 00:05:35.969
接下來 我們將談談
一些新的改進

00:05:36.036 --> 00:05:39.606
和新的API
圍繞那些處理地點的應用

00:05:39.773 --> 00:05:42.876
如果你的應用像Yelp
那是一個目錄

00:05:43.043 --> 00:05:46.747
提供很多不同地點
或者相反 如果你的應用像Uber

00:05:46.813 --> 00:05:50.083
要接收地點
那這就與你非常相關了

00:05:51.285 --> 00:05:53.720
之後我們會談談
構建精彩的體驗

00:05:53.787 --> 00:05:55.856
圍繞媒體應用建議

00:05:55.923 --> 00:06:00.093
我之前展示了一個例子
是一類內容推薦

00:06:00.160 --> 00:06:03.697
在客戶插入耳機之後就會發生

00:06:03.797 --> 00:06:06.099
我們會談談如何讓你的內容

00:06:06.166 --> 00:06:08.068
在界面最突出位置顯示

00:06:08.602 --> 00:06:12.372
之後我們會概述
今天會學到的所有內容

00:06:14.241 --> 00:06:17.778
先從NSUserActivity
和schema.org開始

00:06:17.845 --> 00:06:21.014
我想邀請Sofiane上臺
Sofiane？

00:06:27.120 --> 00:06:29.756
謝了 Daniel
大家下午好

00:06:29.923 --> 00:06:33.227
我叫Sofiane 今天我非常
激動地在這裏跟大家談談

00:06:33.293 --> 00:06:35.963
我們最近在研究的一些功能

00:06:36.964 --> 00:06:39.933
我們剛聽過Daniel說過的
在整個系統中

00:06:40.000 --> 00:06:42.669
推薦應用內容的
好方法

00:06:43.103 --> 00:06:47.374
現在我們來談談一些API
你能採用它們來實現這一目的

00:06:47.975 --> 00:06:50.244
在整個展示中
我們會談談功能

00:06:50.644 --> 00:06:53.247
一些你可能已經熟悉了
像是Handoff

00:06:53.313 --> 00:06:57.384
或者Spotlight搜索還有
一些在iOS 10中推出的新功能

00:06:57.518 --> 00:06:59.520
例如 地點建議

00:07:00.187 --> 00:07:02.322
你在這裏看到的所有功能

00:07:02.389 --> 00:07:03.524
都有共同點

00:07:03.957 --> 00:07:07.027
那就是單個API
叫做NSUserActivity

00:07:07.995 --> 00:07:08.996
首先 一些背景知識

00:07:09.897 --> 00:07:13.534
NSUserActivity是iOS 8中推出的
支持Handoff

00:07:13.934 --> 00:07:16.470
這是非常神奇的功能
允許你在一個設備上

00:07:16.570 --> 00:07:20.107
開始一項活動 然後轉到
另一個設備上繼續你之前的活動

00:07:21.375 --> 00:07:26.380
去年在iOS 9中 我們支持
將內容直接從

00:07:26.446 --> 00:07:29.650
NSUserActivity推薦到
Spotlight搜索結果裏

00:07:30.784 --> 00:07:34.588
在iOS 10中我們進一步增強了
NSUserActivities

00:07:34.655 --> 00:07:38.125
它可以捕捉在你應用
內部查看過的地點

00:07:38.192 --> 00:07:40.827
並在整個系統中的
多個位置推薦它們

00:07:40.928 --> 00:07:42.429
甚至在其他應用中

00:07:43.764 --> 00:07:46.934
現在NSUserActivity
還將前後關聯信息提供給Siri

00:07:47.034 --> 00:07:50.604
這樣Siri能幫助你獲取方向
或者呼叫

00:07:50.671 --> 00:07:52.606
你在應用中查看的地點

00:07:53.774 --> 00:07:54.942
同樣新出現於iOS 10

00:07:55.542 --> 00:07:58.579
NSUserActivity
允許你的通信應用

00:07:58.645 --> 00:08:00.948
直接從聯繫人卡片中推薦

00:08:01.048 --> 00:08:02.850
作爲替代通信方式

00:08:04.117 --> 00:08:07.654
我知道大家在想什麼
“這太酷了” 但願吧

00:08:08.455 --> 00:08:10.390
“但工作原理是什麼？”

00:08:10.824 --> 00:08:12.793
我來告訴大家
這是非常簡單明瞭的

00:08:12.860 --> 00:08:16.263
我們有很多精彩內容要說
所以直入主題吧

00:08:17.197 --> 00:08:20.300
我們將談談
NSUserActivity和schema.org

00:08:20.701 --> 00:08:24.571
這些API允許你
無縫地與系統整合

00:08:24.738 --> 00:08:28.642
NSUserActivity用於原生應用
而schema.org是用於網頁的

00:08:29.243 --> 00:08:30.777
我們首先專注於
NSUserActivity

00:08:32.111 --> 00:08:36.750
NSUserActivity是
輕量級界面 能捕獲應用程序的狀態

00:08:36.850 --> 00:08:41.288
在用戶瀏覽你應用的過程中
這還可以在之後還原

00:08:41.755 --> 00:08:43.924
所以例如 這裏
我們有Yelp應用

00:08:44.358 --> 00:08:47.995
這是一款本地搜索應用
隨着用戶瀏覽應用

00:08:48.262 --> 00:08:51.532
創建NSUserActivity
捕獲我們需要的信息

00:08:51.598 --> 00:08:53.333
之後重現這個狀態

00:08:54.001 --> 00:08:56.703
例如 當我觸發餐廳搜索時

00:08:56.770 --> 00:08:59.406
我們遵循創建活動的相同模式

00:08:59.740 --> 00:09:03.477
當我從那個列表中查看結果時

00:09:04.144 --> 00:09:07.447
在這個特定案例中
我們在查看一個地點

00:09:08.048 --> 00:09:11.385
在iOS 10中
NSUserActivity現在

00:09:11.451 --> 00:09:16.023
更加了解特定概念 例如
地點或者通信互動

00:09:16.490 --> 00:09:18.692
我們很快就會講的
不過之前我想

00:09:18.759 --> 00:09:20.460
仔細看看這個屏幕

00:09:21.695 --> 00:09:24.798
這裏我們創建了活動
並用信息來描述它

00:09:24.865 --> 00:09:28.068
來之後重現這個狀態
以及已提交的數據

00:09:28.402 --> 00:09:31.138
例如 地點名稱或者地址

00:09:31.572 --> 00:09:34.007
之後我們通知系統
這代表了

00:09:34.074 --> 00:09:38.946
當前用戶狀態 我們決定
它是否會宣傳用於Handoff

00:09:39.813 --> 00:09:43.350
在整個系統中
臨時可用於地點建議

00:09:43.851 --> 00:09:45.953
或添加到設備索引...

00:09:46.486 --> 00:09:50.357
或添加到設備索引上的Spotlight
這樣它會出現在

00:09:50.424 --> 00:09:51.658
Spotlight搜索結果中

00:09:52.860 --> 00:09:54.962
這裏有一些相關會議
關於這個話題的

00:09:55.062 --> 00:09:57.764
尤其是採用
NSUserActivities

00:09:57.831 --> 00:09:59.166
用於Handoff和應用搜索

00:09:59.633 --> 00:10:02.669
我推薦大家去看一下
那裏的內容十分精彩

00:10:04.104 --> 00:10:05.939
現在我們深入到代碼 好吧？

00:10:06.473 --> 00:10:09.142
我將給你展示如何
創建這些活動

00:10:09.743 --> 00:10:12.513
我們在此簡化
NSUserActivity的實例

00:10:12.846 --> 00:10:14.548
並提供一個活動類型

00:10:14.748 --> 00:10:16.583
那是你提供的字符串

00:10:16.650 --> 00:10:19.786
這和你在info.plist中
指定的字符串相同

00:10:20.687 --> 00:10:23.357
我們推薦使用
反向DNS樣式符號

00:10:23.423 --> 00:10:24.825
保持字符串的特殊性

00:10:26.059 --> 00:10:28.962
接下來 我們的活動需要標題
而且我們使用的標題

00:10:29.029 --> 00:10:31.932
會描述我們在這裏看的內容

00:10:32.032 --> 00:10:33.567
這裏我們看到了餐廳

00:10:33.634 --> 00:10:35.402
要記住的事情是

00:10:35.536 --> 00:10:37.938
這是你的用戶活動的公衆形象

00:10:38.005 --> 00:10:39.106
例如 這就是

00:10:39.173 --> 00:10:41.441
其在Spotlight搜索
結果中的樣子

00:10:41.542 --> 00:10:45.045
你要確保你使用的標題
有說明性並且有含義

00:10:46.046 --> 00:10:49.383
下面 我們啓用Handoff
應用搜索以及公共索引

00:10:49.650 --> 00:10:51.685
因爲我們查看的內容是公開的

00:10:52.719 --> 00:10:56.790
之後我們在userInfo
屬性上設置一個字典

00:10:56.857 --> 00:10:59.826
捕獲我們需要
用來重現狀態的信息

00:11:00.027 --> 00:11:01.528
當活動還原時

00:11:01.862 --> 00:11:05.999
那種情況下 我們使用
剛纔所查看的地點的唯一ID

00:11:06.400 --> 00:11:09.002
通常
當活動被還原時

00:11:09.069 --> 00:11:11.505
例如 當傳遞給了另一個設備

00:11:11.672 --> 00:11:16.109
你可以從服務器取回那個ID
然後還原那個地點

00:11:16.243 --> 00:11:17.411
如用戶期待那樣

00:11:19.179 --> 00:11:22.683
爲了全面地描述你的活動
並得出更豐富的搜索結果

00:11:22.850 --> 00:11:24.051
你可以使用這個類

00:11:24.117 --> 00:11:27.754
我們在iOS 9中推出
叫做CSSearchableItemAttributeSet

00:11:28.989 --> 00:11:33.093
它在你的應用和系統之間
提供了共同語言

00:11:33.160 --> 00:11:34.761
來更好地描述你的內容

00:11:36.029 --> 00:11:39.166
如果你的網站映射的內容

00:11:39.333 --> 00:11:41.301
是你在應用內查看的

00:11:41.401 --> 00:11:45.873
可以提供網頁URL
這樣當你的活動

00:11:45.939 --> 00:11:49.376
例如被傳遞給一個
未安裝有你應用的設備上

00:11:49.576 --> 00:11:53.947
這會順着那個鏈接
在Safari中恰當啓動

00:11:54.748 --> 00:11:57.851
最後我們在活動上
調用becomeCurrent

00:11:58.018 --> 00:11:59.019
告訴系統

00:11:59.086 --> 00:12:01.221
這代表了當前用戶狀態

00:12:01.321 --> 00:12:03.590
這是用戶在屏幕上看到的東西

00:12:04.892 --> 00:12:07.361
當你的應用
啓動後會發生什麼？

00:12:07.427 --> 00:12:09.696
例如 當你的活動被還原了

00:12:09.796 --> 00:12:12.266
或者傳遞給另一個設備

00:12:13.433 --> 00:12:15.836
你的應用程序啓動了
這很好

00:12:16.203 --> 00:12:18.739
然後調用
UIApplication委託方法

00:12:18.939 --> 00:12:21.708
叫做continueUserActivity
restorationHandler

00:12:22.576 --> 00:12:25.078
我們首先要做的是
檢查活動類型

00:12:25.279 --> 00:12:27.681
然後確保它匹配
我們所預料的那個

00:12:27.881 --> 00:12:30.751
那個案例與我們
之前使用的那個匹配

00:12:31.051 --> 00:12:32.653
之後我們可以使用
用戶輸入字典

00:12:32.719 --> 00:12:34.188
來開始還原狀態

00:12:34.454 --> 00:12:38.125
之前 我們放入了
那個地點的唯一ID

00:12:38.258 --> 00:12:41.562
通常在這裏我們
能將其從服務器取回來

00:12:41.662 --> 00:12:44.464
然後還原它
並顯示正確的控制器

00:12:44.531 --> 00:12:45.933
如用戶所期待那樣

00:12:47.167 --> 00:12:48.769
所以使用最少的代碼

00:12:49.002 --> 00:12:51.205
我們能夠從三大功能中獲益

00:12:51.271 --> 00:12:54.541
Handoff Spotlight
搜索及前後關聯Siri提醒

00:12:55.943 --> 00:12:58.378
現在我們談談下面
列出的其他功能

00:12:59.112 --> 00:13:00.514
不過我先問大家一下

00:13:00.881 --> 00:13:03.450
你是否遇到這樣情況
你肚子餓了

00:13:03.517 --> 00:13:05.986
想找到好的餐廳就餐？

00:13:06.386 --> 00:13:08.956
所以你從Yelp開始
然後找到完美的地點

00:13:09.489 --> 00:13:11.825
之後你要跟朋友發消息
讓他們在那裏見你

00:13:12.059 --> 00:13:15.796
所以你切換到消息 開始輸入
“夥計們 我找到地兒了”

00:13:15.863 --> 00:13:18.398
不過你發現
你沒有那個地方的地址

00:13:18.465 --> 00:13:19.867
所以你切換到Yelp

00:13:20.100 --> 00:13:22.569
你複製地址
之後切換回消息

00:13:22.636 --> 00:13:25.472
粘貼進入
之後你終於完成了

00:13:26.139 --> 00:13:29.376
然而並不是 因爲你還
需要在某個時刻到達那裏

00:13:29.443 --> 00:13:31.078
你切換出地圖

00:13:31.345 --> 00:13:33.213
這可能來來回回很多次

00:13:33.280 --> 00:13:35.716
你懂我的意思
非常不好的體驗

00:13:38.886 --> 00:13:42.289
所以在iOS 10 我們嘗試
將這個體驗變得更加容易

00:13:43.223 --> 00:13:44.658
你的起點還是一樣

00:13:44.725 --> 00:13:47.895
你在應用中查看一個地點
比如說一家餐廳

00:13:48.395 --> 00:13:50.430
通過採用
NSUserActivity

00:13:50.764 --> 00:13:52.999
你的應用可以將那個相同地點

00:13:53.066 --> 00:13:55.469
推薦到整個系統上的
許多不同位置

00:13:56.003 --> 00:14:00.507
當你從應用中切換走
多任務UI會使其非常簡單

00:14:00.574 --> 00:14:03.510
並在底部提供
這個精緻的主動建議

00:14:03.777 --> 00:14:06.947
使用你最喜愛的
路徑規劃應用來提供方向

00:14:07.214 --> 00:14:08.982
到你剛纔查看的地點

00:14:09.683 --> 00:14:11.952
如果你進入Messages
不需要來回操作

00:14:12.252 --> 00:14:15.055
你可以開始寫
像是“見面地點是...”

00:14:15.322 --> 00:14:18.792
然後QuickType UI
會自動將那個位置

00:14:18.859 --> 00:14:22.095
直接推薦到QuickType
來自你剛纔提供的內容

00:14:23.297 --> 00:14:24.364
在Maps上亦然

00:14:24.464 --> 00:14:27.901
Maps在Maps應用中
直接推薦這些地點

00:14:28.101 --> 00:14:29.069
不僅是在Maps應用中

00:14:29.136 --> 00:14:31.505
還在新的Today View
地圖小部件中

00:14:31.672 --> 00:14:34.508
以及CarPlay中
這是我最喜歡的功能

00:14:34.575 --> 00:14:35.409
想象一下

00:14:35.475 --> 00:14:38.312
查看應用 進入車中
點擊屏幕

00:14:38.512 --> 00:14:40.581
就好了 完成了
你可以出發了

00:14:42.449 --> 00:14:45.252
這些地點甚至可以
推薦到其他應用中

00:14:45.319 --> 00:14:49.790
所以我們在這裏看的是
由Yelp提供的一個地點

00:14:49.857 --> 00:14:53.126
通過NSUserActivity
顯示在Uber應用內部

00:14:53.360 --> 00:14:56.196
隨着用戶點入目的地文本域

00:14:58.432 --> 00:15:02.536
這還給Siri提供前後關聯
所以你可以查看你的應用

00:15:02.603 --> 00:15:05.672
然後詢問Siri來獲取方向
或者給

00:15:05.739 --> 00:15:07.307
你查看的地點打電話

00:15:08.141 --> 00:15:12.713
採用NSUserActivity
會得到所有這些功能

00:15:13.680 --> 00:15:16.183
而且所有這些功能都有共同點

00:15:16.950 --> 00:15:18.218
就是它們都表示

00:15:18.352 --> 00:15:21.121
建議最初是源自哪裏

00:15:21.421 --> 00:15:22.623
這個案例中是Yelp

00:15:23.590 --> 00:15:26.627
想象一下如果這是你的應用
那不就太好了嗎？

00:15:27.528 --> 00:15:28.896
現在這是可能的

00:15:29.329 --> 00:15:33.600
NSUserActivity允許你
這樣做 通過捕獲在你的

00:15:33.667 --> 00:15:35.335
應用中查看過的地點

00:15:35.569 --> 00:15:37.838
我們推出新的簡單API

00:15:38.539 --> 00:15:41.208
在MapKit和CoreSpotlight上
允許你那樣做

00:15:41.441 --> 00:15:44.311
並整合到我剛談過的所有位置

00:15:45.112 --> 00:15:48.348
在代碼方面 我們將創建
一個NSUserActivity

00:15:48.415 --> 00:15:50.350
並且重新使用相同的

00:15:50.417 --> 00:15:53.120
我們之前定義的活動
直接添加在上面

00:15:53.187 --> 00:15:55.355
我們不需要創建
單獨活動

00:15:55.856 --> 00:15:58.825
對於使用MapKit的應用
其簡單程度

00:15:58.892 --> 00:16:02.829
相當於將MKMapItem設置到
這個新的MapItem屬性

00:16:02.896 --> 00:16:04.264
定義爲NSUserActivity

00:16:05.199 --> 00:16:06.400
這基本上就行了

00:16:08.268 --> 00:16:11.071
這還有很好的附加作用

00:16:11.171 --> 00:16:16.243
自動填充內容屬性集
所以你不用...

00:16:16.310 --> 00:16:18.779
所以如果你想採用應用搜索

00:16:18.979 --> 00:16:22.182
你要做的就是指定
你想選擇性加入應用搜索

00:16:22.249 --> 00:16:24.284
然後這些網站也會編入索引

00:16:25.485 --> 00:16:28.789
這裏還有另一種方式
那就是通過採用應用搜索

00:16:29.189 --> 00:16:31.391
對於那些已經熟悉它的人

00:16:31.458 --> 00:16:35.362
你能使用CSSearchableItemAttributeSet
並描述地點

00:16:35.929 --> 00:16:37.631
我們將它分解一下

00:16:37.798 --> 00:16:40.467
我們首先做的是
設置地點的名稱

00:16:40.734 --> 00:16:42.536
這與我們查看的相匹配

00:16:42.769 --> 00:16:45.739
這是我們之前講的
全部UI所需要的

00:16:46.840 --> 00:16:49.710
接下來 我們指定
地址的文本表示

00:16:49.843 --> 00:16:52.145
這是全部基於文本UI所需要的

00:16:52.212 --> 00:16:53.881
例如像是鍵盤

00:16:55.382 --> 00:16:57.651
接下來 我們指定
維度和經度

00:16:57.751 --> 00:17:02.155
這是可選的 但這會保證
將你的用戶精確地指引到

00:17:02.322 --> 00:17:04.391
你想將他們指引到的位置

00:17:04.525 --> 00:17:06.627
經度和緯度
是最精確的表示

00:17:06.693 --> 00:17:08.962
供你使用
如果你有這個信息的話

00:17:10.230 --> 00:17:14.334
接下來 我們設置電話號碼
這允許我們訪問Siri

00:17:14.501 --> 00:17:16.936
這樣我們可以說
比如“呼叫這個地方”

00:17:17.671 --> 00:17:19.473
最後 我們表明

00:17:19.540 --> 00:17:22.809
這個內容支持
導航和電話呼叫

00:17:23.109 --> 00:17:26.480
這樣結果將會
呈現在Spotlight UI中

00:17:27.013 --> 00:17:29.416
在Spotlight搜索結果UI中

00:17:29.550 --> 00:17:33.120
有一個快速行動圖標
進行電話呼叫

00:17:33.187 --> 00:17:35.088
或者例如獲取方向

00:17:35.956 --> 00:17:38.458
這就是如何得到地點建議的
就是這麼簡單

00:17:38.525 --> 00:17:42.029
你的應用將會推薦到
所有這些不同地方

00:17:42.596 --> 00:17:46.066
我們認爲這會提供
更加飽滿的體驗

00:17:46.133 --> 00:17:48.435
在你應用的內外都是如此

00:17:49.136 --> 00:17:52.372
你的品牌可以進一步
在整個系統中推薦

00:17:52.539 --> 00:17:54.741
不僅限於你的應用之內

00:17:56.343 --> 00:17:58.178
我們來談談聯繫人交互

00:17:59.613 --> 00:18:03.684
IOS 10 DP
從聯繫人卡片

00:18:03.750 --> 00:18:04.718
直接整合通信應用

00:18:05.219 --> 00:18:07.788
你在這裏看到的是
一個聯繫人卡片

00:18:07.855 --> 00:18:10.657
這裏獲知了WhatsApp
的句柄並顯示出來

00:18:10.891 --> 00:18:14.428
當我去點擊頂部的
快速行動按鈕

00:18:14.528 --> 00:18:18.498
來發送消息 我要選擇
我想使用的聯繫方式

00:18:19.199 --> 00:18:23.537
如果我這麼做了 這個選擇
會被記住並持久保留

00:18:23.637 --> 00:18:25.405
爲默認的通信方式

00:18:25.772 --> 00:18:29.610
這樣你的應用會在推薦到那裏
作爲默認的通道

00:18:29.710 --> 00:18:31.712
給那特定的聯繫人發消息

00:18:33.013 --> 00:18:37.117
這也由NSUserActivity
所支持 還有新的密集框架

00:18:37.284 --> 00:18:40.654
這與爲得到深層Siri整合
所使用的框架相同

00:18:41.288 --> 00:18:43.790
本週前幾天有兩場
關於這個話題的精彩演講

00:18:43.924 --> 00:18:45.859
我非常推薦大家去看看

00:18:47.761 --> 00:18:50.030
這裏顯示的是
WhatsApp應用

00:18:50.197 --> 00:18:53.534
在發送文本消息
我們將探討它的工作原理

00:18:54.401 --> 00:18:56.970
首先我們創建
INInteraction對象

00:18:57.037 --> 00:19:00.440
這是我們在密集API中
定義的新對象

00:19:01.909 --> 00:19:04.077
這包含了關於意圖的信息

00:19:04.545 --> 00:19:08.315
例如 這代表用戶行動

00:19:08.382 --> 00:19:11.451
比如發送文本消息
或者進行視頻通話

00:19:12.286 --> 00:19:15.355
以及其他一些關於
接收方和發送方的信息

00:19:15.422 --> 00:19:17.324
還有創建內容的元數據

00:19:17.391 --> 00:19:20.160
例如像是通信是否成功

00:19:21.061 --> 00:19:24.898
接下來 你在交互上
調用Donate Method

00:19:25.132 --> 00:19:27.501
這樣系統會得知這次交互

00:19:27.568 --> 00:19:30.804
並將你的應用直接
在聯繫人卡片內部推薦

00:19:31.939 --> 00:19:36.176
當用戶通過聯繫人卡片
與你的應用進行交互

00:19:36.343 --> 00:19:37.477
我們也遵循相同的模式

00:19:37.544 --> 00:19:40.848
創建INInteraction
表示用戶嘗試做的事情

00:19:41.081 --> 00:19:45.385
包在NSUserActivity內
之後你的應用會用它來啓動

00:19:46.253 --> 00:19:48.322
我們看看這是如何
轉換到代碼中的

00:19:48.889 --> 00:19:51.992
首先在這裏
我們創建發送方和接收方

00:19:52.226 --> 00:19:54.828
要注意的是
如果你的應用可以訪問

00:19:54.895 --> 00:19:56.530
用戶的通訊簿

00:19:56.964 --> 00:20:01.869
你可以指定你在這裏
使用的聯繫人標識符

00:20:02.102 --> 00:20:04.972
這樣系統能夠更好地找出

00:20:05.172 --> 00:20:06.874
需要擴增的正確聯繫人

00:20:08.542 --> 00:20:09.743
接下來 我們創建意圖

00:20:10.143 --> 00:20:11.879
這裏我們使用
INSendMessageIntent

00:20:11.945 --> 00:20:13.380
因爲我們發送文本消息

00:20:14.281 --> 00:20:16.817
這裏你可以使用三種通信意圖

00:20:16.884 --> 00:20:19.987
用於發送文本消息
進行音頻和視頻通話

00:20:21.121 --> 00:20:24.925
要重點注意的是
你還要保證你指定出

00:20:24.992 --> 00:20:27.861
你的應用在info.plist中
能夠處理的意圖

00:20:28.161 --> 00:20:31.098
這與活動類型相比幾乎一樣

00:20:31.164 --> 00:20:32.432
我們之前談過了

00:20:34.134 --> 00:20:35.769
接着提供我們所使用的服務名稱

00:20:35.836 --> 00:20:37.037
這裏我們在使用WhatsApp

00:20:37.104 --> 00:20:41.074
如果你的應用處理多個協議
那這會特別有用

00:20:41.208 --> 00:20:44.912
例如
如果你有多客戶端聊天應用

00:20:46.079 --> 00:20:48.782
比如說與Jabber
和ICQ有關

00:20:49.116 --> 00:20:51.418
你要確保你使用
正確的服務名稱

00:20:53.554 --> 00:20:55.255
接下來 我們創建
INInteraction對象

00:20:55.389 --> 00:20:58.559
這會捕獲我們之前
創建的所有信息

00:20:58.959 --> 00:21:02.796
以及一些元數據
包括通信的方向性等等

00:21:03.397 --> 00:21:05.232
因爲我們在這裏
發送文本消息

00:21:05.299 --> 00:21:06.967
我們使用外送方向

00:21:07.734 --> 00:21:11.338
這是唯一支持的
交互捐送方向

00:21:12.306 --> 00:21:14.942
最後 我們將
這個交互捐送給系統

00:21:15.475 --> 00:21:18.779
這樣它會...
系統能夠

00:21:18.846 --> 00:21:23.250
增強與你通信的聯繫人

00:21:24.818 --> 00:21:28.355
我說過了
當用戶從聯繫人卡片

00:21:28.422 --> 00:21:30.824
與你的應用交互
我們遵循相同的模式

00:21:31.124 --> 00:21:34.661
並使用相同的UI應用程序
委託方法來啓動你的應用

00:21:35.262 --> 00:21:37.331
我們首先在這裏做的是
從NSUserActivity

00:21:37.397 --> 00:21:40.968
檢查意圖和交互

00:21:41.468 --> 00:21:44.438
之後我們可以開始與
預期接收方進行通信

00:21:46.306 --> 00:21:47.975
這就是如何得到
聯繫人交互

00:21:48.375 --> 00:21:51.144
你的應用可以在
聯繫人卡片上直接推薦

00:21:51.512 --> 00:21:53.380
這是最自然的通信方式

00:21:54.515 --> 00:21:56.383
成功了
我們講完了列表中的一切

00:21:56.850 --> 00:21:59.219
但還沒完
我們還要講點別的

00:21:59.686 --> 00:22:02.422
我們來談談一些最佳實踐
你要牢記在心

00:22:02.489 --> 00:22:04.157
使用NSUserActivity時

00:22:05.025 --> 00:22:08.295
首先就是要懶
對 這纔是重點

00:22:09.096 --> 00:22:11.598
假設你在研發
一款郵件客戶端

00:22:11.665 --> 00:22:15.369
你想採用Handoff
這樣你的用戶能夠

00:22:15.435 --> 00:22:19.173
先在Mac上面開始寫郵件
然後在手機上

00:22:19.239 --> 00:22:22.543
外出時 接着在iPhone上
之前的地方繼續寫下去

00:22:23.277 --> 00:22:25.179
這裏我們做的是
我們有一個方法

00:22:25.412 --> 00:22:28.982
在每次按下鍵盤上的按鍵時
就調用這個方法

00:22:29.550 --> 00:22:33.320
而且每次我們都計算
並更新userInfo字典

00:22:34.354 --> 00:22:36.290
這會消耗巨大
並且效率低下

00:22:36.757 --> 00:22:40.060
相反你應該做的是
使用needsSave屬性

00:22:40.327 --> 00:22:43.397
告訴系統這個活動是髒的

00:22:43.630 --> 00:22:47.067
這樣系統能夠在適合時間

00:22:47.134 --> 00:22:50.070
呼叫你來更新你的
userInfo目錄

00:22:51.071 --> 00:22:55.008
例如將活動傳遞到
另一個設備之前

00:22:56.009 --> 00:22:58.879
這裏我們是這樣做的
我們在實施

00:22:59.046 --> 00:23:01.882
updateUserActivityState
委託方法

00:23:02.049 --> 00:23:05.085
這是我們更新
userInfo字典的機會

00:23:05.719 --> 00:23:09.456
這樣我們可以只做一次
而且效率更加的高

00:23:10.891 --> 00:23:13.861
接下來 確定你保留
當前活動的強引用

00:23:14.595 --> 00:23:17.731
我們在這裏做的是
減輕NSUserActivity

00:23:18.065 --> 00:23:21.568
在上面做一些東西
調用becomeCurrent

00:23:21.668 --> 00:23:23.403
這很好 不過之後

00:23:23.470 --> 00:23:26.006
我們沒有保留強引用
並推出了函數

00:23:26.306 --> 00:23:29.042
因此 活動被釋放了
因爲走出範圍了

00:23:30.611 --> 00:23:32.946
活動釋放不會是當前的
因爲它不存在

00:23:33.514 --> 00:23:36.216
相反 你應該做的是
保留當前

00:23:36.316 --> 00:23:37.584
活動的強引用

00:23:38.352 --> 00:23:39.887
若這涉及到
UIViewControllers

00:23:39.953 --> 00:23:42.823
或者任何符合
UI響應器的東西

00:23:43.123 --> 00:23:45.492
還可以使用
用戶活動定義...

00:23:45.559 --> 00:23:48.395
用戶活動屬性
定義在UI響應器上

00:23:48.729 --> 00:23:50.230
這有極佳的效果

00:23:50.330 --> 00:23:53.800
讓UIKit爲你管理
活動的當前性

00:23:54.001 --> 00:23:56.770
你不必調用
becomeCurrent或使其無效

00:23:57.538 --> 00:23:59.506
UIKit會爲你做到
當視圖控制器

00:23:59.573 --> 00:24:02.142
比如說鏈接到了視圖層級

00:24:03.343 --> 00:24:05.112
接下來
傳送少量有效負載

00:24:05.179 --> 00:24:08.649
確保你只保留足夠的信息

00:24:08.749 --> 00:24:12.286
在userInfo字典中
來重現狀態 僅這些而已

00:24:12.619 --> 00:24:17.891
記住這些用戶信息
和活動是通過

00:24:17.991 --> 00:24:21.328
Bluetooth發送的 這就是
爲什麼要儘可能保持輕量級

00:24:22.696 --> 00:24:26.633
例如 假設你研發的應用
要處理大型照片

00:24:26.867 --> 00:24:28.168
從網絡上下載的

00:24:28.635 --> 00:24:31.572
所以我們在這裏做的是
下載這些照片

00:24:31.672 --> 00:24:34.708
將其序列化爲數據 然後
將它們放入userInfo字典

00:24:35.042 --> 00:24:38.445
這很容易就會達到幾MB
效率低下

00:24:39.246 --> 00:24:43.784
相反 你可以做的是
保留獨特標識符

00:24:43.884 --> 00:24:48.255
指向你所從事的內容
例如 網頁URL

00:24:48.488 --> 00:24:50.757
這樣當你還原活動時

00:24:50.824 --> 00:24:54.528
你可以將其從服務器取回
或者通過其他方法獲取

00:24:55.629 --> 00:24:57.331
如果你真的要
處理大量有效負載

00:24:57.397 --> 00:24:59.299
你可以使用延續流

00:24:59.366 --> 00:25:01.735
它們專門設計用於該目的

00:25:01.802 --> 00:25:05.138
在開發者資料中
有大量相關的信息

00:25:06.039 --> 00:25:06.907
好了 還有一個

00:25:08.208 --> 00:25:11.645
一定要保持你的活動類型
唯一併且有描述性

00:25:11.912 --> 00:25:13.247
這是爲了避免衝突

00:25:13.480 --> 00:25:16.884
但重要的是
它們還要代表當前用戶活動

00:25:16.950 --> 00:25:18.452
或者當前用戶行動

00:25:19.553 --> 00:25:21.922
所以這裏不使用
單個活動類型

00:25:22.022 --> 00:25:23.891
是我用在應用內部各處的

00:25:24.591 --> 00:25:28.462
更好的是使用多個活動類型
來描述應用的不同部分

00:25:28.529 --> 00:25:30.931
例如
一個是當我查看地點

00:25:31.231 --> 00:25:33.133
一個是當我搜索地點

00:25:34.067 --> 00:25:38.172
你會在這裏發現
我使用反向DNS樣式符號

00:25:38.539 --> 00:25:44.411
這確保了不會與
其他活動類型相沖突

00:25:44.478 --> 00:25:46.813
那些類型可能是在
其他應用內部定義的

00:25:48.048 --> 00:25:49.449
好了 現在該演示了

00:25:49.750 --> 00:25:52.152
將使用Proactive
Toolbox應用

00:25:52.219 --> 00:25:55.656
這是我們在Developer
Library中供大家使用的樣例

00:25:55.989 --> 00:26:00.260
我們看看如何採用
NSUserActivity推薦地點

00:26:00.861 --> 00:26:04.298
我們還會簡短講講
Handoff以及應用搜索

00:26:05.165 --> 00:26:06.099
我們開始吧

00:26:15.475 --> 00:26:21.315
好 我將在此啓動Proactive
Toolbox應用

00:26:22.416 --> 00:26:27.454
左邊是我運行iOS 10的設備
然後Xcode就在後面

00:26:28.222 --> 00:26:30.190
我先給大家快速
瀏覽一下這個應用

00:26:30.257 --> 00:26:31.658
讓你知道它的作用

00:26:32.426 --> 00:26:34.394
這裏我們有披薩店的列表

00:26:34.862 --> 00:26:37.231
這是搜索本地披薩店的應用

00:26:37.698 --> 00:26:40.801
然後使用Core Location
來獲取我的當前位置

00:26:40.901 --> 00:26:45.172
以及用MapKit來獲取
符合披薩條件的地點

00:26:45.739 --> 00:26:47.841
我來看看這第一個

00:26:48.242 --> 00:26:50.744
我得到更豐富的頁面
有更多詳細信息

00:26:50.811 --> 00:26:55.949
像是名稱 電話號碼 地址
網站 以及該地點的地圖

00:26:56.884 --> 00:27:01.221
現在我們將研究
如何能實施位置推薦

00:27:02.155 --> 00:27:05.092
這樣相同的位置
會推薦到很多不同地方

00:27:05.692 --> 00:27:07.294
不過之前
我們先這麼做

00:27:07.361 --> 00:27:09.096
我要計時
怎麼樣？

00:27:09.563 --> 00:27:10.898
看看這麼做要多長時間

00:27:11.665 --> 00:27:13.333
我啓動計時器
這就開始

00:27:15.102 --> 00:27:16.904
好了 我現在進入Xcode

00:27:17.104 --> 00:27:20.007
這是我的地點查看控制器
這個控制

00:27:20.073 --> 00:27:23.377
是我用來顯示更豐富的結果

00:27:23.443 --> 00:27:25.612
更豐富的披薩店結果

00:27:25.946 --> 00:27:29.950
每當地圖項目在我的應用中
更新時 我就會調用這個方法

00:27:30.551 --> 00:27:34.221
我將這個拖放到這裏

00:27:34.988 --> 00:27:37.191
我在此創建
NSUserActivity

00:27:37.958 --> 00:27:41.061
如你所見
我在創建活動 提供給它

00:27:41.128 --> 00:27:45.165
活動類型 代表着
我所做的事情的含義

00:27:45.566 --> 00:27:48.302
在這個案例中
我還使用反向DNS樣式符號

00:27:48.602 --> 00:27:51.004
這確保我的活動類型是唯一的

00:27:51.905 --> 00:27:55.042
我之前已經在info.plist中
定義了這個活動類型

00:27:56.076 --> 00:27:58.045
接下來我們設置標題和關鍵詞

00:27:58.412 --> 00:28:00.247
我這裏還是使用有含義的標題

00:28:00.347 --> 00:28:03.717
因爲這將是
用戶活動的公開形象

00:28:04.952 --> 00:28:08.322
接下來 我設置Handoff
應用搜索以及公共索引

00:28:08.689 --> 00:28:11.325
因爲我們在這裏
看的內容是公開的

00:28:11.892 --> 00:28:13.760
更重要的部分是這個

00:28:14.127 --> 00:28:16.797
我在活動內部設置mapItem

00:28:17.564 --> 00:28:21.568
這個是有附加作用的
能爲我們

00:28:21.635 --> 00:28:23.070
填充contentAttributeSets

00:28:23.337 --> 00:28:28.208
我在這裏就那麼做的
我的完成方法是通過表示

00:28:28.308 --> 00:28:31.812
這個內容支持
導航和電話呼叫

00:28:31.945 --> 00:28:35.649
這樣它會有正確的圖標
出現在Spotlight搜索結果中

00:28:36.884 --> 00:28:40.120
還記得要懶嗎？
在這裏我就是這樣

00:28:40.454 --> 00:28:43.457
設置needsSave爲真
以及委託方法

00:28:43.891 --> 00:28:48.195
這樣就會調用
userActivity委託

00:28:48.962 --> 00:28:50.898
當我需要更新userInfo字典時

00:28:52.032 --> 00:28:56.170
最後我使用
userActivity屬性

00:28:56.236 --> 00:28:58.405
它是由UIViewController內的
UI Responder所定義

00:28:58.605 --> 00:29:01.608
然後設置上活動
這樣我能保留強引用

00:29:01.708 --> 00:29:04.344
而且UIKit會替我自動管理它

00:29:05.445 --> 00:29:10.951
接下來 我將實施這個UI...
這個用戶活動委託方法

00:29:11.251 --> 00:29:12.619
updateUserActivityState

00:29:13.020 --> 00:29:16.323
在這裏我將
更新我的userInfo字典

00:29:16.690 --> 00:29:19.193
通過我在下面
這個方法內定義的內容

00:29:19.259 --> 00:29:22.296
這會返回字典的信息

00:29:22.362 --> 00:29:25.332
相關的信息
我之後要用它們重現這個狀態

00:29:26.233 --> 00:29:27.935
我們繼續 構建並運行

00:29:33.907 --> 00:29:37.578
好了 這就是相同的地點

00:29:37.678 --> 00:29:39.646
我沒有破壞什麼東西
沒有出現變化

00:29:40.380 --> 00:29:42.983
我將雙擊Home鍵

00:29:43.483 --> 00:29:47.788
現在你能看到
這在底部出現了

00:29:47.855 --> 00:29:51.124
這個橫幅 來獲取到
我剛纔所看地點的方向

00:29:51.191 --> 00:29:52.826
非常簡單 超級方便

00:29:53.994 --> 00:29:56.129
打開Maps也是一樣

00:29:57.965 --> 00:30:01.802
我直接在這裏看到相同位置
甚至顯示我的應用程序圖標

00:30:04.238 --> 00:30:05.372
謝謝

00:30:09.176 --> 00:30:11.178
好了 我們縮放回來

00:30:11.778 --> 00:30:14.114
當我打開Messages
也是一樣

00:30:15.382 --> 00:30:18.652
比如說“見面地點是...”

00:30:19.086 --> 00:30:21.588
你看到這裏有相同的位置

00:30:21.655 --> 00:30:24.858
直接推薦到
QuickType UI內部

00:30:25.492 --> 00:30:27.494
由我的應用提供
我可以直接點擊

00:30:27.661 --> 00:30:30.998
地點的名稱和地址
都插入進去了

00:30:35.869 --> 00:30:37.971
而且這還對收到的消息有效

00:30:38.038 --> 00:30:41.441
這裏我得到一條文本消息
在問我他們的電話號碼是什麼

00:30:41.675 --> 00:30:44.611
信息從NSUserActivity
中直接提取了出來

00:30:44.678 --> 00:30:47.281
我可以點擊它
然後再插入電話號碼

00:30:47.814 --> 00:30:49.216
非常炫酷

00:30:51.752 --> 00:30:53.453
我們看看計時

00:30:53.887 --> 00:30:56.123
3分40秒
這還不錯

00:30:56.223 --> 00:30:58.625
所有這些位置推薦功能

00:30:58.825 --> 00:31:01.161
通過單個API
由我的應用提供

00:31:01.662 --> 00:31:05.365
我投機取巧了一點
我有一些示例代碼 但你懂我意思了

00:31:05.432 --> 00:31:08.168
這不需要大量的投入

00:31:08.669 --> 00:31:11.939
所以消息 QuickType
Siri 地圖 多任務處理

00:31:12.005 --> 00:31:14.107
所有這些
只需一個API

00:31:15.142 --> 00:31:18.178
好了 我們也在
應用搜索上做了些工作

00:31:18.245 --> 00:31:19.746
將該內容編入索引

00:31:19.813 --> 00:31:23.550
我首先回到應用
然後還原其初始狀態

00:31:23.617 --> 00:31:25.519
我將搜索披薩

00:31:26.019 --> 00:31:27.120
披薩

00:31:27.788 --> 00:31:30.791
果然
那個位置出現了

00:31:31.592 --> 00:31:35.329
但當我點擊它 我的應用
就啓動了 但它做得並不正確

00:31:35.395 --> 00:31:39.199
它沒有將內容還原成
用戶期待的那樣

00:31:39.266 --> 00:31:41.568
沒有顯示披薩店的豐富UI

00:31:41.935 --> 00:31:44.104
我回到我的代碼這裏

00:31:44.304 --> 00:31:47.941
這是因爲我們沒實施
UIApplicationDelegate方法

00:31:48.242 --> 00:31:50.043
所以進入我的應用委託

00:31:50.477 --> 00:31:52.412
拖放那部分

00:31:53.680 --> 00:31:55.649
我在這裏做的是

00:31:55.749 --> 00:31:59.019
我在實施continue
userActivity restorationHandler

00:31:59.086 --> 00:32:02.089
UIApplicationDelegate
首先檢查活動類型

00:32:02.155 --> 00:32:04.625
這是我們剛纔使用的那個

00:32:04.858 --> 00:32:08.729
之後調用我在下面定義的方法
這會查看userInfo

00:32:08.795 --> 00:32:11.565
並像用戶預期那樣還原狀態

00:32:11.999 --> 00:32:13.767
我將重新構建並運行

00:32:16.270 --> 00:32:18.205
然後再看一遍

00:32:18.338 --> 00:32:20.607
我們回到Spotlight

00:32:22.042 --> 00:32:23.343
點擊結果

00:32:23.510 --> 00:32:26.046
現在我們做對了
還原了內容

00:32:26.146 --> 00:32:27.581
如用戶期待那樣

00:32:28.081 --> 00:32:32.052
所以這快速瀏覽了採用
NSUserActivity的方法

00:32:32.119 --> 00:32:34.788
用於位置推薦
應用搜索和Handoff

00:32:34.988 --> 00:32:36.957
好了 我們切換回來

00:32:42.563 --> 00:32:46.066
這個樣例可在Developer
Library中獲取

00:32:46.200 --> 00:32:48.569
它的功能還要更多

00:32:48.702 --> 00:32:52.139
它幫助你測試與
NSUserActivity的整合

00:32:52.306 --> 00:32:55.309
這是在你工作時
放在身邊使用的好工具

00:32:55.375 --> 00:32:57.477
用於這些位置推薦功能

00:32:58.445 --> 00:33:02.916
好了 我們剛纔知道了採用
NSUserActivity很容易

00:33:03.050 --> 00:33:06.520
並在系統的許多不同
部分推薦你的內容

00:33:07.287 --> 00:33:09.389
我將談談
schema.org如何提供

00:33:09.456 --> 00:33:12.826
一些這樣的好處
尤其是位置推薦

00:33:13.927 --> 00:33:17.231
當我設計這些功能
這些位置推薦功能

00:33:17.397 --> 00:33:19.366
我們希望相同的效果
也能再現於

00:33:19.633 --> 00:33:21.768
你在Safari中查看的網站上

00:33:22.703 --> 00:33:23.537
所以爲此

00:33:24.204 --> 00:33:26.740
例如
當你查看yelp.com

00:33:26.807 --> 00:33:29.810
這映射了我們之前
看過的相同內容

00:33:29.977 --> 00:33:31.178
在Yelp應用中

00:33:31.612 --> 00:33:33.180
當你從Safari切換走

00:33:33.247 --> 00:33:35.315
你會得到相同的
精緻便利的建議

00:33:35.382 --> 00:33:37.351
來獲取這個地點的方向

00:33:37.851 --> 00:33:41.922
這因爲yelp.com
採用schema.org

00:33:42.022 --> 00:33:44.057
這是我們爲此使用的技術

00:33:44.992 --> 00:33:46.293
稍微講講背景知識

00:33:46.994 --> 00:33:49.129
schema.org
是開放網頁標記標準

00:33:49.196 --> 00:33:52.232
允許你從語義上
給內容加註釋

00:33:52.499 --> 00:33:54.468
通過豐富的結構化元數據

00:33:54.968 --> 00:33:59.006
這裏有很多架構爲
各種概念提供大量的表達

00:33:59.072 --> 00:34:00.908
而且schema.org也是旨在

00:34:01.008 --> 00:34:04.011
爲用戶提供豐富的搜索體驗

00:34:04.077 --> 00:34:07.981
在iOS中 以及
所有主要搜索引擎

00:34:09.783 --> 00:34:12.886
這些架構都是
按照樹形結構排列

00:34:12.985 --> 00:34:16.023
例如
更具體的架構 像是餐廳

00:34:16.089 --> 00:34:19.458
是源自更一般的類型
例如本地商業

00:34:20.260 --> 00:34:22.563
我們拿餐廳作爲例子

00:34:22.896 --> 00:34:25.732
它是源自多個架構的
因此

00:34:25.799 --> 00:34:28.702
這繼承了所有
定義它們的屬性

00:34:28.835 --> 00:34:32.505
例如 名稱屬性
是由事物架構定義的

00:34:32.739 --> 00:34:36.543
在這個案例中
這會捕獲餐廳名稱

00:34:37.077 --> 00:34:41.081
地址也是一回事
那是在本地商業架構中定義的

00:34:41.215 --> 00:34:43.250
其他更針對於餐廳的事物

00:34:43.317 --> 00:34:45.619
例如是否接受預定

00:34:45.853 --> 00:34:48.589
是直接在餐廳架構內部定義的

00:34:49.456 --> 00:34:51.891
這是schema.org
實際運作的例子

00:34:51.958 --> 00:34:55.128
在左邊 我們看到
之前看過的網站

00:34:55.262 --> 00:34:58.599
在右邊
是在語義上描述它的內容

00:34:58.699 --> 00:35:01.869
以Safari可以理解的方法

00:35:02.402 --> 00:35:04.037
創建電話號碼

00:35:04.137 --> 00:35:07.007
餐廳名稱
地址 評級 網站

00:35:07.341 --> 00:35:09.209
等等 能做的可以更多

00:35:09.610 --> 00:35:11.445
我們來看看
一個簡單的例子

00:35:11.578 --> 00:35:14.281
這是一個非常簡單的
HTML文檔

00:35:14.348 --> 00:35:16.550
描述關於餐廳的內容

00:35:16.917 --> 00:35:19.286
我們來看看
這個網頁可能的樣子

00:35:19.419 --> 00:35:23.290
當加入JSON-LD
schema.org標記

00:35:24.858 --> 00:35:27.928
如你所見 我們沒有
改變任何實際的內容

00:35:27.995 --> 00:35:32.533
或者實際的文檔結構
我們只是在旁邊提供了元數據

00:35:32.966 --> 00:35:36.470
以一種機器能接受的
格式來描述內容

00:35:36.837 --> 00:35:40.507
包括簡單的屬性
像是電話

00:35:40.841 --> 00:35:44.912
不過還有更復雜的結構化屬性
像是地址

00:35:45.045 --> 00:35:48.115
本身就是PostalAddress
類型的另一個架構

00:35:48.415 --> 00:35:52.619
如果你喜歡
你還可以給內容註釋

00:35:52.719 --> 00:35:54.888
與微數據內聯

00:35:54.988 --> 00:35:56.456
我們就這麼做

00:35:56.523 --> 00:35:59.726
我們在改變
初始文檔的實際結構

00:35:59.793 --> 00:36:03.330
並使用內聯微數據標記
來增強它

00:36:04.398 --> 00:36:07.801
在iOS 10中 Safari提取
這些與位置相關的架構

00:36:08.001 --> 00:36:11.905
在NSUserActivity中
像推薦原生應用那樣推薦它們

00:36:12.539 --> 00:36:14.575
這也會給你一些好處

00:36:14.641 --> 00:36:17.311
關於我們之前談過的
位置推薦

00:36:17.811 --> 00:36:20.814
這些是Safari會
提取的一些架構

00:36:21.148 --> 00:36:25.419
任何帶有PostalAddress
GeoCoordinate或電話屬性

00:36:25.586 --> 00:36:29.756
而我們之前用的餐廳架構
就是絕佳的例子

00:36:29.990 --> 00:36:31.959
你有所有這些屬性

00:36:32.025 --> 00:36:37.698
你可以組合或指定
你當時可用的那些屬性

00:36:39.967 --> 00:36:43.203
好了 我們談了
NSUserActivity和schema.org

00:36:43.704 --> 00:36:47.074
使用NSUserActivity


00:36:47.274 --> 00:36:49.176
將用戶在應用內查看的位置

00:36:49.243 --> 00:36:52.513
在整個系統的很多地方中 毫不費力地推薦給他們

00:36:53.480 --> 00:36:55.048
還有通信應用

00:36:55.616 --> 00:36:59.820
當然 還有所有
Handoff和應用搜索的使用案例

00:37:01.288 --> 00:37:04.992
在你網站上使用schema.org
來得到這一些好處

00:37:05.192 --> 00:37:06.560
用於位置建議

00:37:06.660 --> 00:37:08.962
與NSUserActivity
幾乎一回事

00:37:09.696 --> 00:37:13.634
現在我們看看你的應用
如何使用這些位置建議

00:37:13.800 --> 00:37:15.335
像我們之前看過的

00:37:15.903 --> 00:37:18.772
這裏我們將談談
那麼做的兩種方式

00:37:18.839 --> 00:37:22.209
一個是通過鍵盤
另一個是針對路線規劃應用

00:37:23.210 --> 00:37:24.811
我們從第一個開始

00:37:25.846 --> 00:37:29.783
如果你的應用處理
文本格式的地址

00:37:30.317 --> 00:37:35.355
你可在應用內部受益於位置建議
通過QuickType UI

00:37:36.089 --> 00:37:38.358
現在我們在看Uber應用

00:37:39.293 --> 00:37:42.329
如果你不知道的話
這是一款拼車應用

00:37:42.496 --> 00:37:45.032
當用戶進入文本域

00:37:45.098 --> 00:37:47.801
這被註釋成位置文本域

00:37:48.168 --> 00:37:52.372
那個情況下 我們從Yelp中
直接將內容推薦到Uber內部

00:37:53.140 --> 00:37:56.376
這包括最近推薦的位置

00:37:56.443 --> 00:38:00.147
由其他應用在NSUserActivities
或schema.org中推薦

00:38:01.014 --> 00:38:03.350
基於你日曆上面的未來位置

00:38:04.418 --> 00:38:06.987
可能複製到
粘貼板中的位置

00:38:07.054 --> 00:38:09.823
例如 你收到附帶
地址的文本消息

00:38:10.424 --> 00:38:15.095
甚至可能是你最近使用
Siri互動過的地點

00:38:15.462 --> 00:38:17.164
例如 如果你問...

00:38:17.698 --> 00:38:20.501
如果你請求Siri
給你指向附近的餐廳

00:38:20.567 --> 00:38:22.202
之後與那個結果互動

00:38:22.269 --> 00:38:25.906
你就會在那你看到它
作爲位置建議的一部分

00:38:27.641 --> 00:38:30.277
我們在UIKit中
推出新的API

00:38:30.344 --> 00:38:32.546
所以你的應用可以告知系統

00:38:32.613 --> 00:38:35.549
文本域所預期的內容類型

00:38:35.949 --> 00:38:39.786
在這個案例中
我們使用的是位置

00:38:40.187 --> 00:38:42.890
基於這個線索
鍵盤就能夠作出

00:38:42.956 --> 00:38:45.425
正確的主動建議

00:38:45.492 --> 00:38:48.629
如果此時在
前後關聯中可用的話

00:38:49.530 --> 00:38:53.500
不過沒有可用的主動建議

00:38:53.567 --> 00:38:57.404
這還會在自動校正方面
提供更爲豐富體驗

00:38:57.571 --> 00:39:02.709
因爲自動校正現在能知道
應用所預期的內容

00:39:04.845 --> 00:39:08.549
我們在UITextInputTraits中
添加了新屬性

00:39:08.615 --> 00:39:12.052
叫做textContentType
允許你指定這個內容

00:39:12.119 --> 00:39:16.790
這裏 我們使用UITextField
這符合UITextInputTraits

00:39:16.857 --> 00:39:18.625
因此會得到這個屬性

00:39:19.059 --> 00:39:23.497
我們表示這個文本域
預期完整的街道地址

00:39:24.298 --> 00:39:27.467
這裏有很多的
文本內容類型供你使用

00:39:27.734 --> 00:39:31.905
範圍從描述人羣到位置
還有很多其他的

00:39:32.439 --> 00:39:35.509
這個完整列表可在Developer
Library中獲取

00:39:35.809 --> 00:39:38.512
不過我們着重仔細看看這兩個

00:39:38.712 --> 00:39:43.450
這兩個都與位置相關

00:39:43.951 --> 00:39:46.153
不過它們有不同的粒度等級

00:39:46.920 --> 00:39:52.192
你要使用最能表現
你的使用案例的那個

00:39:52.626 --> 00:39:54.628
擁有正確的粒度等級

00:39:54.962 --> 00:39:55.796
例如

00:39:55.863 --> 00:40:00.033
一個導航應用通常會
預期完整的街道地址

00:40:00.100 --> 00:40:03.370
這樣能準確地將用戶
指引到他們的目的地

00:40:03.837 --> 00:40:09.076
而天氣應用可能通常
只需要在乎州和城市

00:40:09.376 --> 00:40:12.546
因爲這對天氣的
使用案例就足夠了

00:40:12.646 --> 00:40:13.780
如你所見

00:40:13.847 --> 00:40:16.283
基於我們指定的
不同內容類型

00:40:16.350 --> 00:40:19.553
我們得到了不同的內容
推薦到了QuickType欄內部

00:40:19.620 --> 00:40:23.624
一個是完整的街道地址
另一個只是加州舊金山

00:40:25.158 --> 00:40:28.028
在鍵盤中得到
建議就是這麼簡單

00:40:28.929 --> 00:40:31.665
現在我們看看
路線規劃應用如何得益於

00:40:32.099 --> 00:40:35.302
這些底部精美的方向橫幅

00:40:36.003 --> 00:40:38.772
如Daniel之前說的
路線規劃應用

00:40:39.039 --> 00:40:41.775
第三方路線規劃應用
也可以提升到這裏

00:40:42.142 --> 00:40:44.978
讓用戶直接
加速進入你的應用

00:40:45.112 --> 00:40:48.115
當我們認爲用戶的意圖
是獲取方向

00:40:49.383 --> 00:40:52.819
我們利用了現有API
叫做MKDirectionsRequest

00:40:53.153 --> 00:40:57.324
這是在iOS 6中推出的
這允許你註冊路線規劃應用

00:40:57.391 --> 00:40:59.126
然後處理所有的方向請求

00:41:00.027 --> 00:41:02.162
iOS會隨着時間學習

00:41:02.262 --> 00:41:06.166
基於各種因素判斷用戶
最愛的路線規劃應用是什麼

00:41:06.266 --> 00:41:08.068
例如像是參與

00:41:08.335 --> 00:41:11.672
然後在合適的時候
在多任務UI中建議

00:41:14.441 --> 00:41:18.512
爲此你要確保
你將應用配置成

00:41:18.579 --> 00:41:19.880
能接收方向請求

00:41:19.947 --> 00:41:23.617
這很容易就能在Xcode中
通過功能面板完成

00:41:24.184 --> 00:41:27.588
在iOS 10中 我們推出了
一種新的路線規劃模式

00:41:27.654 --> 00:41:29.656
專門用於拼車應用

00:41:30.591 --> 00:41:34.294
接下來 你要聲明與你應用
真正相關的地圖區域

00:41:34.361 --> 00:41:37.164
比如說如果
你的應用是當地的地鐵應用

00:41:37.231 --> 00:41:41.201
你可以指定你的應用
只在這個區域相關

00:41:42.302 --> 00:41:43.704
最後你要確保

00:41:43.804 --> 00:41:46.273
你會採取合適的行動
當你的應用啓動在

00:41:46.340 --> 00:41:47.774
MKDirectionsRequest內部

00:41:48.008 --> 00:41:50.777
那就是你的應用
應該自動開始定向

00:41:50.978 --> 00:41:53.547
或者填充UI 使得用戶能

00:41:53.714 --> 00:41:55.849
容易地獲取方向

00:41:56.617 --> 00:42:01.121
在代碼方面 這個例子示範了
如何採用MKDirectionsRequest

00:42:02.222 --> 00:42:04.458
MKDirectionsRequest
使用一個URL方案

00:42:04.758 --> 00:42:08.161
當你的應用啓動後
會附帶有一個URL

00:42:08.362 --> 00:42:09.730
我們首先做的是檢查

00:42:09.830 --> 00:42:13.300
我們得到的URL實際上是
有效的MKDirectionsRequest

00:42:13.901 --> 00:42:18.539
MKDirectionsRequest爲此
提供isDirectionsRequestURL

00:42:19.573 --> 00:42:22.843
接下來我們減輕
MKDirectionsRequest的一個實例

00:42:23.043 --> 00:42:26.647
來自URL的內容
這包含的信息是關於

00:42:26.813 --> 00:42:30.551
出發地和用戶想到達的目的地

00:42:31.618 --> 00:42:34.288
在iOS 10中 接下來
這個功能十分重要

00:42:34.354 --> 00:42:38.158
尤其對於那些已經採用了
MKDirectionsRequest的人

00:42:38.659 --> 00:42:41.028
那就是現在你可以
使用沒有地理座標的

00:42:41.094 --> 00:42:43.163
地圖項目進行啓動

00:42:43.764 --> 00:42:45.399
在這個案例中
你要將你得到的

00:42:45.465 --> 00:42:49.136
地址字典進行地理編碼
使用CLGeocoders

00:42:49.436 --> 00:42:53.674
geocodeAddressDictionary
這會返給你一個地點標記

00:42:53.740 --> 00:42:57.544
附帶正確的緯度和經度
這會之後幫助你開始定向

00:42:57.644 --> 00:43:00.414
到預定的位置
這就差不多好了

00:43:01.114 --> 00:43:03.116
這就是如何推薦
你的路線規劃應用

00:43:03.383 --> 00:43:05.853
在多任務UI的醒目位置上

00:43:07.454 --> 00:43:09.623
至此 我想交給Daniel

00:43:09.723 --> 00:43:12.259
來談談媒體應用的建議
謝謝大家

00:43:13.493 --> 00:43:15.662
這太棒了
好了

00:43:16.830 --> 00:43:21.101
現在我們談談
媒體應用建議

00:43:21.635 --> 00:43:25.439
如果你的應用
處理任何形式的媒體

00:43:25.506 --> 00:43:30.611
像是播客應用
或類似Spotify的應用

00:43:30.978 --> 00:43:35.315
或甚至播放視頻的應用
那你就要認真聽聽了

00:43:36.984 --> 00:43:41.154
現今的iOS會推薦
我們認爲你會使用的應用

00:43:41.221 --> 00:43:42.890
基於你的行爲

00:43:43.123 --> 00:43:45.659
我們在大量不同的UI中
推薦那個應用

00:43:45.726 --> 00:43:46.960
我之前展示過了

00:43:47.995 --> 00:43:51.732
我們特別地
在Spotlight中提供哪些建議

00:43:51.899 --> 00:43:53.634
還有Today View

00:43:54.902 --> 00:44:00.908
如果建議的動作
跟隨着特定的觸發

00:44:00.974 --> 00:44:04.778
例如 當你插入耳機
或者Bluetooth配對

00:44:05.379 --> 00:44:10.651
或甚至到達某個地方
而且是媒體應用

00:44:10.751 --> 00:44:12.319
我們可以進一步提升它

00:44:13.020 --> 00:44:14.521
我們看看這是什麼樣的

00:44:14.688 --> 00:44:17.191
這是Spotlight中
推薦的樣子

00:44:17.457 --> 00:44:21.428
假如說我總是
或者經常聽播客

00:44:21.495 --> 00:44:22.896
在插入耳機之後

00:44:23.463 --> 00:44:27.134
注意 在左邊上部
有播客應用建議

00:44:28.468 --> 00:44:32.005
不過在某些情況下
那個推薦

00:44:32.105 --> 00:44:34.741
會提升到鎖屏的上面

00:44:35.008 --> 00:44:36.543
所以你看到的是

00:44:36.610 --> 00:44:40.013
我們傳統上
用於Handoff的UI

00:44:40.180 --> 00:44:43.383
現在用於推薦一款應用

00:44:43.483 --> 00:44:45.752
是我們認爲我可能使用的
因爲這遵循

00:44:45.853 --> 00:44:47.187
之前提到的那些觸發

00:44:47.821 --> 00:44:50.991
這是非常好的體驗

00:44:51.592 --> 00:44:54.595
但又不是那麼的好
因爲說到底

00:44:55.028 --> 00:44:56.496
你現在必須做的是

00:44:56.563 --> 00:44:58.932
你必須解鎖設備

00:44:59.032 --> 00:45:02.169
向右滑動
才能獲取我們

00:45:02.236 --> 00:45:04.404
所預測的
你想要消費的內容

00:45:05.672 --> 00:45:07.674
通過非常簡單的API

00:45:07.875 --> 00:45:11.712
你可以爲用戶構建更好的體驗

00:45:12.913 --> 00:45:15.482
這是它之前的樣子
我剛纔給你展示過了

00:45:16.717 --> 00:45:18.318
這是它之後的樣子

00:45:20.754 --> 00:45:22.923
我們做到了吧？
這是之前的樣子

00:45:24.024 --> 00:45:26.994
這是之後的樣子
好太多了

00:45:27.661 --> 00:45:30.831
不僅用戶可以
參與到內容中

00:45:31.265 --> 00:45:33.901
而且不用解鎖他們的設備

00:45:34.268 --> 00:45:37.838
同時還可以將專輯封面
在突出位置展現給用戶

00:45:39.273 --> 00:45:41.408
這在做完後
可能很顯而易見

00:45:41.475 --> 00:45:45.779
不過這個特定的界面
還提供了更好的轉化

00:45:46.013 --> 00:45:48.015
如果你看實際數字的話

00:45:48.182 --> 00:45:49.683
如果你感興趣於

00:45:49.750 --> 00:45:52.186
讓用戶實際去播放你的內容

00:45:52.252 --> 00:45:55.389
你應該是感興趣的
那這就是屬於你的API

00:45:55.489 --> 00:45:56.857
我們怎麼做？

00:45:57.224 --> 00:45:59.826
我會一步步地講
非常易於採用的

00:46:01.128 --> 00:46:05.966
這都可以歸結於一個類
叫做MPPlayableContentManager

00:46:07.568 --> 00:46:08.936
想象一下
你有

00:46:11.071 --> 00:46:14.274
一個有着不同屬性的字典

00:46:14.341 --> 00:46:16.643
有標題 藝術家 專輯

00:46:17.377 --> 00:46:20.180
你想做的是將其提升到

00:46:20.247 --> 00:46:23.684
設備的鎖屏上
當系統認爲

00:46:23.917 --> 00:46:25.919
客戶可能會參與其中

00:46:27.054 --> 00:46:28.655
你首先要做的就是

00:46:28.755 --> 00:46:31.925
導入Media Player
並聲明你自己

00:46:32.059 --> 00:46:36.129
與那個類別中的委託一致

00:46:36.330 --> 00:46:41.668
然後你要實施一個方法
叫做playableContentManager

00:46:43.270 --> 00:46:44.137
這很簡單

00:46:44.204 --> 00:46:47.307
首先 你要抓取媒體項目

00:46:47.574 --> 00:46:49.910
通過你有的任何手段

00:46:49.977 --> 00:46:51.612
很顯然你要做好準備

00:46:51.712 --> 00:46:53.981
尤其是如果你要獲取遠程資源

00:46:54.281 --> 00:46:56.517
以防其失效
那種情況下 你要調用

00:46:56.583 --> 00:46:58.752
在下面看到的那個回調句柄

00:46:59.653 --> 00:47:04.191
因此係統會明白
不一定要給你推薦

00:47:05.325 --> 00:47:08.829
下一步 你要填充
NowPlayingInfo

00:47:09.930 --> 00:47:11.732
在設備的鎖屏上

00:47:11.832 --> 00:47:16.036
這是我實施的一個方法
所以給你展示其背後的內容

00:47:16.904 --> 00:47:23.710
首先你要做的是
抓取infoCenter對象

00:47:23.977 --> 00:47:26.813
之後如果你有確實
一張特定的圖像

00:47:26.880 --> 00:47:30.784
是這個媒體項目上有的
你可以將它推薦到

00:47:31.018 --> 00:47:32.386
設備的鎖屏上

00:47:32.452 --> 00:47:35.022
如果你使用的是默認圖像
這就是個機會

00:47:35.088 --> 00:47:37.524
讓你的品牌得到提升

00:47:39.092 --> 00:47:41.361
然後你要把你的表示轉化成

00:47:41.795 --> 00:47:45.465
nowPlayingInfo表示
最重要的是

00:47:45.933 --> 00:47:49.203
要在infoCenter上
設置nowPlayingInfo

00:47:50.003 --> 00:47:53.407
在完成之前所展示的回調之前

00:47:53.473 --> 00:47:57.945
所以你要在方法結束之前完成

00:47:58.478 --> 00:48:01.982
如果出於某種原因你不喜歡

00:48:02.049 --> 00:48:05.752
或你的應用在準備
回放時出現錯誤

00:48:05.819 --> 00:48:07.588
如果手機處於飛行模式

00:48:07.788 --> 00:48:10.490
這是另一個機會
讓你提早去除錯誤

00:48:10.624 --> 00:48:14.494
注意 實際上你不想
在此時開始回放

00:48:14.962 --> 00:48:16.597
你插入耳機 你要等待

00:48:16.697 --> 00:48:19.333
客戶點擊播放按鈕

00:48:19.533 --> 00:48:22.736
不過你要做好準備
加載到流文件中等等

00:48:24.271 --> 00:48:25.105
就是這樣

00:48:26.273 --> 00:48:31.144
再說一遍 現今的iOS
根據你的行爲推薦應用

00:48:31.545 --> 00:48:35.516
如果遵循特定的觸發
並且它們是媒體應用

00:48:35.749 --> 00:48:37.484
我們把它們提升到鎖屏上

00:48:38.185 --> 00:48:41.121
通過我剛纔展示的
非常簡單的採用

00:48:41.221 --> 00:48:44.892
你可以得到更好的體驗
並且有機會

00:48:44.958 --> 00:48:46.927
去推廣你的品牌

00:48:47.027 --> 00:48:49.196
以及你有的
那麼華麗的專輯封面

00:48:51.365 --> 00:48:56.136
好了 總結一下
我們今天所講的內容

00:48:58.105 --> 00:49:02.776
我們談了幾個簡單的API
有助於將你的應用深度整合到

00:49:02.876 --> 00:49:04.511
操作系統中

00:49:04.912 --> 00:49:09.449
我們談了NSUserActivity
這相當於操作系統的眼睛

00:49:09.683 --> 00:49:15.088
這幫助我們從語義上
瞭解客戶當前所看的內容

00:49:16.423 --> 00:49:20.327
然後我們談了schema.org
從很多方面講

00:49:20.394 --> 00:49:22.963
對網頁來說
類似於NSUserActivity

00:49:25.699 --> 00:49:29.303
我們講了現有API中
新的使用案例

00:49:29.369 --> 00:49:32.339
以及全新的UIKit API

00:49:33.106 --> 00:49:38.178
來幫助我們讓系統瞭解
何時提升位置

00:49:40.113 --> 00:49:43.717
之後說到了MPContent
MPPlayableContentManager

00:49:44.484 --> 00:49:47.287
如果你是媒體應用
那這就尤爲相關

00:49:48.655 --> 00:49:51.825
希望今天大家都清楚地知道

00:49:51.892 --> 00:49:55.262
這些API易於採用
並且容易測試

00:49:57.764 --> 00:50:01.001
在網上可以獲取更多的信息

00:50:01.902 --> 00:50:04.538
以及一些精彩的相關會議

00:50:04.938 --> 00:50:07.808
如果還沒有看的話
你應該去看看

00:50:08.809 --> 00:50:11.311
這裏有很多
與SiriKit相關的工作

00:50:11.879 --> 00:50:15.382
有很多與搜索API相關的工作
大家今天都看過了

00:50:16.016 --> 00:50:19.586
以及過去兩年來的
一些先前的會議

00:50:19.653 --> 00:50:23.624
圍繞Handoff和
上述的搜索API

00:50:24.124 --> 00:50:29.229
最後我在結尾說一下
這個領域

00:50:29.296 --> 00:50:33.033
我們公司會繼續投入下去的

00:50:34.067 --> 00:50:38.138
我們需要各位開發者所做的事

00:50:38.205 --> 00:50:42.209
就是告知我們
你們應用的功能

00:50:42.976 --> 00:50:45.412
以儘可能最詳細的方式

00:50:46.413 --> 00:50:49.449
因爲從根本上講
我們越瞭解你的應用

00:50:49.583 --> 00:50:52.553
我們就越清楚
何時是推薦的最佳時機

00:50:53.353 --> 00:50:55.322
所以今天你看到了

00:50:55.389 --> 00:51:00.627
很多不同的情況中
語義細節是不同層次的

00:51:00.694 --> 00:51:03.997
你可以將活動或
文本域註釋進去

00:51:04.565 --> 00:51:06.567
我會盡可能多地鼓勵你

00:51:07.267 --> 00:51:10.637
當你做的時候
要儘可能地外顯出來

00:51:10.704 --> 00:51:13.540
不僅支持我們今天討論的功能

00:51:13.607 --> 00:51:17.044
同樣讓你的應用處在
優勢位置面向未來

00:51:21.615 --> 00:51:23.016
感謝大家今天的到來

00:51:23.083 --> 00:51:26.753
祝願大家在WWDC和週五過得愉快

00:51:27.354 --> 00:51:28.188
再見