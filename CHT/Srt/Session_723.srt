00:00:19.733 --> 00:00:21.300 
你好 我的名字是Tanya

00:00:21.367 --> 00:00:23.800 
歡迎參加第二部分

00:00:23.867 --> 00:00:25.867 
關於開發CarPlay系統

00:00:26.267 --> 00:00:28.867 
第一部分的視頻已經準備好了

00:00:28.933 --> 00:00:31.867 
所以如果你還沒有看過它
你一定要去看看

00:00:32.500 --> 00:00:34.600 
在這一部分
我們會覆蓋更多細節

00:00:34.667 --> 00:00:36.367 
在CarPlay是如何集成

00:00:36.433 --> 00:00:39.367 
到一個典型的汽車
信息娛樂系統裏的

00:00:40.367 --> 00:00:42.433 
我們從一個系統的概覽開始

00:00:42.800 --> 00:00:45.600 
然後談論音量和資源管理

00:00:45.933 --> 00:00:48.833 
最後以討論應用狀態管理結尾

00:00:50.267 --> 00:00:53.133 
現在讓我們進入系統概覽

00:00:54.833 --> 00:00:56.867  
如果你觀看了第一個視頻

00:00:56.933 --> 00:01:01.200  
你會記得要實現一個CarPlay
接收器所需的軟件組成部分

00:01:01.833 --> 00:01:05.667  
總之你需要和主機之間
有一個基於IP的連接

00:01:05.733 --> 00:01:08.733  
不管是USB或者Wi-Fi

00:01:09.267 --> 00:01:11.333  
IP是爲了交換數據

00:01:11.900 --> 00:01:14.400  
CarPlay通訊插件的一個實例

00:01:14.467 --> 00:01:17.167  
實現控制協議

00:01:17.233 --> 00:01:20.633  
音頻框架用來播放和錄製聲音

00:01:20.700 --> 00:01:23.167  
視頻框架用來渲染視頻流

00:01:24.400 --> 00:01:28.500  
然而這些組件只是一個子系統

00:01:28.567 --> 00:01:30.567  
在一個典型的車載主機中

00:01:31.467 --> 00:01:34.267  
除了CarPlay的功能

00:01:34.333 --> 00:01:39.000  
主機還有自己的原生界面
音頻資源和邏輯

00:01:39.800 --> 00:01:43.200  
兩者一起構成完整的主機

00:01:44.467 --> 00:01:45.500  
然後你添加

00:01:45.567 --> 00:01:48.167  
車裏所有的硬件資源

00:01:48.233 --> 00:01:54.333  
麥克風 音響 顯示屏 傳感器
用戶輸入設備

00:01:54.400 --> 00:01:56.567  
然後你就有了完整的系統

00:01:58.100 --> 00:02:00.600 
好的 這樣我們就有了整個系統

00:02:01.067 --> 00:02:02.367 
現在的問題是

00:02:02.433 --> 00:02:06.867 
怎樣讓那些看起來互相競爭的子系統
互相協同工作？

00:02:08.199 --> 00:02:09.333 
讓我們來理解這個問題

00:02:10.100 --> 00:02:13.800 
首先讓我們來看看
傳感器的數據是怎樣被交換的

00:02:13.867 --> 00:02:16.533 
我們會用位置數據舉例

00:02:17.133 --> 00:02:20.867 
位置信息包括GPS接收器獲得的
數據

00:02:20.933 --> 00:02:23.900 
或者傳感器數據比如輪胎速度

00:02:24.767 --> 00:02:27.733 
數據通過iAP2傳輸給設備

00:02:27.800 --> 00:02:29.433 
並且要一直可用

00:02:29.500 --> 00:02:32.100 
並且在手機需要時會被查詢

00:02:33.533 --> 00:02:36.900 
接下來讓我們來看看儀表組

00:02:36.967 --> 00:02:38.233 
也就是擡頭顯示

00:02:39.100 --> 00:02:40.867 
這個輔助顯示

00:02:40.933 --> 00:02:43.967 
被用來顯示設備提供的元數據

00:02:44.467 --> 00:02:48.767 
這些元數據可能包含
當前播放的音軌

00:02:49.100 --> 00:02:52.900 
正在進行的通話
或者從iOS 10開始

00:02:52.967 --> 00:02:54.733 
路線規劃導航

00:02:55.233 --> 00:02:59.033 
數據還是通過IP協議發起

00:02:59.100 --> 00:03:00.900 
以及根據需要交換

00:03:02.533 --> 00:03:05.867 
現在讓我們來看看
主顯示發生了什麼

00:03:06.400 --> 00:03:10.000 
當然要控制
在顯示屏上顯示的內容

00:03:10.333 --> 00:03:13.133 
用戶必須
用一個觸摸屏

00:03:13.200 --> 00:03:15.100 
一個應用控制器
或者兩者都用

00:03:15.600 --> 00:03:17.567 
所以我們可以認爲

00:03:17.633 --> 00:03:21.733 
顯示器和用戶輸入設備都是存在的

00:03:22.933 --> 00:03:25.200 
當CarPlay UI活動時

00:03:25.267 --> 00:03:29.100 
設備在主顯示屏上渲染視頻流

00:03:29.167 --> 00:03:33.233 
屏幕和用戶輸入都被設備使用

00:03:34.367 --> 00:03:39.400 
但是如果原生用戶界面顯示在
屏幕上

00:03:39.467 --> 00:03:42.233 
那麼顯示屏和用戶輸入都

00:03:42.300 --> 00:03:44.300 
被轉到原生子系統

00:03:45.967 --> 00:03:49.767 
然而方向盤上額外的用戶控制器

00:03:49.833 --> 00:03:53.367 
比如語音識別按鈕
下/上一個單軌

00:03:53.433 --> 00:03:54.900 
可能與CarPlay相連

00:03:54.967 --> 00:03:57.900 
即使屏幕上顯示的是原生UI

00:03:59.500 --> 00:04:02.933 
這樣總是可以打開Siri

00:04:03.000 --> 00:04:05.067 
或者播放下一個單軌

00:04:07.333 --> 00:04:11.367 
我們已經看過用戶界面集成

00:04:11.433 --> 00:04:12.900 
讓我們來談談音頻

00:04:16.867 --> 00:04:21.933 
車載音頻可以被粗分成3類

00:04:22.000 --> 00:04:26.233 
第1類提供對音響和麥克風的使用

00:04:26.300 --> 00:04:29.367 
這被用來通話和進行語音識別

00:04:30.533 --> 00:04:32.900 
然後我們有音頻播放

00:04:32.967 --> 00:04:36.833 
對任何媒體內容
比如收音機 音樂

00:04:38.033 --> 00:04:40.767 
最後我們有警告類別

00:04:40.833 --> 00:04:43.033 
被用作導航提示

00:04:43.100 --> 00:04:45.833 
或者其他更高優先級的警告

00:04:46.833 --> 00:04:48.833 
在原生子系統中

00:04:48.900 --> 00:04:52.600 
這三種類別會被重新發現

00:04:53.700 --> 00:04:57.000 
在CarPlay中
我們有一個主音頻通道

00:04:57.067 --> 00:04:59.567 
它包括通話 語音識別

00:04:59.633 --> 00:05:01.300 
和音頻播放

00:05:02.767 --> 00:05:06.100 
還有另一個音頻通道被保留

00:05:06.167 --> 00:05:09.167 
給高優先級提示和聲音

00:05:09.233 --> 00:05:13.033 
比如導航提示或者新消息通知

00:05:15.633 --> 00:05:17.167 
那麼媒體通道

00:05:17.500 --> 00:05:20.533 
可以播放來自手機的音樂

00:05:21.433 --> 00:05:25.767 
或者播放來自原生音頻資源
的媒體

00:05:27.033 --> 00:05:30.367 
現在我們看過了媒體播放

00:05:30.767 --> 00:05:32.367 
我們來看看發生了什麼

00:05:32.433 --> 00:05:34.533 
當CarPlay接到電話時

00:05:35.900 --> 00:05:40.033 
通話需要音頻通道提供

00:05:40.100 --> 00:05:42.633 
麥克風和音響

00:05:43.200 --> 00:05:47.600 
所以媒體播放被中斷
並且通道被切換了

00:05:52.933 --> 00:05:55.167 
音頻被切換到一個通道

00:05:55.233 --> 00:05:59.033 
這個通道提供對麥克風和音響
的訪問

00:06:00.567 --> 00:06:03.533 
除了切換到音頻通道

00:06:03.600 --> 00:06:07.567 
屏幕被切換到CarPlay來顯示
通話UI

00:06:08.767 --> 00:06:12.033 
儀表組上的元數據信息

00:06:12.100 --> 00:06:13.500 
也會更新

00:06:15.467 --> 00:06:16.567 
當然

00:06:16.633 --> 00:06:21.233 
如果原生系統也支持通話

00:06:21.300 --> 00:06:25.533 
那麼通話會使用原生系統
來播放和顯示

00:06:26.500 --> 00:06:28.733 
但是在原生系統中通話時

00:06:28.800 --> 00:06:32.200 
用戶可以用Apple Maps導航

00:06:33.900 --> 00:06:36.633 
所以每當接近轉彎時

00:06:36.700 --> 00:06:38.767 
Apple Maps會播放一個聲音

00:06:38.833 --> 00:06:41.467 
通過公告通道來通知用戶

00:06:42.333 --> 00:06:46.033 
通話繼續被轉到汽車的音響上

00:06:46.433 --> 00:06:50.767 
但是路線規劃導航通知也被顯示

00:06:50.833 --> 00:06:53.133 
它們和通話音混合在一起

00:06:53.967 --> 00:06:56.000 
當然在這種情況下

00:06:56.433 --> 00:07:00.500 
我們不希望用戶
聽到手機的導航提示

00:07:00.700 --> 00:07:04.767 
只是一個警告音提醒前方有轉彎

00:07:06.900 --> 00:07:09.633 
如果用戶希望看到
下一個轉彎在哪

00:07:09.700 --> 00:07:12.333 
主顯示可以顯示Apple Maps

00:07:13.733 --> 00:07:16.600 
最後當通話結束後

00:07:18.167 --> 00:07:21.600 
音樂繼續通過原生子系統播放

00:07:22.300 --> 00:07:26.167 
就像用戶在通話前正在聽的一樣

00:07:27.000 --> 00:07:29.467 
現在導航公告

00:07:29.533 --> 00:07:35.200 
將包括所有的導航語音
因爲用戶不再進行通話

00:07:36.367 --> 00:07:37.200 
好的

00:07:37.833 --> 00:07:42.833 
如你所見 集成CarPlay是一個
很複雜的任務

00:07:42.900 --> 00:07:46.300 
特別是在共享硬件資源方面

00:07:46.933 --> 00:07:49.733 
但是在我們進行這些細節前

00:07:49.800 --> 00:07:51.600 
讓我們看看音量控制

00:07:53.933 --> 00:07:55.167 
音量管理

00:07:56.233 --> 00:07:57.533 
你們可能知道

00:07:58.000 --> 00:08:02.067 
一個普通的車載主機顯示
音量指示

00:08:02.133 --> 00:08:04.900 
當用戶操作音量旋鈕時

00:08:04.967 --> 00:08:06.133 
然後那個音量旋鈕

00:08:06.200 --> 00:08:09.367 
控制當前播放的音頻的音量

00:08:11.400 --> 00:08:14.533 
CarPlay音頻也有相同原理

00:08:15.000 --> 00:08:17.633 
但是有一個不同的音量設置

00:08:17.700 --> 00:08:20.600 
對每一個主要的CarPlay應用

00:08:21.300 --> 00:08:22.533 
讓我們看看它們

00:08:24.000 --> 00:08:25.467 
當播放Siri時

00:08:25.700 --> 00:08:29.367 
音量旋鈕只對語音互動設置音量

00:08:30.333 --> 00:08:34.167 
當有來電時
來電鈴聲的音量被控制

00:08:35.732 --> 00:08:40.533 
當用戶在通話中時
通話音量被控制

00:08:42.033 --> 00:08:46.667 
如果靠近下一個轉彎
導航提示被播放

00:08:47.000 --> 00:08:49.900 
那麼用戶可以改變導航音量

00:08:50.600 --> 00:08:53.833 
請記住媒體可以在後臺播放

00:08:54.000 --> 00:08:57.100 
但是它的音量會在有那些提示時
自動降低

00:08:57.167 --> 00:08:58.767 
而且不能被改變

00:09:00.233 --> 00:09:03.967 
一旦提示音結束並且音樂音量
恢復正常

00:09:04.067 --> 00:09:06.933 
這個旋鈕就會控制媒體音量

00:09:08.267 --> 00:09:11.667 
好的現在讓我們來看看資源管理

00:09:13.733 --> 00:09:17.600 
我們來看看哪些資源被管理

00:09:17.767 --> 00:09:19.700 
談論他們怎樣被管理

00:09:19.767 --> 00:09:22.267 
並討論一些典型的例子

00:09:24.233 --> 00:09:27.233 
我們看到有很多硬件資源

00:09:27.633 --> 00:09:31.200 
但是讓我們理解它們中的哪些
被管理了

00:09:32.600 --> 00:09:33.633 
只有2個

00:09:34.300 --> 00:09:37.700 
mainScreen是汽車的主顯示

00:09:38.200 --> 00:09:39.500 
以及mainAudio

00:09:39.567 --> 00:09:43.000 
因爲這個資源提供對車載音頻
系統的訪問

00:09:45.033 --> 00:09:48.467 
這些資源可以被佔有或借用

00:09:49.367 --> 00:09:50.800 
當你佔有一個資源時

00:09:50.867 --> 00:09:53.867 
它在無限的時間內屬於你

00:09:53.933 --> 00:09:55.400 
它基本上就是你的

00:09:56.167 --> 00:09:59.467 
當你借用一個資源
你可以使用它一段時間

00:09:59.800 --> 00:10:02.500 
但是使用完後你要還回去

00:10:04.267 --> 00:10:10.367 
我們讓原生用戶界面
永久佔有顯示

00:10:10.833 --> 00:10:13.400 
用戶可以使用原生導航

00:10:13.467 --> 00:10:15.333 
或者聽收音機

00:10:15.400 --> 00:10:17.633 
或者修改一些汽車設置

00:10:19.033 --> 00:10:21.867 
怎樣永久切換到原生UI？

00:10:22.833 --> 00:10:27.433 
原生UI可以在用戶按硬件按鈕時
佔有屏幕

00:10:27.500 --> 00:10:29.333 
或者切換到原生UI

00:10:29.400 --> 00:10:32.567 
在CarPlay UI裏的入口

00:10:33.267 --> 00:10:38.633 
或者用原生語音識別來啓動
一個原生應用

00:10:40.767 --> 00:10:42.733 
現在假設用戶選擇

00:10:42.800 --> 00:10:45.367 
主菜單裏的
Apple CarPlay圖標

00:10:48.400 --> 00:10:49.600 
這種情況下

00:10:49.667 --> 00:10:53.967 
CarPlay接管屏幕
因爲用戶明確的要求這樣

00:10:55.300 --> 00:10:58.700 
是什麼導致的這個永久切換？

00:10:59.300 --> 00:11:01.233 
任何和CarPlay有關的硬件按鈕

00:11:01.967 --> 00:11:03.500 
或者如我們所見

00:11:03.567 --> 00:11:06.500 
原生UI中的任何CarPlay按鈕

00:11:07.267 --> 00:11:11.500 
或者通過Siri
例如通過說打開地圖

00:11:14.000 --> 00:11:18.033 
現在有其他應用需要借用資源

00:11:18.433 --> 00:11:22.133 
請記住它們只需要使用一會
然後會還回來

00:11:23.200 --> 00:11:25.367 
我們在談論哪些應用？

00:11:26.367 --> 00:11:29.067 
通話 話音互動

00:11:29.533 --> 00:11:32.033 
通知 警告

00:11:34.067 --> 00:11:35.433 
讓我們來看一個例子

00:11:36.200 --> 00:11:39.333 
原生UI佔用主屏幕資源

00:11:39.400 --> 00:11:41.567 
並且永久在屏幕上顯示

00:11:43.933 --> 00:11:46.033 
現在用戶在CarPlay裏接到電話

00:11:46.567 --> 00:11:48.900 
CarPlay UI借用屏幕

00:11:48.967 --> 00:11:52.067 
並顯示通話時間

00:11:52.900 --> 00:11:54.600 
一旦通話結束

00:11:55.567 --> 00:11:57.700 
我們回到原生UI

00:11:58.367 --> 00:12:01.500 
並保持這樣直到有其他用戶活動

00:12:04.967 --> 00:12:07.533 
接下來讓我們看看主音頻資源

00:12:08.300 --> 00:12:11.133 
主音頻可以被分爲四個主要類型

00:12:11.433 --> 00:12:14.667 
每個類型被不同
CarPlay應用使用

00:12:14.933 --> 00:12:18.267 
因爲它提供
對不同硬件資源的訪問

00:12:19.733 --> 00:12:26.000 
媒體僅有音頻輸出
被用來播放所有媒體

00:12:26.633 --> 00:12:30.133 
警告僅有輸出

00:12:30.200 --> 00:12:32.833 
被用來播放鈴聲和定時器警告

00:12:34.200 --> 00:12:37.067 
Siri使用語音識別

00:12:37.133 --> 00:12:39.267 
因爲它加入了對麥克風的使用

00:12:40.700 --> 00:12:44.100 
對用來通話的電話類型同樣如此

00:12:45.433 --> 00:12:49.933 
對用作未定義音頻的默認類型
也是如此

00:12:52.400 --> 00:12:57.300 
但是不要忘記第二個音頻通道
它用作導航公告

00:12:58.267 --> 00:13:02.767 
alternateAudio沒有被管理
它基本上總是可用

00:13:02.833 --> 00:13:05.133 
所以不需要佔用或借用它

00:13:05.867 --> 00:13:07.800 
在mainAudio通道里

00:13:07.867 --> 00:13:11.833 
alternateAudio與所有的音頻類型都
是混合在一起的

00:13:11.900 --> 00:13:13.533 
它總是可以被訪問

00:13:15.100 --> 00:13:16.067 
就這些了

00:13:16.133 --> 00:13:19.800 
我要交給Tom來談談資源管理

00:13:22.867 --> 00:13:23.700  
謝謝Tanya

00:13:23.867 --> 00:13:26.867  
大家好 我是Tom
我也在CarPlay組裏工作

00:13:27.533 --> 00:13:30.433  
我們已經知道了哪些資源被管理

00:13:30.500 --> 00:13:33.200  
而且你知道可以佔有或借用資源

00:13:33.267 --> 00:13:35.433  
讓我們談談怎樣管理它們

00:13:37.633 --> 00:13:42.533 
要在兩個子系統中分配資源
我們需要仲裁者

00:13:42.600 --> 00:13:45.567 
我們把這個仲裁者叫做
資源管理器

00:13:49.467 --> 00:13:51.267 
資源管理器是幹什麼的？

00:13:51.900 --> 00:13:53.467 
它主要有三個任務

00:13:53.733 --> 00:13:56.533 
首先它知道整個系統的當前狀態

00:13:57.433 --> 00:14:01.100 
其次它根據
一些嚴格的規則來決定

00:14:01.167 --> 00:14:03.100 
哪個系統獲得資源

00:14:03.600 --> 00:14:06.700 
第三根據當前狀態和一系列規則

00:14:07.233 --> 00:14:09.933 
它把資源分配給一方或另一方

00:14:10.300 --> 00:14:12.333 
讓我們看看實際中 它是如何工作的

00:14:14.833 --> 00:14:19.100 
假設原生UI和CarPlay
都需要在屏幕上顯示一些信息

00:14:20.133 --> 00:14:23.300 
它們都發出申請要求獲得
屏幕的所有權

00:14:25.400 --> 00:14:28.000 
那麼資源管理器查看內部狀態

00:14:28.067 --> 00:14:31.300 
並決定它們中的哪個應該獲得屏幕

00:14:33.533 --> 00:14:35.967 
我們假設在這個情況下
原生UI的請求

00:14:36.033 --> 00:14:38.667 
有更高優先級
那麼屏幕被分配給它

00:14:39.167 --> 00:14:41.200 
資源管理器發送通知

00:14:41.267 --> 00:14:43.467 
屏幕現在可以被原生UI使用

00:14:44.967 --> 00:14:48.533 
只有原生UI可以在屏幕上顯示內容

00:14:49.333 --> 00:14:51.333 
必須要注意到狀態並沒有改變

00:14:51.400 --> 00:14:53.667 
直到資源管理器發送更新

00:14:56.333 --> 00:14:58.333 
那麼資源管理器是在哪運行？

00:14:58.933 --> 00:15:01.600 
它是原生系統
還是CarPlay的一部分？

00:15:02.367 --> 00:15:05.800 
當我們設計CarPlay時
我們問了自己同樣的問題

00:15:06.267 --> 00:15:10.400 
我們考慮了交換資源的詳細信息
的複雜性

00:15:10.467 --> 00:15:11.733 
我們考慮了未來

00:15:11.967 --> 00:15:14.300 
如果那些規則要調整該怎麼辦？

00:15:14.967 --> 00:15:17.400 
如果CarPlay上出現新應用
該怎麼辦？

00:15:17.467 --> 00:15:20.000 
如果車上沒有已有的設計需要
處理該怎麼辦？

00:15:20.633 --> 00:15:23.267 
哪種方案帶來最大的靈活性

00:15:23.333 --> 00:15:24.567 
在接下來的五年？

00:15:24.967 --> 00:15:26.600 
所以我們決定實現一個系統

00:15:26.667 --> 00:15:30.467 
在原生系統中的複雜度更低
更易於升級

00:15:30.533 --> 00:15:33.233 
當消費者擁有車輛一段時間後

00:15:33.600 --> 00:15:37.233 
所以資源管理器在iOS裏實現

00:15:40.067 --> 00:15:41.867 
因爲資源管理器是

00:15:42.300 --> 00:15:45.100 
與原生系統互動的組件

00:15:45.167 --> 00:15:47.167 
我們讓iPhone作爲控制器

00:15:47.500 --> 00:15:49.200 
讓主機作爲附件

00:15:49.700 --> 00:15:50.567 
但不要忘了

00:15:51.367 --> 00:15:54.100 
所有iPhone應用請求同樣的資源

00:15:54.167 --> 00:15:56.333 
用和原生UI同樣的方式

00:15:59.533 --> 00:16:00.367 
接下來

00:16:00.633 --> 00:16:03.800 
你可以用什麼命令和資源管理器
互動？

00:16:05.000 --> 00:16:05.833 
很簡單

00:16:06.167 --> 00:16:07.633 
你只需要兩個命令

00:16:08.167 --> 00:16:11.233 
changeModes命令
用來請求或釋放資源

00:16:11.300 --> 00:16:14.600 
modesChanged命令
用來描述當前狀態

00:16:16.233 --> 00:16:18.867 
changeModes
是主機發出的通知

00:16:20.400 --> 00:16:23.800 
在這個情況下主機是附件
向作爲控制器的資源管理器

00:16:29.200 --> 00:16:31.100 
changeModes命令表明

00:16:31.167 --> 00:16:33.567 
附件想對資源做什麼

00:16:33.800 --> 00:16:35.367 
它聲明它爲什麼需要這個資源

00:16:36.033 --> 00:16:39.633 
以及誰可以佔有或借用這個資源
當它被傳遞後

00:16:41.667 --> 00:16:45.700 
modesChanged
是控制器傳遞迴主機的通知

00:16:48.233 --> 00:16:50.333 
modesChanged
提供當前狀態

00:16:50.400 --> 00:16:53.500 
它描述誰擁有這個系統資源

00:16:53.900 --> 00:16:56.800 
它發送這些信息
所以附件知道一個資源是否被傳遞

00:16:56.867 --> 00:16:58.133 
所有者是否更換了

00:17:00.733 --> 00:17:03.633 
我們來談談資源管理器如何工作
的更多細節

00:17:04.700 --> 00:17:09.233 
我們從一個簡單活動開始
切換iOS音頻到收音機

00:17:09.800 --> 00:17:12.133 
然後我們會談論原生語音識別

00:17:12.933 --> 00:17:14.599 
再接下來是怎樣處理倒車雷達

00:17:14.666 --> 00:17:17.500 
這個情況下你不想iPhone應用
來打擾你

00:17:17.900 --> 00:17:21.633 
最後我們會看一個Siri觸發
音樂播放的例子

00:17:23.099 --> 00:17:24.733 
讓我們來看播放收音機音頻

00:17:25.633 --> 00:17:28.600 
假設iPhone正在
通過車載音響播放音樂

00:17:29.600 --> 00:17:32.367 
然後用戶在原生系統中想聽收音機

00:17:32.433 --> 00:17:33.700 
這是收音機按鈕

00:17:37.933 --> 00:17:41.433 
主機發送changeModes
請求獲得音響的所有權

00:17:42.200 --> 00:17:43.467 
而且它獲得這個所有權

00:17:43.533 --> 00:17:47.500 
因爲用戶可能會繼續聽很長時間
的收音機

00:17:48.733 --> 00:17:50.733 
控制器把音頻交給主機

00:17:50.800 --> 00:17:52.900 
且發送modesChanged通知

00:17:54.000 --> 00:17:57.367 
主機就是音頻資源的新的所有者

00:18:01.033 --> 00:18:03.100 
它可以開始播放收音機

00:18:03.700 --> 00:18:06.867 
mainAudio資源在這時被永久
賦予主機

00:18:09.467 --> 00:18:11.367 
總之這個例子向我們展示了

00:18:11.833 --> 00:18:13.267 
什麼時候要求一個資源

00:18:13.333 --> 00:18:15.400 
以及原生系統不應該使用該資源

00:18:15.467 --> 00:18:17.933 
在它擁有這個資源前

00:18:20.000 --> 00:18:24.167 
讓我們看下一個例子
使用原生語音識別

00:18:25.167 --> 00:18:27.500 
在我們的上個例子裏
收音機仍然在播放

00:18:28.567 --> 00:18:32.000 
讓我們看看用戶啓動原生語音識別
時會發生什麼

00:18:34.700 --> 00:18:38.100 
這個單元請求暫時擁有顯示和音頻

00:18:38.467 --> 00:18:42.400 
所以transferType
應該設置成借用音頻和屏幕

00:18:44.200 --> 00:18:47.833 
mainScreen和mainAudio
傳遞給附件

00:18:51.167 --> 00:18:53.467 
然後原生語音識別開始

00:18:55.500 --> 00:18:57.000 
一旦語音對話結束

00:18:57.067 --> 00:19:00.700 
主機把借用的資源交還
通過發送unborrow命令

00:19:03.433 --> 00:19:05.700 
因爲單元在之前正在播放收音機

00:19:05.900 --> 00:19:08.400 
資源被重新賦予給主機

00:19:10.167 --> 00:19:11.633 
收音機可以繼續

00:19:12.867 --> 00:19:14.100 
現在你可能想知道

00:19:14.267 --> 00:19:17.900 
爲什麼附件已經擁有資源
還要借用資源？

00:19:17.967 --> 00:19:19.400 
這是一個很好的問題

00:19:20.067 --> 00:19:22.367 
當資源管理器評估請求時

00:19:22.433 --> 00:19:26.467 
要變更一個資源的所有權
控制器要知道系統的當前狀態

00:19:26.533 --> 00:19:29.233 
資源管理器需要知道你爲什麼在
使用這些資源

00:19:29.300 --> 00:19:30.933 
這樣它才能進行正確判斷

00:19:31.000 --> 00:19:33.233 
如果其它部分晚些時候需要資源

00:19:35.067 --> 00:19:36.700 
我們來看下一個例子

00:19:37.400 --> 00:19:38.733 
顯示倒車雷達

00:19:40.700 --> 00:19:42.233 
若CarPlay正播放音頻

00:19:42.300 --> 00:19:44.333 
屏幕上正顯示原生UI

00:19:45.267 --> 00:19:48.733 
當用戶掛倒車檔
倒車雷達借用屏幕

00:19:49.533 --> 00:19:52.367 
然而請注意它也告訴資源管理器

00:19:52.433 --> 00:19:54.467 
屏幕不可被再次借用

00:19:59.633 --> 00:20:02.800 
資源管理器把屏幕分配給原生UI

00:20:02.867 --> 00:20:04.633 
並且注意到這個限制

00:20:06.133 --> 00:20:08.100 
現在顯示倒車雷達

00:20:08.667 --> 00:20:10.433 
CarPlay音頻繼續播放

00:20:11.100 --> 00:20:12.833 
但是現在用戶接到來電

00:20:15.633 --> 00:20:17.800 
iPhone不能在屏幕上
顯示任何內容

00:20:17.867 --> 00:20:20.067 
因爲主機限制了對屏幕的訪問

00:20:20.133 --> 00:20:22.100 
但是鈴聲能過音響播放

00:20:23.700 --> 00:20:24.800 
這是怎麼發生的？

00:20:25.867 --> 00:20:28.367 
changeModes命令中
這個單元告訴資源管理器

00:20:28.433 --> 00:20:31.067 
它擁有的資源使用哪些規則

00:20:31.133 --> 00:20:33.000 
通過在任何時間設置
borrowConstraint

00:20:33.067 --> 00:20:36.300 
這個單元允許應用借用資源

00:20:36.533 --> 00:20:40.767 
通過把它設置成user-initiated
只有用戶發起的事件可以借用

00:20:41.500 --> 00:20:44.233 
永遠沒有應用可以使用這些資源

00:20:44.733 --> 00:20:45.767 
在這個例子中

00:20:48.133 --> 00:20:51.133 
如你所見這個限制對系統的行爲
有個很大的影響

00:20:51.200 --> 00:20:53.233 
所以它們必須被正確使用

00:20:53.900 --> 00:20:57.700 
只有需要用戶立即注意時
才限制訪問

00:20:58.167 --> 00:21:01.533 
有CarPlay連接時
不要限制永久所有權

00:21:03.367 --> 00:21:04.933 
這就是使用倒車雷達

00:21:06.300 --> 00:21:09.500 
最後一個例子
當Siri播放音樂時發生了什麼

00:21:10.767 --> 00:21:12.700 
我們又一次從播放收音機開始

00:21:13.900 --> 00:21:15.300 
用戶啓動Siri

00:21:17.833 --> 00:21:19.067 
Siri在手機上運行

00:21:19.133 --> 00:21:21.567 
資源管理器告訴原生系統

00:21:21.633 --> 00:21:23.967 
資源被分配給Siri

00:21:25.567 --> 00:21:29.467 
Siri出現然後用戶說
“Siri播放音樂”

00:21:32.167 --> 00:21:34.267 
Siri交還顯示和音頻資源

00:21:34.333 --> 00:21:37.267 
但是現在音樂應用需要音頻資源
播放音樂

00:21:37.500 --> 00:21:39.667 
所以資源管理器通知主機

00:21:39.733 --> 00:21:41.567 
手機擁有mainAudio

00:21:41.633 --> 00:21:43.633 
但是屏幕還給附件

00:21:44.400 --> 00:21:47.067 
主機不再繼續播放收音機

00:21:49.433 --> 00:21:52.067 
所以在車裏能聽到iPhone音頻

00:21:53.900 --> 00:21:55.000 
我們從中看到什麼？

00:21:55.400 --> 00:21:57.000 
在兩種場合
資源管理器

00:21:57.067 --> 00:21:59.733 
在沒向主機發送請求的情況下
改變了狀態

00:21:59.800 --> 00:22:01.200 
這是完全可以的

00:22:02.033 --> 00:22:05.733 
因爲手機上的應用也會請求資源

00:22:05.800 --> 00:22:08.267 
如果它們得到資源
單元收到了通知

00:22:08.967 --> 00:22:10.133 
怎麼處理這種情況

00:22:10.867 --> 00:22:14.233 
在每個modesChanged之後
你要檢查你是否是所有者

00:22:14.533 --> 00:22:16.667 
如果你是繼續你的活動

00:22:16.767 --> 00:22:19.367 
否則你需要得到CarPlay來處理

00:22:20.000 --> 00:22:21.533 
第二 不要忽略

00:22:21.600 --> 00:22:24.933 
手機發起的把資源切換給手機

00:22:27.033 --> 00:22:30.800 
至此我們已經看過了資源交換
的例子

00:22:30.867 --> 00:22:32.667 
但是還有一種情況兩邊

00:22:32.733 --> 00:22:34.667 
都想完成同樣的任務

00:22:34.733 --> 00:22:37.000 
讓我們看看應用是怎麼被管理的

00:22:38.767 --> 00:22:42.533 
我們要管理原生和CarPlay應用
它們有相似的特點

00:22:42.600 --> 00:22:44.233 
但是關於那些應用呢？

00:22:44.800 --> 00:22:49.333 
他們導航 通話 語音識別

00:22:51.333 --> 00:22:54.567 
我們通過appState來實現
什麼是appState？

00:22:54.967 --> 00:22:57.467 
我們用不同的appState記錄
誰現在參與了

00:22:57.533 --> 00:23:00.033 
共享的應用
這些應用只能活動

00:23:00.100 --> 00:23:03.000 
在附件上或者控制器上
在任一個時刻

00:23:03.833 --> 00:23:06.467 
所以這三個不同的appState
是TurnByTurn

00:23:06.533 --> 00:23:08.533 
PhoneCall和Speech

00:23:10.533 --> 00:23:11.467 
讓我們來看看

00:23:12.067 --> 00:23:15.100 
導航appState是怎麼被管理

00:23:16.900 --> 00:23:19.300 
當導航在附件上啓動時

00:23:19.367 --> 00:23:21.167 
它用一changeModes命令

00:23:21.233 --> 00:23:23.933 
來更新要激活的
TurnByTurn appState

00:23:27.567 --> 00:23:30.633 
在這個例子中
是最後的會獲勝的情況

00:23:31.033 --> 00:23:33.867 
控制器把TurnByTurn
appState交附件

00:23:33.933 --> 00:23:36.667 
返回一個modesChanged
命令 顯示附件

00:23:36.733 --> 00:23:38.933 
是當前運行的導航

00:23:40.667 --> 00:23:44.867 
現在讓我們來看看用戶用Apple Maps
設置一個新目的地時會發生什麼

00:23:44.933 --> 00:23:47.100 
當原生系統已經在導航時

00:23:47.567 --> 00:23:50.933 
用戶說 “Siri帶我去最近
的咖啡店”

00:23:51.867 --> 00:23:54.800 
現在iPhone開始了導航

00:23:54.867 --> 00:23:57.533 
控制器更新TurnByTurn appState

00:23:59.733 --> 00:24:04.033 
這是對附件的指令
要停止它自己的導航

00:24:05.767 --> 00:24:10.233 
現在iPhone開始導航
控制器更新TurnByTurn appState

00:24:10.300 --> 00:24:14.100 
這是對附件的指令
要停止它自己的導航

00:24:16.033 --> 00:24:18.500 
現在Apple Maps的導航

00:24:18.567 --> 00:24:22.033 
顯示在了屏幕上
並且公告通過音頻播放

00:24:22.100 --> 00:24:25.133 
並且和原生導航系統不會衝突

00:24:27.667 --> 00:24:29.733 
所以現在Apple Maps的導航

00:24:29.800 --> 00:24:31.967 
顯示在了屏幕上
並且公告通過音頻播放

00:24:32.033 --> 00:24:34.733 
並且和原生導航系統不會衝突

00:24:36.300 --> 00:24:37.667 
關於導航就這麼多了

00:24:38.167 --> 00:24:39.633 
接下來讓我們看看通話

00:24:41.233 --> 00:24:44.800 
如果主機支持通過Bluetooth
來使用第二個電話

00:24:44.867 --> 00:24:46.400 
並且有一個正在進行的通話

00:24:46.867 --> 00:24:48.833 
這個通話獨佔mainAudio

00:24:49.233 --> 00:24:51.200 
通話不能被打斷

00:24:51.467 --> 00:24:54.733 
那用戶在CarPlay設備上收到
來電會發生什麼？

00:24:55.933 --> 00:24:58.700 
CarPlay只能在這臺設備上響鈴

00:24:58.767 --> 00:25:01.100 
因爲不能打斷正在進行的通話

00:25:01.567 --> 00:25:03.833 
被PhoneCall appState管理

00:25:05.200 --> 00:25:07.300 
最後來看看語音互動

00:25:08.033 --> 00:25:10.300 
如果主機有原生的語音識別

00:25:10.367 --> 00:25:12.800 
當它運行時借用了資源

00:25:12.867 --> 00:25:16.800 
並獨佔音響 麥克風和屏幕資源

00:25:17.467 --> 00:25:20.833 
但是它能在任何時候被用戶
發起的事件打斷

00:25:21.733 --> 00:25:24.467 
所以用戶啓動Siri

00:25:25.900 --> 00:25:29.733 
原生語音識別結束
Siri繼續出現在車載顯示上

00:25:30.233 --> 00:25:32.567 
Speech appState
被用來實現這個

00:25:35.600 --> 00:25:36.433 
總之

00:25:36.933 --> 00:25:39.633 
CarPlay和你的原生系統依賴
相同的資源

00:25:39.700 --> 00:25:42.700 
被設計成和原生用戶體驗共存

00:25:43.333 --> 00:25:45.067 
爲了優秀的CarPlay體驗

00:25:45.133 --> 00:25:47.133 
考慮每一種使用情況的資源處理

00:25:47.200 --> 00:25:49.767 
遵守CarPlay設計建議

00:25:50.500 --> 00:25:53.833 
CarPlay的詳述可以通過
MFi Program獲得

00:25:55.067 --> 00:25:57.633 
若你還沒有觀看開發CarPlay
系統的第一部分

00:25:57.700 --> 00:25:59.333 
我鼓勵你去看一下

00:25:59.767 --> 00:26:01.333 
關於這次討論的更多信息

00:26:01.733 --> 00:26:03.633 
請訪問屏幕上的網址