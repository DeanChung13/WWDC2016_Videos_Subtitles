00:00:19.486 --> 00:00:25.025 
在網頁中使用Apple Pay

00:00:28.695 --> 00:00:29.897 
大家好

00:00:30.764 --> 00:00:33.600 
歡迎回來
參加去年Apple Pay會議的人

00:00:34.034 --> 00:00:34.868 
我是Nick

00:00:35.435 --> 00:00:37.738 
今天我與同事Anders會在這裏

00:00:38.138 --> 00:00:40.974 
我們將會講述一個新的特性

00:00:41.341 --> 00:00:43.510 
在網頁中使用Apple Pay

00:00:44.545 --> 00:00:47.214 
首先 我想先問大家一個問題

00:00:48.382 --> 00:00:51.852 
你們當中有多少人
舉起你們的手或者對着屏幕喊出來

00:00:51.919 --> 00:00:54.054 
如果你在樓下或者在線觀看的話

00:00:54.121 --> 00:00:56.623 
你們當中有多少人嘗試過網上購物

00:00:57.057 --> 00:00:59.993 
但是發現過程太複雜
然後放棄了購物

00:01:01.461 --> 00:01:02.596 
我看到了很多人舉手了

00:01:03.297 --> 00:01:05.199 
毫無疑問 這是一個大問題

00:01:05.331 --> 00:01:09.102 
這是我昨天訪問的一個網站
非常的傳統

00:01:10.003 --> 00:01:12.139 
無視這名字Honest Bob
他是一個很棒的傢伙

00:01:13.073 --> 00:01:15.075 
但他在結賬的時候遇到了一些困擾

00:01:15.776 --> 00:01:18.745  
爲了舉例
我將我的名字改變一下

00:01:18.812 --> 00:01:21.014  
改成了Johnny Appleseed
避免重名

00:01:21.315 --> 00:01:22.716  
然後我開始輸入卡號

00:01:22.816 --> 00:01:24.251  
獲得了令人迷惑的錯誤信息

00:01:24.985 --> 00:01:27.654  
提示說卡號必須是一連串的數字

00:01:28.522 --> 00:01:31.758  
這樣我就會心裏想
我覺得沒有空格是錯誤的

00:01:31.825 --> 00:01:34.161  
並且我的卡上就是有空格的

00:01:34.494 --> 00:01:35.696  
於是我做了修改

00:01:36.530 --> 00:01:39.666  
然後我又得到了一個錯誤信息
比較明顯 月份不符合

00:01:39.733 --> 00:01:42.336  
而不是提示我
沒有選擇月份

00:01:42.903 --> 00:01:44.771  
這樣很令人困擾

00:01:45.372 --> 00:01:48.542  
希望大家不會遇到像這樣糟糕的場景

00:01:49.109 --> 00:01:52.012  
但是因特網支付
真的還非常的落後

00:01:52.713 --> 00:01:54.081  
且我們希望能解決這種問題

00:01:54.481 --> 00:01:56.750 
認爲可通過
Apple Pay解決這種問題

00:01:58.085 --> 00:01:59.486 
並且我們今天將會講述

00:01:59.653 --> 00:02:01.955 
如何解決這些問題

00:02:02.089 --> 00:02:05.392 
可以通過在網頁中使用良好的接口

00:02:05.592 --> 00:02:07.261 
及Apple Pay帶來的好處

00:02:07.928 --> 00:02:11.231 
我們將會講到很多內容
讓我們首先開始做一個介紹

00:02:11.298 --> 00:02:14.001 
我們將會通過一些事例
來講述Apple Pay

00:02:14.067 --> 00:02:16.937 
你們可能還不熟悉它
還不瞭解它能做什麼

00:02:17.671 --> 00:02:19.406 
然後我們會講述一些具體的API

00:02:19.473 --> 00:02:22.843 
我們將這些新JavaScript
API添加進了Safari

00:02:23.810 --> 00:02:27.281 
然後我們會講述支付處理的過程
以及如何獲得付款

00:02:28.582 --> 00:02:30.517 
最後是關於Apple Pay的設計

00:02:30.584 --> 00:02:34.021 
如何讓你的網站變的出衆而且實用

00:02:34.321 --> 00:02:36.356 
及擁有比較好的
Apple Pay體驗

00:02:37.658 --> 00:02:38.692 
所以 讓我們開始吧

00:02:40.194 --> 00:02:41.428 
Apple Pay是什麼？

00:02:42.429 --> 00:02:44.932 
希望你們大多數人
都比較熟悉Apple Pay

00:02:45.399 --> 00:02:49.303 
它是一種簡單安全以及私密的支付方式

00:02:50.404 --> 00:02:54.141 
你可以在商店中使用

00:02:54.208 --> 00:02:56.176 
也可以在iOS應用中使用

00:02:57.477 --> 00:02:59.847 
也許你們已試過了
若沒有 請放心的去嘗試一下

00:02:59.913 --> 00:03:02.783 
有很多非常好的應用
比如Lyft Uber DoorDash

00:03:02.850 --> 00:03:05.152 
即便在參加會議 你也可以使用它們

00:03:06.386 --> 00:03:09.356 
且應用中的Apple Pay提供了

00:03:09.423 --> 00:03:10.924 
一流的商業體驗

00:03:11.391 --> 00:03:13.126 
這些應用真的非常突出

00:03:14.394 --> 00:03:19.066 
現在已經有非常多的應用
採用了Apple Pay

00:03:19.533 --> 00:03:24.071 
它們在世界範圍內得到了使用
在中國 英國以及美國

00:03:25.038 --> 00:03:28.041 
這些應用有着良好的發展

00:03:28.175 --> 00:03:31.278 
它們看上去有着更高的轉化率

00:03:31.612 --> 00:03:32.946 
那些使用Apple Pay的用戶

00:03:33.013 --> 00:03:35.382 
有着更高的消費傾向

00:03:36.216 --> 00:03:38.585 
並且再次消費的概率也更高

00:03:39.186 --> 00:03:42.356 
在消費之外 他們也會花費更多的時間

00:03:42.422 --> 00:03:43.590 
在這些應用上

00:03:44.591 --> 00:03:46.260 
最後 這些用戶會感到更加快樂

00:03:47.094 --> 00:03:50.163 
Apple Pay用戶滿意度最高的

00:03:50.364 --> 00:03:51.932 
支付手段之一

00:03:52.833 --> 00:03:54.968 
它非常好用
所以用戶喜歡它

00:03:56.503 --> 00:04:00.908 
Apple Pay在應用中表現優秀
但我覺得應該需要注意的是

00:04:02.442 --> 00:04:04.211 
大量的電子商務

00:04:04.478 --> 00:04:07.414 
沒有發生在應用當中

00:04:08.248 --> 00:04:09.950 
應用是很好的
我喜歡各種應用

00:04:10.217 --> 00:04:13.353 
但是部分人仍然會在網頁上進行支付

00:04:14.454 --> 00:04:17.291 
絕大部分情況下 在網頁上進行的支付
是非常緩慢的

00:04:17.357 --> 00:04:18.992 
是很繁瑣的
並且也不透明

00:04:19.059 --> 00:04:21.827 
每一個商戶的付款流程都不一樣

00:04:21.894 --> 00:04:23.664 
同樣 每個網站付款流程也不一樣

00:04:25.232 --> 00:04:27.067 
現在我們正在嘗試解決這個問題

00:04:27.134 --> 00:04:32.039 
我們正通過向更多的場景以及更多的人
引入Apple Pay來解決這問題

00:04:33.607 --> 00:04:35.576 
我們稱之爲
Apple Pay Everywhere

00:04:35.943 --> 00:04:38.478 
我們現在主要在三個地方
引入Apple Pay

00:04:39.479 --> 00:04:40.714 
第一是WatchKit

00:04:40.881 --> 00:04:42.983 
你可能在昨天的主題中已經見過了

00:04:43.050 --> 00:04:46.053 
且Kevin已提到過把Apple Pay
引入到WatchKit的應用中

00:04:46.520 --> 00:04:49.623 
當然我們也會在所有的新擴展中
引入Apple Pay

00:04:49.690 --> 00:04:53.227 
就像你看過的那些：
SiriKit地圖以及信息

00:04:54.061 --> 00:04:58.198 
但最大的場景
也就是你們今天來這的理由

00:04:58.265 --> 00:05:00.767 
是網絡和Safari

00:05:02.102 --> 00:05:04.638 
我們稍後會討論
WatchKit以及擴展

00:05:04.705 --> 00:05:06.139 
那將是下個會議的主題

00:05:06.273 --> 00:05:08.675 
若你喜歡我的嗓音
待會繼續留在這裏就好了

00:05:09.276 --> 00:05:11.912 
現在讓我們關於Safari

00:05:12.713 --> 00:05:15.282 
讓我們關注在網頁上
使用Apple Pay

00:05:16.850 --> 00:05:20.888 
前面我已經談論了
當今的電子商務有多麼糟糕

00:05:22.422 --> 00:05:24.391 
然而非常多的商品都是通過網頁銷售的

00:05:24.858 --> 00:05:27.828 
但是支付流程卻很冗長
它們太複雜了

00:05:27.928 --> 00:05:29.129 
以致於很難使用

00:05:29.196 --> 00:05:31.598 
手機上這個問題更嚴重

00:05:32.232 --> 00:05:35.536 
因爲屏幕更小
但是繁瑣的流程並沒有減少

00:05:36.937 --> 00:05:40.007 
用戶會希望在網頁上
有着與應用一樣的體驗

00:05:40.107 --> 00:05:41.341 
使用起來非常簡便

00:05:41.408 --> 00:05:43.477 
並且在安全與隱私方面也沒有區別

00:05:43.577 --> 00:05:46.013 
有多少人不得不去辦理一張新的卡片

00:05:46.079 --> 00:05:48.549 
因爲一封郵件告訴你
你曾經在上面買過東西的網站

00:05:48.615 --> 00:05:50.384 
早在三年前就已經被黑掉了

00:05:50.651 --> 00:05:51.718 
我就有過這種經歷

00:05:52.653 --> 00:05:54.888 
然而Apple Pay
可避免這種事情發生

00:05:55.756 --> 00:05:57.758 
且通過網頁上使用
Apple Pay功能

00:05:57.824 --> 00:06:00.093 
已可支持任何
帶Apple Pay的設備

00:06:01.028 --> 00:06:03.197 
也就是iPhone與iPad

00:06:03.864 --> 00:06:08.869 
並可通過Safari或者
SafariViewController來使用它

00:06:09.036 --> 00:06:13.073 
它與現有的Apple Pay體驗
是一樣的只不過形式是通過網頁而已

00:06:13.273 --> 00:06:16.109 
同樣的UI界面
同樣的使用方式

00:06:16.376 --> 00:06:18.312 
若你熟悉應用中的Apple Pay

00:06:18.378 --> 00:06:19.513 
你會感覺有熟悉的感覺

00:06:21.715 --> 00:06:23.317 
但是需要注意的是

00:06:24.251 --> 00:06:26.086 
這些設備並沒有包括臺式機

00:06:27.221 --> 00:06:29.957 
現在在一些國家 比如中國
手機電子商務

00:06:30.023 --> 00:06:31.425 
已是主流的電子商務方式了

00:06:31.491 --> 00:06:34.761 
但是在美國
大部分人還是習慣於

00:06:34.828 --> 00:06:36.163 
通過臺式電腦來買東西

00:06:36.230 --> 00:06:39.533 
你可能是通過Mac電腦
購買了 WWDC 門票

00:06:40.501 --> 00:06:43.537 
我們認爲Apple Pay
應該可以在任何地方使用

00:06:45.506 --> 00:06:49.142 
我們在Mac OS Sierra
中引入Apple Pay

00:06:50.310 --> 00:06:53.046 
你們可在Mac電腦上
通過Apple Pay支付了

00:06:53.347 --> 00:06:55.849 
並且具有同樣的安全性

00:06:56.216 --> 00:06:59.052 
與在你的iPhone或者Apple Watch
使用Apple Pay的情況相比話

00:06:59.319 --> 00:07:02.823 
你可以簡單的觸摸一下
就可以進行授權了

00:07:03.524 --> 00:07:06.460 
這樣用起來非常的簡單與直接

00:07:06.727 --> 00:07:09.463 
它支持在任何使用Handoff
的Mac上使用

00:07:09.696 --> 00:07:10.964 
並且操作系統需要是
Mac OS Sierra

00:07:11.198 --> 00:07:14.601 
這對於四年內銷售的
Mac電腦都不是問題

00:07:15.302 --> 00:07:16.937 
Safari瀏覽器是
完全支持Apple Pay的

00:07:17.738 --> 00:07:20.107 
你可以在手機上通過授權來進行支付

00:07:20.374 --> 00:07:21.808 
在Apple Watch也是一樣

00:07:22.342 --> 00:07:26.346 
因爲Mac OS上
使用Apple Pay是非常快速的

00:07:26.547 --> 00:07:29.183 
可能有人之前沒有看過我們昨天的演示

00:07:29.249 --> 00:07:30.651 
現在我來展示另外一個演示

00:07:30.951 --> 00:07:32.486 
不用擔心
這次演示會很快

00:07:33.420 --> 00:07:34.588 
讓我們轉到這裏來

00:07:38.025 --> 00:07:40.928 
在左邊 我訪問了一個網站

00:07:41.361 --> 00:07:43.764 
在右邊是一部iPhone手機

00:07:43.830 --> 00:07:47.367 
現在Craig
通過網絡預定了一些門票

00:07:47.434 --> 00:07:48.869 
好在週四去觀看海底總動員

00:07:48.969 --> 00:07:53.173 
讓我修改一下日期 改到週五
我們會和他一起去

00:07:53.440 --> 00:07:56.543 
我會和十個工程師一起去
他們是我的同事

00:07:57.344 --> 00:07:58.879 
好 向Craig打招呼

00:07:59.847 --> 00:08:01.982 
好了 讓我來點擊下
Apple Pay來進行支付

00:08:02.115 --> 00:08:04.318 
這一切都是即時發生的

00:08:04.718 --> 00:08:06.553 
讓我們來再做一次
這次我會取消它

00:08:06.620 --> 00:08:09.656 
可以看到 當我取消了之後
在我的手機上也自動的取消了

00:08:10.824 --> 00:08:12.326 
當我點擊Apple Pay
支付按鈕的時候

00:08:13.927 --> 00:08:15.028 
一切都是立刻發生的

00:08:15.095 --> 00:08:16.697 
它立刻出現了

00:08:16.997 --> 00:08:18.765 
然後在我的手機上
進行了Touch ID的匹配

00:08:23.170 --> 00:08:24.204 
這樣就完成了

00:08:24.271 --> 00:08:25.405 
幾秒內完成了整個支付

00:08:25.639 --> 00:08:27.641 
在這兩個設備之間反應都是即時的

00:08:27.708 --> 00:08:30.644 
然後我獲得了一個消息
告知我完成了一次支付

00:08:30.878 --> 00:08:35.182 
在Mac OS上使用
Apple Pay就這麼簡單和快速

00:08:35.349 --> 00:08:36.650 
這個過程真的非常快速

00:08:40.486 --> 00:08:43.023 
希望我說服了你們
Apple Pay是那麼優秀

00:08:43.490 --> 00:08:46.860 
讓我們講述一下在網頁上
集成Apple Pay的細節

00:08:47.561 --> 00:08:49.963 
在我們討論網頁API之前

00:08:50.030 --> 00:08:51.565 
讓我們來簡單看一下
Apple Pay的基本知識

00:08:51.632 --> 00:08:54.668 
因爲很多人還沒將Apple Pay
集成到應用之中的經歷

00:08:54.735 --> 00:08:56.537 
可能有人是一個純粹的網頁端開發者

00:08:58.105 --> 00:09:01.642 
Apple Pay提供
具有唯一性的支付token給你

00:09:03.177 --> 00:09:06.747 
你將這個token發送給網銀平臺
比如Stripe

00:09:06.914 --> 00:09:09.016 
比如Braintree
還有Chase Paymentech

00:09:10.217 --> 00:09:13.053 
對於一次交易來說
token是唯一的

00:09:13.153 --> 00:09:14.588 
該token只能使用一次

00:09:14.721 --> 00:09:16.323 
若需多次交易
同樣需請求相應數量token

00:09:16.990 --> 00:09:20.260 
無論你在應用或者
網頁上使用Apple Pay

00:09:20.327 --> 00:09:22.896 
t對商家來說token都是唯一的

00:09:23.030 --> 00:09:24.031 
token經過加密

00:09:24.431 --> 00:09:27.034 
即便token被盜取了

00:09:27.367 --> 00:09:31.071 
比如用戶處於
一個不安全的Wifi連接的時候

00:09:31.305 --> 00:09:34.174 
這個token仍然是安全的

00:09:34.274 --> 00:09:37.744 
因爲它使用了商戶的證書
以及商戶的標識符進行了加密的編碼

00:09:40.080 --> 00:09:41.481 
商戶的標識符

00:09:41.548 --> 00:09:44.518 
以及商戶的證書能夠代表你是一個商戶

00:09:45.385 --> 00:09:48.255 
它們比較像標準的反向域名解析

00:09:48.322 --> 00:09:51.124 
如果你是一個iOS開發者
你會非常熟悉這種格式

00:09:51.792 --> 00:09:54.294 
它們是通過我們的開發者中心生成的

00:09:55.028 --> 00:09:56.330 
並且是唯一的

00:09:56.430 --> 00:09:58.932 
因爲只有你能夠解碼這些tokens

00:10:00.334 --> 00:10:02.736 
只有你才能讀取
用戶Apple Pay的token

00:10:04.471 --> 00:10:08.575 
讓我們來看一下
在實際的應用中是什麼樣的工作流程

00:10:09.409 --> 00:10:10.611  
在一個iOS的應用中

00:10:11.545 --> 00:10:13.847  
當Apple Pay按鈕點擊後
就開始了用Apple Pay的支付

00:10:15.816 --> 00:10:18.018  
當點擊了Apple Pay按鈕之後

00:10:19.086 --> 00:10:21.321  
iOS系統允許了這次支付

00:10:21.488 --> 00:10:23.490  
然後出現了Apple Pay
表單頁面

00:10:24.491 --> 00:10:27.060  
然後用戶使用
Touch ID或者密碼

00:10:27.561 --> 00:10:31.331  
這樣支付信息會通過手機的
安全信息單元芯片產生

00:10:31.465 --> 00:10:34.001  
這些芯片專門爲
Apple Pay打造

00:10:34.101 --> 00:10:35.636  
能夠安全持有你的銀行卡信息

00:10:37.070 --> 00:10:40.607  
然後你的手機會做什麼呢

00:10:41.175 --> 00:10:44.378  
它會把數據發送給蘋果的服務器

00:10:44.478 --> 00:10:45.779  
服務端重新包裝這些數據
該處理過程爲Rewrap

00:10:46.046 --> 00:10:49.049  
也就到時候對於商戶來說
這些數據是再次加密過的

00:10:49.616 --> 00:10:51.051  
該處理過程不會顯示在手機

00:10:52.319 --> 00:10:56.156  
當應用獲取再次加密的支付數據的時候
它同時可以進行一個回調操作

00:10:56.256 --> 00:10:59.826  
然後你就可以連接商戶的服務器

00:11:00.627 --> 00:11:04.198  
或者網銀支付的服務器

00:11:04.598 --> 00:11:07.000  
只要交易完成了 表單就會關閉

00:11:09.570 --> 00:11:11.538  
在網頁上使用
Apple Pay與此非常類似

00:11:11.872 --> 00:11:13.407  
稍有幾處不同

00:11:13.473 --> 00:11:16.410  
發生在與驗證商戶有關的地方

00:11:16.510 --> 00:11:18.478  
因爲在iOS中應用都是
從App Store上獲取的

00:11:18.579 --> 00:11:19.913  
它們是已簽名二進制文件

00:11:20.380 --> 00:11:23.617  
在我們繼續討論這些之前
先讓我們來看一下

00:11:23.750 --> 00:11:24.751  
Apple Pay的一些要求

00:11:25.953 --> 00:11:29.690 
任何網站都可使用Apple Pay

00:11:30.524 --> 00:11:33.093 
前提是需要擁有一個蘋果開發者帳號

00:11:34.561 --> 00:11:37.364 
並且站點需要支持HTTPS

00:11:39.499 --> 00:11:42.836 
最後 站點需要遵守
Apple Pay的指導方針

00:11:43.003 --> 00:11:44.705 
這些指導方針都非常的明確

00:11:44.838 --> 00:11:46.874 
大多數的網銀平臺都有着相關的條款

00:11:47.007 --> 00:11:49.142 
關於那些商品可進行出售
那些商品禁止出售

00:11:51.678 --> 00:11:55.282 
現在已經有一些電子商務平臺

00:11:55.449 --> 00:11:56.450 
已支持Apple Pay

00:11:57.751 --> 00:12:00.120 
我們還將會談到
一些具體的電子商務平臺

00:12:00.821 --> 00:12:02.789 
的網銀支付處理

00:12:02.856 --> 00:12:04.791 
如果你已經加入了某個電子商務平臺

00:12:04.858 --> 00:12:06.360 
你就不需要一個開發者帳戶了

00:12:06.527 --> 00:12:07.995 
它可以幫你處理這些

00:12:10.130 --> 00:12:13.300 
假設你的站點符合所有的要求

00:12:14.368 --> 00:12:18.038 
那麼爲了使用Apple Pay
首先需要爲你的站點註冊

00:12:19.840 --> 00:12:21.742 
爲你的站點註冊是非常簡單的

00:12:21.808 --> 00:12:25.479 
你只需要在開發者中心
創建一個商戶標識符以及證書

00:12:27.214 --> 00:12:29.583 
然後註冊你的域名

00:12:29.883 --> 00:12:31.318 
並且讓它與商戶標識符對應

00:12:31.518 --> 00:12:33.554 
域名需要是全稱

00:12:33.620 --> 00:12:36.857 
比如store.apple.com

00:12:37.291 --> 00:12:39.493 
你想在哪站點支付
就需要填寫相應的域名

00:12:40.294 --> 00:12:43.397 
當你通過域名註冊之後
我們會前往該域名進行驗證

00:12:44.665 --> 00:12:46.700 
然後你會獲得一個證書

00:12:46.767 --> 00:12:48.969 
一個蘋果公司發行的TLS證書

00:12:49.036 --> 00:12:52.105 
我們稱之爲Session證書
我需要重新說一下

00:12:52.172 --> 00:12:55.542 
在註冊Apple Pay中
使用了三種信息

00:12:55.609 --> 00:12:58.679 
商戶表識符以及商戶證書

00:12:58.745 --> 00:13:00.347 
通過這兩項
證明我們商戶的身份

00:13:00.914 --> 00:13:03.016 
然後還有Apple Pay的
Session證書

00:13:03.083 --> 00:13:04.718 
代表了我們的域名

00:13:05.853 --> 00:13:08.522 
在開發者中心註冊Apple Pay
非常簡單和直接

00:13:08.589 --> 00:13:11.558 
應該現在就已經可以註冊了
就像這樣做

00:13:11.825 --> 00:13:12.960 
首先添加一個域名

00:13:13.393 --> 00:13:15.696 
然後我們會檢查這個域名上

00:13:15.762 --> 00:13:17.931 
是否有我們要求放置的文件

00:13:18.265 --> 00:13:19.099 
這樣就可以了

00:13:21.668 --> 00:13:24.338 
來看一下它爲什麼更適合使用

00:13:26.840 --> 00:13:28.876  
讓我們來看看在網頁上使用
Apple Pay的流程

00:13:29.109 --> 00:13:31.712  
就像在應用中
使用Apple Pay一樣

00:13:32.179 --> 00:13:36.316  
首先需要點擊進行
Apple Pay支付的按鈕

00:13:38.218 --> 00:13:39.820  
在網頁上有一個關鍵的地方不同

00:13:40.254 --> 00:13:42.256  
當你創建了一個支付請求的時候

00:13:42.689 --> 00:13:45.659  
也就是通知我們
你想對什麼收費

00:13:46.793 --> 00:13:48.695  
然後有一些額外的處理

00:13:48.762 --> 00:13:52.099  
需要進行一次驗證
你創建了一個商戶的session

00:13:53.033 --> 00:13:55.702  
然後從你的網頁服務器
發送到了Apple服務器

00:13:57.304 --> 00:13:59.840  
當Apple服務器有響應時

00:13:59.907 --> 00:14:01.275  
你再將這個支付請求
發送給Apple服務器

00:14:04.311 --> 00:14:05.512  
這就是唯一的區別了

00:14:05.579 --> 00:14:08.081  
這是與在應用中
進行Apple Pay相比

00:14:08.615 --> 00:14:10.317  
在網頁中進行Apple Pay
的唯一的區別了

00:14:10.617 --> 00:14:12.252  
商戶有效性驗證

00:14:13.887 --> 00:14:16.023 
讓我們看下商戶驗證的細節

00:14:16.123 --> 00:14:17.791 
讓我們來談下爲什麼我們要這麼做

00:14:21.929 --> 00:14:24.998 
我在一分鐘前提過

00:14:25.165 --> 00:14:27.568 
那就是網頁與應用之間有一些不同之處

00:14:28.202 --> 00:14:32.039 
在iOS應用中

00:14:32.105 --> 00:14:35.075 
類似Apple Pay或
位置安全性被簽署授權所保護着

00:14:35.209 --> 00:14:37.177 
如果你對此不是很熟悉

00:14:37.244 --> 00:14:40.380 
簽署授權就是 App Store中
你應用的二進制文件部分簽名信息

00:14:40.647 --> 00:14:44.184 
簽署授權同時保護着用戶和開發者

00:14:44.585 --> 00:14:46.854 
以及Apple Pay中的商戶

00:14:47.387 --> 00:14:49.456 
我們需要注意的是
在網頁上並不存在app store

00:14:49.523 --> 00:14:51.124 
所以我們並沒有這些簽署授權

00:14:51.225 --> 00:14:53.694 
我們使用了一個商戶驗證的處理
用替代簽署授權

00:14:54.661 --> 00:14:58.232 
它保護了用戶
也同時保護了像你一樣的商戶

00:14:58.332 --> 00:15:00.534 
舉例來說
如果你的網站被攻破了

00:15:00.601 --> 00:15:02.669 
你可方便停掉
該站點Apple Pay

00:15:03.937 --> 00:15:06.573 
商戶驗證非常的簡單和直接

00:15:06.640 --> 00:15:07.841 
它並不複雜

00:15:08.141 --> 00:15:10.711 
你拿到一個Apple Pay
服務器的URL

00:15:11.879 --> 00:15:13.947 
這個URL是Safari提供的

00:15:16.250 --> 00:15:18.285 
你讓你的網頁服務器使用這個URL

00:15:19.386 --> 00:15:21.488 
在請求商戶的session中會用到

00:15:22.689 --> 00:15:25.125 
現在開始請求商戶的session

00:15:25.425 --> 00:15:28.228  
你需簡單提供一TLS證書
這證書是我們之前爲網站域名得到的

00:15:28.362 --> 00:15:29.763  
這是個有挑戰的迴應

00:15:30.831 --> 00:15:33.166  
如果這個證書看上去很好
是有效的

00:15:33.300 --> 00:15:35.102  
並且它與這個域名匹配

00:15:35.502 --> 00:15:37.371  
就是你提交支付請求網站對應的域名

00:15:37.538 --> 00:15:38.739  
我們會收到一個session

00:15:41.942 --> 00:15:43.610  
這個session中的內容無法獲得

00:15:43.710 --> 00:15:45.479 
你們不需要關注它的內容

00:15:45.612 --> 00:15:47.648 
它是一個具有唯一性的token

00:15:47.714 --> 00:15:49.216 
代表了一次Apple Pay的請求

00:15:50.250 --> 00:15:52.452 
它被用來確認
你的網站依然是安全的

00:15:52.786 --> 00:15:56.156 
每一次的Apple Pay
你都需要請求一次session

00:15:56.390 --> 00:15:58.125 
但是這種請求的開銷比較少

00:15:58.292 --> 00:15:59.793 
且這過程不會佔用太多的時間

00:16:00.727 --> 00:16:02.763 
在你會通過你的網頁服務器來請求它

00:16:02.963 --> 00:16:05.098 
你並不是從你的用戶那裏來獲得它

00:16:07.534 --> 00:16:09.870 
對於商戶效驗
我有一些建議

00:16:10.404 --> 00:16:13.440 
首先 讓客戶端發出
獲得session的請求

00:16:13.507 --> 00:16:16.009 
因爲請求速度可能會有比較大的差別

00:16:16.076 --> 00:16:17.244 
取決於用戶所在的國家

00:16:17.377 --> 00:16:19.246 
Apple Pay有很多
服務器部署在世界各地

00:16:19.379 --> 00:16:21.548 
我們會使用

00:16:21.648 --> 00:16:23.217 
離用戶當前位置最近的服務器

00:16:23.483 --> 00:16:25.886 
對於有些人來說

00:16:25.953 --> 00:16:29.523 
需要預先知道這些服務器的IP地址

00:16:29.590 --> 00:16:30.991 
用來讓連接通過防火牆

00:16:31.058 --> 00:16:32.292 
我們會提供一份列表

00:16:32.459 --> 00:16:35.095 
放置在developmentalapple.com上
這樣你們就能看到了

00:16:36.530 --> 00:16:38.932 
你應該只請求一次session

00:16:38.999 --> 00:16:39.967 
當用戶點擊Apple Pay按鈕時

00:16:40.033 --> 00:16:42.169 
別在加載頁面時就請求
那樣是沒有必要的

00:16:42.236 --> 00:16:44.471 
只需在用戶點擊了相應按鈕後
纔去請求session

00:16:44.538 --> 00:16:47.875 
當請求session時
我們會展示Apple Pay表單

00:16:48.275 --> 00:16:50.577 
用戶會覺得這種情況是即時出現的

00:16:50.711 --> 00:16:52.479 
當他們點擊了
Apple Pay按鈕後

00:16:52.546 --> 00:16:55.048 
他們會看到這個表單
我們也會讓它處於加載狀態

00:16:55.182 --> 00:16:56.717 
直到效驗完成

00:16:57.184 --> 00:16:59.253 
在下個部分
你們會看這些如何工作

00:16:59.319 --> 00:17:00.621 
即在我們講述
JavaScript API時

00:17:02.089 --> 00:17:04.925 
最後一個建議 別在客戶端
生成一個商戶的session

00:17:05.592 --> 00:17:08.428 
這是因爲你需要
提供一個session證書

00:17:08.529 --> 00:17:10.430 
而這個證書與你的域名對應

00:17:10.497 --> 00:17:12.799 
你是不想把這證書
也嵌入到你的網頁頁面中的

00:17:12.900 --> 00:17:14.902 
將這個證書保密是很重要的

00:17:15.502 --> 00:17:18.105 
因此你會在網頁服務端來進行這種驗證

00:17:19.705 --> 00:17:21.375 
好吧 讓我們來概述一下

00:17:22.342 --> 00:17:23.410 
我們先需建立個網站

00:17:23.477 --> 00:17:26.813 
我們需要保證我們的網站
遵守Apple的要求

00:17:27.580 --> 00:17:30.484 
我們創建了虛擬的標識符
以及商戶證書

00:17:31.118 --> 00:17:32.586 
我們將它與我們的域名相對應

00:17:34.621 --> 00:17:36.356 
然後我們瞭解到瞭如何進行驗證

00:17:36.423 --> 00:17:40.027 
如何爲每一個Apple Pay
支付進行效驗

00:17:42.629 --> 00:17:45.165  
所以說這樣覆蓋了部分同樣的流程

00:17:46.834 --> 00:17:47.968  
這個部分是什麼？

00:17:49.069 --> 00:17:53.874  
就是我說過的與應用中
使用Apple Pay相一致的部分

00:17:54.875 --> 00:17:56.310  
但顯然它們是不同的API

00:17:56.376 --> 00:17:59.646  
因爲我們無法在服務端調用Swift

00:18:00.514 --> 00:18:01.882  
所以接下來我們會談論到

00:18:01.982 --> 00:18:05.152 
如何用JavaScript API
來支持這個新特性

00:18:05.485 --> 00:18:07.354 
下面請Anders來進行介紹

00:18:07.454 --> 00:18:09.523 
他是WebKit團隊中的一員

00:18:09.656 --> 00:18:10.657 
Anders

00:18:19.633 --> 00:18:20.667 
謝謝 Nick

00:18:21.668 --> 00:18:23.904 
今天在這裏
我非常的興奮

00:18:24.004 --> 00:18:28.008 
我會告訴大家使用Apple Pay
JavaScript API多簡單

00:18:31.745 --> 00:18:35.349 
Nick已提到過Apple Pay
JavaScript API

00:18:35.482 --> 00:18:39.586 
已可以在iOS 10的Safari中

00:18:39.720 --> 00:18:41.388 
和那些通過SafariView
Controller的應用中使用

00:18:42.623 --> 00:18:47.327 
現通過Mac OS Sierra系統
可讓你在Mac的safari中使用Apple Pay

00:18:48.028 --> 00:18:51.899 
同時需要使用Apple
Watch或者iPhone

00:18:51.999 --> 00:18:53.667 
來進行實際的授權

00:18:55.669 --> 00:18:57.671 
這些API非常的簡單

00:18:57.871 --> 00:19:00.908 
它有一個單一的入口
叫做ApplePaySession

00:19:01.408 --> 00:19:06.079 
它受到了PassKit API影響
只是將場景切換到了應用中使用Apple Pay下

00:19:06.580 --> 00:19:10.651 
如果你熟悉PassKit API
那麼你會發現兩者很類似

00:19:12.953 --> 00:19:16.857 
在我們進行深入的瞭解之前

00:19:16.924 --> 00:19:18.325 
我需要介紹一個朋友先

00:19:19.626 --> 00:19:23.430 
她經營了一個商店

00:19:24.064 --> 00:19:25.799 
售賣高端的衣服

00:19:27.134 --> 00:19:28.235 
這些衣服是給狗穿的

00:19:29.803 --> 00:19:33.240 
在幾個月之前
她運行了一個網站

00:19:33.307 --> 00:19:35.209 
在上面可以買衣服

00:19:35.275 --> 00:19:37.544 
你可以在網上進行支付

00:19:37.611 --> 00:19:39.179 
然後店家就會發貨了

00:19:40.280 --> 00:19:44.985 
但是不幸的是
現在這個生意有個困境

00:19:48.488 --> 00:19:51.258 
有很多人訪問這個網站

00:19:51.458 --> 00:19:54.461 
但是卻沒有多少訂單

00:19:54.895 --> 00:19:57.297 
讓我們來看下這個網站

00:19:57.431 --> 00:19:58.832 
找一下原因

00:20:02.002 --> 00:20:03.837 
這就是我們的網站了

00:20:04.137 --> 00:20:07.975 
比如我們想買一條可愛的圍巾

00:20:09.042 --> 00:20:13.447 
首先將它添加到購物車裏面

00:20:15.849 --> 00:20:17.251 
然後我需要去付款

00:20:19.152 --> 00:20:20.721 
這時候打開付款的頁面

00:20:20.854 --> 00:20:22.990 
輸入收貨地址

00:20:25.425 --> 00:20:27.294 
這時候到信用卡這一欄了

00:20:27.394 --> 00:20:30.297 
輸入信用卡號以及賬單地址

00:20:32.032 --> 00:20:37.137  
然後我就可以提交訂單
然後我的圍巾也就會被運送了

00:20:38.739 --> 00:20:41.808 
讓我們看一下應該如何使用
Apple Pay API

00:20:42.009 --> 00:20:44.978 
讓這個流程變得更加簡單合理

00:20:46.313 --> 00:20:50.217 
舉例來說
如果我們爲購物車增加一個

00:20:50.517 --> 00:20:54.555 
Apple Pay的按鈕

00:20:54.855 --> 00:20:58.559 
那樣在產品頁面就可以下單了

00:20:59.993 --> 00:21:03.564 
現在我們想增加這個按鈕

00:21:03.664 --> 00:21:06.033 
但僅限那些能夠使用
Apple Pay的用戶

00:21:07.367 --> 00:21:08.569 
爲了做成那樣

00:21:08.735 --> 00:21:12.406 
我們可以使用函數
ApplePaySession.canMakePayments

00:21:13.340 --> 00:21:15.342 
這是一個用起來非常簡便的函數

00:21:15.475 --> 00:21:17.244 
在代碼中
它看起來是這樣的

00:21:17.644 --> 00:21:20.948 
注意 我檢查了當前的
window.ApplePaySession

00:21:21.048 --> 00:21:25.052 
在使用之前
需要進行這樣的檢查

00:21:25.252 --> 00:21:29.857 
我不是檢查WebKit或者
Safari的版本

00:21:29.957 --> 00:21:32.492 
我是在檢查
window.ApplePaySession對象是否存在

00:21:33.327 --> 00:21:35.028 
如果它存在的話
我就會調用它

00:21:35.195 --> 00:21:38.232 
它會返回一個Boolean
然後我會檢查這個值

00:21:38.565 --> 00:21:42.536 
如果返回true
我就調用showApplePayButtons

00:21:43.203 --> 00:21:44.404 
這樣顯示出相應的按鈕

00:21:46.306 --> 00:21:47.674 
值得注意的是

00:21:47.741 --> 00:21:51.011 
window.ApplePaySession
只會告訴你

00:21:51.078 --> 00:21:52.513 
這設備是否支持Apple Pay

00:21:52.946 --> 00:21:55.849 
如果你使用的
是iPhone或者iPad

00:21:55.983 --> 00:21:58.252 
它會返回是否存在一個安全部件的結果

00:21:58.685 --> 00:22:00.187 
如果你在Mac上使用

00:22:00.320 --> 00:22:03.590 
它會告訴你

00:22:03.857 --> 00:22:05.392 
是否存在一個iPhone或者
Apple Watch能爲這次交易授權

00:22:06.426 --> 00:22:09.663 
它不會告訴你用戶是否已經
爲Apple Pay添加過銀行卡

00:22:10.364 --> 00:22:13.767 
如果需要檢查這一點的話

00:22:13.867 --> 00:22:15.135 
我們可以使用

00:22:15.202 --> 00:22:17.571 
ApplePaySession.canMakePayments
WithActiveCard

00:22:18.739 --> 00:22:22.476 
你需要傳遞你的商戶標識符給這個函數

00:22:23.010 --> 00:22:27.648 
然後它會向Apple Pay
服務器驗證

00:22:27.748 --> 00:22:29.983 
這個商戶標識符是否正確

00:22:30.450 --> 00:22:33.687 
這個函數自身的屬性會關聯這個域名

00:22:33.854 --> 00:22:35.255 
因爲你從這個域名發送請求

00:22:36.423 --> 00:22:40.594 
鑑於此 它是異步執行的並且返回一個
JavaScript promise

00:22:41.528 --> 00:22:44.364 
如你不知道一個JavaScript
promise是什麼

00:22:44.531 --> 00:22:47.167 
你可以把它當成一個功能更強的

00:22:47.267 --> 00:22:49.837 
回調處理程序

00:22:52.639 --> 00:22:56.109 
你使用這個函數的時候還有一些限制

00:22:56.210 --> 00:23:00.280 
你只能在一些情況下才能使用
如支付流程默認用Apple Pay

00:23:00.848 --> 00:23:04.318 
或者你想在產品頁面上
就添加一個產品頁面按鈕

00:23:04.518 --> 00:23:07.221 
在我們的情況中
我們想添加一Apple Pay按鈕

00:23:07.321 --> 00:23:10.057 
放在我們的產品頁面上
所以我們可以使用這個函數

00:23:10.290 --> 00:23:13.794 
另外我們可能會使用
ApplePaySession.canMakePayments

00:23:15.629 --> 00:23:17.598 
我們在這裏使用了這個函數

00:23:18.098 --> 00:23:21.768 
我又一次的檢查了Apple Pay session
對象是否存在

00:23:22.603 --> 00:23:25.539 
然後調用canMakePayments
WithActiveCard

00:23:25.772 --> 00:23:27.708 
我輸入了我的商戶標識符

00:23:28.175 --> 00:23:34.214 
然後我使用了這個promise
當promise成功後就會執行相應的功能

00:23:34.381 --> 00:23:37.217 
在這個例子中promise成功後
會得到一個BOOL值

00:23:37.551 --> 00:23:40.754 
我在promise中的代碼就會執行

00:23:40.821 --> 00:23:44.625 
如果canMakePayments返回true
那麼就會展示ApplePay按鈕

00:23:47.094 --> 00:23:51.198 
現在我們就能看到每一個產品下面
都有一個優美的按鈕了

00:23:51.532 --> 00:23:54.268 
下一步就是彈出支付表單

00:23:54.501 --> 00:23:56.303 
當用戶點擊了這些按鈕的時候

00:23:57.971 --> 00:23:59.506 
爲了做成這樣

00:23:59.573 --> 00:24:02.843 
我們需要創建一個新的ApplePaySession
JavaScript對象

00:24:03.810 --> 00:24:07.214 
ApplePaySession
構造器有兩個參數

00:24:07.614 --> 00:24:10.284 
一個是API版本號

00:24:10.918 --> 00:24:12.319 
還有一個是我們自定義的

00:24:12.452 --> 00:24:15.255 
從而讓我們可以擴展
ApplePaySession API

00:24:15.522 --> 00:24:19.359 
這樣可以向下兼容而不影響當前的用戶

00:24:21.128 --> 00:24:25.866 
這當前的API的版本號是1
所以就一直保持1

00:24:27.868 --> 00:24:31.371 
將支付請求當成
第二個參數傳入這個請求

00:24:31.738 --> 00:24:35.943 
如果你較熟悉PassKit API

00:24:36.009 --> 00:24:37.644 
你會發現這個JavaScript和
PKPaymentRequest一樣

00:24:38.412 --> 00:24:41.281 
它會拿到所有必要的信息

00:24:41.348 --> 00:24:44.885 
來在表單中展示
比如貨幣類型 國家

00:24:44.952 --> 00:24:48.455 
如何支付以及總金額

00:24:49.690 --> 00:24:53.894 
還有一些可選項
比如收貨地址

00:24:53.961 --> 00:24:55.395 
可能會被要求

00:24:56.430 --> 00:24:59.366 
然後你就獲得了新的
ApplePaySession對象

00:24:59.499 --> 00:25:02.336 
你只需調用Begin命令
然後展示表單

00:25:04.438 --> 00:25:06.440 
就像這樣的JavaScript代碼

00:25:06.874 --> 00:25:10.010 
首先我們聲明一個
paymentRequest對象

00:25:10.644 --> 00:25:13.780 
然後指明瞭貨幣碼和國家碼

00:25:14.781 --> 00:25:21.288 
這裏我指明瞭總金額和支持的卡片種類

00:25:21.421 --> 00:25:23.490 
還有商戶的經營範圍

00:25:23.991 --> 00:25:28.829 
最後我指明瞭需要一個完整的郵編

00:25:28.962 --> 00:25:30.764  
處於發貨的考慮

00:25:32.432 --> 00:25:35.002  
就我創建了
新的ApplePaySession

00:25:35.169 --> 00:25:37.404  
我傳入了商戶號的參數
這裏是1

00:25:37.604 --> 00:25:39.173  
還有支付請求

00:25:39.540 --> 00:25:42.442  
在得到返回結果之後
我仍然會再次調用sessions

00:25:45.445 --> 00:25:49.650 
現在使用任何支付的API

00:25:49.783 --> 00:25:51.952 
我們都去要確保所有的細節是正確的

00:25:52.286 --> 00:25:54.588 
正因爲如此

00:25:57.090 --> 00:26:01.862 
在我們展示表單之前
我們需要進行一系列的驗證

00:26:02.663 --> 00:26:05.265 
如果任何一步出現錯誤

00:26:05.999 --> 00:26:09.336 
我們會停止 然後拋出一個
JavaScript的異常

00:26:10.838 --> 00:26:13.707 
正由於此 創建一個
Apple Pay session

00:26:13.774 --> 00:26:15.542 
可能會拋出一個
JavaScript異常

00:26:15.976 --> 00:26:19.012 
舉例來說
如果你在一個不安全的頁面進行調用

00:26:19.446 --> 00:26:22.783 
比如這個頁面不是基於HTTPS的

00:26:22.850 --> 00:26:25.886 
沒有使用最好的編碼協議

00:26:26.987 --> 00:26:30.791 
實際上每個Apple Pay
session API

00:26:30.858 --> 00:26:33.327 
都會拋出異常

00:26:33.393 --> 00:26:35.028 
如在一個不安全頁面上進行調用

00:26:37.364 --> 00:26:40.100 
創建Apple Pay
session也會發生異常

00:26:40.167 --> 00:26:42.669 
在你沒有傳入一個有效的
支付請求的時候

00:26:43.103 --> 00:26:46.840 
舉例來說
你沒有指定一個支持的網絡列表

00:26:47.207 --> 00:26:51.345 
或者總金額是負的

00:26:51.678 --> 00:26:56.250 
或者輸入了什麼錯誤的數據
我們無法識別

00:26:56.583 --> 00:26:58.051 
這樣都會拋出異常

00:27:00.420 --> 00:27:05.025 
此外 調用Begin也可能拋出異常

00:27:05.092 --> 00:27:09.363 
若你不是在一個點擊事件處理中調用它
舉例來說

00:27:09.863 --> 00:27:12.199 
我們不會允許展示表單

00:27:12.566 --> 00:27:15.169 
除非用戶明確的

00:27:15.235 --> 00:27:17.804 
點擊了按鈕

00:27:19.339 --> 00:27:23.143 
如果已經存在了表單了
然後我們又試圖去調用Begin

00:27:23.243 --> 00:27:25.012 
我們也會獲得
JavaScript異常

00:27:25.612 --> 00:27:28.348 
因爲我們只允許
同時只能出現一個表單

00:27:29.583 --> 00:27:33.153 
如果你看到了這些錯誤的話

00:27:33.587 --> 00:27:37.357 
你可以使用網頁檢查器的錯誤控制檯

00:27:37.758 --> 00:27:40.694 
來查看錯誤原因的細節

00:27:42.529 --> 00:27:47.634 
如果一切都正常

00:27:49.369 --> 00:27:50.504 
並且所有步驟也正確

00:27:50.737 --> 00:27:52.439 
那麼就會顯示這個表單

00:27:54.575 --> 00:27:57.878 
但是需要注意
你現在還沒有完成支付

00:27:58.011 --> 00:28:00.380 
我們看到這裏還在加載

00:28:00.814 --> 00:28:03.917 
因爲還沒有完成商戶的效驗

00:28:04.017 --> 00:28:05.419 
Nick之前提到過這一點

00:28:06.520 --> 00:28:09.790 
所以在表單出現後

00:28:10.324 --> 00:28:12.826 
我們會立即發送
一個驗證商戶的DOM事件

00:28:12.926 --> 00:28:14.661 
向ApplePaySession
對象發送

00:28:15.863 --> 00:28:18.832 
這個DOM事件有一個屬性
validationURL

00:28:19.199 --> 00:28:22.369 
你需要讓你的服務器
能夠訪問這個URL

00:28:22.469 --> 00:28:25.939 
然後加載它來獲得商戶session

00:28:27.307 --> 00:28:29.843 
然後當你的服務器獲得
merchantsession對象後

00:28:29.977 --> 00:28:34.014 
你需要調用
completeMerchantValidation

00:28:34.248 --> 00:28:36.550 
來通過這次驗證
然後就可以繼續了

00:28:37.584 --> 00:28:40.587 
一次商戶驗證事件處理就像這樣

00:28:42.322 --> 00:28:44.825 
這裏我調用了這個
performValidation方法

00:28:44.925 --> 00:28:45.959 
它是我自己定義的

00:28:46.093 --> 00:28:49.263 
它返回一個promise
這個promise

00:28:49.396 --> 00:28:51.098 
來獲得商戶的session

00:28:51.732 --> 00:28:53.300 
所以當promise成功後

00:28:53.567 --> 00:28:55.936 
我會調用
completeMerchantValidation

00:28:56.136 --> 00:28:57.804 
傳入了商戶session的參數

00:28:57.938 --> 00:28:59.840 
這就是你在商戶驗證中所做的

00:29:01.742 --> 00:29:04.578 
現在 我們的商戶驗證就完成了

00:29:04.778 --> 00:29:07.614 
用戶可以用手機或者
Apple Watch

00:29:07.714 --> 00:29:09.082 
對這次支付授權

00:29:09.316 --> 00:29:12.352 
當這次支付獲得授權之後

00:29:12.452 --> 00:29:16.957 
我們會向Apple Pay session對象
發送一個支付授權通過的DOM事件

00:29:18.425 --> 00:29:20.894 
這個DOM事件包含了一個支付屬性

00:29:21.228 --> 00:29:24.398 
這個屬性含有所有必需的支付信息

00:29:24.898 --> 00:29:27.734 
它有着諸東西如收貨地址

00:29:28.168 --> 00:29:32.673 
以及其他一些在這次支付會用到的信息

00:29:33.207 --> 00:29:36.343 
然後它還有加密過的支付token

00:29:36.577 --> 00:29:38.745 
網銀平臺會用到這個token

00:29:39.880 --> 00:29:44.618 
一旦你向網銀平臺發送了token
意味着這次支付就已經處理完畢了

00:29:45.385 --> 00:29:48.155 
獲得網銀平臺的反饋數據後調用
completePayment方法

00:29:48.288 --> 00:29:51.892 
這個方法同時會讓表單在界面上消失
就像這樣

00:29:53.260 --> 00:29:56.029 
這裏我們就會有一個授權後的事情處理

00:29:56.997 --> 00:29:58.498 
我調用
sendPaymentToken

00:29:58.599 --> 00:30:00.033 
我將token傳入了

00:30:00.467 --> 00:30:04.304 
這樣就會返回一個promise

00:30:04.771 --> 00:30:08.809 
會通過一個BOOL值來代表

00:30:08.876 --> 00:30:10.711 
你的支付成功還是失敗

00:30:11.178 --> 00:30:13.614 
如果成功的話

00:30:13.714 --> 00:30:16.250 
我會將狀態設置爲
ApplePaySession.STATUS_SUCCESS

00:30:17.150 --> 00:30:20.320 
如果失敗了
假定這個支付沒有完成

00:30:20.521 --> 00:30:23.724 
那麼將狀態設置爲
ApplePaySession.STATUS_FAILURE

00:30:24.958 --> 00:30:26.827 
 然後我會調用
completePayment

00:30:26.994 --> 00:30:30.163 
我傳遞了status參數
它會關閉sheet

00:30:30.631 --> 00:30:32.599 
然後我再調用
showConfirmation

00:30:32.666 --> 00:30:35.669 
這樣會彈出一個美觀的訂單確認的頁面

00:30:36.303 --> 00:30:40.274 
調用completePayment
傳入成功的狀態碼

00:30:40.641 --> 00:30:43.310 
你會看一個好看的確認的標記
並且表單會從界面上消失

00:30:44.878 --> 00:30:48.148 
好了 現在讓我們來看一下演示

00:30:48.515 --> 00:30:50.517 
來看一下如何辦到這些

00:30:56.924 --> 00:30:57.991 
我們開始了

00:30:59.359 --> 00:31:02.729 
首先 我們進入了這個網站

00:31:04.431 --> 00:31:07.568 
同時讓我們看一下源代碼

00:31:09.536 --> 00:31:13.040 
在我們加入JavaScript之前
關注一下這些

00:31:13.173 --> 00:31:16.577 
這裏我加了兩個觸摸用的圖標

00:31:17.110 --> 00:31:20.547 
舉例來說在Safari
Favorites視圖中會用到

00:31:20.614 --> 00:31:24.952 
它們也可以在Apple Pay
授權的表單中使用

00:31:25.018 --> 00:31:26.320 
我們稍後會看到

00:31:27.487 --> 00:31:30.157 
這裏我列舉了所有的產品

00:31:30.290 --> 00:31:33.560 
之前我們已經爲它們
增加了Apple Pay按鈕

00:31:33.894 --> 00:31:36.830 
我也可以通過CSS來讓它們是否顯示

00:31:37.297 --> 00:31:38.665 
讓我們來看一下

00:31:40.667 --> 00:31:41.668 
這是我的CSS文件

00:31:41.735 --> 00:31:44.004 
這裏是關於Apple Pay
按鈕的聲明

00:31:44.338 --> 00:31:47.407 
這裏我設置讓它們不顯示

00:31:47.674 --> 00:31:49.977 
對於它的圖片

00:31:50.077 --> 00:31:53.680 
我使用了WebKit-named-image特效

00:31:53.780 --> 00:31:56.183 
這樣我們可以使用系統自帶的
Apple Pay的Logo

00:31:56.316 --> 00:31:58.452 
你並不需在你的服務器上放置這張圖片

00:31:59.686 --> 00:32:03.690 
好了 現在我們需要增加一些代碼

00:32:03.790 --> 00:32:07.694 
讓設備支持Apple Pay情況下
顯示Apple Pay按鈕

00:32:09.096 --> 00:32:11.632 
這裏我已經寫過一些同樣的代碼了

00:32:11.698 --> 00:32:15.369 
我爲DOMContentLoaded事件
創建了一個EventListener

00:32:15.636 --> 00:32:16.803 
這個事件會被執行

00:32:16.904 --> 00:32:19.039 
當主頁被加載的時候

00:32:19.439 --> 00:32:22.943 
但是在任何圖片加載之前

00:32:23.010 --> 00:32:24.645 
所以這個地方適合放置這些代碼

00:32:24.778 --> 00:32:27.214 
讓我們來添加一些代碼來完成這個功能

00:32:27.848 --> 00:32:31.485 
我們又檢查了ApplePaySession是否存在

00:32:31.652 --> 00:32:34.054 
然後我調用了
canMakePaymentsWithActiveCard

00:32:34.454 --> 00:32:37.925 
並且在我的promise函數中
我檢查了返回的值

00:32:38.025 --> 00:32:40.527 
若返回true
調用showApplePayButton

00:32:40.961 --> 00:32:44.765 
現在讓我們保存後再回到這裏
然後我們開始加載

00:32:44.865 --> 00:32:46.867 
現在我們就獲得了
Apple Pay按鈕

00:32:48.135 --> 00:32:52.639 
下一個步驟是
點擊按鈕的時候 彈出sheet

00:32:52.706 --> 00:32:55.776 
我已經寫了一個applePayButtonClicked函數

00:32:56.176 --> 00:32:59.880 
在用戶點擊按鈕的時候會執行

00:33:00.514 --> 00:33:04.718 
所以我們想在這裏讓用戶點擊按鈕之後
就顯示錶單

00:33:05.352 --> 00:33:08.589 
所以我又聲明瞭
paymentRequest對象

00:33:08.922 --> 00:33:12.025 
這裏的金額 我直接硬編碼了
這畢竟只是個demo

00:33:12.159 --> 00:33:15.629 
但是在實際的場景中
這個數據應該從別的地方獲取

00:33:16.330 --> 00:33:19.099 
我創建了一個新的
ApplePaySession對象

00:33:19.233 --> 00:33:20.367 
然後調用Begin

00:33:20.567 --> 00:33:24.538 
讓我們保存後重新加載
並且展示出表單

00:33:28.175 --> 00:33:31.211 
可以看到表單並沒有顯示

00:33:31.345 --> 00:33:35.048 
讓我們打開錯誤控制檯
來找一下原因

00:33:37.551 --> 00:33:38.485 
好了 控制檯指出

00:33:38.585 --> 00:33:41.555 
“supportednetwork”
並不是一個合法的屬性名稱

00:33:41.622 --> 00:33:44.358 
看起來這裏是
我拼錯了"supported"

00:33:44.691 --> 00:33:47.094 
所以讓我們回頭解決掉這個問題

00:33:49.897 --> 00:33:50.998 
然後重新加載

00:33:52.666 --> 00:33:54.301 
現在表單就可以展示出來了

00:33:54.568 --> 00:33:57.171 
但是我還不能確認這次支付

00:33:57.337 --> 00:33:59.573 
因爲還沒有進行商戶的驗證

00:33:59.840 --> 00:34:01.308 
所以讓我們來進行這個步驟

00:34:03.610 --> 00:34:06.547 
我想加入
validateMerchant事情處理

00:34:06.613 --> 00:34:09.550 
我會在這裏創建了
session後再加入

00:34:09.683 --> 00:34:11.351 
但是我們會先調用Begin

00:34:11.752 --> 00:34:14.154 
再一次的
調用performValidation

00:34:14.554 --> 00:34:18.091 
當這個promise獲得了
處理結果的時候

00:34:18.358 --> 00:34:21.828 
它會調用completeMerchantValidation
我會傳入商戶的session

00:34:22.228 --> 00:34:28.068 
然後我就能夠確認支付了

00:34:28.668 --> 00:34:30.637 
現在我們還需要做最後一件事情

00:34:30.737 --> 00:34:33.206 
那就是添加我們的支付授權代碼

00:34:34.608 --> 00:34:40.647 
我們會向服務器發送支付token

00:34:40.880 --> 00:34:42.716 
並且完成這次支付

00:34:42.815 --> 00:34:45.752 
如果我們成功了
我會將狀態設爲SUCCESS

00:34:46.186 --> 00:34:47.788 
否則我將它設爲FAILURE

00:34:48.121 --> 00:34:51.257 
回調completePayment
及showConfirmation

00:34:51.658 --> 00:34:56.563 
現在我想使用QuickTime

00:34:56.663 --> 00:35:00.434 
讓我們來看一下
在真實手機上的表現效果

00:35:00.968 --> 00:35:03.937 
讓我們重新加載
我點擊了支付按鈕

00:35:05.038 --> 00:35:06.306 
現在我就可以確認了

00:35:06.406 --> 00:35:09.510 
就像你們看到的那樣
我還能看到這個網站的圖標

00:35:09.610 --> 00:35:12.179 
那是因爲我添加了鏈接圖標的屬性

00:35:12.579 --> 00:35:16.116 
現在我們可以進行支付了
然後完成支付

00:35:16.550 --> 00:35:18.485 
商家會安排發貨了

00:35:28.328 --> 00:35:32.099 
所以爲網頁添加Apple Pay
是非常簡單的

00:35:32.633 --> 00:35:35.836 
我相信如果那樣做的話

00:35:36.303 --> 00:35:39.373 
Canine服飾會在狗狗中流行

00:35:40.474 --> 00:35:41.775 
該讓Nick回到臺上了

00:35:47.147 --> 00:35:50.017 
大家都知道Anders
他是WebKit團隊中的那位

00:35:50.083 --> 00:35:53.453 
跟狗天天在一起
並且應該被丟進狗屋的人

00:35:54.087 --> 00:35:55.155 
好了 讓我們繼續

00:35:55.689 --> 00:35:56.990 
給我一根骨頭吧

00:35:59.226 --> 00:36:00.894 
我去當軟件工程師太浪費了

00:36:00.961 --> 00:36:01.929 
好了

00:36:01.995 --> 00:36:08.435 
我們已經看到了如何在網頁中
支持Apple Pay

00:36:08.569 --> 00:36:11.605 
讓我們來討論一些可能對你們來說
是比較重要的事情

00:36:11.705 --> 00:36:13.240 
那就是你們如何獲得付款

00:36:13.307 --> 00:36:15.375 
從Apple Pay中獲得付款

00:36:16.777 --> 00:36:21.882 
Anders講述了
獲得支付數據的過程

00:36:23.283 --> 00:36:24.518  
後面會發生什麼

00:36:25.652 --> 00:36:29.323  
因爲擁有一個支付token
你現在有兩個選擇

00:36:31.024 --> 00:36:34.895 
第一個是自己對這個
token進行解碼

00:36:35.128 --> 00:36:36.797 
通過你自己的服務器

00:36:38.131 --> 00:36:40.601 
這是較好的選擇
對你已使用了Apple Pay

00:36:40.701 --> 00:36:42.836 
或者你有一個非常大型的電子商務後臺

00:36:42.903 --> 00:36:45.072 
你會熟悉其中加密算法

00:36:45.138 --> 00:36:47.007 
在我們的開發者網站上有相關的文檔

00:36:47.474 --> 00:36:49.877 
另外一個選擇是

00:36:49.977 --> 00:36:52.379 
將這些加密的支付數據

00:36:52.579 --> 00:36:56.383 
發送到網銀平臺
然後它們會幫你解碼這些支付數據

00:36:56.483 --> 00:36:58.952 
前提是你將密匙提供給了它們

00:37:00.554 --> 00:37:01.922 
這是一個比較方便的選擇

00:37:02.022 --> 00:37:06.326 
非常多的網銀平臺
提供了應用內的SDK

00:37:06.527 --> 00:37:08.629 
我們非常相信這些平臺

00:37:08.729 --> 00:37:12.065 
也會提供類似的基於
JavaScript的SDK

00:37:12.132 --> 00:37:14.635 
讓你們可以直接集成到網站中

00:37:15.903 --> 00:37:17.771 
實際上在歐美

00:37:18.038 --> 00:37:21.875 
現在超過40家網銀平臺
支持Apple Pay

00:37:21.942 --> 00:37:23.877 
名單太多了
所以就不一一列舉了

00:37:24.144 --> 00:37:26.914 
全部名單列表可在
developer.apple.com上找到

00:37:27.948 --> 00:37:30.984 
就像我說的那樣 許多網銀平臺
現在提供了應用內的SDK

00:37:31.051 --> 00:37:34.188 
將來它們也會提供網頁的SDK

00:37:36.356 --> 00:37:39.059 
這裏我想強調一下
一些新的網銀平臺

00:37:39.126 --> 00:37:41.762 
大家都知道
Apple Pay在中國可以使用了

00:37:41.828 --> 00:37:44.364 
這項功能在中國也同樣好用

00:37:44.431 --> 00:37:45.532 
像在歐洲或美國那樣

00:37:45.666 --> 00:37:49.436 
在中國有四家網銀平臺
支持Apple Pay

00:37:49.503 --> 00:37:53.774 
它們是中國銀聯  連連支付
首信易支付以及易寶支付

00:37:53.974 --> 00:37:56.243 
若你在亞洲轉發應用內
或者網頁的請求

00:37:56.310 --> 00:37:58.779 
你同樣能獲得良好的支持

00:38:00.380 --> 00:38:04.651 
就像我前面提到過的電子商務平臺

00:38:05.252 --> 00:38:08.021 
很多站點並沒有獨立的電子商務系統

00:38:08.088 --> 00:38:11.859 
它們使用着電子商務平臺提供的服務

00:38:12.259 --> 00:38:15.896 
我們現已與很多電子商務平臺進行合作

00:38:16.330 --> 00:38:18.365 
我們主要有三個電子平臺合作方

00:38:18.732 --> 00:38:22.269  
它們是Demandware IBM
以及Shopify

00:38:22.703 --> 00:38:24.905  
如果你沒有使用這三家中的一個

00:38:25.172 --> 00:38:27.741  
那麼你在使用Apple Pay時

00:38:27.808 --> 00:38:30.043  
在使用Apple Pay的時候

00:38:30.110 --> 00:38:31.578  
需要一個開發者賬號

00:38:32.246 --> 00:38:34.815  
使用這些平臺對你來說會更方便

00:38:34.882 --> 00:38:38.852  
它們會處理與Apple Pay
深度集成的事情

00:38:43.090 --> 00:38:45.893  
現在你可能會想去試一試了

00:38:45.959 --> 00:38:47.027  
我希望你們都那麼想

00:38:47.728 --> 00:38:50.197  
我想多談一些關於測試的事情

00:38:51.265 --> 00:38:53.734  
測試你的網站:

00:38:53.901 --> 00:38:55.636  
我們來介紹一個新的測試環境

00:38:55.702 --> 00:38:58.272  
它爲Apple Pay打造名叫
Apple Pay Sandbox

00:38:58.839 --> 00:39:00.340  
這是一種新的測試方式

00:39:00.607 --> 00:39:04.978  
在這個測試環境下
默認網頁就是支付Apple Pay

00:39:05.612 --> 00:39:07.281  
如果你想獲得更多信息的話

00:39:07.347 --> 00:39:09.249  
這個會議我們沒有時間
來談論這個問題

00:39:09.483 --> 00:39:11.852  
但是在下個會議我們會談到

00:39:11.952 --> 00:39:13.654  
我們會爲大家講述Sandbox

00:39:13.754 --> 00:39:16.390  
如果訪問我們的網站
developer.apple.com

00:39:16.623 --> 00:39:19.726  
那裏會有Apple Pay
Sandbox相關的更多的信息

00:39:19.793 --> 00:39:21.929  
作爲一個開始
你將會能夠

00:39:22.029 --> 00:39:23.397  
測試網頁上進行Apple Pay

00:39:23.497 --> 00:39:25.499  
然後我們就可以將Apple Pay
在生產環境上部署了

00:39:25.566 --> 00:39:29.636 
我們即將發佈iOS X
以及Mac OS Sierra

00:39:36.577 --> 00:39:39.580 
所以當你們開始測試
Apple Pay的時候

00:39:39.646 --> 00:39:43.383 
請給我們一些反饋來幫助我們解決錯誤

00:39:43.650 --> 00:39:46.720 
我們非常願意聽到你們反饋問題

00:39:46.787 --> 00:39:48.255 
及其它你們所見到的事情

00:39:48.355 --> 00:39:51.225 
如果你們願意表示祝賀之類的話
我們也非常願意聽到

00:39:52.626 --> 00:39:56.730 
好吧 讓我們看看最後一個部分

00:39:57.764 --> 00:39:59.333 
Apple Pay的設計

00:39:59.933 --> 00:40:03.537 
如何爲網站建立一個能收到歡迎的體驗

00:40:03.937 --> 00:40:06.707 
這方面也同樣的適用於應用

00:40:09.343 --> 00:40:12.012 
在最開始的部分
我提到了一點

00:40:12.613 --> 00:40:14.047 
那就是Apple Pay三個原則：

00:40:14.681 --> 00:40:18.452 
它們是簡單 安全 以及私密

00:40:20.187 --> 00:40:21.855 
你的設計需要能體現哪些

00:40:22.422 --> 00:40:23.557 
而不是設計的太複雜

00:40:23.690 --> 00:40:25.659 
Apple Pay不能設計得
使用起來太複雜

00:40:27.027 --> 00:40:29.563 
Apple Pay也有三個主要階段

00:40:29.997 --> 00:40:31.498 
它們是預支付階段

00:40:31.965 --> 00:40:34.568 
在這一階段
你還沒有看到Apple Pay表單

00:40:34.635 --> 00:40:38.071 
這種體驗發生在
Apple Pay表單出現之前

00:40:39.206 --> 00:40:42.176 
然後是支付過程
實際的支付使用

00:40:42.242 --> 00:40:44.912 
這時候表單已經出現了

00:40:45.112 --> 00:40:47.214 
你可以定製那個界面
你還需要做什麼呢

00:40:47.281 --> 00:40:48.115 
讓我們來看看

00:40:49.249 --> 00:40:50.817 
然後還有發送支付的過程

00:40:51.585 --> 00:40:54.555 
那是表單消失後的體驗

00:40:55.355 --> 00:40:57.591 
讓我們來完整的看一下這三種階段

00:40:57.658 --> 00:41:02.729 
然後討論一下你如何設計
Apple Pay的各個階段

00:41:05.132 --> 00:41:07.734 
預支付開始於用戶點擊了
Apple Pay按鈕

00:41:08.535 --> 00:41:10.871 
在Cocoa Touch中也有
同樣的Apple Pay按鈕

00:41:10.938 --> 00:41:13.340 
就像我剛纔展示的那樣

00:41:13.407 --> 00:41:16.910 
你也可在Cocoa
Touch中使用它

00:41:16.977 --> 00:41:19.079 
這種按鈕有很多種風格

00:41:19.580 --> 00:41:20.948 
這裏有很多種

00:41:21.348 --> 00:41:24.818 
Anders展示了使用CSS來改變
但是需要重申的是

00:41:25.953 --> 00:41:29.256 
我們提供了WebKit-image-named的屬性
你們可以使用它

00:41:29.623 --> 00:41:31.024 
你可以獲得一個Apple Pay的logo

00:41:31.892 --> 00:41:33.894 
就可在網頁的按鈕上使用了logo了

00:41:35.696 --> 00:41:37.664 
有些可以改
而有些不能改

00:41:37.731 --> 00:41:39.132 
使用Apple Pay時

00:41:40.300 --> 00:41:41.969 
使用內建的資源

00:41:43.337 --> 00:41:45.205 
即使我們修改了logo
你們也沒必要知道

00:41:45.272 --> 00:41:47.040 
你可能想確保你logo是最新的

00:41:47.541 --> 00:41:50.544 
並且放置到任何用戶想進行購買的地方

00:41:50.844 --> 00:41:51.912 
不用隱藏它

00:41:51.979 --> 00:41:54.248 
不要讓用戶對支付感到困難

00:41:54.381 --> 00:41:56.416 
但是支付操作卻很簡便

00:41:57.484 --> 00:41:58.852 
還有一些最好不要做的建議

00:41:59.453 --> 00:42:03.590 
不要修改按鈕的外觀或者它的行爲

00:42:04.157 --> 00:42:06.527 
對於用戶來說

00:42:06.593 --> 00:42:08.762 
他們點擊了Apple Pay按鈕
就讓他們看到Apple Pay表單

00:42:08.829 --> 00:42:10.664 
我們希望有這樣的體驗

00:42:11.198 --> 00:42:12.966 
同樣不要讓這個按鈕無效

00:42:13.033 --> 00:42:17.404 
蘋果的標準規定
你不能讓這個無效

00:42:17.504 --> 00:42:20.707 
你必須於其它的支付方式同等的對待它

00:42:23.343 --> 00:42:25.445 
讓我們討論一下什麼地方
可以放置這個按鈕

00:42:26.613 --> 00:42:28.549 
 Anders的演示已向你們展示了

00:42:28.649 --> 00:42:31.685 
再開始支付流程之前就放置好這個按鈕

00:42:32.786 --> 00:42:35.656 
在產品的界面放置這個按鈕
可以增加用戶的支付轉化率

00:42:35.722 --> 00:42:38.625 
我們從應用中看到了支持Apple
Pay後會帶來良好的數據

00:42:38.725 --> 00:42:41.128 
表明了支付轉換率的上升

00:42:41.195 --> 00:42:44.097 
他們只是在產品的界面放置這個按鈕
就能產生這種結果

00:42:44.998 --> 00:42:48.702 
同樣明顯 你可將它放到常規的
支付流程以及購物車中

00:42:49.336 --> 00:42:50.537 
讓我們來看一些例子

00:42:50.704 --> 00:42:54.942 
我們將Apple Pay API
向一些網站開放了

00:42:55.008 --> 00:42:57.177 
並且要求它們遵守一些設計

00:42:57.711 --> 00:42:59.513 
和使用Apple Pay的經驗

00:43:00.547 --> 00:43:02.182 
其中一個是StubHub

00:43:03.450 --> 00:43:06.787 
現在StubHub決定
將Apple Pay按鈕

00:43:06.887 --> 00:43:08.121 
放置在訂單流程當中

00:43:08.255 --> 00:43:10.023 
你選擇你需要的門票

00:43:10.123 --> 00:43:11.859 
然後使用Apple Pay

00:43:12.893 --> 00:43:14.862 
你也可以將Apple Pay提前

00:43:14.928 --> 00:43:17.397 
你可在快速支付的時候
就使用Apple Pay

00:43:17.464 --> 00:43:19.333 
Warby Parker就這麼做

00:43:20.100 --> 00:43:22.069 
在你選擇了一個產品之後

00:43:22.603 --> 00:43:23.670 
你會看到兩個選項

00:43:23.737 --> 00:43:26.607 
W可以將它加入購物車
然後繼續選購

00:43:27.007 --> 00:43:29.676 
或者直接通過
Apple Pay來購買

00:43:31.879 --> 00:43:33.413 
最後你可將Apple Pay按鈕

00:43:33.480 --> 00:43:34.982 
直接放到產品的頁面

00:43:35.482 --> 00:43:37.451 
Lululemon是這麼做的

00:43:37.718 --> 00:43:40.587 
這裏在產品頁面就有一個按鈕

00:43:40.721 --> 00:43:42.689 
讓我們在iPad上看一下

00:43:43.590 --> 00:43:45.359 
你同樣能看到
添加商品到購物車

00:43:45.425 --> 00:43:48.829 
如果我想像平常那樣創建一個購物車
我可以做到

00:43:48.896 --> 00:43:51.064 
或者我可以直接購買它們

00:43:53.567 --> 00:43:56.870 
有一點在產品頁面得到了增強

00:43:57.004 --> 00:43:59.206 
那就是允許未註冊直接支付

00:43:59.773 --> 00:44:03.076 
要求註冊是一個非常主要的用戶門檻

00:44:03.143 --> 00:44:04.711 
我不知道你們如何看待

00:44:04.811 --> 00:44:07.614 
但是我不會去一個
我不知道的網站購買東西

00:44:07.681 --> 00:44:09.917 
前提是它要求我進行註冊

00:44:11.285 --> 00:44:14.021 
所以Apple Pay能幫助
減少抑制消費的情況

00:44:14.087 --> 00:44:17.024 
通過讓未註冊用戶的
支付流程變得非常簡單

00:44:18.158 --> 00:44:21.161 
同時 你可以選擇利用

00:44:21.228 --> 00:44:25.232 
Apple Pay表單中的信息
在用戶購買後爲他創建一個賬戶

00:44:25.866 --> 00:44:28.669 
我會來爲大家在支付後的部分
來展示這一點

00:44:30.871 --> 00:44:33.707 
讓我們來關注一下實際支付過程
Apple Pay表單

00:44:35.409 --> 00:44:38.712 
Apple Pay表單
爲商戶提供了靈活的支付流程

00:44:38.812 --> 00:44:40.414 
這是高度定製化的

00:44:40.681 --> 00:44:44.785 
但是它同樣爲用戶提供了
一種持續性的使用經驗

00:44:45.319 --> 00:44:48.222 
你可以決定顯示出哪些信息

00:44:48.288 --> 00:44:50.991 
但是用戶總是有着自己的期望

00:44:53.093 --> 00:44:54.761 
這裏是Apple Pay表單的例子

00:44:54.895 --> 00:44:56.830 
我使用的是Mac OS sheet

00:44:57.197 --> 00:45:00.334 
但是在iOS上 條目也是一樣的

00:45:00.467 --> 00:45:04.204 
若你在SafariiPhone
iPad的網頁上進行支付

00:45:05.272 --> 00:45:08.342 
第一個條目是選擇銀行卡

00:45:08.509 --> 00:45:11.111 
賬單地址也經常第一個被選

00:45:11.211 --> 00:45:12.946 
儘管賬單地址不是必需的

00:45:13.046 --> 00:45:14.615 
在處理支付流程的過程中

00:45:16.383 --> 00:45:17.918 
第二個條目是收貨地址

00:45:19.219 --> 00:45:21.688 
這個是你必須從用戶那裏獲得的信息

00:45:23.223 --> 00:45:27.661 
你可請求銀行卡信息 收貨地址
若有需要 你還可以請求聯繫地址

00:45:27.995 --> 00:45:31.598 
你可以指明收貨地址的方式

00:45:32.299 --> 00:45:33.600 
你可以改變那些術語

00:45:33.700 --> 00:45:37.304 
若你不想用“shipping”
你可用“delivery”或“pickup”

00:45:37.905 --> 00:45:41.074 
這對於拼車應用或者
外賣服務來說非常好

00:45:44.444 --> 00:45:46.914 
現在你可以列出快遞費用的列表了

00:45:47.314 --> 00:45:50.851 
你可以用列表來描述它們
我們馬上會講到這一點

00:45:52.619 --> 00:45:54.288 
但是當你收集了這些信息之後

00:45:54.421 --> 00:45:56.657 
請確保你有一個清晰的保密協議

00:45:56.823 --> 00:45:59.459 
如果你在應用中使用了
Apple Pay

00:45:59.526 --> 00:46:00.827 
當你將應用上傳App Store時
會被要求提供保密協議

00:46:00.928 --> 00:46:04.131 
現在你是在爲網頁做設計

00:46:04.231 --> 00:46:06.099 
很明顯沒那樣的方式來提供保密協議

00:46:06.200 --> 00:46:09.236 
所以我們要求你提供一個保密協議

00:46:09.303 --> 00:46:11.939 
放在你的網站上

00:46:12.005 --> 00:46:13.340 
且表明你如何使用這些信息

00:46:15.776 --> 00:46:17.644 
現在既然你們能使用寄送方式了

00:46:18.612 --> 00:46:20.380 
就是選擇郵寄之類的

00:46:21.481 --> 00:46:24.718 
就像選擇地址那樣
這也是可以定製的

00:46:25.652 --> 00:46:27.487 
用戶可以從一個列表中選擇

00:46:27.921 --> 00:46:30.724 
如果地址更新的話
這些方式也應該會更新

00:46:30.891 --> 00:46:33.794 
比如在你已經選擇了
送到紐約的快遞方式的時候

00:46:33.894 --> 00:46:35.262 
你可以很容易的想到這一點

00:46:36.496 --> 00:46:39.666 
這些方式也可以是免費的
如果你願意的話

00:46:40.200 --> 00:46:41.468 
就像收貨地址那樣

00:46:41.602 --> 00:46:44.037 
收貨人的姓名也可以按你的要求改變

00:46:47.541 --> 00:46:50.344 
儘管你會要求住址
郵件地址 手機號碼

00:46:50.477 --> 00:46:52.312 
在同一個屬性中

00:46:52.813 --> 00:46:54.615 
但是在表單中 它們是分開的

00:46:55.249 --> 00:46:56.783 
這裏是聯繫信息的條目

00:46:56.850 --> 00:46:59.520 
是用來填寫信息
而不是填寫郵政編碼之類的

00:46:59.820 --> 00:47:01.788 
我們現在支持收集手機號

00:47:02.089 --> 00:47:03.957 
我們也支持收集郵件地址

00:47:04.091 --> 00:47:06.126 
如果你沒有要求一個送貨地址

00:47:06.193 --> 00:47:08.529 
我們會允許你獲得用戶的名字

00:47:08.695 --> 00:47:12.266 
這對於拼車的應用或者網站會非常有用

00:47:12.366 --> 00:47:14.101 
及那些想獲得姓名的應用或者網站

00:47:14.168 --> 00:47:15.836 
但是卻不需要用戶的送貨地址

00:47:18.639 --> 00:47:21.975 
現在到了最重要的一個填寫區域
它就是摘要信息

00:47:22.709 --> 00:47:25.412 
用戶獲得的金額會高亮

00:47:25.512 --> 00:47:27.147 
抱歉 是用戶支付的金額

00:47:28.182 --> 00:47:30.017 
並且你可以使用這個摘要

00:47:30.250 --> 00:47:33.020 
來簡潔的表明支付的用途

00:47:33.320 --> 00:47:36.290 
比如小記 快遞費 折扣

00:47:36.790 --> 00:47:39.960 
這裏並不是一個條目列表

00:47:40.060 --> 00:47:41.862 
它並不是一個銷售賬單

00:47:42.963 --> 00:47:44.665 
所以你需要讓它很簡潔

00:47:45.766 --> 00:47:48.502 
當然也需要清晰明白的表明你的收費

00:47:49.236 --> 00:47:52.072 
確保顯示的總金額

00:47:52.139 --> 00:47:54.074 
與用戶即將要扣除的金額保持一致

00:47:55.175 --> 00:47:57.344 
那就是說 這些情況下

00:47:57.411 --> 00:47:59.980 
你並不需要知道付出多少錢

00:48:00.581 --> 00:48:02.349 
有時候你不知道最終會支付多少錢

00:48:02.716 --> 00:48:04.952 
比如酒店預訂會出現這種情況
它們是開放性的

00:48:05.185 --> 00:48:07.688 
租車或者的士服務也是如此

00:48:08.589 --> 00:48:10.824 
這時候你可以
使用pending的條目類型

00:48:10.891 --> 00:48:12.826 
在摘要信息中表明這一點

00:48:14.661 --> 00:48:16.763 
所以需要注意  保持透明的計費

00:48:17.297 --> 00:48:19.366 
爲何我一直提到“作清晰預估”

00:48:19.733 --> 00:48:22.603 
你可以在剛纔的演示中看到

00:48:22.669 --> 00:48:25.739 
在通過Apple Pay付款後
通常你會看到一個通知

00:48:25.873 --> 00:48:28.308 
這個通知來自銀行並且告知金額的變化

00:48:28.408 --> 00:48:29.843 
所以你想確保那個金額

00:48:29.910 --> 00:48:32.913 
與表單上顯示的相匹配

00:48:32.980 --> 00:48:34.348 
至少盡力讓兩者保持一致

00:48:34.414 --> 00:48:35.415 
你不需知道總費用時

00:48:37.251 --> 00:48:40.254 
摘要條目也支持免費或者折扣

00:48:40.921 --> 00:48:42.489 
條目上可以標記爲免費

00:48:42.956 --> 00:48:46.126 
摘要條目可以是負數
但是總金額不能爲負數

00:48:46.226 --> 00:48:48.662 
總金額必須是一個正數

00:48:48.729 --> 00:48:50.030 
但是在那之前

00:48:50.163 --> 00:48:52.799 
如果你想指出哪個地方有折扣
都是可以的

00:48:55.135 --> 00:48:58.672 
這裏是另外一個Mac OS表單

00:49:00.340 --> 00:49:03.043 
這裏是一個條目
告訴你在什麼設備上確認

00:49:04.278 --> 00:49:08.849 
這讓我想起了Anders討論
網站圖標的觀點

00:49:09.216 --> 00:49:13.020 
這是一個在iPhone的表單
而此時你在你的Mac上進行着支付

00:49:13.353 --> 00:49:15.222 
在這裏你不能定製任何東西

00:49:15.322 --> 00:49:17.424 
我們會告知你銀行卡
但是你無法改變

00:49:17.491 --> 00:49:18.825 
你需要在Mac上改變它

00:49:19.193 --> 00:49:20.594 
順便的說一下

00:49:20.661 --> 00:49:22.763 
若在Mac上改變任何選項
價格都會更新

00:49:22.896 --> 00:49:25.699 
如果你改變了郵寄方式而使得費用增加

00:49:25.799 --> 00:49:27.201 
我們會直接進行同步

00:49:28.569 --> 00:49:31.972 
但是網站的圖標是從你的網站上下載的

00:49:32.105 --> 00:49:34.408 
你可以通過很多種方式來指定

00:49:35.709 --> 00:49:39.980 
它使用了Apple Touch
的圖標

00:49:40.047 --> 00:49:44.518 
爲了使用Apple Pay
你需提供180和120像素大小

00:49:45.018 --> 00:49:49.089 
最簡單的方式是提供一個鏈接

00:49:49.756 --> 00:49:54.094 
但是你也可以設定是域名的根目錄

00:49:55.395 --> 00:49:57.164 
選擇適合你的方式吧

00:49:58.398 --> 00:50:00.467 
我還想談談一些別的事情

00:50:00.567 --> 00:50:02.002 
那就是關於標記語言

00:50:02.302 --> 00:50:05.072 
你們當中很多人應該使用過標記語言

00:50:05.138 --> 00:50:07.975 
用來在你們頁面上指明產品類型

00:50:08.075 --> 00:50:10.110 
那樣可以被搜索排名所統計

00:50:10.310 --> 00:50:13.013 
我們同樣的有一個產品類型排名

00:50:13.113 --> 00:50:14.882 
在iOS的Spotlight中

00:50:15.549 --> 00:50:17.518 
你也可指明你的站點
使用了Apple Pay

00:50:17.584 --> 00:50:19.386 
只要你使用了合適的標記語言

00:50:19.453 --> 00:50:22.923 
我們覺得那樣會更有利
比如說對於搜索引擎

00:50:22.990 --> 00:50:25.225 
及想知哪些地方
正用Apple Pay的人

00:50:25.292 --> 00:50:26.927 
若你想這樣做
也會對你更加有利

00:50:28.996 --> 00:50:32.699 
現在讓我們來看最後一個部分
確認支付

00:50:34.535 --> 00:50:37.237 
在你的確認信息中
你想反映出合適的狀態

00:50:37.304 --> 00:50:38.405 
放置到Apple Pay表單中

00:50:39.706 --> 00:50:43.110 
比如說 失敗的時候
就不要顯示一個成功的頁面了

00:50:43.177 --> 00:50:44.178 
那樣是非常愚蠢的

00:50:44.545 --> 00:50:47.881 
同時你可以利用
Apple Pay收集的信息

00:50:47.948 --> 00:50:50.384 
來爲用戶提供一個新的賬戶
我前面有提到過

00:50:50.450 --> 00:50:53.387 
我想展示Lululemon的例子

00:50:54.154 --> 00:50:55.189 
這裏就是例子了

00:50:55.255 --> 00:50:57.324 
當你已經做了一次支付後

00:50:57.624 --> 00:50:59.092 
你獲得了一個確認信息的頁面

00:50:59.259 --> 00:51:03.931 
然後你創建了一個賬戶

00:51:03.997 --> 00:51:05.699 
預置了從Apple Pay中
獲得的郵件信息

00:51:05.766 --> 00:51:08.235 
所以同樣的我也可以自己創建一個賬戶

00:51:08.302 --> 00:51:10.404 
我也可以將賬戶關聯起來

00:51:10.470 --> 00:51:11.672 
這樣做是非常容易的

00:51:13.874 --> 00:51:16.476 
好了 我們今天講了很多內容

00:51:17.544 --> 00:51:18.412 
我們主要覆蓋了哪些呢

00:51:19.346 --> 00:51:21.315 
我們講述了網頁上
Apply Pay的商戶驗證

00:51:21.381 --> 00:51:25.052 
我們學習了Apple Pay
在網頁和應用的不同之處

00:51:25.786 --> 00:51:30.157 
Anders爲我們講述了Apple Pay session
以及JavaScript API

00:51:31.592 --> 00:51:35.362 
然後我們還談到了設計者
如何利用Apple Pay優勢

00:51:36.296 --> 00:51:39.466 
我們現對網頁上使用Apple
Pay已經有了很多瞭解

00:51:39.867 --> 00:51:43.070 
你可以在這裏獲得
我們的開發頁面以及網站

00:51:43.670 --> 00:51:45.439 
以及相關的會議

00:51:46.039 --> 00:51:47.774 
首先 不用去其它地方

00:51:47.908 --> 00:51:49.476 
留在這裏
不要離開

00:51:49.543 --> 00:51:53.380 
我在三點鐘會回來講述Wallet
與Apple Pay中新的內容

00:51:53.447 --> 00:51:57.851 
我們會講述Sandbox
WatchKit以及擴展

00:51:57.918 --> 00:51:59.620 
以及其它一些新的事物

00:51:59.686 --> 00:52:03.123 
這些在Wallet and Apple Pay中
發生並且與銀行以及零售商有關

00:52:03.257 --> 00:52:06.260 
這裏還有一個會議
是針對網頁開發者的：

00:52:06.326 --> 00:52:08.595 
在你的應用中優化網頁內容

00:52:08.729 --> 00:52:10.230 
該會議將在週五4:00開始

00:52:10.831 --> 00:52:12.199 
我們已經講完了

00:52:12.266 --> 00:52:14.668 
歡迎各位前來

00:52:14.935 --> 00:52:17.137 
我已迫不及待想看到大家
支持網頁上使用Apple Pay了

00:52:17.204 --> 00:52:19.273 
謝謝
希望大家在 WWDC 度過好時光