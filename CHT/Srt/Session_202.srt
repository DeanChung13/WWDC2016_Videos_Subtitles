00:00:20.053 --> 00:00:20.888 
大家好

00:00:20.954 --> 00:00:24.057 
我是Conor Hughes
我是輔助團隊的一名工程師

00:00:24.124 --> 00:00:26.093 
歡迎大家來到
輔助功能中有什麼新內容

00:00:26.693 --> 00:00:29.029 
今天我們要了解
我們的操作系統中的

00:00:29.096 --> 00:00:32.266 
一些很酷的新的輔助功能
並瞭解你需要知道什麼

00:00:32.332 --> 00:00:34.768 
來確保
你的app可供所有人使用

00:00:35.169 --> 00:00:36.170 
那麼就讓我們開始吧

00:00:37.704 --> 00:00:40.541 
輔助功能是一個大詞
許多人對它並不熟悉

00:00:40.607 --> 00:00:41.475 
它是什麼意思？

00:00:41.875 --> 00:00:45.546 
對我們來說輔助功能意味着
使一個系統

00:00:45.913 --> 00:00:47.314 
可滿足每個人的獨特需求

00:00:48.015 --> 00:00:50.317 
這意味着兩點
適應人們的不同需求來進行設計

00:00:50.384 --> 00:00:54.054 
以及小心在意
你的基本設計以避免問題

00:00:54.721 --> 00:00:57.758 
這是 WWDC 風格
我們重點放在Apple平臺輔助功能

00:00:57.824 --> 00:01:01.595 
在此我們很關心
四個主要類別的能力：

00:01:01.929 --> 00:01:04.864 
運動 視覺 聽覺和學習

00:01:06.500 --> 00:01:08.602 
運動能力包括
諸如帕金森症

00:01:08.669 --> 00:01:11.305 
多發性硬化症
以及影響用力按壓屏幕

00:01:11.371 --> 00:01:14.641 
或
準確點擊目標之類的能力

00:01:16.009 --> 00:01:19.580 
視覺能力包括
失明和部分視力喪失

00:01:21.348 --> 00:01:23.717 
聽覺能力包括
各種程度的聽力喪失

00:01:24.885 --> 00:01:27.688 
而學習能力包括
誦讀困難症和自閉症之類的東西

00:01:28.488 --> 00:01:31.124 
我們的操作系統
可以在所有這些領域中

00:01:31.191 --> 00:01:32.359 
做很多事來提供該功能

00:01:32.693 --> 00:01:35.462 
但是應用
是我們的平臺體驗的一個核心部分

00:01:35.696 --> 00:01:38.365 
爲了讓我們的平臺成爲
真正的輔助環境

00:01:38.432 --> 00:01:41.201 
我們需要你確保你的
應用也是輔助性的

00:01:41.468 --> 00:01:44.872 
所以我們很高興你在這裏
來瞭解如何做到這一點

00:01:45.439 --> 00:01:47.207 
讓我們來看一下今天所要談的內容

00:01:47.508 --> 00:01:49.776 
首先我們在Mac OS
iOS watchOS和tvOS中

00:01:49.843 --> 00:01:53.146 
去了解一些新的輔助功能

00:01:53.380 --> 00:01:56.216 
這樣你就可以看到
軟件如何能爲有不同需求的人

00:01:56.283 --> 00:01:58.986 
提供能力
的一些具體的例子

00:01:59.219 --> 00:02:03.123 
然後我們會用一個iOS app舉例
並且就輔助功能問題對其審查

00:02:04.424 --> 00:02:08.328 
然後鑽研你可以使用的API
來確保應用有輔助性

00:02:09.663 --> 00:02:11.298 
最後我們將使用這些API

00:02:11.365 --> 00:02:13.500 
來解決
我們在審查中發現的問題

00:02:13.734 --> 00:02:16.336 
包括使用一些新的
我們認爲你會喜歡的API

00:02:17.004 --> 00:02:19.406 
那麼我們今年要展示
什麼新輔助功能呢？

00:02:19.540 --> 00:02:22.309 
相當多了
讓我們看看

00:02:22.376 --> 00:02:24.745 
每個主要領域有什麼新內容吧

00:02:26.547 --> 00:02:27.614 
首先要提的是運動能力

00:02:29.349 --> 00:02:32.419  
一些人士可能只能夠
通過按壓單個物理按鈕

00:02:32.486 --> 00:02:34.354  
與他們的設備
進行交互

00:02:34.421 --> 00:02:36.890  
例如 輪椅頭枕處的開關

00:02:37.491 --> 00:02:40.027  
他們可以
通過iOS豐富的觸摸界面進行交互

00:02:40.093 --> 00:02:41.862  
例如通過開關控制

00:02:41.929 --> 00:02:45.432  
它會顯示一個光標
在屏幕上的界面元素之間移動

00:02:46.033 --> 00:02:47.401 
當有人想與
光標下的元素

00:02:47.467 --> 00:02:50.337  
進行交互時
他們就可按下開關

00:02:50.470 --> 00:02:53.273  
開關控制讓運動能力有缺陷的人士
可以做任何事

00:02:53.340 --> 00:02:55.609  
從簡單的按壓到複雜的手勢

00:02:56.643 --> 00:02:59.546  
iOS和OS X中
開關控制已經存在好些年了

00:02:59.613 --> 00:03:00.447  
有什麼新內容呢？

00:03:01.748 --> 00:03:05.319 
我們很高興地宣佈
我們正在把開關控制引入tvOS

00:03:05.652 --> 00:03:07.421 
開關控制用戶現可以用它

00:03:07.487 --> 00:03:09.923 
與tvOS界面直接交互了

00:03:10.524 --> 00:03:12.759 
令人熟悉的開關界面
可與光標被一道使用

00:03:12.826 --> 00:03:14.494 
其突顯着屏幕元素

00:03:15.429 --> 00:03:18.498 
或備用界面可配合
一個屏幕遙控器來使用

00:03:19.066 --> 00:03:19.967 
而更重要的是

00:03:20.033 --> 00:03:22.402 
用戶可以無需修復其開關
就做到這一點

00:03:23.437 --> 00:03:26.039 
有些人在其iOS或Mac設備上
使用開關控制

00:03:26.106 --> 00:03:28.642 
他們可以立即
開始完全自主的

00:03:28.842 --> 00:03:31.512 
控制其電視
而無需任何外部幫助

00:03:31.979 --> 00:03:33.313 
這是一個巨大的進步

00:03:33.380 --> 00:03:35.182 
而我們已經等不及
讓人們嘗試一下了

00:03:37.150 --> 00:03:38.418 
接下來是駐留控制

00:03:39.086 --> 00:03:40.754 
有一些
輔助技術

00:03:40.821 --> 00:03:43.457 
它們可以在用戶使用電腦時
追蹤用戶的焦點

00:03:43.524 --> 00:03:46.894 
因此其可能會採取
追蹤頭帶上的反射點的形式

00:03:46.960 --> 00:03:48.695 
或實際
追蹤眼球運動

00:03:49.429 --> 00:03:51.698 
駐留控制是Mac OS中的
一項新功能

00:03:51.765 --> 00:03:55.569 
它通過允許設備控制鼠標
來集成對這些設備的支持

00:03:55.836 --> 00:03:57.938 
當鼠標停在
某一位置時

00:03:58.472 --> 00:04:00.274 
駐留控制推出
一個定時器[聽不清]

00:04:00.340 --> 00:04:03.877 
而當計時器到期時它會調用
一個動作例如鼠標點擊

00:04:04.611 --> 00:04:08.382 
這使得用戶可以控制其Mac
而不必操縱鼠標

00:04:08.815 --> 00:04:12.352 
當然這是可以通過定製功能定製的
比如 開關控制

00:04:13.020 --> 00:04:14.421 
那麼下面讓我們來看看願景

00:04:16.055 --> 00:04:18.591 
多年來Mac OS
和iOS都支持反色和灰度

00:04:18.659 --> 00:04:20.327 
之類的功能

00:04:21.295 --> 00:04:24.531 
來幫助人們在其設備上
增加內容物的對比度

00:04:24.598 --> 00:04:27.201 
處理光線敏感度
或解決色差問題

00:04:27.801 --> 00:04:32.105 
今年我們正在跨Mac OS
iOS和tvOS平臺擴大支持

00:04:32.706 --> 00:04:35.843 
我們增加了色彩調整
來幫助色盲人士

00:04:35.909 --> 00:04:38.345 
它可以幫助
顯示爲這樣的東西

00:04:38.946 --> 00:04:40.981 
顯示得更像這樣

00:04:41.782 --> 00:04:45.619 
而且我們還增加了
讓整個顯示屏顯示爲

00:04:45.686 --> 00:04:48.488 
某種特定色彩的功能
這可顯著增強

00:04:48.555 --> 00:04:50.724 
閱讀黑白文本
有困難的人士的閱讀能力

00:04:53.460 --> 00:04:56.964 
在watchOS中
VoiceOver用戶得到大聲報時

00:04:57.030 --> 00:04:59.333 
其只需通過擡高手腕
或敲擊錶盤

00:04:59.867 --> 00:05:02.202 
但是有時
他們可能要謹慎檢查時間

00:05:02.269 --> 00:05:04.004 
而不影響周圍的人

00:05:04.238 --> 00:05:06.907 
因此在watchOS 3中
我們要介紹Taptic Time

00:05:07.341 --> 00:05:09.042 
Taptic
Time是一種VoiceOver功能

00:05:09.109 --> 00:05:12.079 
它採用了一系列
來自Taptic引擎的 不同的敲擊

00:05:12.412 --> 00:05:15.082 
來幫助用戶
安靜而又私密的報時

00:05:18.285 --> 00:05:21.421  
所以iOS有很多功能
來幫助視障人士

00:05:21.488 --> 00:05:23.991  
就其設備上的內容
進行探索和交互

00:05:24.291 --> 00:05:26.026  
但是其物理環境呢？

00:05:26.727 --> 00:05:29.296  
在iOS X中 我們要介紹
一個功能叫放大鏡

00:05:29.730 --> 00:05:31.999 
放大鏡 在iOS中到處都可以使用

00:05:32.533 --> 00:05:34.434 
它可以讓用戶
使用其設備上的攝像頭

00:05:34.501 --> 00:05:36.803 
在其物理環境中
來放大物體

00:05:37.171 --> 00:05:38.539 
我現在就展示給你看

00:05:44.311 --> 00:05:47.614 
好了 我現在要打開放大鏡進入設置

00:05:48.215 --> 00:05:49.049 
一般

00:05:49.516 --> 00:05:50.517 
輔助功能

00:05:50.918 --> 00:05:52.886 
放大鏡並翻轉開關

00:05:53.987 --> 00:05:56.957 
現在我可以打開放大鏡了
只需三擊Home鍵即可

00:05:58.525 --> 00:05:59.359 
搞定了

00:06:00.594 --> 00:06:03.430 
如果我想讀一下藥瓶上的字

00:06:03.497 --> 00:06:06.099 
我只需遠遠放大

00:06:06.834 --> 00:06:09.436 
我在低光環境下可以使用

00:06:09.837 --> 00:06:11.104 
相機手電筒之類的apps

00:06:11.538 --> 00:06:13.774 
我可以在某一焦距
鎖定對焦

00:06:14.341 --> 00:06:17.578 
而如果我無法
很好的保持設備穩定

00:06:17.911 --> 00:06:19.346 
或者我指着遠處的東西

00:06:19.413 --> 00:06:22.049 
我可以用這Center按鈕
在這裏採集一個凍結幀

00:06:22.716 --> 00:06:24.852 
我們是使用設備的本地相機分辨率

00:06:24.918 --> 00:06:29.289 
捕捉到這一圖像的
所以我們可以縮放和平移

00:06:30.624 --> 00:06:33.327 
而放大鏡也支持
各種彩色濾鏡

00:06:33.460 --> 00:06:35.262 
來幫助用戶提高對比度

00:06:35.629 --> 00:06:38.966 
例如 也許我覺得這是灰度

00:06:39.333 --> 00:06:42.703 
也許是倒灰度
那就增加一點對比度

00:06:43.370 --> 00:06:44.872 
這就讓我很容易閱讀了

00:06:45.405 --> 00:06:48.041 
好了 那麼這是一個
iOS X中放大鏡的例子

00:06:48.976 --> 00:06:50.344 
那麼 在聽覺輔助上有什麼新功能？

00:06:51.812 --> 00:06:54.681 
iOS版支持硬件TTY設備
已經有一段時間了

00:06:55.315 --> 00:06:57.551  
TTY技術允許
有聽力障礙的用戶

00:06:57.618 --> 00:07:00.954  
在標準電話應答中
進行文本對話

00:07:01.421 --> 00:07:03.557  
這裏是
一臺現有TTY機器的樣子

00:07:04.324 --> 00:07:07.961  
正如你所看到的
它相當大而且很可能難以攜帶

00:07:08.395 --> 00:07:10.764  
但它對聾啞人而言非常重要

00:07:10.831 --> 00:07:13.834  
尤其當你考慮到負責把

00:07:13.901 --> 00:07:17.070  
TTY翻譯成語音的中繼運營商時
這才能使本機用戶

00:07:17.137 --> 00:07:20.040  
聯繫商家 服務以及家人和朋友

00:07:20.107 --> 00:07:21.208  
他們也許不用這機器

00:07:21.708 --> 00:07:24.044  
如果可以無需任何附加硬件
就把該設備的功能性

00:07:24.111 --> 00:07:27.047  
提供給大家 那就太棒了

00:07:27.915 --> 00:07:31.385  
iOS中的這個新功能
任何人都可以在熟悉的界面中

00:07:31.585 --> 00:07:34.821  
播放軟件TTY電話
而不必使用任何額外的硬件

00:07:35.222 --> 00:07:37.457  
這些電話可在
傳統TTY技術下工作

00:07:37.891 --> 00:07:42.296 
並可很容易地通過運營商中繼服務
撥打非TTY號碼

00:07:42.863 --> 00:07:46.400  
此外它還具有內部自帶的
TTY專用速效型預測

00:07:46.834 --> 00:07:49.203  
所以它適應
現有的TTY用戶文化

00:07:49.736 --> 00:07:50.804 
最後一點是學習能力

00:07:51.872 --> 00:07:54.308 
誦讀困難是一個極爲常見的學習障礙

00:07:54.374 --> 00:07:57.911 
它影響着世界各地
數以百萬計人口的讀寫能力

00:07:58.178 --> 00:08:00.914 
在iOS X中我們很高興
引入了許多增強功能

00:08:00.981 --> 00:08:02.716 
旨在幫助有誦讀困難的人士

00:08:03.450 --> 00:08:06.887 
我們已經對Speak Selection
和Speak Screen實施了改進

00:08:06.954 --> 00:08:09.823 
來幫助人們更好地理解
已經輸入的文本

00:08:09.890 --> 00:08:12.226 
而且我們已經爲打字
而採用了新的音頻反饋

00:08:12.292 --> 00:08:14.261 
來幫助人們立即發現錯誤

00:08:14.528 --> 00:08:15.963 
我現在就來展示

00:08:16.330 --> 00:08:19.900 
好了我已經在輔助語音設置中

00:08:19.967 --> 00:08:22.736 
打開了打字反饋功能
我現在要打開便籤

00:08:23.203 --> 00:08:25.572 
我要在這裏做的是
鍵入“歡迎”

00:08:25.639 --> 00:08:27.508 
而我準備在鍵入O後就暫停

00:08:28.308 --> 00:08:30.177 
我已經打開字符反饋

00:08:30.244 --> 00:08:34.248 
在這裏iOS將在暫停後
讀出我輸入的最後一個字符

00:08:34.581 --> 00:08:37.985 
我就能肯定我沒有輸入
視覺上類似的字母 比如E

00:08:41.388 --> 00:08:42.222 
E

00:08:42.789 --> 00:08:45.125 
可能聽起來有一點點困難

00:08:45.192 --> 00:08:47.661 
但iOS剛剛讀了E給我

00:08:47.895 --> 00:08:48.962 
所以那是不正確的

00:08:50.364 --> 00:08:51.331 
-O
-太棒了

00:08:51.932 --> 00:08:54.501 
現在我要繼續輸入 打擾一下

00:08:54.568 --> 00:08:58.105 
而iOS將會把
每個單詞都讀給我

00:08:58.172 --> 00:08:59.473 
因爲我已打開了單詞反饋

00:08:59.540 --> 00:09:00.908 
所以我能得到即時的反饋

00:09:00.974 --> 00:09:03.477 
來知道我輸入的詞
是否就是我想要的詞

00:09:04.711 --> 00:09:10.083 
歡迎光臨我們的會話

00:09:10.551 --> 00:09:14.521 
好 這是iOS X中增強版打字反饋的
一個簡單的例子

00:09:19.326 --> 00:09:21.295 
那麼 希望我已經
勾起了你的胃口

00:09:21.361 --> 00:09:22.829 
此類輔助軟件可以

00:09:23.397 --> 00:09:26.166 
確保整個體驗對每個人都適用

00:09:26.300 --> 00:09:27.434 
若輔助功能對你較新鮮

00:09:27.501 --> 00:09:31.471 
你可能想知道如何把
類似的功能放入您的應用中去

00:09:31.972 --> 00:09:34.341 
而如果你之前已經使用過
輔助性API

00:09:34.408 --> 00:09:37.377 
也許在我們開講一些新API之前
是時候快速複習

00:09:38.178 --> 00:09:41.815 
那如何使用輔助性API
以確保應用人人都可以訪問？

00:09:42.883 --> 00:09:45.552 
第一步是
就輔助功能審查我們的應用

00:09:46.153 --> 00:09:48.488 
傳統上要達到這一點
最好的方法是啓動

00:09:48.555 --> 00:09:51.658 
輔助性應用如VoiceOver
或開關控制來看發生了什麼

00:09:52.259 --> 00:09:55.062 
你要查一下是否
您的所有界面元素都暴露出來了

00:09:56.029 --> 00:09:58.131 
是否暴露出來的一切都有一個好的標籤

00:09:58.198 --> 00:10:00.167 
這樣VoiceOver用戶能識別它

00:10:02.002 --> 00:10:03.871 
你要查一下是否通過
VoiceOver使用應用的人士

00:10:03.937 --> 00:10:06.006 
可以做所有其他用戶都可以做到的事

00:10:07.207 --> 00:10:10.377 
最終你就在爲您的應用設計
輔助功能體驗了

00:10:10.444 --> 00:10:13.413 
所以例如有人通過VoiceOver
使用您的應用

00:10:13.480 --> 00:10:16.483 
則你要確保其體驗將和
其他任何人一樣流暢

00:10:18.018 --> 00:10:19.553 
所以今年我們也高興

00:10:19.620 --> 00:10:21.955 
因爲有了一個全新的
輔助功能檢查員

00:10:22.022 --> 00:10:25.492 
它的功能要強大得多
並可以幫助你立刻找出錯誤

00:10:26.894 --> 00:10:28.795 
如果您想對這個檢查員瞭解更多

00:10:28.862 --> 00:10:32.999 
來看看週三的
針對輔助功能審查你的應用功能

00:10:33.066 --> 00:10:34.635 
這個會話來更多地瞭解它

00:10:35.302 --> 00:10:38.105 
本次會話 我們要通過
VoiceOver注重審查因爲這是

00:10:38.172 --> 00:10:40.908 
使您對應用流的輔助功能
變得非常熟悉的

00:10:40.974 --> 00:10:42.543 
最好的方法

00:10:44.878 --> 00:10:45.712 
好了讓我們開始吧

00:10:45.779 --> 00:10:48.815 
來看看一個活動的應用
並找到它的輔助功能問題

00:10:49.049 --> 00:10:51.852 
就本演示
我將要使用的是iOS

00:10:52.219 --> 00:10:55.622 
但相同的基本流程
適用於我們所有的平臺

00:10:59.526 --> 00:11:00.727 
好 我要做的第一件事

00:11:00.794 --> 00:11:03.630 
是通過進入輔助功能設置
來把VoiceOver添加到

00:11:04.064 --> 00:11:05.832 
我的輔助功能三擊快捷方式

00:11:06.200 --> 00:11:07.301 
並一直到底

00:11:07.367 --> 00:11:09.903 
輔助功能快捷鍵
開啓VoiceOver

00:11:10.838 --> 00:11:13.841 
好了現在讓我們開啓我們的應用
DogRoutePro

00:11:13.907 --> 00:11:16.176 
一個遛狗路線選擇專業應用

00:11:17.244 --> 00:11:19.746 
三擊Home開啓VoiceOver
再點擊選擇

00:11:20.247 --> 00:11:21.348 
VoiceOver開啓

00:11:21.582 --> 00:11:23.584 
DogRoutePro
Routes

00:11:23.650 --> 00:11:25.752 
那麼有兩種
對不起 有兩種方法

00:11:25.819 --> 00:11:27.721 
VoiceOver開啓時
瀏覽你的應用

00:11:28.088 --> 00:11:30.557 
你可以把一個手指
在屏幕上放好

00:11:30.624 --> 00:11:33.360 
而VoiceOver將選擇並讀出
你手指下面的內容

00:11:33.427 --> 00:11:36.230 
或者你可以用一個手指
向左或向右刷屏幕

00:11:36.296 --> 00:11:38.799 
來在元素列表中
前進或後退

00:11:39.166 --> 00:11:41.068 
讓我們看看
這些表格的輔助性如何

00:11:41.502 --> 00:11:42.336 
大街環道

00:11:42.703 --> 00:11:44.071 
0.8英里

00:11:45.072 --> 00:11:46.907 
馬上我注意到
我知道若你激活這一格

00:11:46.974 --> 00:11:49.776 
我們可以去
我們的應用上的某個地方

00:11:50.477 --> 00:11:53.146 
但沒有任何東西傳達給
VoiceOver用戶

00:11:53.747 --> 00:11:54.581 
讓我們繼續

00:11:55.082 --> 00:11:56.550 
[聽不清]按鈕

00:11:57.017 --> 00:11:59.987 
這個按鈕有一個標籤
是一個從圖像名派生出來的

00:12:00.053 --> 00:12:02.556 
我用其完成的初始化

00:12:03.857 --> 00:12:06.493 
那是該框架基於我給過它的
唯一信息作出的迴應

00:12:06.560 --> 00:12:08.028 
我們必須給它一個更好的標籤

00:12:08.829 --> 00:12:10.430 
好吧
讓我們激活這個格子

00:12:10.497 --> 00:12:13.233 
要使用VoiceOver
激活一個項目 則當項目被選擇時

00:12:13.300 --> 00:12:15.335 
你要用一個手指
雙擊屏幕

00:12:16.170 --> 00:12:17.271 
大街環道

00:12:17.404 --> 00:12:19.339 
0... 大街環道

00:12:19.439 --> 00:12:20.774 
路線 後退按鈕

00:12:20.874 --> 00:12:22.309 
好的 讓我完成這用戶界面

00:12:22.576 --> 00:12:23.577 
大街環道

00:12:23.644 --> 00:12:25.045 
大街環道評級

00:12:25.445 --> 00:12:26.980 
前往 幹擾

00:12:27.381 --> 00:12:29.650 
氣味 綠茵 朋友

00:12:30.117 --> 00:12:31.251 
對於這個評級圖形

00:12:31.318 --> 00:12:34.588 
Voiceover用戶完全無法訪問
這個圖形的數值

00:12:34.955 --> 00:12:35.789 
讓我們繼續

00:12:36.223 --> 00:12:37.591 
大街環道路線

00:12:37.724 --> 00:12:39.927 
前往 百老匯街和裏奇韋路

00:12:40.594 --> 00:12:42.896 
風險男童合唱團在裏奇韋路41號

00:12:42.996 --> 00:12:44.631 
和百老匯街上

00:12:45.532 --> 00:12:49.036 
所以因爲我給
這些註釋起了好的標題

00:12:49.136 --> 00:12:51.371 
這些框架才能將其用作

00:12:51.438 --> 00:12:54.074 
輔助功能標籤
來作爲地圖註釋

00:12:54.608 --> 00:12:56.977 
所以這很好 下面讓我們繼續
來看Steps選項卡

00:12:57.477 --> 00:12:59.112 
Steps選定文本

00:12:59.713 --> 00:13:01.114 
Step 第41號

00:13:03.383 --> 00:13:04.718 
百老匯街和裏奇韋路

00:13:04.818 --> 00:13:06.820 
在百老匯街和裏奇韋路
右轉

00:13:07.221 --> 00:13:08.889 
男童合唱團在裏奇韋路上

00:13:08.956 --> 00:13:12.092 
男童合唱團在裏奇韋路上
吉爾伯特和蒙哥馬利之間

00:13:12.359 --> 00:13:13.994 
沿着裏奇韋路繼續

00:13:14.394 --> 00:13:16.263 
小心汽車和兒童

00:13:16.396 --> 00:13:19.666 
所以VoiceOver能讀取
這些表格視圖單元格里的所有文本

00:13:19.800 --> 00:13:22.703 
但是你會注意到
這些代表了路線上風險的格子

00:13:22.769 --> 00:13:24.404 
沒爲VoiceOver用戶

00:13:24.738 --> 00:13:28.208 
作出區分
而視力正常的用戶可以看到

00:13:28.542 --> 00:13:31.345 
風險被以紅色文本
和獨特的圖標所標記

00:13:32.012 --> 00:13:35.382 
好吧讓我們跳出幻燈片
並討論如何解決這些問題

00:13:38.785 --> 00:13:40.287 
我們從應用中瞭解到了什麼？

00:13:40.821 --> 00:13:42.289 
首先路線產生
並列出許多格子

00:13:42.956 --> 00:13:45.292 
收藏按鈕有一個奇怪的標籤
那是從

00:13:45.359 --> 00:13:46.894 
我們正使用的圖像名稱派生出來的

00:13:48.428 --> 00:13:50.564 
此外也不清楚這個單元格是否
可以被激活去某些地方

00:13:50.631 --> 00:13:52.232 
可以被激活去某些地方

00:13:54.401 --> 00:13:55.602 
現在對於評級圖形

00:13:55.669 --> 00:13:58.972 
VoiceOver完全
無法使用這些圖形值

00:14:01.141 --> 00:14:02.976 
最後在路線步驟列表中

00:14:03.744 --> 00:14:07.247 
代表風險路點的格子
沒有與路線上的其他步驟

00:14:07.314 --> 00:14:08.415 
被區分開

00:14:09.683 --> 00:14:11.218 
那麼如何才能解決這些問題？

00:14:12.920 --> 00:14:14.188 
要明白怎麼辦

00:14:14.254 --> 00:14:17.057 
我們需要了解VoiceOver如何
能夠從我們的界面

00:14:17.124 --> 00:14:18.292 
訪問信息並將其驅動

00:14:18.992 --> 00:14:22.462 
VoiceOver與我們的應用
通過UIAccessibility協議進行交互

00:14:23.030 --> 00:14:26.633 
因此讓我們用我們剛看到的
應用中的收藏按鈕舉個例子

00:14:28.702 --> 00:14:30.237 
輔助應用如VoiceOver

00:14:30.304 --> 00:14:33.340 
需要向你的應用用戶詢問
界面項目的問題

00:14:33.574 --> 00:14:36.743 
因此例如當Voiceover
已被開啓而有人觸碰了該按鈕

00:14:37.211 --> 00:14:39.646 
VoiceOver詢問按鈕
“嘿你是什麼？”

00:14:40.480 --> 00:14:41.915 
按鈕說“嗯我是一個按鈕”

00:14:42.916 --> 00:14:45.485 
VoiceOver會要求
“你是誰？什麼名字？”

00:14:45.886 --> 00:14:48.622 
該按鈕應該做出回答
回答內容如“收藏”之類的

00:14:50.224 --> 00:14:52.826 
最後VoiceOver問
“你在屏幕上何處？”

00:14:52.893 --> 00:14:55.295 
按鈕回覆“它的屏幕空間框架上”

00:14:55.662 --> 00:14:57.898 
這是
VoiceOver需要公佈的信息

00:14:58.065 --> 00:15:00.834 
“收藏 按鈕”
並在該元素周圍繪製一個光標

00:15:02.436 --> 00:15:04.204 
因此從輔助技術到你的應用

00:15:04.271 --> 00:15:06.607 
的這些消息採取了方法調用的形式

00:15:06.940 --> 00:15:09.643 
該方法全都是
UIAccessibility協議的一部分

00:15:09.877 --> 00:15:11.678 
通過實施
該協議的這個方法

00:15:11.745 --> 00:15:13.881 
你讓你的自定義視圖的
層次結構能夠被訪問

00:15:14.648 --> 00:15:17.751 
因此標準的UI控件
就有了輔助功能

00:15:18.151 --> 00:15:19.520 
但根據你怎麼
對它們進行配置

00:15:19.586 --> 00:15:21.989 
你可能需要
設置或重寫某些屬性

00:15:22.189 --> 00:15:23.090 
那麼什麼屬性呢？

00:15:23.257 --> 00:15:24.124 
讓我們來看看

00:15:25.259 --> 00:15:27.828 
現在UIAccessibility
協議上有很多方法

00:15:27.895 --> 00:15:29.930 
你可以把它們用於
就你的界面項目如何

00:15:30.163 --> 00:15:33.200 
將其自己暴露給輔助功能
進行細粒度控制

00:15:33.267 --> 00:15:36.136 
但對於大多數工作
你自己只需要關心幾個

00:15:36.570 --> 00:15:38.839 
讓我們一個一個來看基本屬性

00:15:39.106 --> 00:15:41.441  
首先是
isAccessibilityElement

00:15:42.242 --> 00:15:45.012  
此屬性確定
一個界面項目到底是不是

00:15:45.112 --> 00:15:46.446  
通過輔助技術而被服務

00:15:46.980 --> 00:15:49.750  
因此舉例來說如果你有一個
背景裝飾的圖像視圖

00:15:50.017 --> 00:15:51.752  
您可以將此設爲False

00:15:52.319 --> 00:15:55.789  
但是如果它代表一張
有人上傳到您的服務的照片

00:15:56.056 --> 00:15:57.291  
你會想將其設爲True

00:15:57.357 --> 00:15:59.459  
所以使用VoiceOver的人士
就可以發現圖像

00:15:59.593 --> 00:16:01.128  
專注於它並瞭解它了

00:16:03.096 --> 00:16:06.166  
所以現在你的界面元素
通過VoiceOver浮出水面了

00:16:06.233 --> 00:16:08.869  
你最好給它一個名字
這樣用戶就可以識別它

00:16:08.936 --> 00:16:10.938  
這就是
輔助功能標籤的用途

00:16:11.371 --> 00:16:13.607  
該標籤
是該元素的簡明標識符

00:16:13.907 --> 00:16:16.310  
比如發送消息或新警告

00:16:18.679 --> 00:16:21.481  
那麼別人如何知道
他們可以激活你的元素呢？

00:16:22.249 --> 00:16:25.252  
新警告不會按照
其視覺造型所用的

00:16:25.319 --> 00:16:27.321  
同樣方式來傳達
該項目是一個按鈕

00:16:27.888 --> 00:16:29.823  
這就是
輔助功能特性介入的地方

00:16:30.390 --> 00:16:33.360  
輔助功能特性
向輔助技術宣告

00:16:33.427 --> 00:16:35.529  
你的元素是什麼
以及如何與它進行交互

00:16:35.863 --> 00:16:39.266  
例如一個按鈕應有特性
UIAccessibilityTraitButton

00:16:40.200 --> 00:16:43.036  
一個如滑塊的可調節的控件
應有這個特性

00:16:43.103 --> 00:16:44.771  
UIAccessibilityTraitAdjustable

00:16:45.305 --> 00:16:47.941  
特性有點被掩蓋 所以
元素可能有一個以上特性

00:16:48.408 --> 00:16:50.277 
例如選定的按鈕
應該兼有特性

00:16:50.477 --> 00:16:54.147 
UIAccessibilityTraitButton
和UIAccessibiltyTraitSelected

00:16:54.815 --> 00:16:57.451  
按鈕特性
使VoiceOver說“按鈕”

00:16:57.584 --> 00:16:59.586  
這樣有人才知道他們可以
激活你的元素

00:17:01.989 --> 00:17:03.724 
接下來還有輔助功能框架

00:17:03.957 --> 00:17:06.226 
這就決定你的元素在屏幕上何處

00:17:06.292 --> 00:17:07.828 
並且既用於命中測試

00:17:07.895 --> 00:17:09.762 
也用於圍繞該元素
繪製一個光標

00:17:10.364 --> 00:17:13.901 
現在就用戶界面視圖你通常
不必明確設置這個

00:17:14.034 --> 00:17:17.804 
因其是根據視圖在視圖層次結構中的
位置而爲你計算的

00:17:18.805 --> 00:17:20.307 
但如果需要的話你可以修改它

00:17:20.374 --> 00:17:22.709 
不過請記住這是屏幕內座標

00:17:24.944 --> 00:17:26.747  
最後還有輔助功能值

00:17:27.247 --> 00:17:28.982  
這對有某種概念價值

00:17:29.049 --> 00:17:30.984  
與之相關聯的元素來說很有用

00:17:31.518 --> 00:17:34.288  
例如 滑塊通過輔助功能值

00:17:34.354 --> 00:17:35.956  
按百分比返回其當前值

00:17:36.590 --> 00:17:38.492  
通斷開關返回 開啓或關閉的信息

00:17:38.659 --> 00:17:40.260  
如果你有一些
自定義控件

00:17:40.327 --> 00:17:42.629  
其可控制儀器的放大級別

00:17:42.863 --> 00:17:47.000  
你就會想通過輔助功能值水平
傳達該放大倍率

00:17:49.303 --> 00:17:52.005 
好了 如果你做自定義繪圖
而您界面的每個邏輯塊

00:17:52.539 --> 00:17:56.076 
都不直接映射到用戶界面視圖
你會怎麼做？

00:17:57.177 --> 00:18:00.047 
當你需要那樣做時
使用UIAccessibilityElement

00:18:00.480 --> 00:18:04.952 
UIAccessibilityElement對象代表
屏幕上的邏輯可用區域

00:18:05.252 --> 00:18:09.122 
其與UIAccessibility協議交互
就像你的視圖一樣

00:18:09.456 --> 00:18:12.326 
你可以使用它們
例如用於暴露一個控件的

00:18:12.392 --> 00:18:14.728 
每個單一部分
其作爲單一的用戶界面視圖而建造

00:18:15.429 --> 00:18:16.363 
如果要這樣做

00:18:16.997 --> 00:18:21.235 
讓你想要暴露其部分的元素
進入一個輔助功能容器

00:18:21.668 --> 00:18:24.671 
通過設置其輔助功能
元素屬性到

00:18:24.738 --> 00:18:26.473 
UIAccessibilityElement
對象的一個陣列

00:18:26.540 --> 00:18:29.243 
其代表控件的每個部分

00:18:30.878 --> 00:18:35.549 
UIAccessibilityElement
是暴露那些我們之前看到的圖形

00:18:35.616 --> 00:18:39.786 
的天然選擇 在那裏我當時在做一些
自定義層來代表圖形條塊

00:18:40.220 --> 00:18:43.156 
但如果你是非常精明的傾聽者
你可能已經注意到

00:18:45.392 --> 00:18:47.928 
一個輕微的障礙
UIAccessibilityElement對象不是視圖

00:18:47.995 --> 00:18:50.230 
所以我們需要手動設置
它們的輔助功能框架

00:18:50.464 --> 00:18:53.867 
然而這些圖形條塊
是在一個滾動視圖內

00:18:54.034 --> 00:18:56.603 
所以它們的幀
與屏幕的座標會變化

00:18:57.070 --> 00:18:59.239 
現在爲了糾正這個我們可以再分類

00:18:59.306 --> 00:19:01.742 
或者我們可以
在每次滾動後設置輔助功能框架

00:19:02.242 --> 00:19:06.813 
或在iOS X中我們可
在容器空間內設置輔助功能框架

00:19:07.381 --> 00:19:10.684 
當您設置該屬性
到一個容器相對框架上時

00:19:11.518 --> 00:19:16.223 
UIAccessibilityElement將自動
遵循屏幕上其容器的位置

00:19:18.992 --> 00:19:20.360 
這些都是在UIAccessibility協議

00:19:20.427 --> 00:19:23.096 
以及UIAccessibilityElement中
最基本的方法

00:19:23.163 --> 00:19:25.465 
僅用這些你就能完成大部分的事

00:19:25.532 --> 00:19:26.700 
那麼有哪些要點呢？

00:19:27.434 --> 00:19:29.903 
首先要知道
在UIAccessibility協議中的方法

00:19:29.970 --> 00:19:32.606 
是你該如何向輔助功能暴露
你的界面項目

00:19:33.040 --> 00:19:34.608 
通過該協議方法
你的應用回答了

00:19:34.675 --> 00:19:38.812 
它的界面項目是什麼
以及它們可以做什麼的問題

00:19:40.280 --> 00:19:43.617 
現在許多類別都有內部支持
所以沒什麼需要你做

00:19:44.218 --> 00:19:47.921 
但你可能要設置或覆寫
屬性來得到你需要的行爲

00:19:49.156 --> 00:19:50.724 
最後如果你有
不直接映射到視圖

00:19:50.791 --> 00:19:54.161 
的你的部分界面
使用UIAccessibilityElement

00:19:54.895 --> 00:19:58.031 
讓我們去用剛學到的方式
把應用變得可以使用

00:19:58.699 --> 00:20:00.067 
我們要的第一件事情

00:20:00.934 --> 00:20:05.172 
是我們要改正的事實
即表格視圖單元格並沒傳達

00:20:05.239 --> 00:20:07.741 
它能夠被用於
通過VoiceOver激活的信息

00:20:08.408 --> 00:20:11.445 
所以我們要做到這一點
方法在其AwakeFromNib之中

00:20:11.512 --> 00:20:15.883 
我們要做的一切 就是在特性
UIAccessibilityTraitButton中的“Or”

00:20:16.583 --> 00:20:17.417 
搞定

00:20:18.018 --> 00:20:20.687 
好了現在讓我們
來爲收藏按鈕修復標籤

00:20:23.857 --> 00:20:26.894 
我們打算在這裏做的是
當我們爲此單元格

00:20:26.960 --> 00:20:29.296  
設置路線時 我們要抓住收藏按鈕

00:20:29.363 --> 00:20:32.666  
並設置其輔助功能
標籤屬性爲收藏

00:20:32.733 --> 00:20:34.101  
然後是路線的名稱

00:20:34.168 --> 00:20:35.469  
我把路線名放在那裏

00:20:35.536 --> 00:20:39.506  
這樣如果我激活該按鈕
我要去哪條收藏路線就毫不含糊

00:20:40.774 --> 00:20:42.776  
好吧讓我們繼續並移到
看過了的那條圖形

00:20:45.312 --> 00:20:49.216 
所以就像我說的
我在此使用層做了一些繪圖

00:20:49.783 --> 00:20:51.752 
因此我們要使用
UIAccessibilityElement

00:20:52.319 --> 00:20:54.488 
現在我想在這裏首先做的是

00:20:54.588 --> 00:20:58.492 
我要補充一些實例變量來跟蹤
UIAccessibilityElement對象

00:20:58.959 --> 00:21:01.995 
那麼就四個實例變量
UAAccessibiliytElements圖形

00:21:02.062 --> 00:21:03.730 
中的條塊每塊一個

00:21:04.865 --> 00:21:07.267 
接下來我將添加
一個短的小幫手功能

00:21:07.334 --> 00:21:10.571 
來幫我把數字評分翻譯
成對用戶友好的字符串

00:21:10.637 --> 00:21:12.706 
那麼 評分是X分 滿分是5分

00:21:14.474 --> 00:21:19.580 
對didSetcallbacks中
的每一個就這些評分屬性

00:21:19.713 --> 00:21:24.518 
我要將適當輔助元素的
輔助功能值設置給

00:21:25.552 --> 00:21:27.554 
一個描述此評分的
友好字符串

00:21:28.589 --> 00:21:30.791 
因此對於氣味——哎呀

00:21:31.792 --> 00:21:32.893 
把幹擾排第一

00:21:34.328 --> 00:21:37.531 
氣味 綠茵

00:21:39.566 --> 00:21:40.400 
和朋友

00:21:41.468 --> 00:21:43.270 
再次的 只需抓取正確的元素

00:21:43.337 --> 00:21:46.907 
將其輔助功能值
設置爲評分的字符串值

00:21:48.008 --> 00:21:49.977 
好了現在我們需要
實際設置實例變量

00:21:50.043 --> 00:21:51.745 
爲有效輔助功能元素

00:21:52.713 --> 00:21:54.515 
所以在AwakeFromNib

00:21:56.016 --> 00:22:00.821 
對這四個實例變量我只是去設置
它等於UIAccessibilityElement

00:22:01.355 --> 00:22:03.457 
而我們自己
作爲輔助功能容器

00:22:04.791 --> 00:22:07.995 
現在我們要設置標籤
給這些元素僅僅作爲

00:22:08.695 --> 00:22:10.731 
已經在那兒的標籤的文本

00:22:10.797 --> 00:22:12.966 
我應該說用戶界面標籤
它已經在那兒了

00:22:15.135 --> 00:22:17.905 
最後我們將設置
我們自己的輔助功能屬性

00:22:17.971 --> 00:22:19.606 
僅爲那四元素
因爲我們想成爲

00:22:19.673 --> 00:22:21.175 
一個輔助功能容器

00:22:22.075 --> 00:22:24.912 
所以現在我們擁有有效的
輔助功能元素對象

00:22:24.978 --> 00:22:29.082 
其擁有有效標籤或者好標籤
和良好的輔助功能值

00:22:29.583 --> 00:22:31.118 
現在我們只需要設置其框架

00:22:32.085 --> 00:22:33.921 
我們要做的是
當我們鋪設

00:22:34.121 --> 00:22:35.556  
圖形條塊時

00:22:39.226 --> 00:22:41.728  
我們只要抓住適當的
輔助功能元素

00:22:41.795 --> 00:22:44.231  
並在容器空間
設置其輔助功能框架即可

00:22:45.065 --> 00:22:47.568  
好的那麼我們需要修復的
最後一件事

00:22:47.634 --> 00:22:51.205  
是路線列表視圖中的
單元格標籤

00:22:53.707 --> 00:22:56.310 
所以我會去
路線步驟表格

00:22:57.444 --> 00:22:59.413 
當我們設置單元格所代表的適當路點時

00:22:59.513 --> 00:23:00.914 
我們要做的是

00:23:01.481 --> 00:23:04.918 
添加一些代碼
來手動設置輔助功能標籤

00:23:04.985 --> 00:23:07.855 
爲路點的名稱
然後是路點的描述

00:23:08.388 --> 00:23:10.591  
若它是一個風險 我們將增加“風險”

00:23:11.024 --> 00:23:13.060  
然後是風險說明

00:23:14.194 --> 00:23:15.696 
所以在我們將此生成並運行前

00:23:16.196 --> 00:23:18.932 
讓我們回到幻燈片
並想想是否有什麼是

00:23:18.999 --> 00:23:20.267 
視力正常的用戶極易做到

00:23:20.334 --> 00:23:22.603 
而VoiceOver用戶
仍然有麻煩去做的

00:23:28.208 --> 00:23:32.779 
好吧
再次的首先是路線圖

00:23:33.747 --> 00:23:36.116 
VoiceOver的用戶可
在地圖上找到那些步驟

00:23:36.183 --> 00:23:40.554 
然而路線次序已被丟失
因爲VoiceOver會以一種

00:23:40.621 --> 00:23:43.257 
在空間中自上向下自左而右的順序
來讀這些元素

00:23:44.725 --> 00:23:48.295 
此外視力正常的人士
可以很容易地通過獨特的圖標

00:23:48.362 --> 00:23:49.997 
看到此圖形中的風險

00:23:50.430 --> 00:23:52.766 
但VoiceOver用戶
將不得不瀏覽

00:23:52.833 --> 00:23:55.802 
圖形中所有的航點
來發現所有的風險

00:23:57.604 --> 00:24:00.340 
現在就路線步驟列表
有一個類似的問題

00:24:00.607 --> 00:24:03.143 
因爲它很容易
爲視力正常用戶所篩選

00:24:03.210 --> 00:24:05.579 
他們可以通過
快速滾動其單元格完成

00:24:05.646 --> 00:24:08.015 
根據的是鮮明的紅色文字
和獨特的標籤

00:24:08.282 --> 00:24:11.552 
但是對於VoiceOver用戶
就沒有那麼容易來篩選了

00:24:11.652 --> 00:24:13.820 
他們不得不查遍
每個單獨的格子

00:24:14.221 --> 00:24:15.589 
如何才能解決這些問題呢

00:24:17.724 --> 00:24:18.992 
我們將使用轉子

00:24:19.126 --> 00:24:21.828 
轉子是一個VoiceOver功能
它可讓人通過搜索

00:24:21.895 --> 00:24:24.765 
給定類型的元素
而跨界面瀏覽

00:24:25.098 --> 00:24:26.600  
內置轉子之一

00:24:26.667 --> 00:24:28.702  
是標題轉子
它允許用戶

00:24:28.769 --> 00:24:31.738  
通過在標題間跳躍
來瀏覽一個界面

00:24:32.372 --> 00:24:35.776  
要使用轉子
你用兩根手指在屏幕上扭轉

00:24:35.843 --> 00:24:38.011 
就好像你
在進行物理撥號一樣

00:24:38.545 --> 00:24:40.714 
這麼做來選擇待使用的
轉子設置

00:24:40.781 --> 00:24:43.317 
然後用一根手指向上或向下刷

00:24:43.383 --> 00:24:45.519 
來用此轉子搜索前一個
或後一個

00:24:47.221 --> 00:24:49.489 
所以今年我們爲你推出
添加你自己的

00:24:49.556 --> 00:24:51.491 
自定義搜索轉子的功能

00:24:51.925 --> 00:24:53.126 
我們希望當用戶通過
VoiceOver使用你的應用時

00:24:53.193 --> 00:24:55.796 
你能利用這一優勢
來給你的應用

00:24:56.063 --> 00:24:57.831 
添加全新的瀏覽功能

00:24:58.298 --> 00:25:00.534 
要在iOS上添加你的自定義轉子

00:25:00.601 --> 00:25:03.871 
在一個包含你想用於
搜索的元素的超級視圖中

00:25:03.937 --> 00:25:07.274 
或在該超級視圖的
視圖控制器中

00:25:07.474 --> 00:25:09.176 
設置輔助功能自定義轉子屬性

00:25:10.444 --> 00:25:13.947 
你會想將它設置到一個
視圖輔助功能自定義轉子

00:25:14.014 --> 00:25:15.616 
對象陣列中去 其以一個名稱

00:25:16.250 --> 00:25:17.985 
以及一個項目搜索塊初始化

00:25:18.051 --> 00:25:20.787 
該搜索塊每次
在用戶向上或向下刷動時

00:25:20.854 --> 00:25:23.957 
來爲此轉子搜索前一個
或後一個匹配時被調用

00:25:27.494 --> 00:25:29.396 
讓我們切換回演示機器

00:25:29.463 --> 00:25:30.797 
看看行動中這個新的API

00:25:37.104 --> 00:25:42.576 
好的 我們先添加一個風險轉子
到路線步驟視圖控制器

00:25:42.743 --> 00:25:45.846 
這樣用戶就可以
輕鬆瀏覽到適當的

00:25:45.913 --> 00:25:47.281 
代表風險的表格單元格了

00:25:49.316 --> 00:25:54.688 
那麼我來開啓
路線步驟視圖控制器

00:25:55.289 --> 00:25:57.824 
我把該屬性設置在
AwakeFromNib內部

00:25:58.625 --> 00:26:00.394 
基本骨架在這裏

00:26:00.460 --> 00:26:02.262 
我將做一個風險轉子一個名爲風險的

00:26:02.329 --> 00:26:05.699 
輔助功能自定義轉子對象
和一個回調

00:26:06.633 --> 00:26:09.002 
我要去把
輔助功能自定義轉子的屬性設置爲

00:26:09.069 --> 00:26:10.270 
僅爲該轉子

00:26:11.305 --> 00:26:14.308 
而在這裏的回調裏面
該搜索塊裏面

00:26:14.708 --> 00:26:18.245 
我只是要得到
我們這裏的數據模型的參考號

00:26:18.412 --> 00:26:20.447 
一個路點陣列並通過檢查我們用過的
predicate

00:26:20.514 --> 00:26:22.616 
並確定我們
是向前還是向後進行

00:26:24.151 --> 00:26:26.720 
接下來我們需要找到在哪裏
開始我們的搜索

00:26:26.954 --> 00:26:31.091 
因此在默認情況下
如果現在在表視圖中沒有選擇

00:26:31.491 --> 00:26:34.962 
我們要麼在第一個項目之前
要麼在最後一項之後開始

00:26:35.128 --> 00:26:37.497 
這取決於
我們向前還是向後進行

00:26:37.564 --> 00:26:40.100 
因此我們進入單元格列表

00:26:40.734 --> 00:26:45.639 
否則如果我們當前有項目
我們要使它成爲單元格

00:26:45.706 --> 00:26:50.177 
然後在代表我們數據模型中的項目
的那一行開始

00:26:51.745 --> 00:26:53.580 
好的 然後我們要

00:26:56.149 --> 00:26:58.218 
用這個循環
通過我們的數據模型來搜索

00:27:00.187 --> 00:27:02.289 
而我們要搜索
直到找到一個匹配爲止

00:27:03.891 --> 00:27:06.393 
而匹配就是
風險路點

00:27:06.727 --> 00:27:12.132 
因此如果我們找到一個結果
我們要爲此結果

00:27:13.267 --> 00:27:15.369 
得到索引路徑
在表格視圖中滾動到那一排

00:27:16.103 --> 00:27:18.805  
抓取那個
我們可能已經在屏幕上

00:27:18.872 --> 00:27:21.742  
滾過了的單元格
並以目標元素單元格返回

00:27:21.808 --> 00:27:24.011  
一個UIAccessibility
自定義轉子項目結果

00:27:24.845 --> 00:27:28.415  
現在在初始值設定項裏
它還支持目標範圍屬性

00:27:29.082 --> 00:27:32.619  
如果我們順應
用戶界面的文本輸入

00:27:32.686 --> 00:27:34.521  
我們可用它來轉過文本的不同部分

00:27:34.788 --> 00:27:37.691 
但是我們不這樣做
所以我們只會讓它是零值

00:27:39.126 --> 00:27:42.329 
如果我們的While循環終止
卻沒有返回任何東西

00:27:42.396 --> 00:27:44.865 
我們將返回零值
來說明我們無法找到一個結果

00:27:46.500 --> 00:27:48.101 
在路線地圖單元格中做類似的事

00:27:51.438 --> 00:27:53.140 
對不起 我們這裏有這個幫手

00:27:53.207 --> 00:27:55.909 
它以給定的predicate
來搜索我們的註解視圖

00:27:56.043 --> 00:27:59.746 
從一個註解視圖
向前或向後進行

00:28:01.048 --> 00:28:03.684 
此predicate對應着

00:28:03.750 --> 00:28:07.354 
我們是否應該
基於它所代表的

00:28:07.421 --> 00:28:09.523 
數據模型項目
而返回該註解視圖

00:28:10.691 --> 00:28:14.094 
因此我們要使用
這一點來做類似的事情

00:28:14.728 --> 00:28:16.263 
我們要覆寫awakeFromNib

00:28:17.664 --> 00:28:21.235 
我們要作一個短的封閉
它將幫我們製作多個轉子

00:28:21.301 --> 00:28:24.037 
因爲我們基本上
我們爲各種轉子

00:28:24.204 --> 00:28:26.273 
所做的所有改變
是我們返回哪些項目

00:28:27.040 --> 00:28:30.410 
設置輔助功能自定義轉子屬性時
我們將用此設置

00:28:30.477 --> 00:28:34.281 
我們將有一個路線步驟轉子
它只返回每個路點

00:28:35.249 --> 00:28:39.119 
以及一個風險轉子
它將只返回風險

00:28:40.320 --> 00:28:41.989 
在這個事實陣列中我們會做什麼？

00:28:42.055 --> 00:28:47.995 
我們要用適當名稱創建一個
UIAccessibility自定義轉子對象

00:28:49.763 --> 00:28:52.299 
我們將使用
我們的搜索註解視圖幫手

00:28:53.800 --> 00:28:55.502 
把當前元素給它

00:28:55.869 --> 00:28:57.604 
無論我們前進還是後退

00:28:57.671 --> 00:28:59.339 
不管用的什麼predicate

00:29:00.674 --> 00:29:03.744 
再者 若我們能找到一個結果
我們將只把它

00:29:03.877 --> 00:29:07.181 
包在一個
自定義轉子項目結果中並將其返回

00:29:07.848 --> 00:29:09.917 
否則將返回零值
說明我們無法爲此轉子

00:29:09.983 --> 00:29:12.553 
找到之前
或下一個的匹配

00:29:13.687 --> 00:29:15.289 
好吧
讓我們將其建立並運行

00:29:16.256 --> 00:29:17.858 
-大街-
-我們開始

00:29:17.925 --> 00:29:18.759 
前往

00:29:18.926 --> 00:29:21.662 
好吧 我們來看看
我們的改變是否生效了

00:29:21.828 --> 00:29:22.663 
大街環道

00:29:23.130 --> 00:29:25.499 
0.8英里
按鈕

00:29:25.566 --> 00:29:27.701 
VoiceOver說了“按鈕”
那很棒

00:29:27.768 --> 00:29:29.903 
用戶可以知道
他們現在可以啓動這個項目了

00:29:29.970 --> 00:29:31.438 
讓我們來看看
在這個收藏按鈕

00:29:31.738 --> 00:29:33.073 
收藏 大街環道

00:29:33.273 --> 00:29:34.641 
-按鈕
-太棒了

00:29:35.242 --> 00:29:36.109 
選中

00:29:36.443 --> 00:29:37.778 
收藏 大街環道

00:29:38.245 --> 00:29:41.582 
因此框架已經爲我們關注
選中的特性了

00:29:41.915 --> 00:29:43.317 
我想激活該單元格

00:29:43.383 --> 00:29:44.384 
大街環道

00:29:45.152 --> 00:29:48.121 
大街環道
大道環路 幹擾

00:29:48.555 --> 00:29:49.957 
評分 3分 滿分5分

00:29:50.157 --> 00:29:52.326 
氣味 評分 2分 滿分5分

00:29:52.526 --> 00:29:54.828 
綠茵 評分 5分 滿分5分

00:29:55.028 --> 00:29:57.130 
朋友 評分 4分 滿分5分

00:29:57.297 --> 00:29:59.466 
太好了
我們的圖形條塊現在是輔助性的了

00:29:59.933 --> 00:30:01.068 
大街環道路線

00:30:01.435 --> 00:30:02.936 
百老匯街和裏奇韋路

00:30:03.403 --> 00:30:05.305 
好的現在讓我們嘗試
並使用新的轉子

00:30:05.739 --> 00:30:09.076 
前往 詞語 字符
風險 路線步驟

00:30:09.977 --> 00:30:11.578 
風險 風險

00:30:11.678 --> 00:30:12.880 
裏奇韋路和皮埃蒙特路

00:30:12.946 --> 00:30:14.381 
皮埃蒙特路和第41號

00:30:14.481 --> 00:30:15.782 
第41號和百老匯街

00:30:15.849 --> 00:30:17.317 
太棒了 我們路線步驟轉子是有效的

00:30:17.384 --> 00:30:18.819 
使用轉子來訪問...

00:30:18.886 --> 00:30:19.753 
對不起

00:30:21.188 --> 00:30:22.022 
風險

00:30:23.190 --> 00:30:25.192 
風險 裏奇韋路和皮埃蒙特路

00:30:25.459 --> 00:30:27.494 
風險 在裏奇韋路有男童合唱團

00:30:27.561 --> 00:30:28.829 
而風險轉子讓我們

00:30:28.896 --> 00:30:33.333 
直接跳到並通過
那兒所有風險的列表

00:30:33.567 --> 00:30:35.936 
讓我們再次看看
步驟選項卡

00:30:36.003 --> 00:30:37.938 
步驟 選中

00:30:38.205 --> 00:30:41.875 
步驟 第41號和百老匯街
啓動於...

00:30:42.509 --> 00:30:43.744 
-那是我
-風險

00:30:44.411 --> 00:30:46.013 
在裏奇韋路有男童合唱團

00:30:48.615 --> 00:30:50.017 
在裏奇韋路有男童合唱團

00:30:50.217 --> 00:30:53.287 
在裏奇韋路吉爾伯特和蒙哥馬利間
有男童合唱團

00:30:53.587 --> 00:30:55.022 
沿着裏奇韋路繼續

00:30:55.856 --> 00:30:57.157 
風險 小心....

00:30:57.958 --> 00:30:59.793 
哦對不起 那裏開關被切斷了

00:30:59.860 --> 00:31:01.628 
你聽到它說：“風險”

00:31:01.695 --> 00:31:04.164 
因此我們對
輔助功能標籤的修改生效了

00:31:04.431 --> 00:31:07.100 
現在它傳達了這些單元格
的確代表風險的信息

00:31:07.401 --> 00:31:11.004 
而除此之外 我們能
直接使用風險轉子跳至它們

00:31:11.772 --> 00:31:13.574 
好吧
讓我們跳回到幻燈片

00:31:18.212 --> 00:31:19.713 
對tvOS做一個快速總結

00:31:20.347 --> 00:31:23.483 
tvOS apps都建有UIKit
所以我們之前所談的一切

00:31:23.550 --> 00:31:25.886 
也都
直接適用於它們

00:31:26.320 --> 00:31:29.056 
但也有一些注意事項
你需要記住

00:31:29.122 --> 00:31:31.291 
構建你的輔助功能電視應用時

00:31:31.358 --> 00:31:34.795 
主要事實是
tvOS有一個焦點驅動界面

00:31:36.563 --> 00:31:40.100 
因此tvOS的一個常見模式
是使用頁眉來分組

00:31:40.567 --> 00:31:44.671 
屏幕上的內容
並從視覺上將其與其他內容分開

00:31:45.539 --> 00:31:49.109 
你可以把類似的體驗提供給
通過VoiceOver使用

00:31:49.176 --> 00:31:52.012 
輔助功能標題元素API
來使用你的應用的用戶

00:31:53.046 --> 00:31:56.116 
在你的輔助性視圖中
其超級視圖中

00:31:56.283 --> 00:31:58.852 
或在適用的視圖控制器中
將該屬性設置爲

00:31:59.786 --> 00:32:02.890 
與該內容相關聯的標題

00:32:03.690 --> 00:32:06.159 
然後當有人
瀏覽到你的項目時

00:32:06.493 --> 00:32:08.629 
VoiceOver
會用一個獨特的音調

00:32:08.695 --> 00:32:11.632 
爲你的應用用戶
讀出相關的標題

00:32:11.965 --> 00:32:13.734 
來給其提供一種內容感

00:32:17.938 --> 00:32:21.942 
我錄製了一個
藝術畫廊應用短片在這裏

00:32:22.442 --> 00:32:24.511 
當我播放它時

00:32:24.578 --> 00:32:27.714 
我要把焦點重心下移
到底部的可用作品的

00:32:27.781 --> 00:32:29.249 
收集視圖

00:32:30.050 --> 00:32:33.887 
你會聽到VoiceOver
用一個獨特的音調說“可用作品”

00:32:35.255 --> 00:32:37.558 
那是因爲我把那個標籤設置爲

00:32:37.758 --> 00:32:40.827 
收集視圖的
輔助功能標題元素

00:32:41.328 --> 00:32:43.030 
現在你也會聽到別的東西

00:32:43.096 --> 00:32:47.167 
當我暫停時
VoiceOver會開始閱讀

00:32:47.401 --> 00:32:50.537 
屏幕上所有的非可聚焦的
輔助功能元素

00:32:50.938 --> 00:32:52.172 
那麼現在讓我們聽聽吧

00:32:53.207 --> 00:32:54.374 
可用作品

00:32:54.741 --> 00:32:56.076 
穀物 按鈕

00:32:57.277 --> 00:32:58.745 
題目 穀物

00:32:58.946 --> 00:33:00.747 
作者 維維安李

00:33:00.948 --> 00:33:01.782 
描述

00:33:02.082 --> 00:33:03.851 
掬起一束穀物

00:33:04.251 --> 00:33:05.919 
它在晨露中閃亮

00:33:06.587 --> 00:33:09.423 
我之所以向你展示
次要的全部閱讀行爲

00:33:09.489 --> 00:33:12.659 
是要費盡心思讓你知道
你的應用提供的所有信息

00:33:13.227 --> 00:33:15.863 
都需要通過一個
輔助功能元素被曝光

00:33:16.196 --> 00:33:20.000 
即使在它本身不可由
由tvOS聚焦引擎來聚焦

00:33:20.501 --> 00:33:25.038 
當你這樣做時
當你用VoiceOver暫停瀏覽時

00:33:25.305 --> 00:33:29.476 
隨後VoiceOver會讀出
屏幕上所有的非聚焦內容

00:33:29.643 --> 00:33:33.247 
使信息將被傳達給通過
VoiceOver使用該應用的人士

00:33:34.681 --> 00:33:35.849 
好的 讓我們總結一下

00:33:37.017 --> 00:33:39.253 
所以當你爲你的應用

00:33:39.353 --> 00:33:40.721 
着眼於輔助功能時

00:33:40.787 --> 00:33:42.256 
記住你在這裏
所學到的

00:33:43.190 --> 00:33:45.225 
首先輔助功能意味着每一個人

00:33:45.692 --> 00:33:48.395 
這是關於把你的應用的非凡用戶體驗

00:33:48.462 --> 00:33:50.464 
儘可能多的提供給每一個人

00:33:52.566 --> 00:33:55.435 
在設計之初
就考慮輔助功能爲好

00:33:55.836 --> 00:33:57.671 
在你的界面是否有對有運動能力殘疾

00:33:57.738 --> 00:33:59.439 
的人士是難以使用的？

00:33:59.673 --> 00:34:01.375 
有沒有什麼東西對比度過低？

00:34:02.009 --> 00:34:02.843 
對不起

00:34:04.545 --> 00:34:06.446 
UIKit可以幫助你的應用

00:34:06.513 --> 00:34:08.949 
通過你採用輔助功能API
使其變得更易於使用

00:34:10.384 --> 00:34:13.487 
最後 易於使用的應用
是我們的平臺非凡的原因

00:34:13.554 --> 00:34:16.322 
非常感謝大家在這裏
並瞭解如何做到這一點

00:34:17.491 --> 00:34:19.860 
要了解更多信息
你可以在網上查詢了本次會話

00:34:19.927 --> 00:34:21.228 
它的會話編號是202

00:34:23.197 --> 00:34:26.199 
本週還有一些相關會議
你也應該看看

00:34:26.567 --> 00:34:30.304 
上午10點在這個房間
有一場包容性應用設計會話

00:34:30.370 --> 00:34:31.737 
所以一定要留下來

00:34:33.239 --> 00:34:36.176 
而週三
上午10點在諾布山

00:34:36.243 --> 00:34:38.745 
有一場就輔助功能審查你的應用的會話

00:34:38.812 --> 00:34:42.382 
你可從中瞭解更多有關
新輔助功能檢查器的東西

00:34:42.748 --> 00:34:44.751 
我確實建議你去看看

00:34:45.085 --> 00:34:46.420 
這就是我今天的全部發言

00:34:46.485 --> 00:34:48.322 
謝謝大家 祝會議愉快