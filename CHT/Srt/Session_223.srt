00:00:20.320 --> 00:00:22.589
最大限度利用Search APIS

00:00:22.656 --> 00:00:25.993
新特性和更新擴展搜索能力
演講223

00:00:29.229 --> 00:00:32.131
歡迎各位 我是
Vipul Ved Prakash

00:00:32.198 --> 00:00:35.002
我在Apple從事
Siri和Search的開發

00:00:35.302 --> 00:00:38.138
今天 我將和同事
John Hornkvist

00:00:38.338 --> 00:00:40.507
展示
Search APIs的新特性

00:00:40.574 --> 00:00:42.176
以及該如何最大限度地利用

00:00:42.776 --> 00:00:47.347
衆所周知 Spotlight逐漸
成爲了一個更強大的搜索工具

00:00:47.481 --> 00:00:49.316
在最近發行的一些iOS版本里

00:00:49.883 --> 00:00:53.787
在iOS 8裏
我們加入了查詢網絡資源的功能

00:00:53.854 --> 00:00:56.456
例如App Store
Maps和Wikipedia

00:00:57.291 --> 00:01:01.028
之後 在iOS 9裏
我們大幅擴大了範圍

00:01:01.094 --> 00:01:06.099
加入了資源 像音樂 貨幣換算
實時體育賽事得分

00:01:06.166 --> 00:01:08.135
網頁 還有很多很多

00:01:08.569 --> 00:01:12.773
或許 最主要的是
我們加入了簡單且強大的方式

00:01:13.040 --> 00:01:16.310
能讓我們使你們應用的內容
在Spotlight被搜索

00:01:16.510 --> 00:01:22.082
在iOS 10裏 今天我們要宣佈
這些Search APIs的擴展

00:01:22.149 --> 00:01:25.319
這將能讓你們對應用的內容進行
更深層次的搜索

00:01:25.752 --> 00:01:30.057
我們也簡化了Spotlight使用
也讓它更容易被找到

00:01:30.123 --> 00:01:33.927
那讓我們從看一些例子開始

00:01:33.994 --> 00:01:36.129
關於我們對Spotlight的改動

00:01:37.998 --> 00:01:40.701
Spotlight現可在
Notification Center裏找到

00:01:40.868 --> 00:01:42.903
這使它可以被更快捷地打開

00:01:44.571 --> 00:01:45.806
讓我們在這裏看個例子

00:01:45.873 --> 00:01:48.442
用戶收到了一條包含問題的信息

00:01:49.443 --> 00:01:51.345
這是經常有的事

00:01:51.612 --> 00:01:53.714
那他們想要查詢並回復

00:01:54.014 --> 00:01:58.952
不用退出messages 來到
主屏幕 下拉出Spotlight

00:01:59.052 --> 00:02:02.122
他們只需下拉出Spotlight
蓋過messages

00:02:03.423 --> 00:02:06.994
進行查詢 然後找到答案

00:02:08.461 --> 00:02:09.830
十分好用

00:02:12.165 --> 00:02:15.169
我們也在鎖定屏幕
添加了Spotlight

00:02:15.402 --> 00:02:17.538
也添加了對快速預覽結果的支持

00:02:17.604 --> 00:02:19.206
通過使用3D Touch

00:02:19.706 --> 00:02:21.208
讓我們來看一下操作

00:02:23.243 --> 00:02:25.546
假設你們在和朋友爭論

00:02:25.612 --> 00:02:27.314
Steph Curry在哪出生

00:02:28.182 --> 00:02:29.750
你們可以來到鎖定屏幕

00:02:31.251 --> 00:02:32.486
進行搜索

00:02:36.190 --> 00:02:39.393
找到結果 你們現在可用
3D Touch預覽這些結果

00:02:44.598 --> 00:02:47.701
找到你們想要的那個
在這裏是Wikipedia

00:02:48.535 --> 00:02:49.570
真的很好用

00:02:49.636 --> 00:02:51.371
當然 當你們在鎖屏狀態時

00:02:51.438 --> 00:02:55.542
我們只顯示從網上獲取的公開信息

00:02:59.046 --> 00:03:03.016
另外一個我們添加的很酷的功能是
Spotlight查詢建議

00:03:03.083 --> 00:03:07.754
它在輸入問題關鍵詞的上方
“快速輸入”那裏

00:03:08.055 --> 00:03:09.256
讓我們看個例子

00:03:09.690 --> 00:03:13.093
這裏用戶查詢班桌琴
通過以往的查詢 我們知道

00:03:13.160 --> 00:03:18.398
兩個常見完整輸入是
班卓琴絃和班卓琴調音器

00:03:18.532 --> 00:03:21.668
所以 如果他們所要的結果
不在屏幕上

00:03:21.869 --> 00:03:23.704
他們能從中選一個 找到答案

00:03:23.770 --> 00:03:28.342
這可讓許多查詢更快
被Spotlight處理

00:03:28.942 --> 00:03:30.277
我們做了許多的改進

00:03:30.644 --> 00:03:32.880
我們改進了自動拼寫更正

00:03:32.946 --> 00:03:34.515
爲應用開啓用例

00:03:34.581 --> 00:03:38.085
我們改進了對中文和日文腳本的支持

00:03:38.852 --> 00:03:40.053
在設備上

00:03:40.120 --> 00:03:42.456
總體來說 我們也提高了相關度

00:03:42.523 --> 00:03:43.991
所有的這些改動

00:03:44.057 --> 00:03:48.128
當然也適用被插入的內容
當使用Search APIs

00:03:49.463 --> 00:03:52.232
現在 讓我們將注意轉移到
Search APIs

00:03:53.400 --> 00:03:58.839
也許你們記得我們在iOS 9裏
加入了三個Search APIs

00:03:59.072 --> 00:04:02.843
有CoreSpotlight
它能讓你們添加用戶指定的

00:04:02.910 --> 00:04:06.813
或用戶創建的Spotlight
設備索引

00:04:07.981 --> 00:04:11.318
我們還加入了NSUserActivity
一個可搜索版本

00:04:11.718 --> 00:04:16.190
它能提供一個簡便的途徑
索引一切用戶

00:04:16.255 --> 00:04:20.194
在你們應用裏看過的內容
這樣他們就能被快速搜索和找回

00:04:21.128 --> 00:04:24.665
最後 我們加入了
通用鏈接索引

00:04:24.731 --> 00:04:28.569
這是一個服務器端的索引
有鏈接組成

00:04:28.635 --> 00:04:31.972
這些鏈接是我們通過
爬應用網站找到的

00:04:32.272 --> 00:04:34.074
我們的設計讓APIs和諧工作

00:04:34.141 --> 00:04:37.878
所以 無論結果來自設備或服務器

00:04:37.945 --> 00:04:42.816
它們看起來都一樣
讓你們應用的搜索成爲無縫體驗

00:04:44.918 --> 00:04:46.320
我興奮地宣佈...

00:04:47.154 --> 00:04:50.891
App Store有超過50,000
應用使用Search APIs

00:04:51.625 --> 00:04:52.759
這是十分驚人的

00:04:58.165 --> 00:05:01.869
我想那會是多麼酷
看見Search APIs用戶

00:05:01.935 --> 00:05:04.137
改善了日常的互動

00:05:04.204 --> 00:05:07.875
在我們的客戶和你們應用
還有iOS之間

00:05:07.975 --> 00:05:10.844
我想向你們介紹一些
我最喜歡的案例

00:05:11.812 --> 00:05:12.980
這是一個近期的例子

00:05:13.046 --> 00:05:17.651
我在計劃一個這週末去
夏威夷的毛伊島旅行

00:05:17.718 --> 00:05:21.154
我在過去的一個月裏
間歇地計劃着這個旅行

00:05:21.688 --> 00:05:25.325
有許多信息像酒店預訂和票務

00:05:25.392 --> 00:05:28.462
那些都可以通過我的設備找到
我通常

00:05:28.529 --> 00:05:33.800
使用應用或網站或翻閱郵件來
尋找它們

00:05:34.568 --> 00:05:36.069
但有了Search APIs

00:05:38.071 --> 00:05:39.840
我的經歷是這樣的

00:05:40.374 --> 00:05:43.277
那個我用來做這些預定的應用

00:05:43.343 --> 00:05:48.115
用CoreSpotlight將主要
信息添到Spotlight的索引

00:05:48.182 --> 00:05:50.817
以至於 我能看見我的機票

00:05:51.118 --> 00:05:53.954
我能看見通過Hotel
Tonight預定的酒店

00:05:54.021 --> 00:05:57.157
和一些通過Open Table
預定的晚餐

00:05:57.758 --> 00:06:00.394
我可以通過觸點這些結果
找到更多的信息

00:06:00.460 --> 00:06:02.196
像我簽到的時間...

00:06:04.765 --> 00:06:06.767
或是這些餐館的地址

00:06:11.338 --> 00:06:12.506
你會留意到

00:06:12.906 --> 00:06:15.375
我有些從Pinterest上
搜來的結果

00:06:15.442 --> 00:06:17.177
我有使用Pinterest應用

00:06:17.377 --> 00:06:20.047
來探尋在毛伊島能做些什麼

00:06:20.113 --> 00:06:22.616
Pinterest使用
NSUserActivity

00:06:23.217 --> 00:06:26.153
來爲我所在應用裏
瀏覽過的東西建立索引

00:06:28.589 --> 00:06:32.092
我能觸點其中一條結果
然後 繼續我的探索

00:06:36.196 --> 00:06:41.435
這是一個極好的行程搜索經歷

00:06:41.502 --> 00:06:44.371
通過我的設備找到所有
我知道能找到的信息

00:06:44.438 --> 00:06:47.040
以我們的經驗 一般來說

00:06:47.374 --> 00:06:52.312
爲用戶想返回去看的內容建立索引
會是一個明智的選擇

00:06:54.047 --> 00:06:56.617
另一個 我想分享的例子是
關於聯繫方式

00:06:56.683 --> 00:07:01.522
聯繫方式是最普遍的
Spotlight查詢用例之一

00:07:01.622 --> 00:07:03.357
這裏 我想搜索好兄弟Allen

00:07:03.423 --> 00:07:07.794
我看見了他的聯繫方式
是一個iPhone的方式

00:07:07.861 --> 00:07:12.065
我也看到了他的Skype資料和
一些對話

00:07:12.132 --> 00:07:15.369
在我們之間通過Yahoo
Mail和WhatsApp

00:07:15.435 --> 00:07:18.138
我能方便地返回到這些對話裏

00:07:21.475 --> 00:07:23.877
這是很有用的 因爲
這能提供給我

00:07:23.944 --> 00:07:28.782
對我的聯繫人有一個全方位的視角

00:07:28.849 --> 00:07:32.886
也能讓我通過他們選擇的途徑交流

00:07:37.925 --> 00:07:42.429
現在我們看過了用戶能自然地
應用Spotlight於

00:07:42.496 --> 00:07:45.432
Spotlight能本地支持的
所有事情

00:07:45.966 --> 00:07:48.435
如果你們有上述類型的內容

00:07:48.602 --> 00:07:51.572
利用它會是一個很棒的
擴大搜索範圍的方式

00:07:51.638 --> 00:07:54.208
也能讓你們的用戶對應用更感興趣

00:07:58.111 --> 00:08:01.448
那現在讓我們來看一個
通用鏈接索引的例子

00:08:01.548 --> 00:08:05.018
wikiHow是一個高質量
關於怎麼做的資源

00:08:05.085 --> 00:08:09.189
它有成千上萬的關於各種主題的文章

00:08:09.456 --> 00:08:13.093
在這我查詢一個重要的急救問題
怎樣做心肺復甦

00:08:13.160 --> 00:08:17.998
Spotlight顯示了一堆結果
有網頁 YouTube

00:08:18.198 --> 00:08:20.767
還有wikiHow上的部分

00:08:22.569 --> 00:08:26.240
wikiHow使用通用鏈接
並且他們是一款熱門應用

00:08:26.306 --> 00:08:29.309
所以我們在服務器上
對他們的文章建立了索引

00:08:29.376 --> 00:08:32.279
我們利用這些索引對應
適當的詢問

00:08:33.780 --> 00:08:37.183
這些結果還是十分完整的
點擊其中的一條

00:08:37.251 --> 00:08:41.087
我來到了這篇描述清晰的文章

00:08:42.456 --> 00:08:49.196
對wikiHow建立索引賦予了
Spotlight一個全新的功能

00:08:49.263 --> 00:08:52.032
這凸顯出了Search APIs
的強大之處

00:08:53.100 --> 00:08:55.402
看過上面的例子 讓我們來看下

00:08:55.469 --> 00:08:58.939
Search APIs
在iOS 10上有哪些新特性

00:08:59.573 --> 00:09:05.112
我們加入的第一個功能是
Continue Search in App

00:09:05.546 --> 00:09:07.181
有許多的查詢

00:09:07.514 --> 00:09:12.352
用戶想見到更多的結果
或你們也許無法添加

00:09:12.419 --> 00:09:15.322
正確的結果至Spotlight
由於各種原因

00:09:16.056 --> 00:09:18.992
那現在應用有了一個選擇

00:09:19.059 --> 00:09:22.229
在App Punch Out裏查詢

00:09:22.362 --> 00:09:28.836
如你們所見 在右上方的角落

00:09:31.138 --> 00:09:38.078
觸點這裏會將用戶與問題一起
帶入你們的應用

00:09:38.178 --> 00:09:42.616
這樣就可以在應用裏繼續搜索
很酷

00:09:46.453 --> 00:09:50.324
我們加入的第二個特性是
CoreSpotlight Search API

00:09:50.390 --> 00:09:52.092
這個名字有點冗長 但是

00:09:52.326 --> 00:09:56.430
事實上就是你們能將所有的東西
添加至

00:09:56.496 --> 00:10:01.134
Spotlight的搜索索引
通過CoreSpotlight API

00:10:01.235 --> 00:10:03.837
是不是很棒
如果可以通過這個索引

00:10:03.904 --> 00:10:06.673
支持應用內的搜索？
我認爲一定是

00:10:06.740 --> 00:10:10.611
然而這是CoreSpotlight
Search API能讓你做到的

00:10:13.146 --> 00:10:14.448
我們加入的第三個功能是

00:10:14.515 --> 00:10:17.351
估計深層鏈接受歡迎度的一個方式

00:10:17.518 --> 00:10:21.054
通過使用差分隱私
一個在keynote裏提過的技術

00:10:21.588 --> 00:10:24.825
我們會對此做更多的討論
在下面關於排序的討論裏

00:10:26.460 --> 00:10:28.428
最後 在衆多的要求下

00:10:28.495 --> 00:10:31.265
我們在web markup
預覽工具里加入了一個新特性

00:10:31.632 --> 00:10:34.968
它能讓你們看到和檢驗
架構的結果

00:10:35.269 --> 00:10:38.305
在你們將其加入到
通用鏈接索引之前

00:10:39.973 --> 00:10:43.377
除此之外 我們還做了許多改進

00:10:43.911 --> 00:10:45.913
對Search APIs
基於你們反饋

00:10:46.613 --> 00:10:50.584
我將邀請John介紹這些APIs

00:10:50.651 --> 00:10:52.719
並更深層地講述這些新功能

00:10:55.856 --> 00:10:59.860
讓我們來探討一下
如何利用Search APIs

00:11:00.727 --> 00:11:01.962
在下面的半小時裏

00:11:02.663 --> 00:11:05.766
我將講解一些
你們要爲應用做的事

00:11:06.166 --> 00:11:07.668
爲它能與Spotlight一起工作

00:11:08.268 --> 00:11:11.772
一些爲了讓你們的用戶有個很棒的體驗
而應該要做的

00:11:11.939 --> 00:11:13.607
和一些我們加入的新APIs

00:11:13.674 --> 00:11:16.710
爲了讓你們能更便捷地達到
你們想要的結果

00:11:18.312 --> 00:11:21.415
那大概以你們實現這個的順序

00:11:21.782 --> 00:11:25.586
我來講一下
關於如何把你們的內容加入到

00:11:25.652 --> 00:11:28.622
Spotlight的索引
並保持最新

00:11:29.890 --> 00:11:31.525
展示方式和用戶體驗

00:11:32.860 --> 00:11:36.230
在你們的應用裏運行無論是恢復內容

00:11:36.663 --> 00:11:38.265
或是繼續搜索

00:11:39.132 --> 00:11:41.768
之後 我將會聊一下
新的Search API

00:11:42.603 --> 00:11:46.106
在Vipul回到臺上給你們一個
關於排序的簡介之前

00:11:48.375 --> 00:11:51.612
我們使用了三種技術
它們能支持大部分的用例

00:11:52.312 --> 00:11:55.015
你們設備上的核心支持
CoreSpotlight

00:11:56.116 --> 00:11:58.752
用於應用歷史記錄的
NSUserActivity

00:11:59.953 --> 00:12:03.957
及web markup公開在線內容
的通用鏈接

00:12:05.559 --> 00:12:08.295
當然 你們可以將這三者一起使用

00:12:09.229 --> 00:12:12.099
舉個例子 設想一個食譜的應用

00:12:13.367 --> 00:12:16.603
它提供一個能訪問大量食譜的接口

00:12:17.237 --> 00:12:21.675
由於網站上有許多宿主
深層鏈接會是一個好的選擇

00:12:22.342 --> 00:12:26.180
這個應用也許會有收藏功能
通過CoreSpotlight實現

00:12:27.748 --> 00:12:31.418
你們的用戶會想返回至之前看過的內容

00:12:31.652 --> 00:12:34.354
那爲了最好的體驗
你們也可以使用應用歷史

00:12:34.721 --> 00:12:36.557
通過NSUserActivity

00:12:38.892 --> 00:12:41.929
好的 在座沒離開去午餐的各位

00:12:42.296 --> 00:12:43.964
我們跳過Search APIs簡介

00:12:44.031 --> 00:12:46.166
直接來聊下怎樣對內容建立索引

00:12:46.800 --> 00:12:48.468
從CoreSpotlight開始

00:12:49.837 --> 00:12:53.073
CoreSpotlight是
在iOS上用於建立索引的API

00:12:53.407 --> 00:12:55.676
在設備上並支持文件保護

00:12:56.109 --> 00:12:58.278
這樣你們可以
對用戶的私人內容建立索引

00:12:59.179 --> 00:13:02.583
你們的應用擁有掌控權
你們決定對什麼添加索引

00:13:04.251 --> 00:13:07.254
你們可以對應用的所有內容建立索引
可以是收藏

00:13:07.387 --> 00:13:10.557
和書籤 信息和郵件

00:13:10.724 --> 00:13:14.428
文檔 圖片 音樂視頻 遊戲關卡

00:13:14.494 --> 00:13:17.431
你們應用的進入點 等等

00:13:19.666 --> 00:13:21.268
有兩個基本的操作

00:13:22.603 --> 00:13:25.239
第一 你們要將那些東西添加至索引

00:13:26.440 --> 00:13:29.877
通過創建一個
CSSearchableItemAttributeSet來實現

00:13:30.344 --> 00:13:37.150
它包含了元數據和其它的相關內容

00:13:37.851 --> 00:13:38.685
然後

00:13:40.854 --> 00:13:41.955
你們要設置至少一個屬性

00:13:42.022 --> 00:13:43.824
這裏 我們設定了
display name

00:13:46.727 --> 00:13:49.796
你們可使用AttributeSet
創建可搜索內容

00:13:51.431 --> 00:13:54.801
可使用uniqueIdentifier
Spotlight將會用它

00:13:55.335 --> 00:13:58.372
在下面的操作裏
來識別項目內容

00:13:58.438 --> 00:14:01.141
當我們開啓你們應用的時候
它也會被用到

00:14:02.309 --> 00:14:04.011
那domainIdentifier

00:14:04.478 --> 00:14:08.248
它讓你們能設定共享的屬性

00:14:08.315 --> 00:14:11.118
在各種的項目之間
之後的刪除裏可以用得到

00:14:12.419 --> 00:14:15.689
你們指示CoreSpotlight
添加項目至索引

00:14:16.957 --> 00:14:18.492
當回調方法被調用時

00:14:19.526 --> 00:14:21.762
項目會被安全地提交至儲存

00:14:22.529 --> 00:14:24.998
或 一個錯誤信息會被傳遞至
回調日誌

00:14:28.202 --> 00:14:31.572
對刪除項目 我們有三個APIs

00:14:32.039 --> 00:14:35.008
你們可以通過識別符來刪除
一個特定的項目

00:14:35.909 --> 00:14:37.878
舉例 如要刪除一個文檔

00:14:41.748 --> 00:14:43.617
也能刪除一組項目

00:14:44.084 --> 00:14:46.587
通過使用之前提過的
domainIdentifier

00:14:46.653 --> 00:14:49.456
這會很有用
如果用戶從一個賬戶註銷

00:14:49.623 --> 00:14:52.726
終止訂閱或是類似的

00:14:54.127 --> 00:14:58.131
最後 你們可以從應用裏
刪除所有的項目

00:14:58.298 --> 00:15:02.236
這會很有用
如果你們遇到像版本不匹配

00:15:02.569 --> 00:15:05.138
然後你們要清楚索引 重新建立

00:15:05.939 --> 00:15:09.643
這也會在應用被卸載時被系統調用

00:15:14.114 --> 00:15:17.351
那現在讓我們來看一些最佳的實踐和
一些進階的使用

00:15:17.918 --> 00:15:21.955
我們將會講一下如何註冊索引代理
使用CoreSpotlight

00:15:22.022 --> 00:15:24.358
客戶狀態操控漸進的
索引建立

00:15:25.392 --> 00:15:26.994
一些性能問題

00:15:28.095 --> 00:15:30.097
和如何創建
CoreSpotlight擴展

00:15:32.633 --> 00:15:34.468
你們需要註冊一個
索引代理

00:15:34.535 --> 00:15:36.803
因爲這讓Spotlight初始索引

00:15:37.070 --> 00:15:39.540
當你們的應用第一次在系統上運行時

00:15:39.773 --> 00:15:41.375
或在恢復備份之後

00:15:41.909 --> 00:15:45.612
當用戶安裝你們的應用時,
或在災難恢復時

00:15:46.647 --> 00:15:48.715
這也能讓Spotlight發出

00:15:48.782 --> 00:15:51.084
請求讓你們重新對某項目建立索引

00:15:52.920 --> 00:15:55.189
這通常是由於
你們設定了一個過期日期

00:15:55.255 --> 00:15:58.458
Spotlight想檢測項目
是否已真的過期

00:16:00.661 --> 00:16:03.230
那作爲索引代理
需要實現

00:16:03.297 --> 00:16:05.265
CSSearchableIndexDelegate協議

00:16:06.233 --> 00:16:07.768
它有兩個必要的方法

00:16:09.002 --> 00:16:10.838
ReindexAllSearchableItems

00:16:11.305 --> 00:16:14.908
當要添加任何東西至索引時
它就會被調用

00:16:15.342 --> 00:16:18.412
如果你們在自己的數據庫裏跟蹤
個別項目的索引

00:16:18.879 --> 00:16:22.716
當接收到這個方法時
你們要清除索引的狀態

00:16:23.050 --> 00:16:25.652
除非你們用客戶狀態
我們等下細說

00:16:27.487 --> 00:16:31.091
第二個被調用的方法是
使用識別符重新建立索引

00:16:32.626 --> 00:16:36.196
當它被調用時 你們查看
Spotlight正請求的項目

00:16:37.231 --> 00:16:40.100
然後 將它們添加至索引或刪除
視情況而定

00:16:40.534 --> 00:16:44.271
對於這兩個方法 你們要調用
acknowledgmentHandler

00:16:44.338 --> 00:16:48.041
僅當你們完成了或收到了最後的回調
對任何任務

00:16:48.108 --> 00:16:49.543
你們派給CoreSpotlight

00:16:49.910 --> 00:16:54.548
這樣就能確保項目的索引被完整建立

00:16:54.648 --> 00:16:56.483
並在下面的流程不再被調用

00:16:57.184 --> 00:17:02.689
若你們不調用acknowledgmentHandler
那兩個方法或許會被再次調用 若過早地調用

00:17:03.357 --> 00:17:05.358
你們也許還未來得及完成對索引的建立

00:17:07.060 --> 00:17:10.196
對某些應用來說
我們發現會更便捷

00:17:10.263 --> 00:17:13.300
通過使用客戶狀態
相比較於嘗試着管理

00:17:13.400 --> 00:17:16.270
索引建立的回調與數據庫的事務

00:17:19.205 --> 00:17:22.809
客戶狀態提供了
一個異步的方式

00:17:22.876 --> 00:17:26.012
讓你的項目能與
Spotlight裏的同步

00:17:27.414 --> 00:17:31.785
因爲是異步 你們其實是在應用一個
一致性模型

00:17:33.687 --> 00:17:37.124
但你們保持對Spotlight與
你們數據庫之間的同步

00:17:37.824 --> 00:17:39.393
沒有任何多餘步驟

00:17:41.128 --> 00:17:44.464
客戶狀態是個opaque token
它被儲存在Spotlight索引裏

00:17:44.631 --> 00:17:46.166
在索引建立的同時被更新

00:17:46.233 --> 00:17:48.502
然後當應用被再次開啓時被取回

00:17:49.903 --> 00:17:52.606
一般來說 最簡單的實現方式是

00:17:52.673 --> 00:17:54.842
在你們的數據庫裏添加註釋

00:17:55.442 --> 00:17:56.910
舉例 次序號

00:17:57.911 --> 00:18:00.914
你們在Spotlight裏將它
作爲客戶狀態使用

00:18:01.348 --> 00:18:04.451
再次開啓後
你們要檢測客戶狀態

00:18:04.852 --> 00:18:06.954
如果它與你們所期望的不符

00:18:07.020 --> 00:18:09.056
那你們要爲數據庫裏所有的項目
建立索引

00:18:09.456 --> 00:18:12.426
使用比你們回傳至Spotlight
的更高次序號

00:18:13.560 --> 00:18:16.063
另一個方式是 通過次序號取得

00:18:16.763 --> 00:18:20.567
journal playback
的起始位置

00:18:22.236 --> 00:18:23.737
這會是很有用的

00:18:23.971 --> 00:18:26.340
讓你們的內容異步保持最新

00:18:27.407 --> 00:18:30.110
也能確保不消耗過多的能源

00:18:33.680 --> 00:18:37.117
爲能使用客戶狀態
你們要創建一個命名的索引實例

00:18:37.651 --> 00:18:41.088
這名字讓我們知道
你們想要的客戶狀態

00:18:41.688 --> 00:18:43.824
只能獲取
應用的客戶狀態

00:18:43.891 --> 00:18:46.960
但你們可以對多個數據庫
建立索引

00:18:47.528 --> 00:18:50.631
這樣的話 你們要給每個數據庫
一個特有的名字

00:18:51.598 --> 00:18:54.134
有了索引後
你們要初始一個索引批處理

00:18:54.968 --> 00:18:56.637
你們像往常一樣添加可查詢項目

00:18:57.571 --> 00:18:59.973
completionHandler
在這裏並不重要

00:19:00.974 --> 00:19:04.144
因爲當批處理完成時
你們會得到一個完成信號

00:19:06.013 --> 00:19:08.482
你們要通過運算得到所選狀態

00:19:10.184 --> 00:19:11.818
再將它遞入Spotlight

00:19:13.320 --> 00:19:15.022
當你們完成了批處理後

00:19:16.356 --> 00:19:20.961
這裏你們需要留意
completionHandler

00:19:23.630 --> 00:19:26.133
你們應用下次開啓時
你們獲取客戶狀態

00:19:27.000 --> 00:19:30.037
你們要決定需要執行哪些操作

00:19:30.804 --> 00:19:33.073
讓Spotlight才能和
你們當前狀態同步

00:19:34.241 --> 00:19:37.211
由於客戶狀態是
與批處理一起儲存於索引

00:19:37.611 --> 00:19:38.879
因此確保了完整性

00:19:39.179 --> 00:19:41.648
你們可以重演每一個需要的操作

00:19:42.049 --> 00:19:43.684
使兩者同步

00:19:44.585 --> 00:19:45.953
當你們的應用下次被開啓時

00:19:46.053 --> 00:19:48.288
你們會使用同一個名字
創建一個索引實例

00:19:49.089 --> 00:19:52.326
你們會取得客戶狀態
這就是一個異步的調用

00:19:53.227 --> 00:19:55.896
你們要在回調裏處理所有的錯誤

00:19:57.097 --> 00:20:00.100
還要檢查你們取回的狀態
是否是你們想要的

00:20:00.601 --> 00:20:04.137
如果不是 你們調用這方法 使其同步

00:20:05.138 --> 00:20:07.174
現在讓我們來看下性能問題

00:20:07.541 --> 00:20:09.610
Spotlight處理速度很快

00:20:09.977 --> 00:20:12.045
所以要在你們那端將開銷最小化

00:20:12.179 --> 00:20:15.115
來確保應用能跟得上

00:20:16.216 --> 00:20:19.186
你們要優化任何對
文件或數據庫的訪問

00:20:20.454 --> 00:20:23.423
並留意內存使用情況

00:20:24.625 --> 00:20:27.227
注意對CoreSpotlight
每次調用都有一定成本

00:20:27.928 --> 00:20:31.565
所以 可能時 儘量成批傳遞
避免單個傳遞

00:20:32.900 --> 00:20:36.136
只是十個一小批

00:20:36.370 --> 00:20:39.540
也會減少一個數量級的IPC開銷

00:20:42.009 --> 00:20:45.612
由於你們的應用會在用戶使用的同時
建立索引

00:20:45.979 --> 00:20:48.148
確保你們不會阻塞主線程

00:20:49.316 --> 00:20:54.188
最後 避免幹擾在使用後臺線程的UI

00:20:55.756 --> 00:20:58.258
好 讓我們看下
CoreSpotlight擴展

00:20:58.859 --> 00:21:01.662
擴展能在你們的應用不運行的情況下
建立索引

00:21:03.430 --> 00:21:04.698
這能讓你們趕上進度

00:21:05.866 --> 00:21:09.236
在使用備份進行災難恢復之後

00:21:09.903 --> 00:21:12.139
或你們的圖標過期時

00:21:12.206 --> 00:21:14.174
Spotlight能使用你們的擴展

00:21:14.508 --> 00:21:17.144
不用使用你們的應用

00:21:17.244 --> 00:21:19.613
這很好 因爲那時你們的應用
可能沒在運行

00:21:21.315 --> 00:21:24.384
擴展的接口與
索引代理相同

00:21:24.985 --> 00:21:29.923
若你們能構建你們的代碼讓索引代理
成爲獨立的部分

00:21:30.190 --> 00:21:33.660
那實現擴展也是十分容易的

00:21:35.662 --> 00:21:37.764
讓項目能被你們的擴展訪問

00:21:37.831 --> 00:21:39.533
你們可使用share.groups

00:21:39.766 --> 00:21:41.468
要獲得更多相關信息

00:21:41.535 --> 00:21:45.005
看一下去年
“應用擴展最佳實踐”的演講

00:21:45.906 --> 00:21:48.208
下面讓我們來看下
如何保持項目爲最新

00:21:48.675 --> 00:21:51.044
如我之前所提到的
你們能用過期日期

00:21:51.845 --> 00:21:54.481
來預防舊內容堆積在索引裏

00:21:55.115 --> 00:21:59.686
CoreSpotlight會在
將近過期日期時調出你們的應用

00:22:00.521 --> 00:22:03.290
你們可以更新過期日期
或更新項目的數據

00:22:03.357 --> 00:22:04.324
如果有需要

00:22:05.392 --> 00:22:07.594
若你們要將新內容
加至Spotlight

00:22:08.495 --> 00:22:10.030
你們可以使用後臺獲取

00:22:10.464 --> 00:22:13.133
這能讓你們的應用在後臺打開

00:22:14.234 --> 00:22:18.005
讓你們添加內容並建立索引

00:22:18.972 --> 00:22:19.806
最後

00:22:21.408 --> 00:22:25.646
若你們採用非常規或非高頻率的更新推送模型

00:22:25.913 --> 00:22:28.382
你們可以使用靜默推送

00:22:29.449 --> 00:22:32.819
讓你們的服務器來告訴你們必要的更新

00:22:34.021 --> 00:22:35.689
想了解跟多關於後臺獲取

00:22:35.756 --> 00:22:37.291
和靜默推送

00:22:37.791 --> 00:22:41.562
可以看下“多任務的新特性”演講

00:22:41.628 --> 00:22:43.430
2013年的 WWDC

00:22:44.665 --> 00:22:47.034
這就是CoreSpotlight
索引的所有內容

00:22:47.568 --> 00:22:50.404
下面我們聊下應用歷史
與NSUserActivity

00:22:52.840 --> 00:22:56.243
NSUserActivity
在iOS 8裏爲Handoff添加

00:22:56.710 --> 00:23:00.380
他讓你們能創建應用當前狀態的
一個代表

00:23:00.614 --> 00:23:02.282
可以被遞入另一個設備

00:23:02.349 --> 00:23:06.119
iOS 9後存於Spotlight
索引裏支持應用歷史

00:23:09.523 --> 00:23:13.160
當用戶瀏覽你們的應用時
你們提交活動

00:23:13.760 --> 00:23:17.130
爲了用戶可能會記得並想返回去的內容

00:23:19.299 --> 00:23:22.936
那你們應該問自己
什麼時候用戶活動

00:23:23.003 --> 00:23:26.974
應該有索引 簡單的說
就是用戶是否會返回到這

00:23:27.508 --> 00:23:30.110
若相同項目通過
CoreSpotlight有索引

00:23:30.611 --> 00:23:32.379
那答案基本上時肯定的

00:23:34.381 --> 00:23:38.085
2014年的“採用切換”演講
有許多相關的信息

00:23:38.151 --> 00:23:40.153
關於如何使用
NSUserActivity

00:23:42.456 --> 00:23:44.691
爲了讓搜索能使用
NSUserActivity

00:23:44.791 --> 00:23:47.794
你要標記它爲可查詢
併爲元數據添加索引

00:23:47.861 --> 00:23:49.930
通過使用
CSSearchableItemAttributeSet

00:23:52.366 --> 00:23:53.634
你們標記它爲可查詢

00:23:53.967 --> 00:23:56.470
通過設定eligibleForSearch屬性爲真

00:23:58.972 --> 00:24:02.209
你們也可標記NSUserActivity
讓它能建立公開索引

00:24:02.276 --> 00:24:04.378
讓它成爲網上索引的候選

00:24:04.645 --> 00:24:06.313
Vipul會等一下來細談

00:24:07.147 --> 00:24:09.983
完成後 它將作爲搜索結果顯示在
Spotlight Search裏

00:24:10.050 --> 00:24:12.953
你們的應用可以返回到用戶的活動

00:24:13.287 --> 00:24:15.022
當用戶在Spotlight裏選擇它

00:24:22.296 --> 00:24:25.199
你們的用戶只需記得一個關鍵詞

00:24:26.733 --> 00:24:28.802
從他們之前所見的
這就能將他們帶回到

00:24:28.869 --> 00:24:30.470
你們應用裏的內容

00:24:33.941 --> 00:24:38.745
好的 就如我所說的 你們可使用
CoreSpotlight和NSUserActivity

00:24:38.812 --> 00:24:40.480
對一樣的內容

00:24:42.950 --> 00:24:45.252
區別在於
NSUserActivity顯示

00:24:45.352 --> 00:24:47.855
用戶在你們的應用裏做了些什麼

00:24:48.255 --> 00:24:51.124
CoreSpotlight是指
你的應用有些什麼

00:24:51.959 --> 00:24:55.429
所以若你們同時使用兩者
可關聯NSUserActivity

00:24:55.495 --> 00:24:57.831
與CSSearchableItem
對相同的內容

00:24:58.198 --> 00:25:01.168
爲排序提供幫助
並防止重複的結果

00:25:02.202 --> 00:25:05.405
這能通過設定
relatedUniqueIdentifier屬性來達成

00:25:06.340 --> 00:25:08.942
它在AttributeSet裏
將它設定成uniqueIdentifier

00:25:09.009 --> 00:25:11.378
對應你想關聯的
CSSearchableItem

00:25:12.913 --> 00:25:15.682
這會把NSUserActivity
的生存週期

00:25:16.083 --> 00:25:17.384
與CSSearchableItem
聯繫在一起

00:25:17.718 --> 00:25:20.654
爲保護你們
防止數據被遺留在設備上

00:25:20.888 --> 00:25:23.557
在用戶刪除了私人的內容之後

00:25:26.093 --> 00:25:30.831
不過 不是所有數據都是私人的
都由用戶所管理

00:25:31.698 --> 00:25:34.968
舉例 我們之前提到的食譜應用裏

00:25:35.269 --> 00:25:37.371
你們或許想關聯
NSUserActivity

00:25:38.105 --> 00:25:41.775
與一個可能CSSearchableItem
一個當前不存在的項目

00:25:43.443 --> 00:25:46.079
用戶可能在將來把其作爲收藏

00:25:47.748 --> 00:25:50.050
如果你們用了relatedUniqueIdentifier

00:25:50.117 --> 00:25:55.055
CoreSpotlight會在你們添加
NSUserActivity時立即將其刪除

00:25:55.923 --> 00:25:57.891
因爲 它所關聯的項目當前不存在

00:25:58.692 --> 00:26:01.161
爲了解決這個問題
我們加入了一個新的屬性

00:26:01.395 --> 00:26:06.366
weakRelatedUniqueIdentifier
它讓你們能弱綁定CSSearchableItem

00:26:07.835 --> 00:26:10.437
它能在CSSearchableItem之前存在

00:26:10.504 --> 00:26:12.940
並會一直存在
直至CSSearchableItem被刪除

00:26:14.174 --> 00:26:16.543
至於relatedUniqueIdentifier

00:26:16.610 --> 00:26:19.279
你們只要在AttributeSet
設定這個屬性

00:26:19.346 --> 00:26:20.848
給NSUserActivity

00:26:23.550 --> 00:26:28.589
缺點是當
CSSearchableItem被刪除後

00:26:29.189 --> 00:26:31.325
NSUserActivity
會繼續存在

00:26:31.825 --> 00:26:35.829
所以 如果你們擔心
可查詢項目的生存期

00:26:35.896 --> 00:26:37.397
或NSUserActivity

00:26:37.464 --> 00:26:41.435
那你們要自己刪除
NSUserActivity

00:26:42.236 --> 00:26:44.705
有幸的是 在iOS 10裏

00:26:45.205 --> 00:26:46.473
我們讓這成爲了可能

00:26:47.674 --> 00:26:50.377
我們添加了domainIdentifiers
至NSUserActivities

00:26:51.612 --> 00:26:54.548
這是CSSearchableItemAttributeSet的一部分

00:26:55.883 --> 00:26:59.987
它能讓你們通過domainIdentifier
刪除NSUserActivities

00:27:00.087 --> 00:27:02.222
就像對CSSearchableItem一樣

00:27:03.323 --> 00:27:06.426
如果你們同時使用CSSearchableItems
和NSUserActivities

00:27:06.493 --> 00:27:09.596
使用相同的domainIdentifier會是一個
明智的選擇

00:27:10.898 --> 00:27:14.868
這就是如何在iOS 10裏
通過NSUserActivity建立索引

00:27:15.335 --> 00:27:18.906
下面 讓我們來聊下通用鏈接
與web markup

00:27:20.774 --> 00:27:25.245
驅動你們應用的內容也許是在網上的
而不是在本地應用的內部

00:27:26.313 --> 00:27:28.682
如這些是公開內容
你們可使用web markup

00:27:28.749 --> 00:27:31.785
讓它們通過通用鏈接索引
在Spotlight裏成爲可查詢的

00:27:33.220 --> 00:27:35.522
這很適合網站上的內容

00:27:35.589 --> 00:27:36.790
和應用內部的

00:27:36.957 --> 00:27:40.727
也是一個好的解決方法
當項目內容太大 無法儲存在設備上時

00:27:41.762 --> 00:27:43.830
由於 你們的內容在網上

00:27:44.331 --> 00:27:47.768
沒有應用的用戶也可以看到結果

00:27:48.869 --> 00:27:53.807
這能讓你們招攬更多的用戶
增進應用的安裝

00:27:54.875 --> 00:27:59.146
結果可同時在Spotlight
和Safari裏顯示

00:27:59.346 --> 00:28:01.782
讓你們的內容可以
讓更多的用戶看到

00:28:04.518 --> 00:28:08.422
那要實現
通用鏈接索引

00:28:08.822 --> 00:28:10.190
你們要允許索引

00:28:10.858 --> 00:28:14.161
要讓Applebot能調用
你們網站的文本

00:28:15.229 --> 00:28:16.997
還要讓Apple Note
能進入網站

00:28:17.064 --> 00:28:20.434
在提交應用至App Store時
指定調用的URL

00:28:22.970 --> 00:28:26.006
對於深層鏈接 強烈建議
用通用鏈接

00:28:26.373 --> 00:28:28.675
這裏你們需要實現
雙重身份驗證

00:28:28.742 --> 00:28:30.110
在網站端和在應用端

00:28:31.411 --> 00:28:34.314
在你們的應用代理裏實現
continueUserActivity方法

00:28:34.414 --> 00:28:37.851
爲確保當用戶選擇了結果時
你們的應用會處理深層鏈接

00:28:39.586 --> 00:28:42.222
使用schema.org和
Open Graph標記你們的內容

00:28:42.723 --> 00:28:45.259
這能讓你們的內容被豐富多樣地展現

00:28:46.627 --> 00:28:48.662
利用Search API驗證工具

00:28:49.630 --> 00:28:52.966
來檢查深層鏈接、標記
標題、描述 等等

00:28:55.068 --> 00:28:58.572
去看下2015年的
“引入Search APIs”演講

00:28:59.006 --> 00:29:02.342
和關於通用鏈接
的開發者文檔

00:29:04.678 --> 00:29:08.182
這些就是我們當前支持的構架

00:29:08.248 --> 00:29:09.783
我們打算在將來加入更多

00:29:11.251 --> 00:29:13.887
留意交互計算
和總體評級

00:29:13.954 --> 00:29:17.057
這些對應用的搜索結果排序
會是十分有用的

00:29:18.759 --> 00:29:20.260
Apple提供了一個測試工具

00:29:21.728 --> 00:29:23.997
在search.developer.apple.com

00:29:24.464 --> 00:29:28.302
如果你們的應用使用深層鏈接
應該去看一下

00:29:30.237 --> 00:29:32.906
它現在可以將你們的結果
可視化地顯示

00:29:32.973 --> 00:29:35.175
包括對schema.org
標記的支持

00:29:37.044 --> 00:29:38.912
從驗證工具裏所得的內容

00:29:39.079 --> 00:29:42.482
能幫助你們可視化
那些通過Applebot爬網程序

00:29:42.883 --> 00:29:46.186
建立過索引的內容
包括標題、描述、標記和URL

00:29:47.421 --> 00:29:50.991
現在你們看過如何通過這三個APIs
對內容建立索引

00:29:51.191 --> 00:29:54.094
很有可能你們會想將它們一起使用

00:29:55.562 --> 00:29:57.064
即使是對相同的內容

00:30:00.968 --> 00:30:04.137
那當使用多個APIs時 要牢記的是

00:30:04.204 --> 00:30:08.408
在所有APIs裏
關聯代表同一內容的項目

00:30:09.109 --> 00:30:12.145
通過設定與NSUserActivity
相關的uniqueIdentifier

00:30:12.212 --> 00:30:14.548
爲CoreSpotlight
的uniqueIdentifier

00:30:15.048 --> 00:30:20.087
CoreSpotlight內容的URL
和NSUserActivity的網頁URL

00:30:21.021 --> 00:30:22.523
爲網頁URL

00:30:22.589 --> 00:30:26.493
你們告訴Spotlight
所有索引裏的紀錄代表同一個項目

00:30:27.461 --> 00:30:29.530
這能讓你們的查詢不會重複

00:30:30.297 --> 00:30:32.999
這也幫助了項目的排序

00:30:35.569 --> 00:30:39.239
好的  現在我們看了如何將內容
添加至索引的三個方法

00:30:40.274 --> 00:30:42.276
CoreSpotlight對應內容

00:30:43.043 --> 00:30:45.379
NSUserActivity
對應用歷史

00:30:46.079 --> 00:30:48.048
通用鏈接
與web markup

00:30:48.115 --> 00:30:50.851
對應網上公開的內容

00:30:53.020 --> 00:30:56.490
下面讓我們聊下
怎樣向用戶展示這些信息

00:30:59.893 --> 00:31:03.397
要在Spotlight裏有好的展現
你需要一組好的縮略圖

00:31:03.931 --> 00:31:06.333
默認下Spotlight會
使用你們應用圖標

00:31:07.234 --> 00:31:09.770
這會讓結果乍一看很難區分

00:31:10.637 --> 00:31:13.473
這不礙事 如果你們只有一個結果

00:31:13.540 --> 00:31:16.710
但如果有多個結果
那感覺會是十分不同的

00:31:18.111 --> 00:31:21.481
與縮略圖一樣重要
或許更重要的是標題

00:31:21.615 --> 00:31:23.917
一個好的標題不只是看起來舒服

00:31:23.984 --> 00:31:26.320
它也是經常被用戶用來搜索的

00:31:28.088 --> 00:31:29.990
在縮略圖和標題之後

00:31:30.858 --> 00:31:33.827
你們要設置其它的
適合你們內容的字段

00:31:34.294 --> 00:31:38.465
提供描述信息會是一個好主意
像評分 評價

00:31:38.932 --> 00:31:41.368
日期相關項目的日期屬性

00:31:41.435 --> 00:31:47.674
比如 旅程預定 日期 提醒 事件
還有很多

00:31:49.543 --> 00:31:52.246
對於文檔 一般的元數據

00:31:52.646 --> 00:31:55.716
比如 文檔大小和頁數
都是很有幫助的

00:31:57.451 --> 00:32:00.020
如果你們設定了適合內容的類型

00:32:00.087 --> 00:32:02.556
Spotlight可以更好的工作

00:32:03.257 --> 00:32:04.591
讓我們來看些例子

00:32:07.127 --> 00:32:11.064
Hotel Tonight應用
很好地利用了縮略圖

00:32:11.131 --> 00:32:13.267
顯示了容易識別的地標

00:32:13.367 --> 00:32:15.802
同時還有標題和有用的描述

00:32:20.374 --> 00:32:22.976
你們可以使用web markup
取得相同的效果

00:32:23.043 --> 00:32:26.780
通過設定og:image og:title
和og:description

00:32:29.316 --> 00:32:32.486
Open Table使用
標題描述 評級

00:32:32.553 --> 00:32:36.657
與評價相關的屬性
用戶能得到很有用的信息

00:32:36.890 --> 00:32:39.393
讓他們在進入應用前
有適合的選擇

00:32:41.295 --> 00:32:43.730
通過讓屬性
能在web markup裏獲取

00:32:43.964 --> 00:32:47.434
你們確保了用戶會得到一個
一致的體驗

00:32:47.768 --> 00:32:50.304
無論他們的結果是從
爬網程序

00:32:51.371 --> 00:32:53.006
或本地設備的索引得到的

00:32:57.845 --> 00:33:01.248
一個好的用戶體驗不僅是關於
外在的展現

00:33:01.315 --> 00:33:04.151
也與可搜索的數據有關

00:33:05.085 --> 00:33:09.022
設定讓用戶能看懂和記住的屬性

00:33:09.289 --> 00:33:11.358
讓你們的內容能很快地被找到

00:33:12.759 --> 00:33:16.930
相反 在元數據裏設定了
誤導性的屬性

00:33:17.364 --> 00:33:19.099
或太多的內容和關鍵詞

00:33:19.166 --> 00:33:22.236
字典裏的詞
會導致你們的結果頻繁的呈現

00:33:22.603 --> 00:33:25.105
但極少會被選中
這會讓你的用戶不爽

00:33:25.372 --> 00:33:27.708
這對排序會有強烈的負面影響

00:33:30.043 --> 00:33:32.713
另一個好的用戶體驗的方面

00:33:33.146 --> 00:33:36.183
是能獲取結果重要的部分

00:33:36.250 --> 00:33:37.885
利用最少的步驟

00:33:38.385 --> 00:33:39.887
允許快速方式

00:33:41.588 --> 00:33:45.626
像路線和通話是能讓
你們的用戶受益的

00:33:46.393 --> 00:33:47.227
最後

00:33:49.096 --> 00:33:50.631
當用戶選擇了一個項目

00:33:50.697 --> 00:33:54.268
你們要儘可能快地開啓

00:33:54.334 --> 00:33:58.172
不能有間隙感或多步加載
阻礙用戶

00:33:58.906 --> 00:34:00.207
讓我們來看些例子

00:34:02.676 --> 00:34:05.345
Redfin應用
提供了一些吸引人的結果

00:34:05.812 --> 00:34:09.416
通過設定經緯度和允許導航

00:34:09.783 --> 00:34:13.387
應用讓用戶能直接到Maps查看地產

00:34:13.853 --> 00:34:18.625
相似的 這還有個很好的call
action result的用例

00:34:19.525 --> 00:34:22.763
你們可以通過設定電話號碼屬性
取得相同的結果

00:34:22.829 --> 00:34:25.899
同樣也支持Spotlight的
phone call屬性

00:34:26.333 --> 00:34:27.501
看着這些結果

00:34:28.034 --> 00:34:30.571
已經對地點熟悉了的用戶

00:34:30.637 --> 00:34:33.407
可以立刻打電話預約

00:34:34.842 --> 00:34:37.411
你們可以通過web markup
取得相同的結果

00:34:37.878 --> 00:34:40.581
通過利用郵寄地址和電話號碼

00:34:42.516 --> 00:34:45.252
下面讓我們來聊下
開啓你們的應用

00:34:49.322 --> 00:34:51.158
對於CoreSpotlight
和應用歷史

00:34:51.225 --> 00:34:53.560
我們使用NSUserActivity
來恢復狀態

00:34:54.661 --> 00:34:57.564
你們的應用代理會
與continueUserActivity一起被調用

00:34:57.965 --> 00:35:00.334
你們檢測NSUserActivity
的活動類型

00:35:00.834 --> 00:35:02.836
和用戶信息字典 如果必要

00:35:03.470 --> 00:35:07.107
如果你們的應用是由於用戶
在Spotlight裏選擇了CSSearchableItem而啓動

00:35:07.174 --> 00:35:10.477
那活動類型會是
CSSearchableItemActionType

00:35:10.677 --> 00:35:13.914
然後你們從用戶信息字典裏取得識別符

00:35:14.214 --> 00:35:16.750
通過使用
CSSearchableItemActivityIdentifier

00:35:17.618 --> 00:35:19.720
2014年“引入切換”的演講

00:35:19.786 --> 00:35:23.924
更深層講解了如何開啓
NSUserActivity審閱和活動類型

00:35:24.758 --> 00:35:28.662
對通用鏈接
同樣我們使用NSUserActivity

00:35:29.530 --> 00:35:32.499
那樣你們的應用代理可和
continueUserActivity一起被調用

00:35:33.033 --> 00:35:36.603
同樣 你們檢測NSUserActivity的活動類型

00:35:36.870 --> 00:35:40.541
它會是
NSUserActivityTypeBrowsingWeb

00:35:41.542 --> 00:35:46.747
你們解析URL
然後 將用戶帶到URL所指的地方

00:35:47.447 --> 00:35:48.515
這就是開啓

00:35:49.683 --> 00:35:51.251
現在讓我們來看個新特性

00:35:54.154 --> 00:35:57.791
在iOS 10裏
我們添加了一個功能

00:35:58.225 --> 00:36:00.894
能讓用戶直接在你們的應用裏繼續搜索

00:36:03.664 --> 00:36:05.799
讓Spotlight顯示人性化結果

00:36:07.568 --> 00:36:11.572
是一種直觀的體現 你們應選擇使用
Spotlight Search continuation

00:36:11.638 --> 00:36:14.074
那樣用戶就可以直接打開你們的應用

00:36:14.141 --> 00:36:16.944
如果你們已經支持了搜索
那對它的採用就更簡單了

00:36:18.312 --> 00:36:21.648
它能讓你們使用定製的搜索接口

00:36:22.249 --> 00:36:24.785
它已經廣泛被我們內部的應用採用了

00:36:26.119 --> 00:36:29.256
這是另一個增加互動性的方式

00:36:29.323 --> 00:36:30.557
與你們的應用

00:36:30.624 --> 00:36:33.460
用戶直接被從Spotlight

00:36:33.694 --> 00:36:36.763
帶入了你們已有的搜索體驗

00:36:46.306 --> 00:36:47.140
現在——

00:36:52.412 --> 00:36:53.247
謝謝

00:36:54.381 --> 00:36:56.216
爲這能在你們的應用裏被支持

00:36:57.184 --> 00:36:59.319
你們要在info.plist裏
添加一個關鍵值

00:37:01.288 --> 00:37:03.290
聲明你們支持這個功能

00:37:06.760 --> 00:37:09.429
你們應用的代理將被調用
有一個新活動類型

00:37:09.630 --> 00:37:11.832
CSQueryContinuationActionType

00:37:12.466 --> 00:37:15.969
然後新的查詢字符串
被遞入用戶信息

00:37:16.036 --> 00:37:17.671
與CSSearchQueryString
關鍵值一起

00:37:17.971 --> 00:37:20.974
至此 你們可以執行
你們自己的搜索UI

00:37:21.074 --> 00:37:24.645
利用相同的查詢字符串
讓用戶在你們應用裏繼續搜索

00:37:25.379 --> 00:37:27.514
爲避免困惑
通常是一個好主意

00:37:27.581 --> 00:37:31.218
確保你們的搜索結果
與Spotlight的大概一致

00:37:31.618 --> 00:37:33.854
由於Spotlight
是基於前綴搜索

00:37:34.054 --> 00:37:36.156
我們建議你們使用
相似的規則

00:37:36.723 --> 00:37:38.659
如果你們無法支持前綴搜索

00:37:38.792 --> 00:37:41.662
考慮將用戶帶至一個完成接口

00:37:44.665 --> 00:37:46.967
另一個確保與
Spotlight一致的方式

00:37:47.034 --> 00:37:49.136
是利用CoreSpotlight
的Search API

00:37:49.503 --> 00:37:52.172
我們有許多內部應用使用這個方式

00:37:57.711 --> 00:38:03.283
CoreSpotlight Search API
讓你們能便捷地實現對你們數據的搜索

00:38:03.717 --> 00:38:05.686
它利用你們已經提供給

00:38:05.752 --> 00:38:07.621
CoreSpotlight的數據
支持Spotlight Search

00:38:11.058 --> 00:38:13.293
全美一致

00:38:14.862 --> 00:38:16.897
它已經被我們許多內部的應用使用

00:38:16.964 --> 00:38:18.699
包括Mail
Messages和Notes

00:38:19.466 --> 00:38:24.338
它避免了開銷
你們不用管理一個額外的索引

00:38:24.838 --> 00:38:28.108
因爲它與Spotlight
使用同一個索引

00:38:29.510 --> 00:38:32.179
這個索引提供了全套的
對元數據和內容的搜索

00:38:33.514 --> 00:38:35.816
如果你們所有的內容都在設備上

00:38:35.883 --> 00:38:38.285
CoreSpotlight是
對於搜索的完全解決方案

00:38:38.819 --> 00:38:42.489
如果你們有設備上和
網上內容的混合

00:38:42.689 --> 00:38:44.825
你們可以合併查詢和合並單元

00:38:44.992 --> 00:38:47.294
通過設備上
CoreSpotlight獲響應

00:38:47.361 --> 00:38:49.530
通過網上的索引獲得完整性

00:38:51.164 --> 00:38:53.867
Mail不僅將
CoreSpotlight用於搜索

00:38:54.368 --> 00:38:57.838
還用它創建搜索建議
建立複雜的查詢

00:38:58.338 --> 00:39:01.642
這是個很好利用
CoreSpotlight Search的方式

00:39:01.708 --> 00:39:03.577
同時還能保持簡潔的UI

00:39:05.779 --> 00:39:09.983
CoreSpotlight Search API
創建了你們提供給Spotlight的數據

00:39:10.484 --> 00:39:13.220
但你們的數據是受保護的
不會被其它的應用訪問

00:39:13.787 --> 00:39:15.956
查詢引擎很快並可以被擴展

00:39:16.023 --> 00:39:18.225
所以你們能在應用裏得到很好響應

00:39:18.592 --> 00:39:21.328
查詢語法允許複雜
完整的提問

00:39:21.461 --> 00:39:24.131
也支持範圍查詢
數字和時間日期

00:39:24.331 --> 00:39:26.366
還有一組強大的短消息的功能

00:39:26.700 --> 00:39:30.037
對於你們熟悉Mac OS上
元數據框架的人

00:39:30.304 --> 00:39:32.039
會對這個語法感到很熟悉

00:39:33.740 --> 00:39:36.777
簡單介紹一些常見的搜索操作

00:39:37.044 --> 00:39:40.547
如所見 CoreSpotlight
支持全套搜索比較運算符

00:39:40.681 --> 00:39:43.684
也支持布爾運算符AND
OR和NOT

00:39:46.787 --> 00:39:49.623
此外 CoreSpotlight
能讓你定製

00:39:49.690 --> 00:39:51.458
適合你們需要的字符串匹配

00:39:51.825 --> 00:39:54.461
如果你們要補區分大小寫
你們可以添加標誌c

00:39:56.330 --> 00:39:59.867
如果你們想忽略註音符號
像註音符

00:40:00.767 --> 00:40:04.371
如果它們在當前的語言裏不重要
你們可以用標誌d

00:40:05.572 --> 00:40:08.075
如果你們想匹配一個字段裏的單詞

00:40:08.275 --> 00:40:10.777
你們不用在字段的開始定位標記查詢

00:40:10.844 --> 00:40:12.513
你們只需使用標誌w

00:40:13.080 --> 00:40:15.782
這些也適用於信息內容

00:40:16.483 --> 00:40:19.219
如果你們想要讓多個詞被分開
一一處理

00:40:20.554 --> 00:40:23.690
那你們可以遞入標誌t
那樣查詢字符串就會被標記

00:40:25.659 --> 00:40:27.027
讓我們來看個例子

00:40:27.928 --> 00:40:31.598
我們來實現一個搜索函數
它接收一個用戶查詢作爲輸入

00:40:32.232 --> 00:40:34.501
我們確保取消所有
正在運行的查詢

00:40:34.568 --> 00:40:37.471
那樣我們就不會有
多個查詢在同時運行

00:40:37.538 --> 00:40:39.339
這會降低查詢速度

00:40:41.875 --> 00:40:45.546
因爲我們在處理用戶輸入
我們確保將查詢字符串轉義

00:40:47.881 --> 00:40:50.984
我們使用雙星語法來創建一個查詢
它會匹配

00:40:51.251 --> 00:40:52.920
內容或元數據

00:40:53.654 --> 00:40:55.956
轉義的輸入作爲搜索字符串

00:40:56.690 --> 00:40:59.259
我們有cdw和t運算符

00:40:59.326 --> 00:41:02.129
這表示創建一個
不區分大小寫 能本土識別的

00:41:02.296 --> 00:41:05.632
不區分註音符的
匹配單詞 標記字段的搜索

00:41:06.733 --> 00:41:09.136
有了查詢字符串
我們來創建一個查詢對象

00:41:09.703 --> 00:41:12.406
我們請求一個
display name

00:41:13.140 --> 00:41:14.508
這將會在

00:41:14.575 --> 00:41:17.077
返回的可查詢項目的
AttributeSet裏

00:41:19.146 --> 00:41:20.981
我們設定
foundItemsHandler

00:41:21.315 --> 00:41:23.650
它會接收到多批的可查詢項目

00:41:23.984 --> 00:41:25.719
如果你們的查詢無結果

00:41:27.321 --> 00:41:30.290
一個completionHandler
會被調用一次

00:41:30.357 --> 00:41:33.493
當有錯誤時或查詢成功

00:41:36.196 --> 00:41:37.865
在我們的completionHandler裏

00:41:37.931 --> 00:41:40.734
我們可以選擇讓它顯示完成處理
或其它的

00:41:42.603 --> 00:41:44.505
然後就是開始查詢

00:41:44.938 --> 00:41:47.407
CoreSpotlight有了結果
然後調用解決

00:41:47.474 --> 00:41:49.243
然後調用
completionHandler

00:41:50.944 --> 00:41:54.214
讓我們來實踐一下
我們創建了一個應用

00:41:55.749 --> 00:41:57.451
有一個簡單的圖片收集功能

00:42:03.757 --> 00:42:05.859
它已支持用CoreSpotlight
建立索引

00:42:05.926 --> 00:42:07.394
也已支持搜索

00:42:08.762 --> 00:42:11.932
那我們要做的第一件事是
添加支持

00:42:13.100 --> 00:42:16.136
Continue Search in App
這很簡單

00:42:17.538 --> 00:42:22.409
我們來到應用的info.plist
我們準許CoreSpotlightContinuation

00:42:28.715 --> 00:42:31.351
完成後
我們來到應用的代理...

00:42:33.086 --> 00:42:38.659
在我們的用戶活動
continuationHandler裏

00:42:40.527 --> 00:42:41.562
我們添加支持...

00:42:43.964 --> 00:42:45.332
Continue Search in App

00:42:45.666 --> 00:42:48.202
如你們所見 活動類型

00:42:48.569 --> 00:42:52.472
是一個CSQueryContinuationActionType

00:42:53.473 --> 00:42:54.975
我們取得搜索的查詢...

00:42:56.343 --> 00:42:59.780
通過查看CSSearchQueryString
對應的用戶信息

00:43:01.081 --> 00:43:04.017
我們使用搜索詢問激活視圖控制器

00:43:06.320 --> 00:43:07.821
我們來看下實踐

00:43:18.899 --> 00:43:20.968
好的
這裏有我們的圖片收集

00:43:22.035 --> 00:43:23.804
我們下拉出Spotlight

00:43:27.174 --> 00:43:30.611
搜索單詞“雪”

00:43:30.777 --> 00:43:32.846
湊巧在這個相冊裏很普遍

00:43:34.248 --> 00:43:39.586
我們獲取兩個結果和
一個在應用裏繼續搜索

00:43:40.354 --> 00:43:43.423
點擊在應用裏搜索
我被帶入了我的應用

00:43:51.665 --> 00:43:54.735
現在你們或許會觀察到
我在Spotlight裏有兩個結果

00:43:54.968 --> 00:43:56.603
而在我的應用裏只有一個

00:43:56.937 --> 00:43:59.973
這是因爲我沒使用
CoreSpotlight Search

00:44:02.009 --> 00:44:05.279
這個搜索只是一個簡單的前綴搜索

00:44:06.079 --> 00:44:07.514
那讓我們來修復它

00:44:13.921 --> 00:44:15.155
在我們的視圖控制器裏

00:44:18.992 --> 00:44:20.127
我們有一個搜索方法

00:44:23.797 --> 00:44:27.568
我將刪除這個簡單
對搜索的實現

00:44:27.734 --> 00:44:28.902
我們現有的

00:44:31.805 --> 00:44:33.607
然後開始實現
CoreSpotlight

00:44:35.209 --> 00:44:36.743
首先 我們想要添加一個變量

00:44:42.783 --> 00:44:45.886
一個能儲存現有搜索查詢的
查詢對象

00:44:49.423 --> 00:44:51.792
我們要取消正在運行的查詢

00:44:55.562 --> 00:44:56.930
將查詢字符串轉義

00:45:02.135 --> 00:45:02.970
然後創建——

00:45:12.379 --> 00:45:19.152
一個查詢對象 當然
是創建一個查詢字符串  失誤

00:45:22.656 --> 00:45:25.692
好的  那現在我們有了
一個查詢字符串 一個查詢對象

00:45:27.027 --> 00:45:29.096
然後我們要設定
foundItemsHandler

00:45:34.201 --> 00:45:38.071
foundItemsHandler
創建displayables

00:45:40.707 --> 00:45:43.710
然後添加它們至
我們的結果列表

00:45:44.278 --> 00:45:47.114
現在 由於查詢取回了
CSSearchableItems

00:45:47.614 --> 00:45:52.319
我要實現一個能接收
CSSearchableItems的一個配適器

00:45:52.386 --> 00:45:55.088
創建一些能被顯示的東西

00:45:55.789 --> 00:45:57.658
讓我們來看下

00:46:01.461 --> 00:46:03.864
我稱之爲懶圖的對象

00:46:05.265 --> 00:46:07.701
它能獲取數據

00:46:07.801 --> 00:46:12.806
那些通過我們的查詢得到的
並適當的時候能使用它們

00:46:13.607 --> 00:46:17.644
當不充足時
它回到數據庫

00:46:18.712 --> 00:46:22.316
獲取對應識別符的圖片對象

00:46:22.950 --> 00:46:25.886
儲存起來爲將來使用
然後返回它

00:46:25.953 --> 00:46:28.055
那讓它能連同返回所有其它的屬性

00:46:28.255 --> 00:46:30.123
那些無法從數據庫裏獲得的

00:46:31.658 --> 00:46:35.095
通過使用懶圖對象
我們確保可以顯示我們的結果

00:46:35.162 --> 00:46:37.130
省去要回到數據庫的步驟

00:46:37.764 --> 00:46:39.366
這樣對性能有利

00:46:39.800 --> 00:46:42.669
讓我們來實現
completionHandler

00:46:44.471 --> 00:46:46.974
completionHandler
裏 我們對結果進行排序

00:46:48.141 --> 00:46:49.543
進入主隊列

00:46:52.346 --> 00:46:57.150
使結果變爲可顯示的
然後調用我們的表視圖更新

00:46:58.552 --> 00:47:01.188
之後 剩下的就是調用start

00:47:05.759 --> 00:47:07.427
讓我們來看下

00:47:20.307 --> 00:47:21.141
好的

00:47:23.710 --> 00:47:26.046
現在因爲這是在使用
CoreSpotlight Search

00:47:26.113 --> 00:47:28.815
而且我的查詢的條件很寬鬆

00:47:29.149 --> 00:47:33.053
我應該能輸入任何在這裏看見的詞
比如 河

00:47:34.388 --> 00:47:37.958
我找到了所有在元數據或在內容裏
包含河的

00:47:39.693 --> 00:47:43.430
好 通過CoreSpotlight
實現搜索 就這麼簡單

00:47:44.831 --> 00:47:48.902
下面 我想請Vipul回到臺上
來聊一下排序

00:47:56.009 --> 00:47:59.947
謝謝John 剛纔是一個對
Search APIs很精彩的簡介

00:48:00.247 --> 00:48:03.550
在你們思考如何在應用裏
實現這些APIs時

00:48:04.785 --> 00:48:07.154
瞭解Spotlight
如何對結果排序的會很有幫助

00:48:07.221 --> 00:48:10.057
還有你們怎樣正面影響排序

00:48:10.657 --> 00:48:13.327
那讓我麼來看下
Spotlight裏的排序

00:48:14.461 --> 00:48:17.064
Spotlight的主要目的守則

00:48:17.164 --> 00:48:20.400
是依次顯示你們查詢的最佳結果

00:48:20.467 --> 00:48:23.570
這個順序由一組因素決定

00:48:23.971 --> 00:48:28.408
兩個主要因素
engagement ratio和content popularity

00:48:28.642 --> 00:48:30.511
然我先來聊下
engagement ratio

00:48:31.578 --> 00:48:36.083
Engagement ratio
其實是對頻率的衡量結果通過你們的應用

00:48:36.750 --> 00:48:39.253
被用戶選擇的次數 當它們被展現時

00:48:39.686 --> 00:48:44.191
Spotlight裏有三類
engagement ratios

00:48:44.258 --> 00:48:47.261
一個在設備上 兩個在服務器上

00:48:47.995 --> 00:48:52.165
在設備上
engagement ratio測量

00:48:52.232 --> 00:48:55.202
用戶個人與你們應用的互動

00:48:56.236 --> 00:48:59.773
服務器對每個查詢都有一個
engagement ratio

00:48:59.840 --> 00:49:02.276
這是基於每一個查詢

00:49:02.342 --> 00:49:04.578
對曾經顯示過的結果

00:49:04.645 --> 00:49:10.851
通過使用Spotlight可讓結果
提升或降低排序 對應某個查詢

00:49:11.285 --> 00:49:13.287
最後 還有一個global
engagement ratio

00:49:13.353 --> 00:49:16.857
它是基於所有用戶的
所有互動

00:49:17.891 --> 00:49:19.726
曾經與你們應用發生過的

00:49:20.093 --> 00:49:24.364
沒可用查詢級別engagement
ratio時 它會被調用

00:49:25.799 --> 00:49:27.100
一些要緊的事

00:49:27.167 --> 00:49:32.539
第一 你們不會得到處罰
如果某個查詢結果

00:49:32.606 --> 00:49:34.208
沒有顯示給用戶

00:49:34.274 --> 00:49:37.144
它們可以說是在分割線以下
鍵盤的下面

00:49:37.845 --> 00:49:43.784
這裏最佳的實踐
其實是使用關鍵詞 標題和描述

00:49:44.051 --> 00:49:48.422
那些能清楚地形容你們
建立索引的內容

00:49:48.488 --> 00:49:50.858
也能將用戶帶至相同的內容

00:49:54.394 --> 00:49:55.662
第二個重要的事是

00:49:56.430 --> 00:50:01.068
content popularity
一般來說 更受歡迎的內容

00:50:01.301 --> 00:50:02.436
趨向於被排得更高

00:50:03.170 --> 00:50:07.140
Spotlight能通過三個方式來
瞭解受歡迎度

00:50:07.574 --> 00:50:09.142
如果你們使用
通用鏈接

00:50:09.276 --> 00:50:12.813
它們會自動地去查看
網站結構

00:50:12.880 --> 00:50:15.082
然後得到你們網站的聲譽

00:50:15.215 --> 00:50:16.617
這裏 你們不用做任何事

00:50:16.683 --> 00:50:18.886
你們只要實現
通用鏈接

00:50:20.254 --> 00:50:23.123
如果一個項目有關聯的
NSUserActivity

00:50:23.190 --> 00:50:27.528
Spotlight能跟蹤用戶
在設備上查閱此項目的頻率

00:50:27.594 --> 00:50:29.162
然後在排序裏使用

00:50:30.163 --> 00:50:34.468
若你們同時使用通用鏈接
和公開的NSUserActivities

00:50:34.635 --> 00:50:38.772
那些被允許公進行開索引的
iOS 10現在能估計

00:50:38.972 --> 00:50:42.242
整個iOS用戶羣

00:50:42.309 --> 00:50:45.546
在你們的應用裏查看一個鏈接的頻率
這會被用於排序

00:50:45.712 --> 00:50:48.815
這是爲了新的差分隱私條款所建立的

00:50:49.416 --> 00:50:50.884
讓我向你們展示下

00:50:52.119 --> 00:50:55.689
這個例子裏 Yelp採用了
NSUserActivities

00:50:55.756 --> 00:50:59.092
被允許進行公開索引
和使用通用鏈接

00:50:59.159 --> 00:51:01.628
當用戶在Yelp裏遇到一個
深層鏈接

00:51:01.929 --> 00:51:04.965
iOS計算機哈希添加一些幹擾

00:51:05.098 --> 00:51:08.669
之後獲取一個碎片
傳送至Apple的服務器

00:51:09.069 --> 00:51:13.740
單獨的碎片是沒用處的
它不包含任何的信息

00:51:14.141 --> 00:51:17.644
可一旦成千的用戶報告了很多的碎片

00:51:17.711 --> 00:51:23.250
Apple的服務器能找回
被看了成千次的哈希

00:51:24.918 --> 00:51:29.456
不用知道哪些用戶
報告了哪些碎片

00:51:29.990 --> 00:51:34.161
這提供了一個方式用於決定
如用戶的總體行爲

00:51:34.228 --> 00:51:38.932
不用對任何用戶的獨立行爲
作任何的的分析

00:51:39.600 --> 00:51:42.236
當受歡迎的深層鏈接
被這樣的方式發現後

00:51:42.302 --> 00:51:46.039
它們在Spotlight裏的
排名會上升 這很酷

00:51:48.342 --> 00:51:51.945
那讓我們很快地看一下
排序的最佳實踐

00:51:53.080 --> 00:51:55.549
John展示了許多最佳實踐

00:51:55.616 --> 00:51:58.719
對通過CoreSpotlight
給你們應用內容建立索引

00:51:58.785 --> 00:52:02.523
你們應該遵循這些 因爲它們會提供
一個一致的搜索體驗

00:52:02.589 --> 00:52:06.660
爲你們應用的內容
之後用戶會去到Spotlight

00:52:06.727 --> 00:52:10.631
搜索你們應用裏的東西
這將會影響到engagement ratios

00:52:12.199 --> 00:52:16.837
如果你們有應用的內容 允許Apple
對它們通過通用鏈接建立索引

00:52:17.604 --> 00:52:21.842
這樣能暴露你們的應用給潛在的用戶

00:52:23.443 --> 00:52:26.413
你們現知道content
popularity很重要 那就關聯

00:52:27.047 --> 00:52:31.318
通用鏈接和CoreSpotlight
的項目至NSUserActivities

00:52:31.785 --> 00:52:37.858
我們今年添加了weakRelatedUniqueIdentifier
來幫助你們更容易地達成這個

00:52:38.959 --> 00:52:42.029
我重複這個 因爲很重要

00:52:42.095 --> 00:52:46.867
你們所建立索引的項目的
標題、描述和關鍵詞

00:52:46.934 --> 00:52:50.571
是與深層鏈接相關的

00:52:51.071 --> 00:52:52.439
留意你們的表現方式

00:52:52.506 --> 00:52:57.444
我們知道表現合理的鏈接會有更高的
engagement rates

00:52:57.778 --> 00:53:01.448
最後 在適當的時候實現
Continue Search in App

00:53:01.615 --> 00:53:05.118
它讓用戶能在你們的應用裏
完成搜索任務

00:53:08.388 --> 00:53:10.424
結論 關鍵的幾點

00:53:10.724 --> 00:53:13.660
Spotlight是iOS裏
一個全新的萬能搜索工具

00:53:13.727 --> 00:53:16.997
在iOS 10裏
我們讓它變得更實用 更方便被使用

00:53:17.264 --> 00:53:21.969
越來越多的用戶期望
一個優質的應用

00:53:22.035 --> 00:53:23.837
能通過Spotlight進行搜索

00:53:23.904 --> 00:53:27.307
所以 如果你們還沒採用這些APIs

00:53:27.374 --> 00:53:29.443
我們建議你們考慮採用

00:53:29.510 --> 00:53:32.813
爲配合iOS 10的大衆發行

00:53:33.080 --> 00:53:35.516
若你們已實現了
Search APIs

00:53:35.582 --> 00:53:38.619
我們建議採用新的規則

00:53:38.685 --> 00:53:40.120
那些我們今天所介紹的

00:53:43.290 --> 00:53:45.125
一些相關的講座
優秀的講座

00:53:45.192 --> 00:53:46.960
明天“前攝的建議”的演講

00:53:47.327 --> 00:53:53.200
在座的你們都應該去
因爲你們在搜索裏所做的

00:53:53.267 --> 00:53:56.503
能直接被應用到“前攝的建議”裏

00:53:56.570 --> 00:53:59.439
我們昨天也有個
SiriKit APIs的精彩演講

00:53:59.506 --> 00:54:01.675
你們可以在會議的網站上找到它

00:54:01.909 --> 00:54:04.478
我們也推薦星期三關於
隱私的演講

00:54:04.545 --> 00:54:06.813
那會對差分隱私進行更細緻的討論

00:54:07.447 --> 00:54:10.651
像其它的講座一樣 這個講座會
被上傳 參見第一個URL

00:54:10.717 --> 00:54:13.887
我們也會上傳所有
Search API的相關文檔

00:54:13.987 --> 00:54:16.323
至search.developer.apple.com

00:54:16.690 --> 00:54:17.791
這就是我們的所有內容

00:54:18.058 --> 00:54:19.493
祝大家在餘下的
WWDC 中過得愉快