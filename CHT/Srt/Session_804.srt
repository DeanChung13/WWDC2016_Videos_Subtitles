00:00:19.453 --> 00:00:25.659 
設計出色的
Apple Watch體驗

00:00:27.160 --> 00:00:28.128 
大家好

00:00:28.562 --> 00:00:29.863 
我是Mike Stern

00:00:29.930 --> 00:00:32.799 
我是Apple的用戶體驗推廣

00:00:33.467 --> 00:00:37.871 
今天很高興見到你們
我要談談Apple Watch設計

00:00:38.605 --> 00:00:42.876 
在今天的研討會中
我們要討論如何應用設計最佳範例

00:00:43.177 --> 00:00:46.480 
以及如何用watchOS 3新功能

00:00:46.713 --> 00:00:52.252 
來設計Apple Watch
快速、精準、愉悅的體驗

00:00:53.187 --> 00:00:56.223 
但在此之前 我要先說一下基礎技術

00:00:57.090 --> 00:01:01.595 
畢竟你們中有些人從來沒做過
watchOS應用的設計

00:01:02.229 --> 00:01:05.364  
Apple Watch應用
有三個基本組成元素

00:01:05.766 --> 00:01:09.269  
分別是complication、
通知和應用

00:01:10.337 --> 00:01:14.842  
complication就像小工具
人們可以把它顯示在錶盤上

00:01:15.442 --> 00:01:18.846 
complication這個詞
來自於傳統的製表業

00:01:19.079 --> 00:01:24.818 
是指鐘錶的功能
除了顯示小時和分鐘以外

00:01:25.419 --> 00:01:30.390 
complication使設計、
製造 和修理手錶

00:01:30.457 --> 00:01:33.360 
變得更昂貴、更復雜

00:01:33.427 --> 00:01:34.394 
可以說是名副其實

00:01:35.028 --> 00:01:38.265 
你們很幸運
complication變得簡單了

00:01:38.332 --> 00:01:41.535 
在Apple Watch
的開發上也更強大了

00:01:42.603 --> 00:01:45.806 
Apple Watch上的
complication提供最快速的方法

00:01:45.873 --> 00:01:47.641 
讓人們獲取信息

00:01:47.708 --> 00:01:50.844 
並提供快速打開應用的方法

00:01:51.478 --> 00:01:56.650 
通知會告訴人們 重要事件
他們可能會忽視的

00:01:57.150 --> 00:01:59.086 
因爲通知也是交互式的

00:01:59.152 --> 00:02:03.123 
所以它們能促進使用應用的
人們之間的交互

00:02:03.924 --> 00:02:08.961  
最後 應用可以爲你的產品或
服務提供更深層次的體驗

00:02:09.496 --> 00:02:14.635  
要提供complication
或創建手錶專用的通知

00:02:14.701 --> 00:02:17.371  
你要先有一個應用

00:02:18.238 --> 00:02:21.675 
這三個基本組成元素是必不可少的

00:02:22.209 --> 00:02:24.678 
每個元素都起到一部分作用

00:02:24.745 --> 00:02:27.948 
在watch應用的整個用戶體驗中

00:02:28.448 --> 00:02:31.952 
那麼 比如說
假如我用watch訂了晚餐

00:02:32.452 --> 00:02:36.190 
我可能得先按一下
外賣應用的complication

00:02:36.256 --> 00:02:37.357 
打開應用

00:02:37.925 --> 00:02:40.561 
然後用應用下訂單

00:02:40.627 --> 00:02:43.931 
再然後 我很可能會收到一
條通知

00:02:43.997 --> 00:02:46.867 
顯示預計送達的時間

00:02:47.801 --> 00:02:49.636 
在我等待外賣送達的過程中

00:02:49.703 --> 00:02:52.239 
我會時不時查看一下
complication

00:02:52.306 --> 00:02:54.474 
看還要等多久

00:02:55.242 --> 00:02:57.578 
當訂單即將送達時

00:02:58.011 --> 00:03:00.814 
我可能還會收到另一條通知

00:03:01.615 --> 00:03:05.052 
最後 如果我還沒有給配送人員付小費

00:03:05.385 --> 00:03:08.689 
我可能也會收到一條通知
問我是否願意付小費

00:03:09.590 --> 00:03:13.093  
這就是組成元素的基本功能

00:03:13.560 --> 00:03:17.865 
今天這個報告會幫助你
瞭解如何設計每一個組成元素

00:03:18.665 --> 00:03:20.701 
但在此之前

00:03:21.001 --> 00:03:26.974 
還有一些更基本、更根本的內容
我想和你們一起討論

00:03:27.407 --> 00:03:29.676  
即時間的概念

00:03:30.544 --> 00:03:34.848 
Apple Watch設計巧妙
可以支持輕量級的互動

00:03:35.148 --> 00:03:37.518 
意思是人們能接收信息

00:03:37.584 --> 00:03:40.754 
並在短時間內執行

00:03:41.455 --> 00:03:43.557 
我以爲這是一個顯而易見的事實

00:03:43.857 --> 00:03:46.159 
但很容易被忽略

00:03:46.226 --> 00:03:50.097 
互動需要有多快 當你設計comps

00:03:50.163 --> 00:03:52.432 
或在模擬器裏測試你所開發的功能時

00:03:53.066 --> 00:03:57.304 
在設計應用時 你總想

00:03:57.371 --> 00:04:01.074 
發現一種更快、更簡單的用戶流

00:04:01.508 --> 00:04:03.644 
總能有一種優化方法

00:04:04.244 --> 00:04:09.016  
比如 很多內嵌應用
就能很簡單、很迅速地導航

00:04:09.550 --> 00:04:11.952  
以前 在你開始健身之前 你要

00:04:12.019 --> 00:04:14.588  
先進入主屏幕 找到並啓動應用

00:04:14.655 --> 00:04:18.192  
選擇一個健身類型
再選擇一個目標或重新使用

00:04:18.257 --> 00:04:21.094  
上次的目標 然後按開始

00:04:21.827 --> 00:04:24.164  
新流程就更簡單了

00:04:24.565 --> 00:04:27.234  
尤其對於使用健身
complication的人來說

00:04:27.301 --> 00:04:28.802  
只需按complication

00:04:29.136 --> 00:04:30.938  
然後點開始 就可以了

00:04:31.672 --> 00:04:35.008  
現在快速啓動使人們不需要在屏幕上

00:04:35.075 --> 00:04:37.744  
選擇健身目標 並且移除了

00:04:37.811 --> 00:04:39.112  
獨立的開始按鈕

00:04:39.780 --> 00:04:43.116  
現在 絕大多數人都採用了
這樣的健身方式 日復一日

00:04:43.517 --> 00:04:47.554  
所以 對這些人來說
只需要按兩次就可以開始健身了

00:04:48.055 --> 00:04:50.624  
而且在健身過程中會顯示UI

00:04:50.691 --> 00:04:53.894  
這個UI也被優化了
可以更快地進行交互

00:04:54.595 --> 00:04:58.165 
以前 人們要滑動七次屏幕

00:04:58.298 --> 00:05:01.835 
一是控制 一是各種健身指標

00:05:02.102 --> 00:05:06.006  
在這些屏幕之間進行跳轉要花很長時間

00:05:07.374 --> 00:05:11.912  
在watchOS 3中
只有兩個屏幕控制和指標

00:05:12.579 --> 00:05:16.450 
幾乎不需要跳轉 除非你已經完成健身

00:05:16.517 --> 00:05:17.918 
或者你想休息一下

00:05:18.385 --> 00:05:22.022 
這就讓人們有時間
關注其他更重要的東西

00:05:22.089 --> 00:05:25.192 
當跑步或騎車時

00:05:25.492 --> 00:05:29.062 
更關注你的節奏、步伐和呼吸

00:05:29.997 --> 00:05:32.332 
小心汽車和行人

00:05:32.766 --> 00:05:35.235 
可以欣賞風景 並讓自己看起來更酷

00:05:36.003 --> 00:05:39.206 
Apple Watch設計和
工程師團隊在watchOS 3

00:05:39.273 --> 00:05:43.243 
這個版本中共同提出了三個重要主題

00:05:43.310 --> 00:05:45.579 
我覺得跟我們每個人都息息相關

00:05:46.146 --> 00:05:51.218 
這些主題都是方便查看的、
可執行的、響應式的主題

00:05:51.985 --> 00:05:56.190 
方便查看說的是信息呈現
可以立即理解

00:05:56.657 --> 00:06:00.827 
通訊必須清晰 不能受幹擾

00:06:01.428 --> 00:06:05.299 
應該只顯示最相關的信息

00:06:06.066 --> 00:06:09.937 
最好應用顯示的信息也是可執行的

00:06:10.304 --> 00:06:14.441 
意思是鼓勵人們採取物理行動來響應

00:06:14.508 --> 00:06:18.545 
你的應用所傳達的
或更方便地讓人們

00:06:18.612 --> 00:06:22.516 
從應用或通知中使用功能

00:06:23.350 --> 00:06:26.053 
並且應用應該是響應式的

00:06:26.320 --> 00:06:29.990 
啓動時間和屏幕加載應該儘可能短

00:06:30.457 --> 00:06:33.093 
內容和數據應該總是最新的

00:06:33.460 --> 00:06:35.963 
並且UI反饋要及時

00:06:37.130 --> 00:06:40.934 
現在要讓你的應用更方便查看、
可執行力更強、響應更及時

00:06:41.268 --> 00:06:46.907 
就要對watch OS中的導航模式
和核心架構進行大幅度調整

00:06:47.641 --> 00:06:51.211 
新版Dock提供一個可瀏覽的集合

00:06:51.278 --> 00:06:55.816 
包含他們經常使用的
具有實效性的、情景關聯的時刻

00:06:56.550 --> 00:06:58.352 
Dock中的應用仍然在內存中

00:06:58.418 --> 00:07:01.321 
可定期執行後臺更新

00:07:01.388 --> 00:07:06.426 
意思是能很快
從Dock導航到應用...

00:07:07.060 --> 00:07:11.431 
且人們不用花很長時間等應用更新內容

00:07:12.165 --> 00:07:13.700 
一旦打開了應用

00:07:13.767 --> 00:07:16.370 
就可以直接在各屏幕之間跳轉

00:07:16.436 --> 00:07:19.640 
很大程度上縮減了跳轉時間

00:07:20.240 --> 00:07:24.878 
這些變更可以顯著減少整體交互時間

00:07:25.412 --> 00:07:29.850  
事實上 在watchOS 3中
內部目標交互時間

00:07:29.917 --> 00:07:33.287  
已經從5秒縮減到了2秒

00:07:34.021 --> 00:07:37.925 
毫無疑問 當我第一次聽到
這個消息時 我想

00:07:37.991 --> 00:07:39.860 
“這相當了不起”

00:07:40.294 --> 00:07:43.030 
我的意思是 我實際上還要花2秒鐘

00:07:43.096 --> 00:07:45.199 
來說“2秒鐘”這個詞

00:07:45.966 --> 00:07:48.702 
但真相是 執行任務

00:07:48.769 --> 00:07:53.473 
如查看遊戲分數、查看天氣情況、

00:07:53.540 --> 00:07:58.178 
或查看股票都可以而且都應該像那麼快

00:07:59.079 --> 00:08:02.382  
現在你可能不只花幾秒鐘來

00:08:02.449 --> 00:08:05.552  
查看天氣、遊戲分數或股票

00:08:05.919 --> 00:08:09.923  
但每次互動都應該只需要幾
秒鐘而已

00:08:10.557 --> 00:08:13.460 
而且操作也應該很快

00:08:13.994 --> 00:08:17.698 
簡單的操作只需要單一的決策

00:08:17.764 --> 00:08:19.867 
就能在Apple Watch上
順利運行了

00:08:20.100 --> 00:08:23.170 
人們應該設置一個計時器

00:08:24.671 --> 00:08:26.507 
或打開警告

00:08:28.008 --> 00:08:31.044 
或檢查提醒列表上的事項

00:08:31.445 --> 00:08:33.380 
在2秒鐘內或更短時間內

00:08:34.448 --> 00:08:38.284 
現在就算你不能把互動時間縮減到2秒

00:08:38.751 --> 00:08:43.289 
這種嘗試也會幫你發現
工作流程中低效的地方

00:08:43.357 --> 00:08:46.159 
並找到解決方案

00:08:46.827 --> 00:08:49.997 
好了 現在讓我們談一下具體內容

00:08:50.063 --> 00:08:55.602 
關於如何開發優秀的應用、
通知和complications

00:08:56.370 --> 00:08:59.006 
依我個人所見

00:08:59.072 --> 00:09:02.643 
complication是
Apple Watch上最簡單、

00:09:02.709 --> 00:09:04.978 
最方便操作的交互

00:09:05.779 --> 00:09:07.881 
查看complication跟

00:09:07.948 --> 00:09:10.551 
擡起手腕看一眼一樣簡單

00:09:11.018 --> 00:09:13.887 
不需要額外的交互

00:09:14.087 --> 00:09:17.691 
這種交互無疑只需要2秒或更短

00:09:18.258 --> 00:09:22.696 
我們在watchOS 3和
iOS 10中做出了重大變更

00:09:22.763 --> 00:09:25.098 
提高complication的
關注度...

00:09:26.266 --> 00:09:30.504 
使complication的安裝
更簡便並賦予它們更多功能

00:09:31.104 --> 00:09:35.609 
對於初學者來說 你們現可在iOS上
用Apple Watch應用

00:09:35.676 --> 00:09:38.412 
瀏覽和配置
complication了

00:09:38.478 --> 00:09:41.915 
這很有意義 因爲很顯然這種交互

00:09:41.982 --> 00:09:43.851 
至少需要2秒鐘

00:09:44.484 --> 00:09:47.421 
現在配置UI會顯示 精確預覽

00:09:47.487 --> 00:09:50.123 
complication在錶盤上的
外觀

00:09:50.524 --> 00:09:53.393 
人們很容易明白
complication是做什麼的

00:09:53.460 --> 00:09:55.629 
也能看到所提供的價值

00:09:56.530 --> 00:09:59.633 
Apple Watch應用
也有錶盤圖庫

00:09:59.700 --> 00:10:02.269 
是用complication預設的

00:10:02.803 --> 00:10:06.840 
並且有一個專用的第三方
complication部分

00:10:07.241 --> 00:10:09.877 
如果你已經做好了一個
complication bundle

00:10:09.943 --> 00:10:13.747 
而且Apple Watch
也已經安裝了你的iOS應用

00:10:13.814 --> 00:10:16.016 
Apple Watch用戶就會在此
看到你的complication

00:10:16.250 --> 00:10:18.452 
若你的complication
看起來很有用

00:10:18.519 --> 00:10:20.787 
人們只需要按一下就能安裝

00:10:21.121 --> 00:10:24.124 
將在後檯安裝你的watch應用

00:10:24.858 --> 00:10:27.561 
complication功能
真是一種很不錯的方式

00:10:27.628 --> 00:10:30.364 
來提高對watch應用的關注

00:10:30.797 --> 00:10:33.400 
現在人們更容易瞭解

00:10:33.467 --> 00:10:35.936 
你的complication了

00:10:37.237 --> 00:10:41.275 
另一個重要變更是性能的變更

00:10:42.276 --> 00:10:44.711 
任何應用
只要有complication

00:10:44.778 --> 00:10:48.148 
安裝在用戶當前錶盤上
它就將一直在內存中

00:10:48.215 --> 00:10:51.185 
並在後臺定期更新

00:10:51.585 --> 00:10:54.354 
意思是 啓動時間將更快

00:10:54.421 --> 00:10:57.624 
而且應用數據應該也不會那麼陳舊

00:10:57.925 --> 00:11:00.394 
complication是一種很出色
的應用啓動方式

00:11:00.460 --> 00:11:02.529 
而且它們所顯示的信息

00:11:02.596 --> 00:11:05.332 
會經常吸引人們想要了解更多

00:11:05.399 --> 00:11:06.834 
因此 這個過程得快

00:11:07.467 --> 00:11:10.904 
也就是說 看到現在的氣溫
你可能會想

00:11:10.971 --> 00:11:12.639 
瞭解下週的天氣預報

00:11:13.841 --> 00:11:16.977 
或者 看到你的原始股正在盈利

00:11:17.044 --> 00:11:20.147 
你可能會想了解整個市場的狀態

00:11:20.714 --> 00:11:26.854 
complication的最後一個重大
變更是更新頻率

00:11:27.387 --> 00:11:30.757 
在watchOS 3中
你的應用可實現

00:11:30.824 --> 00:11:34.294 
每天更新
50次complication

00:11:34.661 --> 00:11:38.332 
你可以控制更新的頻率和時間

00:11:38.966 --> 00:11:42.202 
因此一個旅行
complication更新最頻繁

00:11:42.269 --> 00:11:45.372 
在航班出發和抵達前後

00:11:45.973 --> 00:11:49.109 
而運動complication
可能會更新最頻繁

00:11:49.176 --> 00:11:50.944 
在你關注的比賽進行時

00:11:51.445 --> 00:11:53.347 
通過控制更新時間

00:11:53.413 --> 00:11:57.184 
必要時你的complication
可以保持當前狀態

00:11:58.018 --> 00:12:02.089 
開發complication時
請考慮到外在因素

00:12:02.155 --> 00:12:06.460 
和用戶活動模式會對
實效性產生何種影響

00:12:06.527 --> 00:12:10.330 
complication更新的

00:12:11.298 --> 00:12:15.669 
所以 如果你要創建一個
Apple Watch應用

00:12:16.336 --> 00:12:18.238 
你應該做個complication

00:12:18.906 --> 00:12:21.909 
這東西 這麼流行 肯定是有原因的

00:12:21.975 --> 00:12:24.678 
在手錶用戶和手錶製造商之間

00:12:25.179 --> 00:12:28.515 
雖然很複雜 但也值得我們付出努力

00:12:29.216 --> 00:12:32.686 
我希望我說的很得體
至少是推銷給你們

00:12:32.753 --> 00:12:34.655 
製作complication的想法

00:12:34.955 --> 00:12:37.024 
如果是這樣的話 我想跟你們談一下

00:12:37.090 --> 00:12:40.427 
製作優秀的complication
的必要條件

00:12:41.862 --> 00:12:45.632 
在設計complication時
最重要的是考慮

00:12:45.999 --> 00:12:48.769 
選擇顯示哪些信息

00:12:49.603 --> 00:12:52.005 
優秀的complication會對
那些問題作出回答

00:12:52.072 --> 00:12:54.975 
人們在日常生活中經常問自己的

00:12:55.742 --> 00:12:58.378 
幾乎每天開始工作之前
我都會去跑步

00:12:58.912 --> 00:13:00.781 
所以前一天晚上 我可能會查一下

00:13:00.848 --> 00:13:03.817 
日出的時間

00:13:03.884 --> 00:13:05.485 
然後才定鬧鈴

00:13:06.086 --> 00:13:08.856 
起牀後 我想知道戶外的溫度

00:13:08.922 --> 00:13:10.490 
我就知道該穿什麼衣服去跑步

00:13:11.325 --> 00:13:13.660 
我還會查我第一個工作會議的時間

00:13:13.727 --> 00:13:16.463 
以便我有足夠的時間用來跑步

00:13:16.864 --> 00:13:18.699 
還會查一下交通狀況

00:13:18.765 --> 00:13:22.169 
確定我不用早點出發去上班

00:13:23.003 --> 00:13:28.542 
現在 這些問題的答案
會直接影響我一天的計劃

00:13:29.176 --> 00:13:31.345 
如果就能得到答案

00:13:31.411 --> 00:13:32.980 
只需要擡起手腕

00:13:33.380 --> 00:13:38.185 
那麼complication會對我
的生活提供真實和即時的價值

00:13:38.819 --> 00:13:42.689 
而且complications
可以作爲一個很強大的動力

00:13:43.056 --> 00:13:45.826 
鼓勵你行動起來

00:13:46.226 --> 00:13:47.661 
執行力更強

00:13:48.662 --> 00:13:50.797 
比如活動complication

00:13:50.864 --> 00:13:54.568 
顯示我的健身進度 朝着我的目標努力

00:13:55.169 --> 00:13:58.472 
我能看到我是否一直在堅持完成目標

00:13:58.539 --> 00:14:02.609 
或是否要在下班以後帶着我的狗
來一次超遠距離的散步

00:14:03.243 --> 00:14:06.613 
WaterMinder的complication
顯示出我的進度

00:14:06.680 --> 00:14:09.082 
朝着我制定的日常攝水量目標

00:14:09.850 --> 00:14:12.252 
看起來似乎我有點兒落後了

00:14:12.319 --> 00:14:15.489 
所以我要抓住這個機會喝點兒水

00:14:15.789 --> 00:14:16.757 
請稍等

00:14:31.271 --> 00:14:36.143 
那麼 如果你只選擇
一件事通過complication

00:14:36.210 --> 00:14:39.713 
與用你應用的人進行溝通

00:14:39.947 --> 00:14:41.381 
應該是什麼呢？

00:14:41.915 --> 00:14:44.685 
他們最想了解什麼

00:14:44.751 --> 00:14:46.220 
在日常生活中？

00:14:46.820 --> 00:14:50.791 
那個信息是否頻繁更新來保持趣味性？

00:14:51.425 --> 00:14:55.295 
有時候 這個問題的答案
並不是很明確的

00:14:56.196 --> 00:15:00.300 
如果你不能完全縮減爲一條信息

00:15:00.801 --> 00:15:03.036 
你可以考慮讓人們自己做出選擇

00:15:03.470 --> 00:15:05.906 
CARROT Weather應用就如此

00:15:06.406 --> 00:15:09.843 
它讓你配置來你想看到的天氣信息

00:15:10.277 --> 00:15:14.815 
氣溫、溫溼度、風力、紫外線指數、

00:15:15.115 --> 00:15:18.685 
降水、降水概率或溼度

00:15:19.286 --> 00:15:24.391 
加利福尼亞的夏季幾乎從不下雨

00:15:24.658 --> 00:15:29.129 
所以完全沒必要查看降水概率

00:15:29.696 --> 00:15:33.133 
今天的概率是0％ 真是太驚人了

00:15:33.600 --> 00:15:36.270 
順便插句 我今早看了天氣預報

00:15:36.336 --> 00:15:38.238 
明天應該會下雨

00:15:38.305 --> 00:15:39.640 
所以要注意防雨

00:15:41.942 --> 00:15:42.876 
很及時

00:15:43.076 --> 00:15:47.247 
但在夏季的同一時期

00:15:47.314 --> 00:15:52.019 
紫外線指數是個非常相關的信息

00:15:52.753 --> 00:15:55.455 
讓complication自定義

00:15:55.522 --> 00:15:57.191 
是個很不錯的功能

00:15:57.824 --> 00:16:00.627 
CARROT Weather
還實現了一個很棒的功能

00:16:00.694 --> 00:16:03.197 
就是使它的complication
方便查看

00:16:03.864 --> 00:16:06.767 
每個元素 除當前氣溫之外

00:16:07.000 --> 00:16:11.505 
都使用了簡單而有意義的圖標
來標記所顯示的值

00:16:11.772 --> 00:16:14.842 
而且並不會勉強塞入太多信息

00:16:14.908 --> 00:16:17.344 
因爲會增加更多的文本和圖標

00:16:17.411 --> 00:16:18.946 
文本和圖標太小了 很難看清

00:16:20.047 --> 00:16:22.115 
若你從未做過
complication

00:16:22.549 --> 00:16:26.386 
你得了解一下
complication元素

00:16:26.854 --> 00:16:32.626 
圓形、小模塊、大模塊、
小實體和大實體

00:16:33.126 --> 00:16:37.130 
在watchOS 3中又增加了
超大模塊和超大實體

00:16:38.432 --> 00:16:40.934 
我原來打算做一個音響效果
但我沒時間

00:16:41.735 --> 00:16:43.737 
complication家族的
每個元素

00:16:43.804 --> 00:16:46.707 
都由一個或多個
complication模板組成

00:16:46.773 --> 00:16:49.276 
並對應指定的錶盤

00:16:49.743 --> 00:16:53.547  
顏色錶盤使用
圓形complication元素

00:16:54.515 --> 00:16:59.119  
模塊化錶盤使用大模塊
complication元素

00:16:59.186 --> 00:17:01.522  
和小模塊complication元素

00:17:02.489 --> 00:17:05.259  
簡單實體和精密計時錶盤

00:17:05.325 --> 00:17:07.794  
使用小實體complication

00:17:08.395 --> 00:17:11.265  
而實體和米奇錶盤

00:17:11.330 --> 00:17:14.468  
則使用大實體complication元素

00:17:16.002 --> 00:17:20.207 
全新的超大表盤要用

00:17:20.507 --> 00:17:21.974  
有人想猜猜看嗎？

00:17:22.910 --> 00:17:23.743  
對了

00:17:24.111 --> 00:17:27.481  
超大表盤用
超大complication元素

00:17:27.548 --> 00:17:28.582  
你們反應很快

00:17:29.550 --> 00:17:30.984  
我希望你能把這些記下來

00:17:31.051 --> 00:17:33.086 
因爲你查不到這些信息

00:17:33.787 --> 00:17:34.888 
哦 我只是開個玩笑

00:17:34.955 --> 00:17:37.057 
所有信息都能 查到

00:17:37.124 --> 00:17:40.227 
從watchOS
Human Interface Guidelines中

00:17:40.294 --> 00:17:43.263 
這裏可以找到 所有信息

00:17:43.330 --> 00:17:45.432 
手錶應用設計相關的

00:17:45.499 --> 00:17:47.100 
我強烈推薦先看一下這個

00:17:48.168 --> 00:17:50.771 
重要的是你要嘗試做一些東西

00:17:50.838 --> 00:17:52.739 
使用每一個complication元素

00:17:52.806 --> 00:17:57.644 
這樣人們就可以在錶盤上用
complication了 他們可能會很喜歡

00:17:58.345 --> 00:18:00.447  
當然 一定要用佔位數據

00:18:00.514 --> 00:18:04.518  
在complication中
那是人們能看到的樣子的實例

00:18:04.885 --> 00:18:07.354  
當他們實際使用
你的complication時

00:18:07.421 --> 00:18:11.358  
如果沒有佔位數據 人們就不
可能會期待

00:18:11.425 --> 00:18:13.527  
你的complication
有什麼功能

00:18:14.695 --> 00:18:15.629 
好了

00:18:15.696 --> 00:18:18.665 
你們看到了有些complication
會提供更多空間

00:18:18.732 --> 00:18:20.334 
給更詳細的信息

00:18:21.068 --> 00:18:22.369 
在模塊化錶盤上

00:18:22.803 --> 00:18:25.672 
如果某人把你的
complication放於中心

00:18:25.739 --> 00:18:29.076 
他們一定是經常關注你的應用
所傳達的內容

00:18:30.010 --> 00:18:34.348 
你可以抓住這個機會
再多提供點兒信息

00:18:34.414 --> 00:18:35.916 
他們可能會覺得有用

00:18:36.617 --> 00:18:40.554 
事實上 你可能想
顯示完全不同的信息

00:18:40.621 --> 00:18:42.389 
基於complication元素

00:18:43.023 --> 00:18:45.559 
如果天氣信息對你來說真很重要的話

00:18:46.193 --> 00:18:49.296 
你沒有理由不裝兩個

00:18:49.363 --> 00:18:52.799 
CARROT Weather complication
的實例在你的錶盤上

00:18:53.467 --> 00:18:57.804 
也許你會使用大模塊來顯示
當前氣溫和天氣情況

00:18:57.871 --> 00:19:00.807 
用小模塊來顯示降水概率

00:19:01.508 --> 00:19:04.311 
即使你還沒想好要 顯示什麼信息

00:19:04.378 --> 00:19:06.046 
在你的complication中

00:19:06.513 --> 00:19:08.982 
你也可以做一個應用啓動器

00:19:09.583 --> 00:19:12.019 
Just Press Record
這個complication

00:19:12.085 --> 00:19:16.290 
一個記錄語音備忘錄的應用
其實就是一個應用啓動器

00:19:16.924 --> 00:19:21.361 
按它當然可以啓動應用
但是還能開始新錄音

00:19:21.762 --> 00:19:24.064 
超級方便和快捷

00:19:24.798 --> 00:19:30.470 
這再清楚不過了 我們喜歡
complication 很喜歡

00:19:30.938 --> 00:19:33.273 
我們認爲戴Apple Watch者

00:19:33.507 --> 00:19:37.544 
越瞭解complication作用

00:19:37.611 --> 00:19:40.180 
越想更多的complication

00:19:40.914 --> 00:19:44.284 
爲了更方便地獲取這些
complication

00:19:44.718 --> 00:19:49.189 
在watchOS 3中 人們可以
很簡便地切換錶盤

00:19:49.756 --> 00:19:52.893 
只需要輕輕滑一下
就從工作日complication

00:19:52.960 --> 00:19:54.528 
切換到健身錶盤

00:19:54.761 --> 00:19:57.931 
並從健身錶盤切換到週末錶盤

00:19:58.498 --> 00:20:01.034 
現在想一下

00:20:01.101 --> 00:20:02.870 
我們日常生活中的各種事兒

00:20:03.203 --> 00:20:05.072  
對吧？事情多得令人吃驚

00:20:06.039 --> 00:20:07.040  
哦 我是認真的

00:20:07.608 --> 00:20:11.278  
我們健身、我們約會、
我們運動、我們旅行、

00:20:11.345 --> 00:20:14.515  
我們做體育運動、
我們做其他各種活動

00:20:14.982 --> 00:20:17.584 
現在 更容易匹配錶盤

00:20:17.651 --> 00:20:21.321 
和所安裝的complication
根據你正在做的事情

00:20:21.488 --> 00:20:24.258 
這樣人們應該在Apple Watch上

00:20:24.324 --> 00:20:26.760 
會使用更多的
complication

00:20:27.294 --> 00:20:30.097  
你也做一個這樣的
complication吧

00:20:31.465 --> 00:20:34.234 
好了...以上說的是
complication

00:20:34.868 --> 00:20:38.705 
現在 我們繼續探討通知的
最佳範例

00:20:40.908 --> 00:20:45.379 
通知應該有用、及時

00:20:46.013 --> 00:20:48.248 
並且要精心設計

00:20:48.315 --> 00:20:52.619 
來表達精確、清晰的信息

00:20:53.120 --> 00:20:56.790 
換句話說 應該方便查看

00:20:57.524 --> 00:21:00.494 
請記住 收到通知的人

00:21:00.561 --> 00:21:03.864 
可以在任何地方 正在做任何事

00:21:04.498 --> 00:21:07.367 
他們可能正在吃飯、正跟朋友約會、

00:21:07.801 --> 00:21:10.671 
正搭乘地鐵、正在喝水、

00:21:11.205 --> 00:21:15.075 
或正在開會討論一些很重要的事

00:21:15.609 --> 00:21:18.912 
很多時候 人們正聚精會神地

00:21:18.979 --> 00:21:22.950 
忙自己手頭的事兒或正全神貫
注地欣賞這個世界

00:21:23.450 --> 00:21:25.252 
所以你的通知要

00:21:25.319 --> 00:21:28.155 
表達清晰、扼要

00:21:29.056 --> 00:21:33.060 
幸運的是 使通知方便查看
並不困難

00:21:33.560 --> 00:21:36.230 
首先 你要提供一個有意義
的標題

00:21:36.530 --> 00:21:39.733 
人們看通知分兩種 瞥一眼和仔細看

00:21:40.267 --> 00:21:42.336 
就像這兩個詞所暗示的那樣
瞥一眼是

00:21:42.402 --> 00:21:45.472 
快速提供通知內容的概要

00:21:45.973 --> 00:21:48.742 
而你提供的標題將會顯示
在這兒

00:21:49.176 --> 00:21:51.311 
有時候標題可能會提供所有

00:21:51.378 --> 00:21:53.547 
需要從通知中瞭解的信息

00:21:54.515 --> 00:21:57.684 
其次 只顯示必要信息

00:21:58.051 --> 00:21:59.786 
我必須要強調這一點

00:22:00.053 --> 00:22:02.356 
通知裏顯示的信息越多

00:22:02.422 --> 00:22:05.959 
人們越難抓到重點

00:22:06.460 --> 00:22:09.396 
比如你正在 做一個登記入住通知

00:22:09.796 --> 00:22:10.964 
給一個旅行應用

00:22:11.398 --> 00:22:15.302  
通知可能包含 各種各樣
潛在有用的信息

00:22:15.369 --> 00:22:16.803  
跟遊客航班相關的

00:22:17.504 --> 00:22:23.043  
但在一條通知裏 像航班號
或你自己的名字這樣的

00:22:23.110 --> 00:22:26.180  
信息並沒有那麼重要

00:22:26.480 --> 00:22:29.750  
所以我們要去掉這樣的信息

00:22:31.218 --> 00:22:34.488 
第三 先顯示重要信息

00:22:34.821 --> 00:22:37.124 
可以把最重要的信息顯示在頂部

00:22:37.424 --> 00:22:39.793 
人們很可能會快速讀取信息

00:22:39.860 --> 00:22:41.128 
而不需要往下滾動

00:22:41.695 --> 00:22:44.464 
這非常有幫助 若某人手裏正拿着東西

00:22:44.531 --> 00:22:46.900 
不能騰出手來滑動屏幕

00:22:47.367 --> 00:22:49.036 
或查看Digital Crown

00:22:49.937 --> 00:22:51.805 
所以 對於登記入住通知

00:22:52.172 --> 00:22:54.341  
我們要把航班號 這樣的內容

00:22:54.408 --> 00:22:57.778  
和登記時間 挪到通知的最後

00:22:59.246 --> 00:23:02.783 
第四 改變尺寸和外觀

00:23:02.850 --> 00:23:05.485 
創建清晰的視覺層次

00:23:06.053 --> 00:23:08.488 
你的通知應該讓人們

00:23:08.555 --> 00:23:10.991 
首先去關注最重要的信息

00:23:11.692 --> 00:23:15.395 
這個通知的信息很全、很對

00:23:15.462 --> 00:23:16.763 
顯示的順序也對

00:23:16.830 --> 00:23:20.400 
但每一條的視覺權重都一樣

00:23:21.034 --> 00:23:24.204 
Apple Watch的
通知定製性很強

00:23:24.271 --> 00:23:27.674 
你可以完全控制字形、佈局、

00:23:27.741 --> 00:23:29.376 
背景和邊框顏色

00:23:30.344 --> 00:23:35.148 
這個功能可以幫助人們
迅速找出最重要的通知

00:23:35.682 --> 00:23:38.352 
這個設計真正把重點放在

00:23:38.418 --> 00:23:42.389 
像幾等票、座位號、
出發時間和路線這樣的信息上

00:23:42.689 --> 00:23:46.460 
且這個通知的目的是讓你現在辦理入住

00:23:46.527 --> 00:23:47.928 
表達的很清晰

00:23:49.062 --> 00:23:50.163 
最後

00:23:50.230 --> 00:23:53.433 
精心設計的通知經常使用圖標、

00:23:53.500 --> 00:23:57.604 
圖形和動畫來進行快速地表達

00:23:58.238 --> 00:24:01.575 
圖形表達更迅速、

00:24:01.642 --> 00:24:03.744 
比文本更清晰

00:24:04.645 --> 00:24:08.115 
圖標可以節省空間 讓你的通知

00:24:08.182 --> 00:24:10.584 
在屏幕上全部顯示出來

00:24:11.018 --> 00:24:15.956 
但需要注意的是 有些圖標
並不是通用的

00:24:16.023 --> 00:24:17.491 
或可能產生誤解

00:24:17.558 --> 00:24:20.227 
所以你要採用被 廣泛使用的圖標

00:24:20.294 --> 00:24:22.196 
各種族和文化

00:24:22.262 --> 00:24:23.730 
或你瞭解 圖標的象徵意義

00:24:23.797 --> 00:24:26.366 
使用你應用的人能明白

00:24:27.167 --> 00:24:30.070 
簡短、有意義的動畫是
一種優秀方式

00:24:30.137 --> 00:24:33.540 
補充文本並引起人們注意的

00:24:34.274 --> 00:24:38.111 
圖形和其他可視化數據不僅能提供

00:24:38.178 --> 00:24:40.514 
更有趣的可視化體驗

00:24:40.581 --> 00:24:43.750 
還能表達更多的意思

00:24:44.685 --> 00:24:49.957 
但在設計通知時還要考慮一點

00:24:52.326 --> 00:24:56.897 
你要認真思考爲何以及何時發送

00:24:57.698 --> 00:25:00.033 
在錯誤的時間收到通知

00:25:00.100 --> 00:25:03.237 
只會分散注意力或讓人討厭

00:25:03.637 --> 00:25:07.407 
如果你現在收到了一條通知
你會覺得很惱火

00:25:07.474 --> 00:25:09.877 
除非 更重要

00:25:09.943 --> 00:25:11.211 
比現在的事

00:25:11.512 --> 00:25:13.213 
這是絕對不可能的

00:25:15.449 --> 00:25:19.319 
因爲 Apple Watch會在
手腕上震動

00:25:19.386 --> 00:25:23.524 
收到通知時 所以很難錯過
某個通知

00:25:23.891 --> 00:25:26.126 
如果你的應用給人們發的通知

00:25:26.193 --> 00:25:30.063 
並不那麼有用 信息量也不大
而且也不及時

00:25:30.130 --> 00:25:32.933 
人們很可能會完全關閉你應用的功能

00:25:32.999 --> 00:25:35.169 
通知發送

00:25:36.170 --> 00:25:37.104 
那麼...

00:25:37.938 --> 00:25:42.042 
如何瞭解爲何以及何時發送
通知呢？

00:25:42.910 --> 00:25:46.513 
嗯 最好的方法是確定
什麼是最相關的

00:25:46.580 --> 00:25:48.348 
對於使用你應用的人來說

00:25:48.415 --> 00:25:52.252 
以及他們什麼時間最可能去執行

00:25:53.253 --> 00:25:56.990 
我有兩個很出色的應用

00:25:57.057 --> 00:25:58.992 
我有兩個很出色的例子

00:25:59.426 --> 00:26:02.696 
第一個是非常了不起的天氣應用
叫Dark Sky

00:26:03.530 --> 00:26:07.701 
Dark Sky會在天氣突變時通
知人們

00:26:07.968 --> 00:26:12.105 
比如要下雨了或雨要停了

00:26:13.040 --> 00:26:15.809 
在Dark Sky這個示例中
相關性是由情景因素

00:26:15.876 --> 00:26:17.244 
決定的

00:26:17.578 --> 00:26:21.715 
通知會基於用戶的地理位置
或用進行發送的

00:26:21.782 --> 00:26:24.551 
距離氣象系統遠近獲得的定位

00:26:25.285 --> 00:26:27.487 
通知要提前發送

00:26:27.554 --> 00:26:29.456 
這樣 有時間去拿傘

00:26:29.523 --> 00:26:32.960 
在傾盆大雨之前

00:26:33.627 --> 00:26:37.698 
因爲這些通知都是情景相關的
是及時的

00:26:37.764 --> 00:26:39.333 
所以執行力更強

00:26:40.033 --> 00:26:43.303 
如果知道雨要停了 我可能會

00:26:43.403 --> 00:26:44.838 
準備去跑步

00:26:45.439 --> 00:26:49.443 
如果知道要下雨了 我可能會

00:26:49.510 --> 00:26:51.645 
躺在沙發上打個盹兒

00:26:52.613 --> 00:26:56.083 
除了情景因素 用戶偏好

00:26:56.149 --> 00:26:58.785 
和模式能提供出色的洞察力

00:26:58.852 --> 00:27:02.022 
瞭解人們想知道什麼
以及什麼時候想知道

00:27:02.589 --> 00:27:05.559 
具體地 讓我們看一下另一個示例

00:27:06.560 --> 00:27:11.865 
Streaks是一個幫人們養成好
習慣的應用

00:27:11.932 --> 00:27:14.368 
剛剛獲得了Apple設計大獎

00:27:15.068 --> 00:27:19.506 
人們每天最多能選擇六個任務

00:27:19.940 --> 00:27:21.108 
如該應用名字所表示的

00:27:21.175 --> 00:27:24.011 
這裏的目標是一條一條的

00:27:24.077 --> 00:27:27.814 
因爲每天都做某事
就能變成一種日常習慣

00:27:28.549 --> 00:27:30.551 
所以 如果你想養成 的習慣

00:27:30.617 --> 00:27:33.353 
每天要做強化訓練

00:27:33.754 --> 00:27:37.624 
我要做的是學吉他或彈吉他

00:27:37.691 --> 00:27:41.528 
或記得給狗盆填滿水或遛狗

00:27:42.262 --> 00:27:44.298 
Streaks會提醒你去做這些事兒

00:27:45.265 --> 00:27:48.335 
我的狗從來沒這麼健康過
攝水量也從來沒這麼充足過

00:27:49.269 --> 00:27:51.805 
雖然他們並沒意識到
但實際上他們很喜歡這個應用

00:27:52.472 --> 00:27:55.008 
當然 這裏的重點是這些事是

00:27:55.075 --> 00:28:00.414 
人們想定時去做但可能會忘記做的

00:28:01.281 --> 00:28:05.052 
所以Streaks用通知來提醒人們

00:28:05.385 --> 00:28:09.690 
但只有在正確的時間收到提醒纔有效

00:28:10.123 --> 00:28:14.094 
人們應該在最可能去做的時候收到提醒

00:28:15.195 --> 00:28:18.765 
或者 換句話說 在他們最有空的時候

00:28:18.832 --> 00:28:22.269 
但Streaks是如何知道
具體時間的？

00:28:23.770 --> 00:28:25.939 
嗯 首先 它並不知道

00:28:26.440 --> 00:28:29.877 
關於它是怎麼操作的
讓我們先來看個具體的例子

00:28:30.477 --> 00:28:33.113 
現在我正試着養成彈吉他的習慣

00:28:33.714 --> 00:28:36.783 
在一天結束之前的某個時間

00:28:36.850 --> 00:28:38.752 
我會收到一個彈吉他的提醒

00:28:39.453 --> 00:28:43.223 
不會太晚 那樣我就沒時間彈吉他了

00:28:43.457 --> 00:28:45.025 
或者我已經睡着了

00:28:45.592 --> 00:28:49.229 
但也不會太早 比如說
我還在工作時就收到了

00:28:50.397 --> 00:28:51.732 
那麼 爲簡單起見

00:28:52.299 --> 00:28:55.002 
比如說我在晚上7:00收到通知

00:28:55.502 --> 00:28:56.637 
這稍微早點兒

00:28:56.703 --> 00:28:59.339 
那麼我可以按一個30分鐘的止鬧按鈕

00:28:59.406 --> 00:29:04.344 
一直拖 一直拖
直到我能彈吉他爲止

00:29:04.978 --> 00:29:06.580 
當我彈吉他時

00:29:06.914 --> 00:29:10.050 
我會在應用中將那個任務標記爲完成

00:29:12.052 --> 00:29:13.587 
Streaks會記下該時間

00:29:14.221 --> 00:29:17.658 
日復一日 我每次都會標記
完成那個任務的時間

00:29:17.724 --> 00:29:20.627 
這樣 Streaks就會越來越
精確地瞭解

00:29:20.694 --> 00:29:23.030 
我一般在什麼時間彈吉他

00:29:23.864 --> 00:29:26.967 
Streaks會用那個時間
來制定給我的提醒

00:29:27.034 --> 00:29:30.204 
並在正確的時間自動發送給我

00:29:30.671 --> 00:29:33.774 
這是個簡單的啓發

00:29:34.842 --> 00:29:37.845 
實際發送時間會提前30分鐘

00:29:37.911 --> 00:29:40.547 
因爲很明顯我不會立刻放下所有事

00:29:40.614 --> 00:29:42.716 
一看到通知就開始彈吉他

00:29:43.450 --> 00:29:48.856 
然而 自動調整時間和通知
有時候並不合適

00:29:49.489 --> 00:29:53.160 
你可能想就在
一個特定的時間完成某些任務

00:29:53.227 --> 00:29:55.796 
Streaks也可以做到

00:29:56.463 --> 00:29:58.632 
或者也許你不想逐個收到通知

00:29:58.699 --> 00:30:01.201 
只想每天收到一次提醒

00:30:01.268 --> 00:30:03.136 
而Streaks也能做到

00:30:03.637 --> 00:30:07.040 
你可以禁用單一任務通知

00:30:07.908 --> 00:30:09.710 
或關閉所有通知

00:30:10.377 --> 00:30:13.247 
所以 通過明智地選擇通知發送的時間

00:30:13.947 --> 00:30:18.652 
和爲用戶提供爲什麼
以及什麼時候收到通知的完全控制

00:30:19.219 --> 00:30:23.190 
Streaks發送的提醒
不太可能會打擾用戶、

00:30:23.991 --> 00:30:25.726 
被忽略或被嫌棄

00:30:27.060 --> 00:30:30.931 
Streaks發送的通知都在
可執行的範圍內

00:30:30.998 --> 00:30:34.301 
因爲它一般會提醒人們
執行一項身體力行的任務

00:30:34.735 --> 00:30:38.505 
但使通知可執行的字面意思也是

00:30:38.572 --> 00:30:40.741 
給通知添加行爲

00:30:41.308 --> 00:30:46.313 
我鼓勵你們探索
如何讓你推送的通知執行力更強

00:30:47.014 --> 00:30:49.550 
要從手腕上迅速進行分類

00:30:49.616 --> 00:30:51.351 
是一件很厲害的事

00:30:51.885 --> 00:30:55.589 
通知可促進使用你應用的人之間的交互

00:30:55.889 --> 00:30:59.293 
而且會毫不吝嗇地在日常生活中

00:30:59.359 --> 00:31:01.028 
激勵人們

00:31:02.429 --> 00:31:05.999 
一條通知 最多可以執行四種動作

00:31:06.233 --> 00:31:08.735 
一定要只顯示真正相關的動作

00:31:08.802 --> 00:31:10.637 
與通知內容

00:31:11.805 --> 00:31:15.776 
確保把動作標記地清晰、簡潔

00:31:15.843 --> 00:31:18.011 
並使用面向動作的動詞

00:31:18.512 --> 00:31:24.184 
請嘗試關注那些按一下就能完成的操作
就一下

00:31:24.518 --> 00:31:28.622 
然而 有時候可能會需要
一個或兩個額外的步驟

00:31:29.122 --> 00:31:32.025 
多步流程會把人們帶入你的應用中

00:31:32.092 --> 00:31:34.027 
一般來說會有點兒痛苦

00:31:34.094 --> 00:31:36.697 
因爲應用需要時間加載

00:31:37.364 --> 00:31:40.934 
但在watchOS 3中
當顯示應用的通知時

00:31:41.001 --> 00:31:42.970 
會在後臺啓動你的應用

00:31:43.337 --> 00:31:47.975 
這就確保應用的數據是最新的

00:31:48.041 --> 00:31:50.777 
並且提前加載應用 方便人們查看

00:31:51.311 --> 00:31:53.714 
所以不要回避這個問題
要讓人們進入你的應用

00:31:53.780 --> 00:31:55.082 
如果必要的話

00:31:55.749 --> 00:31:58.986 
現在 談到把人們帶入你的應用

00:31:59.620 --> 00:32:01.822 
我們正好可以談談應用

00:32:03.524 --> 00:32:07.194 
watchOS 3將完全改變人們
使用應用的

00:32:07.261 --> 00:32:08.595 
體驗和互動

00:32:09.196 --> 00:32:11.632 
讓我們看一下最重要的幾個變更

00:32:11.698 --> 00:32:13.400 
以及這些變更產生的意義

00:32:14.334 --> 00:32:15.669 
讓我們從新版Dock說起

00:32:16.603 --> 00:32:20.007 
人們最多可以在Dock中
放10個應用

00:32:20.440 --> 00:32:23.143 
並且Dock中的每個應用都在內存中

00:32:23.544 --> 00:32:28.882 
以便能從Dock快速進入應用

00:32:29.716 --> 00:32:32.853 
Dock中顯示的是每個應用的快照

00:32:33.320 --> 00:32:37.324 
這些快照應該包含豐富的信息
並方便查看

00:32:37.724 --> 00:32:42.496 
應用的快照要定期更新
保證數據是最新的

00:32:43.397 --> 00:32:46.733 
Dock中的應用在後臺
每小時至少啓動一次

00:32:47.100 --> 00:32:49.736 
這就就能取到新數據更新應用的UI

00:32:49.803 --> 00:32:52.506 
並請求系統創建一個應用的新快照

00:32:52.573 --> 00:32:54.975 
如果必要的話

00:32:55.909 --> 00:32:59.279  
當在Dock中查看應用時會喚醒應用

00:32:59.346 --> 00:33:03.050  
如果內容有變化 會更新應用的快照

00:33:04.151 --> 00:33:06.787 
如果有人把你的應用放在Dock中

00:33:07.087 --> 00:33:08.422 
你應該爲此感到高興

00:33:08.822 --> 00:33:12.359 
因爲放在Dock中就意味着
你的應用包含的信息

00:33:12.426 --> 00:33:14.995 
正是人們想隨時瞭解的內容

00:33:15.729 --> 00:33:19.166 
正因爲如此 重點是應用的快照

00:33:19.233 --> 00:33:21.935 
不僅得是最新的 還得是相關的

00:33:22.736 --> 00:33:25.906 
在某些情況下 顯示人們
最後一次查看的屏幕

00:33:25.973 --> 00:33:28.175 
上次使用應用時

00:33:28.242 --> 00:33:30.410 
可能就不是很相關

00:33:30.978 --> 00:33:34.915 
幸運的是 watchOS 3
會提供一個API 可以跳轉

00:33:34.982 --> 00:33:38.418 
到不同的屏幕
而非停留在最後一次瀏覽過的屏幕上

00:33:38.952 --> 00:33:42.189 
那麼 比如說 有一個棒球應用

00:33:42.256 --> 00:33:45.759 
顯示了當前比賽和即將進行比賽的列表

00:33:45.826 --> 00:33:48.862 
當然 按每個列表項都能進入

00:33:48.929 --> 00:33:51.565 
比賽相關的詳情頁面

00:33:51.999 --> 00:33:52.866 
好了

00:33:52.933 --> 00:33:57.037 
現在 假如你自己是這個應用的用戶

00:33:57.437 --> 00:34:00.707 
你最後一次看該應用時看的是這場比賽

00:34:01.141 --> 00:34:04.344 
退出後 在Dock中看這個應用時

00:34:04.845 --> 00:34:08.581 
你很可能會希望繼續
得到那場比賽的詳細信息

00:34:09.248 --> 00:34:11.784 
如果比賽結束了 巨人隊贏了

00:34:12.319 --> 00:34:15.455 
你很可能仍然希望在
詳細視圖中查看這場比賽

00:34:15.822 --> 00:34:17.456 
但是過一會兒

00:34:17.524 --> 00:34:20.427 
這場比賽的信息變得

00:34:20.494 --> 00:34:21.862 
越來越不相關

00:34:22.196 --> 00:34:23.996 
你可能 瞭解了最後的得分情況

00:34:24.063 --> 00:34:26.867 
從應用發送的通知中、從朋友那兒、

00:34:27.167 --> 00:34:28.735 
從Twitter上或新聞裏

00:34:29.503 --> 00:34:34.007 
在某一時刻 這個內容
就變得完全不相關了

00:34:34.074 --> 00:34:36.376 
你不再對那場比賽感興趣了

00:34:36.844 --> 00:34:40.514 
也許你正期待看到第二天的賽程

00:34:40.981 --> 00:34:44.150 
或者如果你鍾愛的球隊
正在打一場新的比賽

00:34:44.217 --> 00:34:48.288 
並且已經開始了 你就不想
瞭解那場比賽的信息嗎？

00:34:49.089 --> 00:34:51.257 
這些就是你需要問的問題

00:34:51.324 --> 00:34:53.193 
關於應用的

00:34:53.994 --> 00:34:57.831 
同時 我希望你能考慮一下
以下這些最佳範例

00:34:59.499 --> 00:35:00.534 
第一 也是最重要的一點

00:35:00.834 --> 00:35:05.072 
你的目標是主動瞭解用戶
的興趣和需要

00:35:05.772 --> 00:35:09.042 
要站在他們的立場上思考

00:35:09.877 --> 00:35:14.548  
把事件放在一個時間軸上是
一種非常有效的技巧

00:35:15.215 --> 00:35:18.552  
及時提取重要事件 然後問自己

00:35:18.986 --> 00:35:22.289  
“這些事件會對什麼人產生
什麼影響？”

00:35:22.990 --> 00:35:25.759 
在我剛剛舉出的棒球應用示例中

00:35:25.826 --> 00:35:30.030 
我猜測人們可能會想在比賽
開始前後 瀏覽比賽信息

00:35:30.097 --> 00:35:32.266 
或在比賽期間

00:35:33.233 --> 00:35:35.969 
而在其它時間 同樣也是這些人
可能想要了解

00:35:36.036 --> 00:35:37.905 
整個聯賽的日程表

00:35:38.772 --> 00:35:42.676 
然而 很可能是一個很簡單的日程表

00:35:43.377 --> 00:35:45.812 
個人偏好可以 產生重大影響

00:35:45.879 --> 00:35:47.681 
對最相關的信息內容

00:35:48.315 --> 00:35:51.451 
比如 誰贏就支持誰的人
怎麼會去關心

00:35:51.518 --> 00:35:54.922 
某一個球隊 他們可能希望
看到完全不同的內容

00:35:54.988 --> 00:35:58.492 
而忠實的棒球迷則想關注
每場比賽

00:35:58.992 --> 00:36:02.462 
對於其他的應用 有其他情景因素
比如時間

00:36:02.529 --> 00:36:06.166 
和地點可能對人們想看到的
內容產生巨大影響

00:36:07.134 --> 00:36:10.137 
一般情況下 人們並不總是
喜歡看到

00:36:10.204 --> 00:36:14.074 
一個app產生出人意料的變化
而不保存當前狀態

00:36:14.408 --> 00:36:16.610 
那樣人們會感到困惑或迷惑

00:36:16.977 --> 00:36:19.546 
所以 如果你選擇把人們跳
轉到一個不同的視圖

00:36:19.613 --> 00:36:22.282 
你要以一種有邏輯的、
可預見的方式來進行

00:36:23.016 --> 00:36:26.854 
最好是人們一點兒都不會
意識到有什麼變化

00:36:26.920 --> 00:36:30.057 
就算他們感覺到了變化 他們也
應該能做出一些 的準確猜測

00:36:30.123 --> 00:36:34.194 
關於應用的UI狀態爲什麼
總是在變化

00:36:35.128 --> 00:36:36.330 
我並不推薦

00:36:36.396 --> 00:36:41.101 
把應用的快照做得跟應用完全不同

00:36:41.502 --> 00:36:43.904 
這樣會使應用難以識別

00:36:43.971 --> 00:36:45.172 
而且更不容易找到

00:36:45.639 --> 00:36:49.543 
只提供部分信息 完全沒問題

00:36:49.610 --> 00:36:51.812 
或隱藏某些不相關的內容

00:36:51.879 --> 00:36:53.347 
當應用在Dock中顯示時

00:36:53.614 --> 00:36:57.117 
但是 如果你想提高某些內容的易讀性

00:36:57.184 --> 00:36:58.285 
那樣也是可以的

00:36:58.685 --> 00:37:01.188 
但不要做得完全不一樣

00:37:02.122 --> 00:37:04.558 
接下來是避免 顯示警告、

00:37:04.625 --> 00:37:08.328 
確認對話或異常狀態 在快照中

00:37:08.929 --> 00:37:10.330 
情景完成之後

00:37:10.397 --> 00:37:12.900 
這種內容可能就沒什麼大用了

00:37:12.966 --> 00:37:15.269 
事實上 這種內容很容易被人誤解

00:37:15.335 --> 00:37:16.803 
或毫無意義

00:37:17.104 --> 00:37:18.238 
所以 根據不同的情況

00:37:18.305 --> 00:37:21.008 
可以考慮 用程序屏蔽這些內容

00:37:21.074 --> 00:37:22.543 
在一定時期之後

00:37:23.377 --> 00:37:27.381 
最後是優化應用顯示界面

00:37:27.447 --> 00:37:28.849 
在微型表單中的

00:37:29.516 --> 00:37:32.619 
在Dock中 應用會等比例縮小

00:37:32.686 --> 00:37:34.354 
這就像 一個相似數值

00:37:34.421 --> 00:37:38.659 
是原UI尺寸的62.4851％

00:37:39.726 --> 00:37:41.929 
你一定希望避免文本和圖形

00:37:41.995 --> 00:37:44.398 
在這麼小的尺寸時變得難以辨認

00:37:44.965 --> 00:37:47.534 
正因爲如此 狀態欄的字體粗細

00:37:47.601 --> 00:37:51.805 
嵌入應用和大量文本
都從常規變成了加粗

00:37:52.372 --> 00:37:55.409 
小尺寸時 粗字體看起來更清楚

00:37:56.276 --> 00:37:58.345 
而且對於非常關鍵的信息

00:37:59.046 --> 00:38:00.881 
可以試試用大字體

00:38:01.248 --> 00:38:04.985 
這就需要從界面上去掉一些
東西來獲得更多空間

00:38:05.219 --> 00:38:07.521 
但無論怎麼樣 都不是件壞事

00:38:08.488 --> 00:38:10.457 
現在 按照這些指南

00:38:10.524 --> 00:38:13.927 
你的應用在Dock中看起來
會盡可能地方便查看

00:38:14.928 --> 00:38:16.363 
說到方便查看

00:38:16.730 --> 00:38:19.199 
你們中有些人可能會想到快捷視圖

00:38:20.267 --> 00:38:23.370 
快捷視圖會 收集

00:38:23.437 --> 00:38:27.140 
及時的、情景相關的瞬間
從用戶經常使用的應用中

00:38:27.808 --> 00:38:31.545 
無獨有偶 實質上Dock的
目的也一樣

00:38:31.612 --> 00:38:34.882 
在簡化整個平臺體驗時

00:38:35.649 --> 00:38:38.385 
在某種程度上說 Dock是
由快捷視圖演變而來的

00:38:38.752 --> 00:38:42.055 
反過來說 在Dock中
快捷視圖似乎沒什麼用

00:38:42.122 --> 00:38:44.191 
所以就把它從watchOS中移除了

00:38:44.758 --> 00:38:50.163 
這就表示 你要投入到快捷
視圖設計中去的時間和想法

00:38:50.230 --> 00:38:53.467 
完全可以應用到考慮如何設計

00:38:53.534 --> 00:38:56.236 
應用使它在Dock中看起來更出色上

00:38:57.404 --> 00:38:58.272 
好了

00:38:58.605 --> 00:39:03.443 
那麼 應用在watchOS 3上的
另一個重大變更是

00:39:03.510 --> 00:39:09.216 
一個很簡單 但很強大的改進
就是人們如何在應用內跳轉

00:39:10.184 --> 00:39:13.587 
絕大部分現有Apple Watch
應用的結構都是分層結構

00:39:13.954 --> 00:39:17.224 
一般來說就是一份頂級列表和
一些詳情頁面

00:39:17.724 --> 00:39:21.562 
這一點兒都不意外
因爲我們傾向於分層組織數據

00:39:22.129 --> 00:39:24.631 
遺憾的是 在這些頁面之間跳轉

00:39:24.698 --> 00:39:29.436 
會很慢
因爲你每次都要先返回頂級視圖

00:39:31.004 --> 00:39:33.607 
比如說 如果我想查看某些詳情視圖

00:39:33.674 --> 00:39:36.210 
我選擇其中一項 打開 返回

00:39:36.276 --> 00:39:38.545 
再選擇另一項 再打開 再返回

00:39:39.012 --> 00:39:40.214 
以此類推

00:39:40.814 --> 00:39:43.183 
這就像你在一棟房子的其中一間屋子裏

00:39:43.250 --> 00:39:45.352 
你想進入隔壁房間

00:39:45.419 --> 00:39:48.055 
但是 要進入隔壁房間
你得上一段樓梯

00:39:48.121 --> 00:39:50.123 
然後再下另一段樓梯

00:39:50.524 --> 00:39:51.992 
應該更快捷

00:39:52.059 --> 00:39:54.928 
就像進入隔壁房間只需要
打開一扇門就可以了

00:39:55.562 --> 00:39:58.866 
那麼在watchOS 3中
我猜我們現在有“門”了

00:39:59.166 --> 00:40:02.703 
現在可以 直接從一個詳情視圖跳轉到

00:40:02.769 --> 00:40:06.573 
另一個詳情視圖 通過上下滑動
或使用Digital Crown

00:40:07.474 --> 00:40:10.577 
可以想象成是縱向分頁
從一個詳情頁面到下一個詳情頁面

00:40:11.411 --> 00:40:14.314 
如果你的應用已經採用了分層結構

00:40:14.648 --> 00:40:17.251 
那你應該好好考慮啓用這個功能

00:40:17.684 --> 00:40:21.154 
但有一點要特別指出這種行爲只能

00:40:21.221 --> 00:40:24.291 
當詳情頁面比顯示屏尺寸短時才起作用

00:40:24.958 --> 00:40:26.760  
所以在老版本的Weather中

00:40:26.827 --> 00:40:29.763  
未來10日天氣預報的頁面
看起來就有點兒高

00:40:29.830 --> 00:40:32.999  
從今日預報頁面上向下滾動
來查看未來10日天氣預報

00:40:33.600 --> 00:40:36.270 
在新版Weather中
信息被推送到

00:40:36.336 --> 00:40:39.439 
一個子視圖 這樣所有內容
都能一下子適應頁面

00:40:40.007 --> 00:40:43.877 
所以 如果你想這樣做
你可能得先重構你的設計

00:40:43.944 --> 00:40:45.379 
使一切都跟屏幕尺寸匹配

00:40:46.013 --> 00:40:48.582 
如果是分頁應用

00:40:49.716 --> 00:40:52.886 
現在是時候切換到分層

00:40:52.953 --> 00:40:54.254 
或考慮切換到分層應用了

00:40:54.821 --> 00:40:57.624 
用Digital Crown導航
效率更高

00:40:57.691 --> 00:41:00.427 
比從一個頁面水平地滑動到
另一個頁面

00:41:00.928 --> 00:41:03.597 
而且分頁應用也不支持分層

00:41:03.997 --> 00:41:06.266 
顯而易見 這裏並不是一個限制

00:41:06.900 --> 00:41:11.939 
包含大量詳情的頂級列表視圖
是很有幫助的

00:41:12.506 --> 00:41:16.076 
從分頁結構變成分層結構以後

00:41:16.376 --> 00:41:18.412 
我們的Weather應用可同時顯示

00:41:18.478 --> 00:41:21.248 
多個城市的溫度最高值和最低值

00:41:21.682 --> 00:41:22.950 
這很方便

00:41:24.151 --> 00:41:24.985 
好了

00:41:25.052 --> 00:41:30.591 
應用在watchOS 3上的
第三個重大變更跟粘性有關

00:41:31.358 --> 00:41:33.527 
聽起來很有意思

00:41:33.894 --> 00:41:37.531 
粘性描述了一個應用
能在前臺停留的時間的長短

00:41:37.965 --> 00:41:41.602 
在watchOS 3中
應用可以停留約8分鐘

00:41:41.902 --> 00:41:43.871 
比以前長多了

00:41:44.404 --> 00:41:46.273 
當人們在用你的Watch應用時

00:41:46.340 --> 00:41:47.541 
放下手腕

00:41:47.875 --> 00:41:51.478 
當他們再擡起手腕時
首先看到的就是你的應用

00:41:51.545 --> 00:41:54.047 
只要放下和擡起手腕的
時間不超過8分鐘

00:41:54.748 --> 00:41:59.152 
事實上 每次擡起手腕
計時器都會重新設置一個8分鐘

00:41:59.953 --> 00:42:03.690  
應用粘性劑真的是一個非常重要的變更

00:42:04.191 --> 00:42:07.928  
Apple Watch應用本意就是幫助

00:42:07.995 --> 00:42:11.598  
記錄可以持續數分鐘甚至數小時的活動

00:42:12.132 --> 00:42:17.538 
但在此期間 Watch顯示屏
可能會休眠一段時間

00:42:18.272 --> 00:42:20.507 
我們可以用購物單應用來舉例

00:42:20.941 --> 00:42:26.847 
購物時 你的絕大部分時間
花在看價格、讀標籤、查看產地、

00:42:26.914 --> 00:42:29.216 
避免扔到其他人的購物車中

00:42:29.283 --> 00:42:30.284 
及讓自己看起來更酷

00:42:30.751 --> 00:42:33.420 
還有很多諸如此類的活動

00:42:33.787 --> 00:42:37.691 
我們叫做會話活動或基於會話的活動

00:42:38.192 --> 00:42:42.896 
做晚飯、做體育運動、健身、問路

00:42:43.297 --> 00:42:46.300 
這些事兒都要持續一段時間

00:42:46.366 --> 00:42:50.470 
在此期間 人們會時不時地看
一下手錶 做任務

00:42:51.104 --> 00:42:54.741 
如果粘性夠大
會立即把你吸引到應用中

00:42:54.808 --> 00:42:58.045 
你最後一次看的
這就節省了很多時間

00:42:59.046 --> 00:42:59.880 
好了

00:42:59.947 --> 00:43:03.584 
現在說應用在watchOS上的
第四個重大變更

00:43:03.650 --> 00:43:07.287 
包括告知用戶何時可以放下手腕

00:43:08.355 --> 00:43:10.524 
當人們在你的應用中發起某個任務時

00:43:10.591 --> 00:43:13.460 
他們期待獲得確認反饋

00:43:13.894 --> 00:43:17.097 
任務是否成功？

00:43:17.598 --> 00:43:21.635 
遺憾的是 到底是成功或失敗

00:43:21.702 --> 00:43:25.072 
或確定成功或失敗是需要時間的

00:43:25.639 --> 00:43:28.242 
網絡慢、Wi-Fi信號弱、

00:43:28.308 --> 00:43:32.446 
超遠程藍牙可能會導致通訊延遲...

00:43:36.183 --> 00:43:37.684 
或遠程延遲

00:43:38.085 --> 00:43:41.021 
一些允許人們控制物理設備的應用

00:43:41.088 --> 00:43:43.624 
像車庫門或遮光簾

00:43:43.690 --> 00:43:46.493 
就不能提供完成反饋

00:43:46.560 --> 00:43:49.897 
除非這些設備被完全打開
或關閉

00:43:50.631 --> 00:43:53.467 
而且有些服務 比如外賣

00:43:53.534 --> 00:43:57.971 
或訂車應用就涉及與他人之間的通訊

00:43:58.372 --> 00:44:02.242 
衆所周知 人們並不總能立
即給你反饋

00:44:03.377 --> 00:44:06.580 
在iPhone或Mac上

00:44:07.047 --> 00:44:10.384 
通常會讓人們在你的應用中等待

00:44:10.450 --> 00:44:13.687 
當試着給他們返回確認反饋時

00:44:14.288 --> 00:44:17.391 
進度指示是保留人們注意
力的一種方式

00:44:17.457 --> 00:44:19.560 
給人們提供了有希望的反饋

00:44:20.060 --> 00:44:23.063 
一般是這樣 “請稍等
我馬上就來”

00:44:23.497 --> 00:44:26.466 
但是 可能會等上一段時間

00:44:26.834 --> 00:44:30.037 
而正在用應用的人會一直擡着手腕等

00:44:30.404 --> 00:44:32.372 
他們的肩膀開始酸了

00:44:32.439 --> 00:44:34.775 
過一秒鐘就像過一分鐘那麼久

00:44:34.842 --> 00:44:36.777 
時間似乎變得很漫長

00:44:37.444 --> 00:44:41.748 
那麼 爲了在Apple Watch
上避免發生這種情況

00:44:41.815 --> 00:44:45.519 
你可以用NSURL後臺下載任務

00:44:45.586 --> 00:44:47.521 
來跟服務器進行通訊

00:44:47.955 --> 00:44:49.423 
有兩個作用

00:44:49.790 --> 00:44:52.359 
第一 確保能

00:44:52.426 --> 00:44:55.429 
跟服務器通訊 在應用被掛起之前

00:44:55.696 --> 00:45:00.267 
第二 服務器響應後
Apple Watch會喚醒應用

00:45:00.868 --> 00:45:04.271 
然後 反過來 你可以在後臺快速反應

00:45:04.338 --> 00:45:07.007 
採取一些行動 比如發送本地通知

00:45:07.074 --> 00:45:09.209 
這也是watchOS 3的新功能

00:45:09.276 --> 00:45:12.145 
給使用應用的人提供反饋

00:45:12.613 --> 00:45:16.383 
比如說 假如你正在做一個外賣應用

00:45:17.117 --> 00:45:20.654 
人們點餐後 應用需要確認

00:45:20.721 --> 00:45:25.526 
餐廳可以完成訂單 並提供一個
預計的送達時間

00:45:26.159 --> 00:45:31.298 
你一定不希望人們在應用計算
這些時一直乾等着

00:45:31.932 --> 00:45:35.536 
相反 你可以立刻給出反饋

00:45:35.602 --> 00:45:37.905 
告訴他們
餐廳已經收到他們的訂單

00:45:38.372 --> 00:45:41.175 
你還可以 也應該告訴他們

00:45:41.241 --> 00:45:45.312 
一旦餐廳接受訂單並給出
預計送達的時間

00:45:45.746 --> 00:45:47.648 
你就會給他們發一條最終確認的信息

00:45:47.714 --> 00:45:50.150 
這樣纔算順利處理了這個訂單

00:45:51.251 --> 00:45:52.920 
如果你的處理方式合適的話

00:45:53.687 --> 00:45:56.557 
人們就會覺得沒必要擡着
手腕等着了

00:45:57.157 --> 00:45:59.927 
他們相信應用一定是在很努力地計算

00:45:59.993 --> 00:46:02.396 
來完成分配給它的任務

00:46:02.863 --> 00:46:04.231 
如果一切順利

00:46:04.965 --> 00:46:07.100 
你要給人們發一個本地通知

00:46:07.167 --> 00:46:09.736 
告訴他們 訂單已經收到

00:46:09.803 --> 00:46:11.071 
並且正在處理

00:46:11.872 --> 00:46:15.209 
如果有問題 要明確指出
到底是哪兒的問題

00:46:15.275 --> 00:46:19.947 
並幫助人們修正問題
儘可能少地進行額外互動

00:46:20.647 --> 00:46:24.351 
一切的關鍵是信任

00:46:24.918 --> 00:46:28.889 
人們要信任你的應用正在運行
而且不會崩潰

00:46:29.223 --> 00:46:31.658 
而你也要確保通知他們

00:46:31.725 --> 00:46:35.062 
任務是否成功

00:46:35.662 --> 00:46:38.665 
既然關係到信任問題
你一定不希望讓人們誤會

00:46:38.732 --> 00:46:41.068 
任務已經全部完成了

00:46:41.134 --> 00:46:43.303 
而實際上還在進行中

00:46:43.704 --> 00:46:47.407 
這是撒謊 這對於建立信任是很不利的

00:46:49.109 --> 00:46:52.446 
好了 這些都是應用相關的新功能

00:46:52.513 --> 00:46:54.448 
還有很多要說的

00:46:54.515 --> 00:46:57.351 
但我想先到這兒
讓我們回顧一下剛纔的內容

00:46:57.818 --> 00:47:02.489 
我們談到了新Dock UI和
如何使應用

00:47:02.556 --> 00:47:05.058 
儘可能地方便可見和可執行

00:47:05.492 --> 00:47:07.427 
我們也談了Digital Crown

00:47:07.494 --> 00:47:11.865 
如何使詳情頁和
分層應用間的切換更有效

00:47:12.299 --> 00:47:14.801  
我們也瞭解了基於會話的應用
將如何受益於

00:47:14.868 --> 00:47:16.770  
應用粘性的變化

00:47:17.237 --> 00:47:20.474 
而且我們剛纔也談瞭如何制定本地通知

00:47:20.541 --> 00:47:22.476 
當應用在後臺運行時

00:47:22.543 --> 00:47:26.547 
能讓使用應用的人們放心地放下手腕

00:47:26.613 --> 00:47:27.881 
並保持一種快速的交互

00:47:28.682 --> 00:47:31.451 
我們認爲watchOS的這些改進

00:47:31.518 --> 00:47:34.721 
會激勵你們創建流暢的用戶流

00:47:34.788 --> 00:47:37.291 
並縮短用戶交互時間

00:47:38.759 --> 00:47:41.862 
若Apple Watch團隊止步於此

00:47:41.929 --> 00:47:44.498 
這將是一次意義非同尋常的發佈

00:47:44.565 --> 00:47:47.134 
那我今天應該也會談很多內容

00:47:47.501 --> 00:47:48.936 
但他們並沒有止步不前

00:47:49.002 --> 00:47:50.904 
他們就像一羣超凡的成功者

00:47:50.971 --> 00:47:53.941 
就是那種讓我在高中時顯得非常爛的人

00:47:54.341 --> 00:47:57.845 
在watchOS 3中 有一些
很酷的新API和框架

00:47:57.911 --> 00:48:00.347 
你可以用它們做出一些不錯的東西

00:48:00.948 --> 00:48:04.852  
對於初學者來說 watchOS 3
現在提供SpriteKit和SceneKit

00:48:05.219 --> 00:48:07.754  
就是我們的2D和3D圖形框架

00:48:08.121 --> 00:48:11.592 
SpriteKit和SceneKit可以
渲染圖形並讓圖形動起來

00:48:12.392 --> 00:48:15.596 
可以使元素響應手勢

00:48:15.662 --> 00:48:18.465 
或者用程序控制元素 讓它動起來

00:48:19.233 --> 00:48:21.335 
你可以實施一些物理現象

00:48:21.401 --> 00:48:22.636 
我的意思是 這很瘋狂

00:48:22.870 --> 00:48:25.973 
力場、碰撞檢測等等

00:48:26.640 --> 00:48:30.277  
你可能認爲這些都是遊戲裏
才能用到的技術

00:48:30.344 --> 00:48:32.579  
但是你仍然可以應用到應用中

00:48:33.347 --> 00:48:36.450 
而且watchOS 3也支持手勢

00:48:36.717 --> 00:48:40.120 
直到現在 觸摸輸入的處理都是間接的

00:48:40.487 --> 00:48:43.223 
你應用上的控件和視圖會響應

00:48:43.290 --> 00:48:44.892 
觸摸事件 以你的名義

00:48:45.325 --> 00:48:48.395 
現在你可以完全自定義了

00:48:49.396 --> 00:48:53.133  
你可以自定義按、滑動、

00:48:53.800 --> 00:48:55.035  
搖動、

00:48:55.802 --> 00:48:57.337  
或長按

00:48:58.238 --> 00:49:01.708  
長按需要按一會兒好了

00:49:03.644 --> 00:49:07.648 
在watchOS 3中 你現在有
未經處理的Digital Crown事件權限了

00:49:08.081 --> 00:49:11.118 
你可以用這個數據改變 顏色、
尺寸

00:49:11.185 --> 00:49:13.921 
和其他可視化屬性 UI元素的

00:49:14.388 --> 00:49:16.056 
你可用Digital Crown

00:49:16.123 --> 00:49:18.692 
變更選擇或修改值

00:49:19.459 --> 00:49:23.063 
那麼 你們能用這些做什麼呢？

00:49:23.564 --> 00:49:25.632 
嗯 對於初學者 很多人都想

00:49:25.699 --> 00:49:28.569 
用一個環形或弧形將數據
可視化

00:49:29.069 --> 00:49:31.905 
你可以用SpriteKit用程序
畫出這樣的元素

00:49:31.972 --> 00:49:36.109 
這樣你可以方便地使任何
兩個任意值動起來

00:49:37.010 --> 00:49:38.779 
你可以用默認的加速曲線

00:49:38.846 --> 00:49:42.049 
是一種非常棒的加速然後
減速的效果

00:49:42.816 --> 00:49:45.586 
或者 你可以給加速曲線
做一些自定義

00:49:45.652 --> 00:49:49.890 
比如活潑的動畫或
你想實現的任何動畫

00:49:50.190 --> 00:49:52.159 
我們有大量的開源加速曲線

00:49:52.226 --> 00:49:55.596 
是由SpriteKit開發者團體中
很慷慨的人設計的

00:49:56.330 --> 00:49:59.867 
你甚至可以修改環形的填充顏色

00:49:59.933 --> 00:50:01.735 
來反映當前的值

00:50:02.669 --> 00:50:05.472 
數據可視化 如圖表和圖形

00:50:05.539 --> 00:50:07.841 
可以用動畫的形式表現出來

00:50:08.275 --> 00:50:10.244 
通過用程序畫這個圖表

00:50:10.310 --> 00:50:13.380 
我們可以讓內容動起來
增加視覺效果

00:50:14.014 --> 00:50:16.617 
或者我們可以用動畫來吸引人們去關注

00:50:16.683 --> 00:50:18.552 
圖表的指定部分

00:50:19.219 --> 00:50:20.954 
SpriteKit屬性是可變的

00:50:21.021 --> 00:50:23.223 
所以你可很簡便地把
一個圖表的意圖修改爲

00:50:23.290 --> 00:50:26.059 
顯示不同的屬性 基於用戶輸入

00:50:26.760 --> 00:50:31.031 
或者 也許你想 來讓人們
檢查圖表中不同的值

00:50:31.098 --> 00:50:32.199 
用一個搖動手勢

00:50:32.666 --> 00:50:33.500 
就是這樣

00:50:34.001 --> 00:50:37.838 
或者再好點兒
讓人們用Digital Crown

00:50:37.905 --> 00:50:39.139 
來做同樣的事

00:50:39.640 --> 00:50:42.476 
或者可以允許人們縮放圖表

00:50:42.910 --> 00:50:45.913 
或者可以讓人們滾動查看

00:50:46.980 --> 00:50:50.083 
通過Digital Crown控制所有這些

00:50:50.150 --> 00:50:55.689 
在瞭解圖表如何響應之後
你可以控制響應式旋轉的快慢

00:50:56.356 --> 00:50:57.691 
現在 我繼續往下說

00:50:57.758 --> 00:51:00.427 
只要想起這個東西來
就覺得非常有意思

00:51:00.494 --> 00:51:02.996 
但它可能會剝奪你所有的樂趣

00:51:03.664 --> 00:51:07.134 
我鼓勵你們學習SpriteKit
和SceneKit

00:51:07.201 --> 00:51:09.636 
並嘗試使用這些技術

00:51:09.703 --> 00:51:13.073 
創建更豐富、更有意義的體驗

00:51:13.574 --> 00:51:15.108 
但請記住一點

00:51:15.776 --> 00:51:18.912 
自由越多 責任越大

00:51:19.813 --> 00:51:22.482 
如果讓東西動起來
只是因爲看起來很酷

00:51:22.549 --> 00:51:24.251 
這真的不是一個很好的動力

00:51:24.718 --> 00:51:27.588 
如果使用得當

00:51:27.654 --> 00:51:31.491 
動畫可以把意思更快地表達出來
從而縮短交互時間

00:51:31.959 --> 00:51:34.995 
同樣的 圖形交互

00:51:35.062 --> 00:51:39.132 
應該提供更豐富
信息量更大的用戶體驗

00:51:39.700 --> 00:51:44.238 
最好能減少更復雜或更稠密的UI

00:51:45.572 --> 00:51:46.507 
好了

00:51:46.573 --> 00:51:48.909 
那麼 我們今天說了很多內容

00:51:48.976 --> 00:51:51.812 
最後我還想留給你們一個思考

00:51:51.879 --> 00:51:54.314 
跟設計watch應用有關

00:51:55.382 --> 00:52:00.821 
設計優秀的Apple Watch體驗
需要保證流程簡單化

00:52:01.622 --> 00:52:05.325 
但是保持簡單 卻並不是
一件簡單的事兒

00:52:05.993 --> 00:52:08.262 
如果你知道怎麼做
會給你的應用加不少分

00:52:09.162 --> 00:52:12.599 
保持簡單涉及到要做出
一些艱難的選擇

00:52:12.666 --> 00:52:14.701 
即應用要做什麼

00:52:15.135 --> 00:52:19.273 
意思是 要拒絕許多聽起來
很有意思的想法

00:52:19.907 --> 00:52:23.577 
但是你能做並不意味着你應該做

00:52:24.611 --> 00:52:28.282 
保持簡單的另一層意思是
深入地思考

00:52:28.348 --> 00:52:31.885 
人們的日常生活

00:52:32.452 --> 00:52:35.122 
人們會在很長時間內使用你的應用

00:52:35.422 --> 00:52:39.059 
而應用的設計方式應該是
使用時間長短的真實反映

00:52:39.660 --> 00:52:44.631 
要少考慮一些靜態屏幕
多考慮一些用戶流

00:52:45.332 --> 00:52:48.735 
事實是這些用戶流並不是連續的、

00:52:48.802 --> 00:52:50.804 
不間斷的體驗

00:52:51.104 --> 00:52:54.708 
人們會在任意時間使用應用

00:52:55.008 --> 00:52:59.146 
當他們用應用時
他們總是期待應用有新數據

00:52:59.479 --> 00:53:02.549 
並與他們經常變化的需求相關

00:53:03.217 --> 00:53:05.919 
你的應用應該提前假設人們想幹什麼

00:53:05.986 --> 00:53:07.287 
在任何一個指定的時間段

00:53:07.487 --> 00:53:10.357 
並嘗試主動地提供這些信息...

00:53:11.491 --> 00:53:15.295 
和功能 這就是情景相關和實效性

00:53:15.929 --> 00:53:18.832 
要實現這個目的並沒有那麼簡單

00:53:20.334 --> 00:53:24.404 
設計Apple Watch與
設計iPhone

00:53:24.771 --> 00:53:28.141 
iPad、Apple TV
或Mac不一樣

00:53:28.876 --> 00:53:33.814 
我們瞭解這些設備應用的設計和開發

00:53:33.881 --> 00:53:37.918 
並且已經限定了我們 的觀念
對應用的複雜程度

00:53:38.352 --> 00:53:40.053 
如何跳轉

00:53:40.420 --> 00:53:44.091 
願意花多長時間來用你的應用

00:53:44.992 --> 00:53:49.096 
試着識別和挑戰你自己
根深蒂固的假想

00:53:49.663 --> 00:53:52.132 
當然我知道
說起來容易做起來難

00:53:52.533 --> 00:53:56.737 
但這是製作優秀watch應用
的至關重要的一步

00:53:57.671 --> 00:53:58.972 
關於Apple Watch

00:53:59.339 --> 00:54:02.109 
也許我能給你的最好建議

00:54:02.176 --> 00:54:05.913 
是考慮功能 而不是應用

00:54:06.613 --> 00:54:12.319 
優秀的Apple Watch應用
可能只提供一個功能

00:54:13.120 --> 00:54:16.123 
比如說Press Record實際
就只有一個功能

00:54:16.190 --> 00:54:21.228 
它的complication就是錄音按鈕
而應用就是錄音界面和停止按鈕

00:54:21.795 --> 00:54:23.130 
很好用

00:54:23.197 --> 00:54:26.834 
即使我只用了一句話來描述這個應用

00:54:27.968 --> 00:54:31.071 
剎那間就過去了兩秒鐘

00:54:31.605 --> 00:54:35.742 
設計這種簡潔的交互絕不簡單

00:54:36.143 --> 00:54:39.546 
但我希望我們今天所討論
的概念和方法

00:54:39.613 --> 00:54:42.316 
可以激勵你們去嘗試

00:54:43.050 --> 00:54:45.619 
而且我很期待看到你們
取得新的成果

00:54:45.686 --> 00:54:48.388 
用watchOS 3的新功能

00:54:48.722 --> 00:54:50.858 
爲該新版本
很多人都付出了非同尋常努力

00:54:50.924 --> 00:54:53.560 
而我們的努力就是爲了幫助你們

00:54:53.627 --> 00:55:00.200 
打造更創新、更賞心悅目、
平臺可定製性更強的體驗

00:55:01.168 --> 00:55:04.238 
好了 如果想更多地瞭解
我們今天討論的內容

00:55:04.304 --> 00:55:07.441 
你們可以看一下視頻頁
那兒有許多附加資料

00:55:07.841 --> 00:55:12.112 
再說一次 一定要看watchOS
Human Interface Guidelines

00:55:12.179 --> 00:55:14.648 
那裏真的有很多非常棒的資料

00:55:14.715 --> 00:55:17.384 
我們會在這個夏季持續更新

00:55:17.451 --> 00:55:18.886 
所以請定期查看

00:55:19.353 --> 00:55:22.823 
我們還有許多很不錯的
Watch工程研討會

00:55:22.890 --> 00:55:25.559 
我強烈建議你們去參加
SpriteKit研討會

00:55:25.626 --> 00:55:28.295 
再看一些已經實現的相關視頻

00:55:28.862 --> 00:55:31.932 
今年 我們有很多不錯的設計研討會

00:55:31.999 --> 00:55:33.200 
以後還會有更多

00:55:33.500 --> 00:55:36.503 
我強烈建議你們參加
“內嵌式應用設計”研討會

00:55:36.570 --> 00:55:38.972 
可以讓你們的設計更人性化

00:55:39.039 --> 00:55:41.875 
這對於用戶們來說相當實用

00:55:42.276 --> 00:55:45.913 
我還推薦今天早晨的關於
“排印與字體”的這個視頻

00:55:45.979 --> 00:55:47.881 
還有一場設計研討會

00:55:47.948 --> 00:55:50.851 
講的是互動式UI設計
你可以總結自己的想法

00:55:50.918 --> 00:55:53.620 
提煉一些精華
然後做出一些非常出色的東西

00:55:53.687 --> 00:55:55.856 
好了
非常感謝你們來參加這場研討會