00:00:19.853 --> 00:00:24.424
iMessage應用和貼圖 第二部分
互動信息

00:00:39.673 --> 00:00:40.707
下午好

00:00:40.774 --> 00:00:43.510
歡迎來到“iMessage應用
和貼圖 第二部分”

00:00:43.977 --> 00:00:46.713
我叫Alex
今天協助我的是Stephen

00:00:46.780 --> 00:00:48.081
他將負責演示

00:00:49.183 --> 00:00:51.451
在演講的第一部分 Bhaskar

00:00:51.518 --> 00:00:54.855
和Lily介紹了貼圖 貼圖包

00:00:54.922 --> 00:00:56.823
和簡單的iMessage應用

00:00:56.890 --> 00:00:59.626
專注於爲信息提供貼圖數據

00:01:01.929 --> 00:01:05.032
今天我們將要來講解互動信息

00:01:05.098 --> 00:01:07.301
我們將更深入
分析iMessage應用

00:01:07.367 --> 00:01:08.669
及Messages框架

00:01:11.071 --> 00:01:12.806
什麼是互動信息？

00:01:13.740 --> 00:01:17.411
在我背後的信息文本里
可以看見高亮顯示的一條

00:01:19.179 --> 00:01:23.984
這是Messages擴展提供的
一種特殊類型的信息泡泡框

00:01:24.484 --> 00:01:27.487
可以看見它在截屏裏被高亮顯示

00:01:32.392 --> 00:01:36.997
Messages擴展可以
讓用戶新建互動信息

00:01:37.865 --> 00:01:41.768
並可以把它們插入輸入框
如這裏所示

00:01:44.738 --> 00:01:48.141
還可以讓用戶回覆一條互動信息

00:01:48.208 --> 00:01:51.245
只需點擊文本里的該互動信息即可

00:01:51.311 --> 00:01:55.082
此時擴展將會全屏顯示 如這裏所示

00:01:56.083 --> 00:02:01.221
用戶可以和該擴展進行互動
編寫一個答覆

00:02:02.155 --> 00:02:07.427
然後擴展可以把新內容插入信息中

00:02:07.494 --> 00:02:10.264
它會顯示在輸入框 用戶可以發送

00:02:11.999 --> 00:02:14.268
我們現在歡迎Stephen上臺

00:02:14.334 --> 00:02:17.271
他將在模擬器上演示一個應用實例

00:02:26.213 --> 00:02:29.183
我將演示一個完整的
iMessage應用

00:02:29.249 --> 00:02:30.651
是我編寫的

00:02:30.717 --> 00:02:33.187
其中所有的API都會在
今天的演講中學到

00:02:33.554 --> 00:02:35.856
如果看向模擬器這裏
可以看到一個圖標

00:02:35.923 --> 00:02:38.125
來自我的iMessage應用
叫“冰淇凌”

00:02:38.792 --> 00:02:41.995
點擊它
iMessage應用將開始運行

00:02:42.062 --> 00:02:43.830
在Message範圍裏

00:02:44.431 --> 00:02:47.534
所有粉色背景的UI

00:02:47.601 --> 00:02:49.670
都是擴展提供的

00:02:50.637 --> 00:02:54.775
iMessage應用是一個合作的
冰淇凌貼紙製作應用

00:02:54.975 --> 00:02:58.412
可在此看到
我過去做好的冰淇凌貼紙

00:02:59.246 --> 00:03:01.582
點擊“添加”按鈕

00:03:02.282 --> 00:03:05.118
iMessage應用將會全屏顯示

00:03:05.185 --> 00:03:08.822
這裏會提供良好的製作貼紙用戶體驗

00:03:09.857 --> 00:03:13.460
選擇一個冰淇凌蛋卷
iMessage應用會退出

00:03:13.527 --> 00:03:16.930
顯示一條互動信息到輸入框
供用戶發送

00:03:19.166 --> 00:03:23.403
在iOS 10 我們添加了支持

00:03:23.504 --> 00:03:25.873
讓用戶自己編寫和
測試iMessage應用

00:03:25.939 --> 00:03:27.241
就在模擬器裏面

00:03:27.841 --> 00:03:30.210
回到對話列表

00:03:30.577 --> 00:03:33.814
可以看到模擬對話的兩個終端

00:03:35.115 --> 00:03:38.752
點擊第二個 顯示接受信息的模擬器

00:03:40.220 --> 00:03:43.924
點擊 iMessage應用運行進入

00:03:43.991 --> 00:03:45.692
冰淇淋製作過程的下一步

00:03:46.093 --> 00:03:48.328
我選擇自己最愛的口味 薄荷脆皮

00:03:49.530 --> 00:03:52.332
顯示該信息 發送

00:03:53.934 --> 00:03:56.436
現在 如果回到第一個對話

00:03:56.503 --> 00:03:58.205
或者第一個對話的最後

00:03:58.639 --> 00:04:00.140
點擊該信息

00:04:00.941 --> 00:04:03.577
選擇冰淇淋的最後一個部分 撒料

00:04:05.412 --> 00:04:06.346
發送

00:04:07.247 --> 00:04:10.150
現在我有了一個製作完整的冰淇凌

00:04:10.484 --> 00:04:13.754
事實上 若回到iMessage應用

00:04:14.621 --> 00:04:17.658
可以在冰淇淋歷史清單中看到

00:04:17.724 --> 00:04:21.261
作爲一個貼圖 可以應用到任何地方

00:04:22.196 --> 00:04:25.098
這就是互動信息的一個簡單例子

00:04:25.165 --> 00:04:26.466
請Alex回來繼續講

00:04:29.870 --> 00:04:30.904
謝謝你 Stephen

00:04:32.472 --> 00:04:36.243
這是關於iMessage應用
部分功能的一個很棒的快速演示

00:04:37.277 --> 00:04:41.215
我們來講講如何用API實現

00:04:41.915 --> 00:04:43.584
我將講解四點

00:04:44.384 --> 00:04:47.821
首先 我將會概括瀏覽API

00:04:48.222 --> 00:04:51.959
然後第二點
稍微講解一下擴展生命週期

00:04:52.626 --> 00:04:55.762
第三點 我們將會講解

00:04:56.330 --> 00:04:58.966
如何用API編寫信息

00:04:59.199 --> 00:05:00.400
第四點

00:05:00.467 --> 00:05:03.203
稍微講講信息是如何被髮送的

00:05:05.072 --> 00:05:06.840
首先概括瀏覽API

00:05:08.742 --> 00:05:10.711
iMessage應用正在運行

00:05:10.777 --> 00:05:15.415
以簡潔顯示模式 這是一個擴展

00:05:15.649 --> 00:05:17.351
擴展有一個主類

00:05:17.417 --> 00:05:19.786
對於iMessage應用來說
這將是

00:05:19.853 --> 00:05:22.890
MSMessagesAppViewController的一個子類

00:05:22.956 --> 00:05:24.091
總而言之

00:05:24.157 --> 00:05:26.360
MSMessagesAppViewController是

00:05:26.426 --> 00:05:29.863
UIViewController
的一個子類 爲擴展提供UI

00:05:31.331 --> 00:05:34.701
在擴展上面 有一個對話

00:05:35.002 --> 00:05:37.638
更確切地說 是對話文本

00:05:38.405 --> 00:05:42.409
它通過MSConversation
對象表示在API中

00:05:43.644 --> 00:05:45.779
最後是信息本身

00:05:45.846 --> 00:05:47.948
在文本里有這個泡泡框

00:05:48.048 --> 00:05:51.485
通過MSMessage類表示

00:05:52.052 --> 00:05:55.489
可以看到在本幻燈片中 還有兩個類

00:05:55.556 --> 00:05:58.725
MSSession類
和MSMessageTemplateLayout類

00:05:58.792 --> 00:06:01.595
它們爲如何發送信息提供相關控制

00:06:01.662 --> 00:06:03.997
以及信息該如何在文本里顯示

00:06:05.966 --> 00:06:10.737
繼續講解iMessage
擴展生命週期

00:06:12.139 --> 00:06:17.344
在這裏有一個時間線
如果一個擴展啓動

00:06:18.078 --> 00:06:22.816
可能從應用抽屜裏 將會啓動一個進程

00:06:25.285 --> 00:06:29.289
此後不久 調用
didBecomeActive(with conversation)

00:06:29.356 --> 00:06:31.158
傳入一個對話對象

00:06:31.225 --> 00:06:34.127
代表應用運行時的對話

00:06:35.128 --> 00:06:37.431
因爲這是UIViewController的子類

00:06:37.497 --> 00:06:41.068
我們也調用了
viewWillAppear和viewDidAppear

00:06:41.835 --> 00:06:44.037
當擴展出現在屏幕上時

00:06:45.706 --> 00:06:48.976
如果應用從屏幕消失 會發生什麼呢？

00:06:49.209 --> 00:06:51.378
我們把它稱爲“退出活躍”

00:06:51.578 --> 00:06:55.015
將會發生的事是 首先會收到
viewWillDisappear

00:06:55.215 --> 00:06:57.885
和在主類的
viewDidDisappear調用

00:06:58.785 --> 00:07:01.188
然後將會 抱歉

00:07:01.255 --> 00:07:05.058
然後將會調用
willResignActive(with conversation)

00:07:05.125 --> 00:07:07.928
此時 我們馬上就要切斷

00:07:07.995 --> 00:07:10.464
Messages和擴展的連接

00:07:11.265 --> 00:07:14.201
此時是可以進行對話操作的最後時間

00:07:15.035 --> 00:07:17.704
之後某個時間點 進程會被終止

00:07:17.771 --> 00:07:20.707
強調一下 這是因爲進程

00:07:20.774 --> 00:07:23.477
建立在擴展上 而擴展是短暫的進程

00:07:23.544 --> 00:07:25.512
它們會迅速終止

00:07:27.281 --> 00:07:28.248
來看一下

00:07:28.315 --> 00:07:33.820
現在有一個進程在運行
在信息中顯示UI

00:07:34.321 --> 00:07:36.723
用戶將會和該UI進行互動

00:07:36.790 --> 00:07:40.694
編寫一個信息 看看API如何處理

00:07:40.994 --> 00:07:44.331
首先創建一個MSMessage對象

00:07:44.531 --> 00:07:46.867
爲該對象設置一些屬性

00:07:48.135 --> 00:07:50.737
在本例中
設置一個Https URL

00:07:50.804 --> 00:07:52.873
所以信息有一個URL屬性

00:07:53.106 --> 00:07:56.109
然後編寫一些關於冰淇淋的細節

00:07:56.176 --> 00:07:58.078
在該URL的查詢字符串中

00:07:58.245 --> 00:08:00.814
唯一可以產生

00:08:00.881 --> 00:08:02.716
這些信息的平臺是iOS

00:08:02.783 --> 00:08:06.620
但這些信息將要發送給
macOS和watchOS

00:08:07.955 --> 00:08:09.189
當信息發送給macOS時

00:08:09.256 --> 00:08:12.259
它們會在對話文本里全保真顯示

00:08:12.326 --> 00:08:15.996
點擊文本中的一個信息

00:08:16.063 --> 00:08:18.565
將會試圖在瀏覽器中打開該URL

00:08:18.665 --> 00:08:21.435
所以如果在這裏提供了一個
https URL

00:08:22.336 --> 00:08:24.304
瀏覽器將會爲用戶

00:08:24.371 --> 00:08:29.476
在macOS上顯示該信息

00:08:30.644 --> 00:08:33.746
繼續 這裏還有一個accessibilityLabel屬性

00:08:33.914 --> 00:08:36.950
屏幕閱讀器讀取文本時將會使用

00:08:37.317 --> 00:08:40.153
所以 爲它設置一個信息泡泡框的描述

00:08:40.220 --> 00:08:43.724
用屏幕閱讀器的用戶會看到

00:08:43.789 --> 00:08:47.094
關於泡泡框豐富的描述 顯示在文本中

00:08:48.462 --> 00:08:51.098
最後我們來講佈局

00:08:51.331 --> 00:08:54.201
後面會多講一些相關細節

00:08:55.869 --> 00:08:59.873
我們用佈局對象指定

00:09:00.073 --> 00:09:01.708
文本中一條信息的外觀

00:09:01.909 --> 00:09:05.913
現在只有一個佈局
MSMessageTemplateLayout

00:09:06.747 --> 00:09:10.517
可以爲它設置一些屬性
將會影響製作泡泡框

00:09:11.718 --> 00:09:15.122
這裏有一個圖形屬性 取一幅UI圖片

00:09:15.489 --> 00:09:18.292
爲屏幕上高亮顯示區提供內容

00:09:19.560 --> 00:09:21.995
還有一個
mediaFileURL屬性

00:09:22.296 --> 00:09:27.301
mediaFileURL
和image一樣的區域提供內容

00:09:27.401 --> 00:09:30.938
但在這裏
可以提供UI圖片不支持的內容

00:09:31.004 --> 00:09:34.074
比如
可提供一個指向本地視頻文件的URL

00:09:34.141 --> 00:09:36.276
一個短視頻就會循環播放

00:09:36.343 --> 00:09:38.378
在文本里信息泡泡框的背景中

00:09:39.146 --> 00:09:42.316
讓我們再多關注一下這兩個屬性

00:09:44.117 --> 00:09:48.222
首先注意到
如果圖片和URL都被提供

00:09:48.288 --> 00:09:51.525
圖片的優先級將會高於URL

00:09:53.660 --> 00:09:56.196
我們對尺寸有一些建議

00:09:56.263 --> 00:09:58.732
這些屬性提供的資產的尺寸

00:09:59.099 --> 00:10:01.134
我們建議爲資產提供的尺寸

00:10:01.201 --> 00:10:03.937
大約是300x300pt

00:10:04.037 --> 00:10:07.441
可以提供稍大或稍小的資產

00:10:07.508 --> 00:10:11.144
我強烈建議在這裏多多測試資產大小

00:10:11.578 --> 00:10:15.249
爲了找到最適合應用的尺寸

00:10:15.983 --> 00:10:19.753
所有這些資產和貼圖一樣
都三倍顯示

00:10:19.820 --> 00:10:23.257
iMessages將會對
這些圖片進行縮放

00:10:23.323 --> 00:10:25.492
當別的設備接收時顯示合適大小

00:10:25.559 --> 00:10:28.695
根據接收設備屏幕分辨率

00:10:31.598 --> 00:10:35.702
mediaFileURL支持格式有
PNG JPEG GIF和視頻文件

00:10:35.769 --> 00:10:39.106
視頻文件是指 支持任何

00:10:39.173 --> 00:10:41.341
可在Media Player
框架裏播放的視頻

00:10:41.408 --> 00:10:44.244
建議參考
Media Player框架文檔

00:10:44.311 --> 00:10:45.846
獲取更詳細信息

00:10:48.148 --> 00:10:50.350
關於該媒體文件還要做一點

00:10:50.417 --> 00:10:52.819
當發送時 我們會對資產進行轉碼

00:10:52.886 --> 00:10:56.089
這是爲了對其在網絡中傳送進行優化

00:10:58.358 --> 00:11:03.230
最後我建議在該圖片中不要加入文字

00:11:04.298 --> 00:11:06.533
我說過 這些圖片都會按比例縮小

00:11:06.600 --> 00:11:09.703
顯示在屏幕爲1倍或2倍的設備上

00:11:09.770 --> 00:11:12.406
但我們要求按照3倍提供

00:11:12.506 --> 00:11:16.043
如果在該圖片上添加文字
尤其是字體小的文字

00:11:16.143 --> 00:11:19.713
當這些圖片縮小時 文字將看不清楚

00:11:20.848 --> 00:11:23.550
但是注意到我們在例子裏確實這樣做了

00:11:23.617 --> 00:11:25.519
圖片上方有一些文字

00:11:26.186 --> 00:11:29.756
我們來講解
如何在不降低質量的條件下實現這點

00:11:32.125 --> 00:11:34.528
佈局對圖片有一些額外的屬性

00:11:34.595 --> 00:11:37.831
都是文本屬性

00:11:38.732 --> 00:11:41.535
它們在信息裏被轉換

00:11:41.802 --> 00:11:44.137
然後在接收設備上繪製

00:11:44.204 --> 00:11:47.474
這樣就可以把文本在接收設備上

00:11:47.541 --> 00:11:50.043
儘可能顯示得非常清晰

00:11:51.178 --> 00:11:53.247
這裏顯示了圖片標題

00:11:53.714 --> 00:11:56.016
這是畫在圖片上方的文字

00:11:56.316 --> 00:11:57.851
在左下角

00:11:58.952 --> 00:12:02.456
我們還有副標題 也是畫在圖片上的

00:12:02.523 --> 00:12:04.825
就在圖片標題下面

00:12:05.092 --> 00:12:06.460
還有這些字幕屬性

00:12:06.527 --> 00:12:09.363
都是在圖片標題下方的標題欄繪製

00:12:09.429 --> 00:12:11.131
就是屏幕上的灰色區域

00:12:11.365 --> 00:12:14.601
所以 有了字幕 跟蹤字幕

00:12:16.170 --> 00:12:20.474
第二字幕 跟蹤第二字幕

00:12:25.212 --> 00:12:28.815
如果來看字幕屬性

00:12:28.882 --> 00:12:31.251
有可能忽略所有

00:12:32.553 --> 00:12:33.854
或都設置爲空

00:12:34.388 --> 00:12:35.455
如果這麼做了

00:12:35.756 --> 00:12:38.992
就會有一個底部沒有字幕欄的泡泡框

00:12:39.059 --> 00:12:40.861
就會看上去這個樣子

00:12:42.162 --> 00:12:44.164
最後要說明的一點

00:12:44.665 --> 00:12:47.568
泡泡框左上角有一個圖標

00:12:47.935 --> 00:12:51.872
該圖表是Messages
在內容上方提供和繪製的

00:12:52.005 --> 00:12:55.576
通常都會是iMessage應用圖標

00:12:56.310 --> 00:12:58.212
就是發送信息的應用的圖標

00:13:00.447 --> 00:13:01.982
我們繼續講解

00:13:02.049 --> 00:13:04.318
如何發送編寫的信息

00:13:07.221 --> 00:13:10.624
爲了實現這點 需要一個
MSConversation的實例

00:13:10.791 --> 00:13:14.294
可以通過主類的activeConversation

00:13:15.229 --> 00:13:18.932
有了一個對話後
調用insert(message)

00:13:18.999 --> 00:13:20.801
傳入編寫完成的信息

00:13:21.401 --> 00:13:23.770
確保處理好任何返回錯誤

00:13:24.705 --> 00:13:27.774
這樣做可以讓信息顯示在輸入框

00:13:31.311 --> 00:13:32.880
當然 如演講第一部分所提到的

00:13:32.946 --> 00:13:34.915
也可以發送其它類型的數據

00:13:34.982 --> 00:13:39.319
我們支持發送文本 附件

00:13:42.022 --> 00:13:43.457
當然還有貼圖

00:13:45.993 --> 00:13:48.896
當輸入框的內容完成

00:13:48.962 --> 00:13:52.332
用戶可以通過點擊
藍色的“發送”按鈕發送

00:13:52.399 --> 00:13:54.535
這裏我要說明 擴展沒有辦法

00:13:54.601 --> 00:13:56.703
真正自動發送一條信息

00:13:56.770 --> 00:13:59.473
我們總是想讓用戶來決定

00:13:59.673 --> 00:14:01.775
把什麼樣的信息發送給朋友

00:14:04.111 --> 00:14:06.079
現在我把講臺交還給Stephen

00:14:06.146 --> 00:14:09.683
他將講解該如何在示例項目中實現

00:14:17.558 --> 00:14:18.458
再次感謝 Alex

00:14:19.459 --> 00:14:23.463
我把之前用的示例
iMessage應用拿出來

00:14:23.530 --> 00:14:26.867
然後把它剝離到最基本的結構開始

00:14:27.367 --> 00:14:29.269
冰淇淋貼圖之前製作的

00:14:29.336 --> 00:14:30.437
歷史列表都還在

00:14:30.504 --> 00:14:33.841
但你會發現點擊“添加”按鈕時
沒有反應

00:14:35.609 --> 00:14:36.710
在Xcode裏

00:14:36.777 --> 00:14:40.280
顯示了MSMessagesAppViewController子類

00:14:40.514 --> 00:14:43.884
我覆蓋了週期方法
didBecomeActive(with conversation)

00:14:43.951 --> 00:14:46.887
調用super 然後調用
presentChildViewController

00:14:46.954 --> 00:14:48.589
它是我寫的一個幫助方法

00:14:49.022 --> 00:14:52.559
將會初始化一個
IceCreamHistoryController

00:14:52.793 --> 00:14:55.229
並加入ChildViewController

00:14:55.429 --> 00:14:56.830
這就是目前的代碼

00:14:58.298 --> 00:14:59.533
我現在想要做的是

00:14:59.600 --> 00:15:01.735
當點擊“添加”按鈕時

00:15:01.802 --> 00:15:04.338
就會開始製作貼圖的進程

00:15:04.938 --> 00:15:08.408
該IceCreamHistoryViewController
有一個委託協議

00:15:08.475 --> 00:15:11.111
我有一個MessagesViewController擴展

00:15:11.178 --> 00:15:12.279
將符合該委託協議

00:15:12.346 --> 00:15:14.414
通過調用historyViewController

00:15:14.481 --> 00:15:16.116
AddButtonTapped

00:15:17.351 --> 00:15:20.420
在這裏我將要觸發功能

00:15:21.488 --> 00:15:25.092
還要添加一個幫助方法

00:15:25.158 --> 00:15:29.129
叫作composeMessage(for iceCream)
將會接受一個IceCream對象參數

00:15:29.196 --> 00:15:33.033
然後返回到一個MSMessage
可以用於對話中

00:15:34.101 --> 00:15:38.005
要實現這一點 新建一個
URLComponents實例

00:15:38.105 --> 00:15:40.407
再把該URLComponents的
QueryItems屬性設置爲

00:15:40.474 --> 00:15:42.709
模塊的queryItems屬性

00:15:44.178 --> 00:15:45.612
下一步是

00:15:45.712 --> 00:15:48.749
新建一個MSMessageTemplateLayout實例

00:15:48.815 --> 00:15:52.052
並把該佈局的image屬性設置爲
模塊的渲染模式

00:15:53.253 --> 00:15:55.589
我還想爲信息設置字幕

00:15:55.989 --> 00:15:57.724
我會在上面這裏聲明

00:16:02.396 --> 00:16:04.765
現在我準備好
新建MSMessage對象

00:16:07.334 --> 00:16:10.037
聲明一個MSMessage實例

00:16:10.137 --> 00:16:13.974
把URL屬性設置爲我的
components的URL屬性

00:16:14.474 --> 00:16:17.144
然後設置佈局
和accessibilityLabel屬性

00:16:17.211 --> 00:16:19.479
爲了演示簡單 我重新使用了messageCaption

00:16:19.546 --> 00:16:22.082
作爲accessibilityLabel屬性

00:16:23.884 --> 00:16:26.453
現在信息已經建立完成
要發送到對話中

00:16:27.120 --> 00:16:29.323
我要引用activeConversation

00:16:30.524 --> 00:16:33.227
然後調用conversation.insert

00:16:34.494 --> 00:16:37.097
把信息插入 寫好了

00:16:38.232 --> 00:16:40.367
已寫好
composeMessage函數

00:16:41.001 --> 00:16:41.969
這裏我要調用它

00:16:42.035 --> 00:16:44.538
通過HistoryViewController
AddButtonTapped方法

00:16:47.474 --> 00:16:52.579
我總會從添加或傳遞一個
新的IceCream實例開始

00:16:54.815 --> 00:16:56.850
現在在iOS模擬器中運行

00:16:57.851 --> 00:16:59.753
啓動iMessage應用

00:17:01.755 --> 00:17:05.692
等待調試器載入 點擊加號按鈕

00:17:06.193 --> 00:17:08.127
信息顯示給用戶可以發送

00:17:08.729 --> 00:17:10.763
因爲我並沒有真正選擇冰淇凌的部分

00:17:10.830 --> 00:17:13.767
我只是有一個冰淇淋的圖片框

00:17:13.934 --> 00:17:15.969
可以看到信息下面的字幕

00:17:17.037 --> 00:17:18.539
開頭開得不錯

00:17:18.805 --> 00:17:22.041
但是我想離開始時的那個演示更近一步

00:17:22.809 --> 00:17:24.243
當我點擊加號按鈕時

00:17:24.310 --> 00:17:27.047
我想馬上進入貼圖製作UI體驗

00:17:28.015 --> 00:17:30.851
爲了實現 需要介紹一個新概念

00:17:31.685 --> 00:17:35.255
在這裏iMessage應用
正顯示爲簡潔顯示風格

00:17:36.089 --> 00:17:38.091
我可以選擇讓iMessage應用

00:17:38.158 --> 00:17:40.994
顯示爲展開顯示風格 通過添加代碼

00:17:42.663 --> 00:17:45.199
在這裏不再調用
composeMessage(for:iceCream())

00:17:45.599 --> 00:17:47.634
而是在父類上調用

00:17:47.968 --> 00:17:51.271
requestPresentationStyle方法
參數爲枚舉expanded

00:17:52.339 --> 00:17:55.576
這將觸發一個生命週期回調方法 叫作

00:17:55.642 --> 00:17:58.512
willTransition(to presentationStyle)

00:17:59.780 --> 00:18:01.949
調入super實現

00:18:05.619 --> 00:18:07.120
然後調用幫助方法

00:18:07.187 --> 00:18:10.524
爲該顯示風格顯示其
正確的子視圖控制器

00:18:12.359 --> 00:18:13.727
現在我的presentChildViewController

00:18:13.794 --> 00:18:16.730
總是顯示當前的
IceCreamHistoryViewController

00:18:16.897 --> 00:18:20.133
所以我需要改變顯示風格改變的邏輯

00:18:20.200 --> 00:18:22.169
這樣纔可以顯示正確的視圖控制器

00:18:23.070 --> 00:18:25.239
首先要添加一個參數 這樣我才知道

00:18:25.305 --> 00:18:27.174
正在處理哪個顯示風格

00:18:28.208 --> 00:18:29.676
然後我要把這段代碼改爲

00:18:31.478 --> 00:18:33.514
只顯示historyViewController

00:18:33.580 --> 00:18:35.315
當處於簡潔顯示風格時

00:18:36.517 --> 00:18:39.319
如果正處於展開顯示風格

00:18:39.386 --> 00:18:42.155
將聲明一個新的IceCream實例

00:18:42.789 --> 00:18:48.762
讓我的controller成爲
IceCreamBuilderController的一個實例

00:18:49.129 --> 00:18:50.898
傳入剛剛聲明的iceCream

00:18:52.666 --> 00:18:56.170
最後 在我把它添加爲
子視圖控制器以前

00:18:56.236 --> 00:19:00.007
需要移除所有之前的子視圖控制器

00:19:00.073 --> 00:19:01.508
清理視圖層次結構

00:19:04.077 --> 00:19:06.880
現在我需要更新幫助方法的調用地點

00:19:08.749 --> 00:19:14.121
這裏我將把正在等待的
顯示風格傳遞給方法

00:19:15.122 --> 00:19:17.624
在didBecomeActive(with conversation)方法中

00:19:17.891 --> 00:19:20.627
爲它傳遞當前的顯示風格

00:19:20.694 --> 00:19:24.331
可以把它作爲父視圖控制器的一個屬性

00:19:28.902 --> 00:19:29.770
應該沒錯

00:19:31.038 --> 00:19:34.274
最後——事實上讓我們

00:19:34.341 --> 00:19:37.678
先看看這樣能不能實現

00:19:46.653 --> 00:19:48.188
點擊加號按鈕

00:19:48.755 --> 00:19:51.325
我的iMessage應用
進入展開狀態

00:19:51.391 --> 00:19:54.361
正在顯示冰淇淋製作體驗

00:19:55.162 --> 00:19:57.865
然而 你會發現點擊“選擇”
什麼都沒發生

00:19:58.232 --> 00:20:00.567
這是因爲我的iceCreambuilderviewcontroller

00:20:00.634 --> 00:20:03.937
也有一個委託協議 也有一個擴展

00:20:04.238 --> 00:20:08.275
在這裏的視圖控制器上
抱歉有點太快了

00:20:10.177 --> 00:20:12.312
該委託協議

00:20:12.379 --> 00:20:14.615
通過
iceCreamBuilderViewController方法實現

00:20:14.681 --> 00:20:16.550
didSelect iceCreamPart,for iceCream

00:20:17.618 --> 00:20:20.254
只要點擊選擇按鈕 該方法就會被調用

00:20:21.421 --> 00:20:24.525
這裏正好可以調用我寫的幫助方法

00:20:24.591 --> 00:20:26.627
composeMessage
我將傳遞

00:20:26.693 --> 00:20:28.729
更新過的iceCream給它

00:20:29.730 --> 00:20:32.499
我還要做的一件事是
調用dismiss方法

00:20:32.933 --> 00:20:36.803
因爲iMessage應用
已經完成內容準備

00:20:36.904 --> 00:20:38.605
我想要iMessage應用退出

00:20:38.672 --> 00:20:40.841
爲用戶顯示完成消息

00:20:50.784 --> 00:20:54.521
啓動應用 點擊加號按鈕

00:20:55.155 --> 00:20:56.423
選中一個冰淇凌蛋卷

00:20:57.591 --> 00:20:59.626
退出iMessage應用

00:20:59.693 --> 00:21:03.363
互動消息準確地顯示 用戶可以發送

00:21:03.630 --> 00:21:05.566
這就是如何發送互動信息

00:21:05.632 --> 00:21:07.201
的一個快速演示

00:21:07.267 --> 00:21:08.302
交回給Alex

00:21:15.676 --> 00:21:17.311
謝謝你 Alex 非常棒

00:21:19.613 --> 00:21:20.447
所以

00:21:22.883 --> 00:21:26.787
Stephen爲大家介紹
和演示瞭如何使用API

00:21:27.254 --> 00:21:30.257
添加內容到一個對話併發送

00:21:30.958 --> 00:21:33.560
Stephen還介紹了顯示風格

00:21:33.827 --> 00:21:36.563
我們將進一步講解其更多細節

00:21:37.898 --> 00:21:41.401
我們有兩種顯示風格 簡潔和展開

00:21:42.336 --> 00:21:46.373
左邊是簡潔風格 右邊是展開風格

00:21:48.675 --> 00:21:52.346
這兩種風格之間有一些不同

00:21:52.913 --> 00:21:55.649
在簡潔模式 無法訪問鍵盤

00:21:56.416 --> 00:21:57.684
而且也

00:21:57.885 --> 00:22:02.122
無法橫向滾動 以及無法辨識滑動手勢

00:22:02.656 --> 00:22:06.426
這是因爲在簡潔模式
用戶可以向左或向右滑動

00:22:07.294 --> 00:22:09.596
在iMessage應用之間快速切換

00:22:11.498 --> 00:22:14.434
然而 還是可以訪問輸入框

00:22:14.501 --> 00:22:18.639
不論何時
在簡潔顯示風格里調用插入信息

00:22:18.972 --> 00:22:21.942
信息都會馬上插入到輸入框裏

00:22:22.342 --> 00:22:24.311
用戶可以立即看到

00:22:24.811 --> 00:22:27.047
後續調用插入信息

00:22:27.114 --> 00:22:30.050
將會用新的信息取代當前信息

00:22:30.117 --> 00:22:34.555
這裏你可以允許用戶反覆編寫信息

00:22:34.621 --> 00:22:36.890
看到它在輸入框裏的進展

00:22:36.957 --> 00:22:39.059
直到滿意後 就可以發送

00:22:41.562 --> 00:22:44.498
與此相對的 在展開顯示風格里

00:22:44.565 --> 00:22:47.167
顯然無法訪問輸入框

00:22:47.334 --> 00:22:51.839
但卻可以訪問橫向滑動手勢辨識和滾動

00:22:52.206 --> 00:22:53.974
也可以使用鍵盤

00:22:58.612 --> 00:23:01.582
用戶隨時可以在擴展中進行轉換

00:23:01.648 --> 00:23:06.119
在兩種風格間轉換 只需點擊上方的圖標
從展開轉換到摺疊

00:23:06.320 --> 00:23:08.589
從而轉換到簡潔風格

00:23:08.722 --> 00:23:12.526
在簡潔風格下
可以點擊屏幕下方的圖標

00:23:12.593 --> 00:23:15.596
把應用展開成展開顯示風格

00:23:15.762 --> 00:23:19.499
當在使用iMessage應用時
響應需要非常及時

00:23:19.600 --> 00:23:24.004
在應用顯示的的區域

00:23:26.673 --> 00:23:28.475
任何時候轉換髮生時

00:23:28.542 --> 00:23:31.478
都會出現主類的回調

00:23:32.279 --> 00:23:36.850
轉換開始後 將會調用
willTransition(to:presentationStyle)

00:23:37.718 --> 00:23:40.654
最後 當轉換結束時

00:23:40.721 --> 00:23:43.290
將會調用
didTransition(to:presentationStyle)

00:23:45.192 --> 00:23:49.029
如Stephen所演示的
你可以要求顯示風格爲展開

00:23:49.463 --> 00:23:53.267
或簡潔 只需調用
requestPresentationStyle方法

00:23:53.333 --> 00:23:54.868
在主類中

00:23:55.435 --> 00:23:57.838
如演示裏所提到的
可以調用dismiss

00:23:57.905 --> 00:24:00.874
iMessage應用將退出
並顯示鍵盤

00:24:03.443 --> 00:24:06.413
我們繼續討論如何回覆信息

00:24:08.482 --> 00:24:10.484
這裏介紹兩種情況

00:24:11.318 --> 00:24:12.986
一種情況是擴展處於非活動狀態

00:24:13.053 --> 00:24:15.956
文本里有一個用戶點擊的泡泡框

00:24:16.023 --> 00:24:17.758
我們首先來看這種情況

00:24:18.559 --> 00:24:20.260
之後回來看第二種

00:24:22.729 --> 00:24:26.166
再看看時間線 應該看上去很熟悉

00:24:27.801 --> 00:24:29.903
用戶點擊泡泡框

00:24:30.671 --> 00:24:32.606
進程啓動

00:24:33.907 --> 00:24:36.076
經過完全相同的步驟

00:24:36.143 --> 00:24:38.879
和應用從應用抽屜啓動的過程一樣

00:24:39.613 --> 00:24:42.249
將會調用
didBecomeActive(with conversation)

00:24:42.449 --> 00:24:45.886
然後是viewWillAppear
和viewDidAppear

00:24:45.986 --> 00:24:47.588
這些步驟完成後

00:24:47.654 --> 00:24:50.924
應用將會顯示成展開顯示風格

00:24:52.392 --> 00:24:56.396
我們總以展開顯示風格展示應用

00:24:56.463 --> 00:24:58.799
當用戶點擊一個按鈕啓動 抱歉

00:24:58.866 --> 00:25:01.235
是點擊文本里的泡泡框來啓動

00:25:02.870 --> 00:25:07.541
現在來看第二種情況
擴展已經處於活躍

00:25:07.608 --> 00:25:11.578
本例中 正處於簡潔顯示風格

00:25:13.814 --> 00:25:15.582
再看一次時間線

00:25:15.649 --> 00:25:19.086
這次 點擊泡泡框 應用處於活躍

00:25:19.419 --> 00:25:23.590
所以 不會調用willBecomeActive
或者didBecomeActive

00:25:23.657 --> 00:25:26.326
將會調用willTransition

00:25:26.393 --> 00:25:28.929
(to presentationStyle)方法

00:25:29.263 --> 00:25:32.866
然後調用didSelect方法
帶有message和conversation參數

00:25:33.834 --> 00:25:35.536
在主類上進行調用

00:25:35.602 --> 00:25:38.172
讓你知道用戶點擊了文本里的泡泡框

00:25:38.238 --> 00:25:40.174
並選中一條信息

00:25:41.041 --> 00:25:44.645
最後當展開顯示風格轉換完成

00:25:44.711 --> 00:25:47.447
將會調用didTransition(to presentationStyle)

00:25:50.050 --> 00:25:52.719
在兩個時間線的最後

00:25:53.020 --> 00:25:56.757
應用的UI顯示展開顯示風格

00:25:56.823 --> 00:25:59.626
而你想訪問被點擊的信息

00:26:00.127 --> 00:26:04.765
實現方法是用MSConversation的
selectedMessage屬性

00:26:04.831 --> 00:26:07.201
可以從當前活躍的對話中獲得

00:26:07.267 --> 00:26:08.769
在主類上

00:26:10.537 --> 00:26:14.074
你會想要把選中的信息顯示在UI上

00:26:14.274 --> 00:26:16.610
並允許用戶編寫回復

00:26:18.312 --> 00:26:20.047
再次請Stephen上臺

00:26:20.113 --> 00:26:24.084
他將做最後一個演示
如何在示例應用中實現回覆

00:26:31.024 --> 00:26:34.628
好的 剛纔離開時
正有一個準備發的信息

00:26:34.695 --> 00:26:36.063
我會把它發出去

00:26:37.331 --> 00:26:39.399
回到對話表

00:26:39.933 --> 00:26:41.935
打開對話的另一端

00:26:42.402 --> 00:26:44.004
可以看到收到的信息

00:26:44.838 --> 00:26:48.375
點擊該信息
iMessage應用正常啓動

00:26:48.475 --> 00:26:50.611
然而 冰淇凌製作體驗

00:26:50.677 --> 00:26:52.880
並沒有顯示冰淇凌製作過程的下一步驟

00:26:52.946 --> 00:26:54.915
我還沒辦法選擇冰淇凌球

00:26:55.716 --> 00:26:59.152
這是因爲每次顯示當前的視圖控制器

00:26:59.219 --> 00:27:01.522
總是傳入一個新的冰淇凌模塊對象

00:27:02.122 --> 00:27:05.292
我需要做的是 找到對話中的選中信息

00:27:05.359 --> 00:27:08.795
如果信息中存在冰淇凌模塊對象
就要使用

00:27:10.063 --> 00:27:11.798
回到上面這裏

00:27:13.467 --> 00:27:16.170
到新建IceCreamBuilderController實例的地方

00:27:17.070 --> 00:27:19.873
引用activeConversation

00:27:22.876 --> 00:27:25.312
使用一個可失敗構造器

00:27:26.079 --> 00:27:28.982
查看對話中的信息

00:27:29.850 --> 00:27:33.353
如果構造失敗 就意味着沒有進展

00:27:33.420 --> 00:27:35.556
我就會新建一個冰淇凌模塊

00:27:35.622 --> 00:27:38.959
如果存在 則傳入進展中的冰淇凌

00:27:40.327 --> 00:27:44.531
還要確認的一件事是
要傳入正確的字幕文本

00:27:44.631 --> 00:27:48.168
根據選中的冰淇凌零件

00:27:49.970 --> 00:27:55.242
爲了實現 需要傳入一個新參數給方法

00:27:55.309 --> 00:27:56.977
就是selectedIceCreamPart

00:28:00.013 --> 00:28:02.850
這個messageCaption
我要變成一個聲明

00:28:03.183 --> 00:28:07.487
爲字符串類型
然後使用switch方法

00:28:08.555 --> 00:28:11.959
在selectedIceCreamPart上
來選擇合適的messageCaption

00:28:16.630 --> 00:28:19.399
我還要需要更新調用該方法的地址

00:28:19.733 --> 00:28:21.802
這裏 傳入新的參數

00:28:34.481 --> 00:28:36.216
當啓動iMessage應用時

00:28:37.351 --> 00:28:40.654
點擊加號按鈕 發出第一條信息

00:28:42.189 --> 00:28:46.026
回到對話表 進入對話另一端

00:28:47.294 --> 00:28:48.929
點擊接收到的信息

00:28:48.996 --> 00:28:52.566
現在冰淇凌製作視圖控制器顯示正常

00:28:52.633 --> 00:28:53.934
可以選擇冰淇凌球

00:28:55.903 --> 00:28:57.404
我可以選擇薄荷脆皮

00:28:59.206 --> 00:29:00.073
發送

00:29:01.708 --> 00:29:03.710
再回到對話的另一端

00:29:05.145 --> 00:29:06.446
選擇撒料

00:29:09.416 --> 00:29:13.020
這就是發送和接收互動信息的情況

00:29:13.086 --> 00:29:15.255
以及如何合作完成一個任務

00:29:16.723 --> 00:29:18.892
然而 可以看到在對話界面裏

00:29:18.959 --> 00:29:22.129
那些未完成的冰淇凌
讓對話看起來有點亂

00:29:23.230 --> 00:29:25.199
我並不想看未完成冰淇凌

00:29:25.265 --> 00:29:27.467
我只想看冰淇凌成品

00:29:28.802 --> 00:29:31.839
我想摺疊所有之前的信息

00:29:31.905 --> 00:29:35.442
也許可以留下那些信息的簡明總結

00:29:35.943 --> 00:29:38.846
爲了實現 我將使用一個
新的對象MSSession

00:29:39.012 --> 00:29:40.380
把信息合到一組

00:29:43.350 --> 00:29:45.319
這裏當編寫信息時

00:29:47.054 --> 00:29:50.123
移動activeConversation引用

00:29:52.059 --> 00:29:54.194
當聲明session對象時

00:29:56.363 --> 00:30:00.901
查看selectedMessage
是否存在於會話中

00:30:01.235 --> 00:30:04.404
如果是 則選擇該信息
將會在同個分組中繼續

00:30:05.138 --> 00:30:07.474
否則 新建一個
MSSession對象

00:30:09.343 --> 00:30:11.044
然後把該session傳入這裏

00:30:12.346 --> 00:30:14.715
到MSMessage構造器

00:30:17.484 --> 00:30:18.585
另一件事是

00:30:18.652 --> 00:30:21.555
當信息摺疊時提供一個很好的信息總結

00:30:23.891 --> 00:30:28.095
這裏聲明一個變量
叫summaryText

00:30:29.863 --> 00:30:32.799
這裏我會選擇顯示不同的
summaryText

00:30:32.866 --> 00:30:36.603
根據不同的selectedIceCreamPart

00:30:39.706 --> 00:30:44.211
我可以把summaryText變量
傳給MSMessage對象

00:30:47.281 --> 00:30:48.582
好了

00:30:50.250 --> 00:30:51.652
哦 可能需要指定

00:30:54.588 --> 00:30:55.489
這下完成了

00:31:01.628 --> 00:31:03.363
現在啓動iMessage應用

00:31:05.299 --> 00:31:08.135
進行製作冰淇淋的過程

00:31:12.339 --> 00:31:13.941
冰淇凌看上去不錯吧

00:31:16.510 --> 00:31:19.279
選擇冰淇凌口味

00:31:20.080 --> 00:31:23.650
可以看到摺疊起來的摘要文本

00:31:23.917 --> 00:31:26.820
當發送信息時可以看到

00:31:28.889 --> 00:31:33.393
如果我回到對話的第一部分

00:31:34.661 --> 00:31:36.129
再次點擊信息

00:31:36.897 --> 00:31:39.032
現在我覺得巧克力撒料不錯

00:31:42.102 --> 00:31:44.605
發送後 冰淇凌信息完整了

00:31:44.705 --> 00:31:49.209
但是隻顯示了一張圖片

00:31:49.276 --> 00:31:52.179
整個文本中都有很好的摘要說明

00:31:53.747 --> 00:31:57.217
並且 當進入冰淇凌應用之後

00:31:57.851 --> 00:32:00.120
可以看到全新完成的冰淇凌貼圖

00:32:00.187 --> 00:32:02.189
可以任我所用

00:32:03.123 --> 00:32:05.459
完成了 這就是完整的示例應用

00:32:06.093 --> 00:32:08.328
這個例子展示瞭如何編寫

00:32:08.862 --> 00:32:11.298
一個互動貼圖製作應用

00:32:11.365 --> 00:32:13.166
但是可以用這種方法做任何事

00:32:13.233 --> 00:32:16.036
可以集合各種優質服務

00:32:16.503 --> 00:32:19.673
編寫優秀的合作遊戲
我迫不及待想看看你們的成果

00:32:19.973 --> 00:32:21.074
交回給Alex

00:32:24.411 --> 00:32:26.346
謝謝你 Stephen
另一個非常棒的演示

00:32:26.413 --> 00:32:28.982
Stephen實現了回覆

00:32:29.216 --> 00:32:32.719
並引入了新的對象MSSession

00:32:33.020 --> 00:32:35.255
來看一下MSSession

00:32:38.759 --> 00:32:39.760
之前在演示裏看到的

00:32:39.826 --> 00:32:43.697
是含有很多未完成冰淇凌的
亂糟糟的文本

00:32:44.064 --> 00:32:45.866
我們看到如何用MSSession

00:32:45.966 --> 00:32:49.002
把它進程處理 變成

00:32:49.069 --> 00:32:53.173
像這樣的 更爲乾淨整潔 非常好

00:32:55.209 --> 00:32:58.445
實現它我們用了
MSSession對象

00:32:58.512 --> 00:33:00.414
新建一個MSSession

00:33:01.582 --> 00:33:02.916
對第一條信息

00:33:02.983 --> 00:33:05.719
是對話的一部分 我們傳入新建的會話

00:33:05.786 --> 00:33:08.889
進入該構造器 有了這個會話信息

00:33:10.123 --> 00:33:12.593
還可以設置摘要文本

00:33:14.595 --> 00:33:17.297
我們利用對話的
insert(message)發送

00:33:17.364 --> 00:33:18.665
如之前所見

00:33:21.869 --> 00:33:23.871
當回覆一條會話信息時

00:33:23.937 --> 00:33:27.674
我們不想新建一個會話
而是再次使用已有的會話

00:33:27.941 --> 00:33:30.010
我們可以獲取當前會話

00:33:30.310 --> 00:33:31.712
從當前對話中

00:33:31.778 --> 00:33:34.181
activeConversation.selectedMessage

00:33:34.248 --> 00:33:36.984
selectedMessage
將有一個session屬性

00:33:37.050 --> 00:33:38.619
如果它是一個會話信息

00:33:41.889 --> 00:33:44.791
然後我們取出該session屬性

00:33:44.858 --> 00:33:47.494
傳入信息構造器 如之前所見

00:33:50.230 --> 00:33:52.999
在這裏summaryText
提供了文本

00:33:53.066 --> 00:33:55.903
在對話文本中對信息進行總結

00:33:56.770 --> 00:34:00.374
現在也可以忽略該屬性 把它設爲空

00:34:00.807 --> 00:34:02.109
如果這麼做的話

00:34:02.276 --> 00:34:05.913
在文本中就沒有
summaryText的入口

00:34:05.979 --> 00:34:09.516
但是信息還是會參與到會話行爲

00:34:09.583 --> 00:34:11.518
我們講解了API的基本要點

00:34:11.585 --> 00:34:14.388
也看到該如何編寫一個
非常簡單的iMessage應用

00:34:14.755 --> 00:34:18.824
可以在朋友間發送互動信息

00:34:20.527 --> 00:34:24.797
我們將繼續討論API的一些高級特性

00:34:28.835 --> 00:34:32.906
我們將從主類上更多覆蓋方法開始

00:34:34.041 --> 00:34:36.877
然後繼續討論分組對話

00:34:38.178 --> 00:34:42.014
最後討論如何辨別
某一特定信息的發送者

00:34:45.485 --> 00:34:48.288
首先 當用戶發送一條信息時

00:34:48.355 --> 00:34:51.859
我們意識到
也許應用想知道發生了什麼

00:34:52.693 --> 00:34:55.529
比如 若你是一個遊戲 用戶做出移動

00:34:55.896 --> 00:34:58.565
我們需要知道什麼時候更新模塊
記錄這次移動

00:34:58.632 --> 00:35:02.035
這需要在信息缺失發送出去之後發生

00:35:03.837 --> 00:35:09.743
所以 我們有一個didStartSending(_message)方法

00:35:09.810 --> 00:35:14.214
在主類上
當用戶點擊發送按鈕時會被調用

00:35:14.481 --> 00:35:15.616
這點很重要

00:35:15.682 --> 00:35:16.917
並不意味着

00:35:16.984 --> 00:35:20.254
信息已經真正被髮送

00:35:20.320 --> 00:35:22.923
只是意味着用戶點擊了發送按鈕

00:35:22.990 --> 00:35:26.860
然後它傳遞了發送消息的企圖

00:35:29.029 --> 00:35:32.199
同樣我們還有一個方法叫做
didCancelSending

00:35:32.833 --> 00:35:37.004
發生在當用戶點擊十字

00:35:37.070 --> 00:35:38.906
在信息泡泡框的右上角

00:35:39.473 --> 00:35:41.675
didCancelSending
可以清除

00:35:41.742 --> 00:35:45.612
任何編寫該信息時 累積的的資源

00:35:47.748 --> 00:35:50.851
最後 我們還有
didReceive(_message)方法

00:35:52.252 --> 00:35:54.354
didReceive(_message)方法發生在

00:35:54.421 --> 00:35:57.925
被調用 當應用正在運行或處於活躍

00:35:57.991 --> 00:36:01.428
一條信息來自一個接收者

00:36:01.495 --> 00:36:03.597
對話的某一個參與者

00:36:04.198 --> 00:36:06.567
這非常有用 比如

00:36:06.633 --> 00:36:08.235
如果應用有

00:36:08.302 --> 00:36:10.871
如果用戶正在編輯一條會話信息

00:36:10.938 --> 00:36:13.307
在同一個會話中另一條信息進來

00:36:13.373 --> 00:36:18.579
這是狀態更新 你需要更新
顯示該狀態的UI

00:36:20.013 --> 00:36:22.482
讓我們繼續講解分組對話

00:36:22.616 --> 00:36:25.452
iMessage應用
可應用到分組對話中

00:36:25.519 --> 00:36:28.155
當建立分組對話時需要考慮這些問題

00:36:29.790 --> 00:36:31.124
我們在這裏

00:36:31.191 --> 00:36:35.696
有一個示例對話 來自三個朋友
Amber Ben和Chris

00:36:37.831 --> 00:36:39.666
Ben給每個人發送了冰淇凌

00:36:40.868 --> 00:36:43.637
然後他發送了一個問題
給Amber和Chris

00:36:43.704 --> 00:36:45.973
你們想要在冰淇凌上面加什麼撒料

00:36:46.039 --> 00:36:48.041
巧克力醬還是彩粉？

00:36:51.512 --> 00:36:54.014
Amber將要回復巧克力醬

00:36:54.648 --> 00:36:57.684
Chris將要回復彩粉

00:36:58.986 --> 00:37:02.222
這兩個用戶將在完全相同的時間回覆

00:37:04.591 --> 00:37:07.127
現在關注一下Ben

00:37:08.362 --> 00:37:11.265
看看他的設備
對收到的信息會做何種處理

00:37:12.466 --> 00:37:17.404
首先 Amber的回覆
先到達Ben的設備

00:37:17.471 --> 00:37:20.841
不久以後 就是來自Chris的回覆

00:37:21.375 --> 00:37:26.747
你可以發現
Amber的回覆變成了摘要信息

00:37:26.813 --> 00:37:30.417
Chris的回覆顯示在對話
最後的泡泡框裏

00:37:32.619 --> 00:37:35.322
另一種情況也是如此

00:37:37.357 --> 00:37:38.525
需要注意的是

00:37:38.592 --> 00:37:42.062
只有點擊的信息
在iMessage應用裏可用

00:37:43.063 --> 00:37:47.734
所以例子裏
我們無法訪問Amber的回覆

00:37:48.135 --> 00:37:49.203
這該如何處理？

00:37:49.803 --> 00:37:53.273
現在 我們建議把狀態儲存在雲端

00:37:54.041 --> 00:37:57.077
也就是說MSMessage的

00:37:57.144 --> 00:38:01.982
來自和發給對話參與者的URL屬性

00:38:02.049 --> 00:38:06.119
只需要作出表示會話的標記

00:38:07.888 --> 00:38:10.490
然後你會接收到會話當前狀態

00:38:10.724 --> 00:38:13.327
當用戶點擊一條信息

00:38:13.660 --> 00:38:15.028
以及當用戶發送一條信息時

00:38:15.095 --> 00:38:18.165
你應該把當前會話狀態存入雲端

00:38:20.667 --> 00:38:23.203
繼續 我們討論發送者標識符

00:38:27.741 --> 00:38:31.411
回到Amber Ben
和Chris的對話

00:38:32.946 --> 00:38:38.619
在這個情境
Amber回覆了想要巧克力醬

00:38:38.785 --> 00:38:40.320
Chris還沒有回覆

00:38:42.389 --> 00:38:44.558
再次關注Ben的設備

00:38:45.692 --> 00:38:48.762
這裏有一條信息 但不知道是誰發的

00:38:51.365 --> 00:38:54.168
但是我們可以找出相關信息

00:38:54.668 --> 00:38:59.873
這裏有發送者參與者標識符

00:38:59.940 --> 00:39:02.109
抱歉 重說一遍

00:39:02.476 --> 00:39:05.045
這裏有參與者標識符

00:39:05.579 --> 00:39:08.782
Apple對用戶隱私非常非常重視

00:39:08.916 --> 00:39:12.352
我們非常尊重客戶的隱私

00:39:12.419 --> 00:39:16.690
我們完全不對iMessage應用
顯示任何聯繫人信息

00:39:18.258 --> 00:39:21.195
取而代之
我們提供了這些參與者標識符

00:39:22.429 --> 00:39:25.766
在Ben的設備上
他有一個本地參與者標識符

00:39:25.832 --> 00:39:30.170
這是一個UUID
在該設備上代表Ben

00:39:31.038 --> 00:39:35.042
他還有兩個遠程參與者標識符

00:39:35.709 --> 00:39:40.214
代表了對話中的其餘參與者

00:39:40.280 --> 00:39:43.217
本例中 有兩個
Amber和Chris

00:39:45.085 --> 00:39:46.587
看一下進來的信息

00:39:46.653 --> 00:39:49.256
我們看見該信息有一個發送者標識符

00:39:49.756 --> 00:39:54.728
它將映射一個Ben的列表中的
本地參與者標識符

00:39:55.963 --> 00:40:00.734
回到大圖
來看Amber和Chris的設備

00:40:00.801 --> 00:40:06.540
正在發送的信息有發送者標識符

00:40:07.741 --> 00:40:14.515
它們映射到每一個發送信息的
設備本地標識符

00:40:18.752 --> 00:40:20.954
可以利用這些標識符

00:40:21.021 --> 00:40:23.924
獲取對話中參與者的數量

00:40:24.992 --> 00:40:28.495
可以把信息歸屬於一個發送者
所以一旦接收了某條信息

00:40:28.562 --> 00:40:30.297
帶有特定的發送者標識符

00:40:30.364 --> 00:40:32.866
然後接收了第二條
有着相同標識符的信息

00:40:32.933 --> 00:40:34.801
你知道它們都來自同一個用戶

00:40:35.936 --> 00:40:40.874
還可以和網絡服務相結合

00:40:41.074 --> 00:40:44.545
可以用於幫助確定身份

00:40:45.546 --> 00:40:46.847
還有一點

00:40:48.415 --> 00:40:51.084
可以在這些標識符或標識符字符串

00:40:51.151 --> 00:40:56.390
前面加上一個$符號 寫在任何傳遞給

00:40:56.456 --> 00:40:59.326
MessageTemplateLayout
文本屬性的文本中

00:40:59.393 --> 00:41:02.663
同樣 你還可以把這些標識符寫入

00:41:02.729 --> 00:41:06.567
要傳遞給summaryText
屬性的文本中

00:41:07.601 --> 00:41:09.469
當信息顯示UI

00:41:09.536 --> 00:41:12.606
在泡泡框裏的文本帶有這種類型格式時

00:41:12.906 --> 00:41:16.143
它將會把標識符替換爲

00:41:16.643 --> 00:41:19.379
其標識符映射的聯繫人姓名

00:41:27.521 --> 00:41:31.158
每一個設備的標識符都是唯一的

00:41:31.225 --> 00:41:32.492
若你留意之前的幻燈片裏

00:41:32.559 --> 00:41:35.696
每臺設備的每個人的標識符都是不同的

00:41:37.297 --> 00:41:40.968
它們的範圍侷限在iMessage
應用的安裝裏

00:41:41.134 --> 00:41:42.469
這指的是

00:41:42.536 --> 00:41:46.240
這些標識符本身將在
一定時間內保持恆定

00:41:47.508 --> 00:41:52.479
但若用戶刪除了iMessage應用
之後重裝

00:41:52.846 --> 00:41:54.381
就會有一個完全不同的

00:41:54.548 --> 00:41:57.985
標識符集合 在同樣的對話裏

00:42:00.654 --> 00:42:02.723
你可以取得發送者參與者標識符

00:42:02.789 --> 00:42:07.094
在MSMessage使用
senderParticipantIdentifier屬性

00:42:07.594 --> 00:42:11.832
還可以通過對話取得本地參與者標識符

00:42:12.299 --> 00:42:15.302
利用
localParticipantIdentifier屬性

00:42:16.336 --> 00:42:19.973
還可以取得遠程參與者標識符列表

00:42:20.040 --> 00:42:23.343
從remoteParticipantIdentifier屬性

00:42:29.850 --> 00:42:34.855
這就是我們要講的API的高級主題

00:42:35.055 --> 00:42:38.158
再講一下支持平臺

00:42:39.293 --> 00:42:43.897
互動型信息將會在這些平臺上提供

00:42:43.964 --> 00:42:47.401
watchOS 3、 macOS
Sierra和iOS 10

00:42:47.901 --> 00:42:51.939
在這些平臺中 只有iOS 10
會真正產生信息

00:42:52.973 --> 00:42:57.544
在macOS Sierra
用戶可以點擊對話文本中的泡泡框

00:42:57.945 --> 00:43:01.982
傳遞給信息URL屬性的URL

00:43:02.850 --> 00:43:04.585
將會在Safari裏打開

00:43:04.651 --> 00:43:08.922
只有https或
http URL才行

00:43:09.890 --> 00:43:12.693
在watch上 可以把互動信息傳給

00:43:12.759 --> 00:43:16.063
可以寫回復的設備

00:43:24.671 --> 00:43:28.575
我們也支持舊平臺備用

00:43:28.742 --> 00:43:32.679
這些消息也可以在
watchOS 2、 iOS 10

00:43:32.746 --> 00:43:35.449
iOS 9和OS 10.11上發送

00:43:35.649 --> 00:43:37.518
但是會以備用格式發送

00:43:37.584 --> 00:43:39.353
有兩條分開的信息

00:43:39.920 --> 00:43:43.624
第一條是模版佈局提供的圖片

00:43:44.558 --> 00:43:49.263
第二條是信息提供的URL

00:43:49.796 --> 00:43:53.467
再次強調 如果是https URL
將會發送

00:43:53.534 --> 00:43:55.469
如果是數據URL 則不會發送

00:43:55.969 --> 00:44:01.542
我們在備用消息中只發送
https或http URL

00:44:04.511 --> 00:44:05.979
這就是本次演講的全部內容

00:44:06.547 --> 00:44:08.348
總結一下

00:44:08.415 --> 00:44:12.419
本週我們介紹了Messages框架
iMessage應用

00:44:14.655 --> 00:44:18.125
在本演講的第一部分Bhaskar
和Lily爲我們介紹了

00:44:18.192 --> 00:44:20.060
貼圖集 並演示了

00:44:20.127 --> 00:44:23.730
如何編寫可以建立
貼圖內容的iMessage應用

00:44:24.831 --> 00:44:28.836
今天 我們一起編寫了
發送互動內容的iMessage應用

00:44:30.270 --> 00:44:33.607
還講瞭如何在分組對話中實現等

00:44:35.943 --> 00:44:38.745
我十分期待看到你們大家

00:44:38.812 --> 00:44:40.414
走出去利用該API所做的成績

00:44:41.081 --> 00:44:45.552
迫不及待想看到大家的產品 就這樣

00:44:53.493 --> 00:44:56.296
其它詳細信息
可以瀏覽本次演講的網頁

00:44:56.363 --> 00:44:58.565
在developer.apple.com

00:44:59.333 --> 00:45:00.467
我們還有一個相關演講

00:45:00.534 --> 00:45:04.571
如果你還沒有看過“iMessage
應用和貼圖 第一部分”

00:45:04.638 --> 00:45:06.440
請到網站上觀看

00:45:07.441 --> 00:45:09.309
演講到此結束

00:45:09.376 --> 00:45:11.678
感謝Stephen的演示

00:45:11.745 --> 00:45:13.213
謝謝你們大家的到來