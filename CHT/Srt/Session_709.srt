00:00:19.686 --> 00:00:22.489
爲用戶打造隱私保護

00:00:32.866 --> 00:00:36.670
大家好 歡迎來到
“爲用戶打造隱私保護”

00:00:37.304 --> 00:00:39.206
我是Julien
我來自隱私工程組

00:00:39.273 --> 00:00:41.275
我非常激動
能在今天來到這裏

00:00:42.576 --> 00:00:45.946
你是否想過
要怎樣瞭解你的用戶

00:00:46.013 --> 00:00:47.514
而不讓他們覺得隱私被侵犯？

00:00:49.183 --> 00:00:52.085
你是否曾和你的團隊爭論過
到底要開放哪些控制選項

00:00:52.152 --> 00:00:55.822
要保持多高的透明度
才能贏得用戶的信任？

00:00:56.490 --> 00:00:57.891
要回答這些問題

00:00:57.958 --> 00:01:01.261
今天我們將要介紹
我們自己所採用的隱私保護技術

00:01:01.662 --> 00:01:03.297
以及你可以如何應用它們

00:01:04.831 --> 00:01:08.602
衆所周知
Apple非常注重用戶隱私保護

00:01:09.303 --> 00:01:11.972
就在去年
Tim這樣說過

00:01:12.539 --> 00:01:16.877
“用戶願意把最私密的信息託付於我們
是因爲信任

00:01:17.411 --> 00:01:19.813
我們能回報他們的
只有最安全的隱私保護

00:01:19.880 --> 00:01:21.348
我們將爲此竭盡全力”

00:01:22.049 --> 00:01:25.819
不只是Tim
所有在Apple工作的人 從上到下

00:01:25.886 --> 00:01:29.156
都相信隱私保護
是贏得用戶信任的重要一環

00:01:29.523 --> 00:01:33.460
爲了打造一個健康的生態系統
來保護你的數據

00:01:34.795 --> 00:01:39.600
我們整個隱私工程組
和Apple的其他團隊通力合作

00:01:39.666 --> 00:01:42.569
把隱私保護
根植於我們的產品

00:01:43.136 --> 00:01:46.106
年復一年後
我們發現

00:01:46.406 --> 00:01:51.879
最好的產品和服務
是那些尊重用戶隱私

00:01:51.979 --> 00:01:54.681
同時還能不犧牲用戶體驗

00:01:55.115 --> 00:02:00.220
它們是非凡的服務
擁有不可思議的功能

00:02:00.354 --> 00:02:02.389
同時尊重用戶隱私

00:02:02.956 --> 00:02:05.325
它們鼓勵用戶
更放心地使用應用

00:02:05.459 --> 00:02:08.829
因爲它們提供 透明度
可控性 一致性

00:02:09.162 --> 00:02:13.367
數據的安全性
最少的數據採集

00:02:13.433 --> 00:02:15.602
和數據使用限制

00:02:16.703 --> 00:02:21.241
隨着越來越多的敏感信息
被存入我們的設備

00:02:21.475 --> 00:02:25.913
我們認爲隱私保護功能正在成爲
一種價值不斷提升的商品

00:02:26.513 --> 00:02:28.382
它值得你的投資

00:02:29.249 --> 00:02:32.653
隱私保護不只是
簡單的一組規則

00:02:32.719 --> 00:02:35.556
它也是一個契機
讓你實現更智能的開發設計

00:02:35.689 --> 00:02:39.293
考慮不同的設計方案
來保證用戶的最大權益

00:02:39.960 --> 00:02:43.330
比如說
它會鼓勵你不斷地優化產品

00:02:43.397 --> 00:02:45.966
把更多智能功能帶給設備

00:02:46.166 --> 00:02:50.270
以提高用戶體驗
並降低網絡壓力

00:02:51.038 --> 00:02:54.441
它會鼓勵你
只收集你需要的數據

00:02:54.708 --> 00:02:56.510
來提升你的服務

00:02:57.678 --> 00:03:00.447
今天我們將會介紹標識符

00:03:00.981 --> 00:03:03.917
如何收集與標識符綁定的數據

00:03:04.251 --> 00:03:08.121
給用戶提供哪些控制選項
給他們多高的透明度

00:03:08.188 --> 00:03:12.726
有意義的選項及怎樣讓隱私保護
成爲你應用的一部分

00:03:14.228 --> 00:03:15.796
我們從標識符開始

00:03:17.364 --> 00:03:20.634
我們很多人
每天都需要藉助標識符

00:03:20.701 --> 00:03:24.438
來瞭解用戶
分析他們的行爲模式

00:03:24.972 --> 00:03:30.310
這很重要 對用戶的瞭解
通常是從標識符開始的

00:03:30.711 --> 00:03:32.079
然而...

00:03:33.514 --> 00:03:37.351
如果你追蹤
用戶所做的每一件事

00:03:37.684 --> 00:03:40.988
這會給你的用戶
製造不安的使用氣氛

00:03:41.221 --> 00:03:44.791
降低他們的熱情
他們會開始思考

00:03:45.292 --> 00:03:49.196
如果我點擊了這個鏈接
我是不是也會被追蹤

00:03:49.963 --> 00:03:53.600
一旦你的用戶開始猶豫
你就開始失去他們了

00:03:55.035 --> 00:03:59.640
標識符能幫助我們打造定製化的服務
這些服務能讓我們

00:03:59.706 --> 00:04:03.177
更好地瞭解用戶
給他們提供有用的預測信息

00:04:03.477 --> 00:04:06.513
但是如果你過多地使用它
來追蹤所有事情

00:04:06.580 --> 00:04:10.751
然後開始提出奇怪的建議
這會讓用戶很不自在

00:04:11.985 --> 00:04:15.856
標識符能非常有效地打擊詐騙

00:04:16.055 --> 00:04:19.726
能儘早地探測和防止
數據的惡意使用

00:04:20.060 --> 00:04:24.965
但它們並不能分辨
你是否從用戶那裏無節制地收集數據

00:04:25.566 --> 00:04:26.533
所以你會怎樣做？

00:04:28.135 --> 00:04:30.904
這裏有一些最佳做法
我們想推薦給大家

00:04:31.004 --> 00:04:33.707
首先
更多地使用短期的標識符

00:04:33.974 --> 00:04:36.410
不要持續地使用長期存在

00:04:36.476 --> 00:04:38.846
並且一成不變的標識符

00:04:39.179 --> 00:04:41.615
你可以讓標識符
隨着時間推移自動變化

00:04:41.782 --> 00:04:43.817
或者讓它們很容易被重置

00:04:44.885 --> 00:04:46.820
大量使用隨機的標識符

00:04:46.887 --> 00:04:50.023
而不是機械性地使用某人的
用戶名

00:04:50.090 --> 00:04:51.592
郵箱 或是電話號碼

00:04:51.758 --> 00:04:53.360
大多數時候你都不需要用到它們

00:04:53.727 --> 00:04:57.164
問問自己
我是否真的需要對用戶身份進行驗證

00:04:57.231 --> 00:04:59.433
還是採用匿名模式

00:04:59.700 --> 00:05:01.802
爲用戶提供匿名的體驗
就足夠了呢？

00:05:02.302 --> 00:05:04.438
遵從這些最佳做法

00:05:04.638 --> 00:05:07.708
你將能讓用戶更放心地
使用你的應用

00:05:07.774 --> 00:05:10.110
不用擔心隱私的泄漏

00:05:10.377 --> 00:05:12.246
讓我們來看看一些例子

00:05:13.046 --> 00:05:16.216
在我們自己的產品裏
全部沿用了這些標準

00:05:16.283 --> 00:05:19.586
如在Spotlight和Maps中
所有的標識符

00:05:19.653 --> 00:05:22.055
都會定期自動更改

00:05:22.189 --> 00:05:24.725
所以用戶能放心使用它們

00:05:24.791 --> 00:05:27.094
不用擔心隱私的泄漏

00:05:27.594 --> 00:05:30.163
我們保持了這些產品的用戶體驗

00:05:30.330 --> 00:05:33.100
同時保證了應用的標識符定時改變

00:05:34.501 --> 00:05:38.872
我們儘量讓標識符的重置
變得簡單易行

00:05:39.173 --> 00:05:43.944
舉個例子 每一次開啓和關閉Siri

00:05:44.011 --> 00:05:47.881
你都會得到一個新的標識符
你的隱私受到保護

00:05:48.749 --> 00:05:53.820
同時我們也儘可能地對會話進行標識
而不是用戶

00:05:53.987 --> 00:05:57.224
因爲大多數時候
這就是我們需要用到的全部信息

00:05:57.958 --> 00:06:00.994
我們想讓你們更簡單地

00:06:02.095 --> 00:06:03.564
使用這些標準

00:06:03.630 --> 00:06:06.633
所以我們開放了相應的API
能讓你們很方便地

00:06:06.934 --> 00:06:09.069
生成標識符

00:06:09.203 --> 00:06:12.906
舉個例子
生成通用唯一標識符（UUID）的API

00:06:13.440 --> 00:06:15.442
在Swift中只是簡單的一行代碼

00:06:15.509 --> 00:06:18.278
當你調用它的時候
就能生成一個標識符

00:06:19.046 --> 00:06:20.681
快速地演示一下

00:06:21.248 --> 00:06:26.620
每當你調用這個API的時候
會得到一個128位的隨機數

00:06:27.020 --> 00:06:30.090
這個數字如此之大
足以讓它成爲全局唯一的

00:06:30.157 --> 00:06:31.925
隨機數字

00:06:31.992 --> 00:06:34.194
如果再調用一次
你會得到另一個數字

00:06:34.461 --> 00:06:35.696
再調用一次等等

00:06:36.330 --> 00:06:38.966
你能自由決定如何使用

00:06:39.132 --> 00:06:40.767
這個隨機數字

00:06:40.834 --> 00:06:44.605
你可以用它來標識
對象 會話 或者用戶

00:06:45.939 --> 00:06:47.941
如果想使用固定的標識符
應該怎麼辦呢

00:06:48.008 --> 00:06:49.977
你不需要生成標識符

00:06:50.043 --> 00:06:51.311
而是調用它

00:06:51.512 --> 00:06:53.447
Vendor ID能解決這個問題

00:06:53.847 --> 00:06:55.616
它解決問題的方法是

00:06:55.682 --> 00:06:57.718
每當你調用這個API時

00:06:57.918 --> 00:07:00.554
它會給這臺設備提供一個標識符

00:07:00.621 --> 00:07:03.323
有了它你就能很容易地
爲設備定製服務

00:07:03.390 --> 00:07:05.425
不需要再生成一個標識符了

00:07:06.126 --> 00:07:09.229
每當你調用這個API時

00:07:09.563 --> 00:07:12.032
對於某一個應用
以及某一個應用開發商

00:07:12.165 --> 00:07:15.369
他們將會得到同樣的字符串
即通用唯一標識符（UUID）

00:07:16.036 --> 00:07:18.205
比如 你在App Store上
下載了兩款應用

00:07:18.305 --> 00:07:22.376
並且它們來自於同一個開發商
開發商就能識別出同一個UUID

00:07:22.442 --> 00:07:23.977
這能讓開發工作變得簡單

00:07:24.044 --> 00:07:26.947
更方便地爲用戶定製服務

00:07:27.281 --> 00:07:29.883
相應的 不同的應用開發商
從你設備上得到的標識符

00:07:29.950 --> 00:07:31.051
也各不相同

00:07:31.885 --> 00:07:33.921
請注意 用戶擁有最終的控制權

00:07:34.087 --> 00:07:36.156
他們可以選擇卸載你的應用

00:07:37.724 --> 00:07:41.828
另一個系統層面的固定標識符
是Advertising ID

00:07:42.362 --> 00:07:45.299
它只是被用來接收廣告

00:07:45.766 --> 00:07:49.102
它的工作原理是
每當有應用調用這個API

00:07:49.469 --> 00:07:52.773
這臺設備對應的UUID就會被生成

00:07:53.106 --> 00:07:56.410
從此以後這個UUID會是固定的數值

00:07:56.643 --> 00:08:00.480
直到用戶決定重置它
或者完全取消它

00:08:01.014 --> 00:08:04.084
以上就是我們提供的幾個API

00:08:04.151 --> 00:08:05.485
每一個都有不同的功能

00:08:05.586 --> 00:08:07.888
有的被用來生成標識符

00:08:08.088 --> 00:08:10.891
有的被用來識別系統固定的標識符

00:08:12.092 --> 00:08:15.495
除了系統層面的標識符
我們還會用到網絡層面的標識符

00:08:15.562 --> 00:08:18.065
每當你檢索無線網絡
連接到一個Wi-Fi網絡時

00:08:18.232 --> 00:08:22.803
你的MAC地址就被開放給所有人

00:08:22.870 --> 00:08:25.239
這可能會造成位置隱私的泄漏

00:08:25.739 --> 00:08:29.576
所以在iOS 8中我們改變了
掃描網絡的工作方式

00:08:29.710 --> 00:08:33.046
我們開始使用本地管理員MAC地址

00:08:33.113 --> 00:08:35.148
隨着時間推移它會自動改變

00:08:35.215 --> 00:08:38.619
這能極大地保證隱私安全

00:08:38.986 --> 00:08:41.587
因爲別人很難再追蹤到你了

00:08:41.922 --> 00:08:44.691
我們非常開心和驕傲
將這項技術

00:08:44.758 --> 00:08:47.160
不僅應用於iOS
同樣在macOS中

00:08:48.362 --> 00:08:50.931
如果你擁有一個Wi-Fi網絡
並且擁有網絡測試設備

00:08:51.198 --> 00:08:53.700
我們建議你測試你的裝置

00:08:53.767 --> 00:08:56.570
用iOS seeds
及macOS seeds

00:08:58.639 --> 00:09:02.109
你們一定已聽說Messages應用
以及它對應用擴展的支持

00:09:02.209 --> 00:09:05.112
這是非常酷的新功能
兼有強大的隱私保密性

00:09:05.345 --> 00:09:09.316
這些應用擴展
不能讀取你的信息內容

00:09:09.483 --> 00:09:12.052
它們只能看到一個隨機的UUID

00:09:12.352 --> 00:09:14.655
對於不同的應用擴展

00:09:14.721 --> 00:09:18.225
在每一組對話裏
UUID也會各不相同

00:09:18.859 --> 00:09:20.360
所以它的保密性非常強

00:09:21.662 --> 00:09:26.366
有時 即便你不生成或訪問任何標識符

00:09:26.433 --> 00:09:29.536
只是收集一些無序的數據

00:09:29.970 --> 00:09:33.207
也會產生問題
如果你把這些數據彙總

00:09:33.373 --> 00:09:38.011
你就可能得到一個穩定的設備特徵

00:09:38.078 --> 00:09:39.913
或者一個隱性的標識符

00:09:40.047 --> 00:09:42.649
一旦發生數據外泄時
這個漏洞就會被暴露出來

00:09:42.749 --> 00:09:44.618
你可能會認爲數據都是匿名的

00:09:44.685 --> 00:09:46.353
但是許多研究者指出

00:09:46.420 --> 00:09:49.456
通過這個漏洞
黑客將很容易識別出數據裏的用戶信息

00:09:49.823 --> 00:09:51.592
你肯定不想面臨這樣的情況

00:09:51.658 --> 00:09:54.127
所以你應該盡少地收集用戶數據

00:09:54.728 --> 00:09:56.430
我們也爲此提供幫助

00:09:56.697 --> 00:09:59.466
我們創建了安全強大的沙盒

00:09:59.533 --> 00:10:03.136
保護你的應用數據安全不被第三方攻破

00:10:03.437 --> 00:10:08.041
同時防止用戶身份泄漏

00:10:08.976 --> 00:10:13.113
我們開放了功能強大的API
來幫助開發應用功能

00:10:13.313 --> 00:10:17.451
實現數據保護
同時我們也限制了這些API

00:10:17.518 --> 00:10:19.319
對用戶身份信息的採集

00:10:19.453 --> 00:10:22.689
舉個例子
今年我們重新修訂了一些API

00:10:22.756 --> 00:10:24.525
以往它們能被用作身份信息採集

00:10:24.758 --> 00:10:28.028
我們把其中有用的API屬性
列入了白名單

00:10:28.095 --> 00:10:29.830
將其它可能用作身份採集的屬性

00:10:29.997 --> 00:10:32.032
列入了黑名單

00:10:32.699 --> 00:10:35.235
簡而言之
這些對你意味着什麼呢？

00:10:36.570 --> 00:10:38.872
標識符非常有用
但是我們推薦

00:10:38.939 --> 00:10:41.842
儘可能多地使用短期標識符

00:10:42.176 --> 00:10:45.012
儘可能多地使用系統提供的API

00:10:45.078 --> 00:10:47.381
來生成以及讀取標識符

00:10:47.781 --> 00:10:51.518
用戶會更放心地使用你的應用

00:10:51.585 --> 00:10:53.854
並且分享他們的數據

00:10:54.788 --> 00:10:57.191
談到數據
讓我們來看一看數據收集

00:10:59.092 --> 00:11:02.429
我們每天都在向用戶收集數據

00:11:02.696 --> 00:11:06.400
這對於數據驅動型的產品開發非常有用

00:11:06.767 --> 00:11:08.101
這個功能非常棒

00:11:08.368 --> 00:11:11.538
但是有一天
你可能會面臨一個奇怪的問題

00:11:11.605 --> 00:11:13.807
你從用戶那裏得到了太多的信息

00:11:13.874 --> 00:11:16.977
你可能比他們更瞭解他們自己

00:11:17.344 --> 00:11:18.412
這非常奇怪

00:11:20.314 --> 00:11:21.381
所以問問自己...

00:11:22.249 --> 00:11:26.320
如果他們知道 你擁有他們的所有數據
你會怎麼想？

00:11:26.987 --> 00:11:28.455
你會覺得尷尬嗎？

00:11:29.089 --> 00:11:31.692
萬一這些數據是關於你的父親？

00:11:31.758 --> 00:11:33.193
你的母親 或兄弟姐妹呢？

00:11:34.528 --> 00:11:36.763
擁有數據既是一項優勢 也是一種風險

00:11:36.964 --> 00:11:38.665
你需要很好地平衡它們

00:11:38.832 --> 00:11:40.033
所以我們能做什麼？

00:11:42.102 --> 00:11:44.004
我們建議你採用

00:11:44.605 --> 00:11:47.407
注重隱私保護的數據收集方法

00:11:48.075 --> 00:11:52.279
尤其要避免投機性的數據採集

00:11:52.446 --> 00:11:56.583
你可以一次性收集所有能找到的數據
因爲將來你可能會使用到

00:11:56.650 --> 00:11:59.353
找出應用的關鍵績效指標

00:11:59.620 --> 00:12:01.488
根據它們來收集數據

00:12:01.855 --> 00:12:05.092
以下是幾個可以採用的小技巧

00:12:05.292 --> 00:12:07.895
分級收集 採樣收集 聚合收集

00:12:08.996 --> 00:12:10.297
我們來看看分級收集

00:12:11.398 --> 00:12:14.635
分級收集的核心思想
就是隻採集某一個等級的數據

00:12:14.701 --> 00:12:16.970
只要它能滿足你的需要

00:12:18.505 --> 00:12:20.274
假如你想知道

00:12:20.340 --> 00:12:24.545
用戶打開應用內設置的頻率

00:12:24.845 --> 00:12:27.414
我們向某一個用戶提出這個問題

00:12:28.015 --> 00:12:30.617
要實現它非常簡單
你只要加入一個計數器

00:12:30.751 --> 00:12:32.653
然後查看次數

00:12:32.819 --> 00:12:37.024
假如這個測試用戶 他在一天內

00:12:37.090 --> 00:12:38.725
先後86次打開了應用內設置

00:12:39.126 --> 00:12:40.694
這條信息非常有用 對吧？

00:12:40.761 --> 00:12:44.298
因爲這預示着你的應用配置可能有問題

00:12:44.498 --> 00:12:47.167
你可能需要讓某些設置更可見

00:12:47.835 --> 00:12:51.238
但是你真的需要收集
精確度如此高的信息嗎？

00:12:51.672 --> 00:12:54.541
也許只要知道
有人進入應用內設置多過50次

00:12:54.741 --> 00:12:57.811
這樣的收集會不會更有效呢？

00:12:57.878 --> 00:12:59.913
它能給你提供同樣的信息

00:12:59.980 --> 00:13:01.882
也許你需要改進和提升

00:13:01.949 --> 00:13:04.084
你的應用配置

00:13:06.286 --> 00:13:07.721
如果你想知道

00:13:07.788 --> 00:13:09.723
不僅僅是一個用戶

00:13:09.957 --> 00:13:11.692
而是很多用戶的使用趨勢

00:13:12.559 --> 00:13:15.462
你只需要向每一位用戶提出這個問題

00:13:15.963 --> 00:13:20.100
在某一天內
我的用戶打開應用設置的次數是多少？

00:13:21.568 --> 00:13:24.471
如果你只想知道一個平均值

00:13:24.538 --> 00:13:27.875
你根本不需要向所有用戶採集數據

00:13:27.941 --> 00:13:32.446
你只要得到統計意義上的
平均估計值就足夠了

00:13:32.779 --> 00:13:37.718
事實上你只需要
從0.1%的用戶設備上收集數據

00:13:38.118 --> 00:13:40.621
你就能得到一個非常接近的平均值

00:13:40.921 --> 00:13:43.824
事實上
如果你只從10%的用戶收集數據

00:13:44.024 --> 00:13:47.060
你的估計值就能達到0.1的精準度

00:13:47.728 --> 00:13:51.932
所以你並不需要機械地
從所有用戶那裏採集數據

00:13:51.999 --> 00:13:55.536
這一切只取決於你所關心的性能指標

00:13:57.571 --> 00:14:01.575
有時 若你想採集一些非常敏感的數據

00:14:02.209 --> 00:14:05.913
而數據本身是不應該被採集的

00:14:06.813 --> 00:14:09.650
可是你又非常希望瞭解它們
你會怎麼辦？

00:14:10.784 --> 00:14:13.387
你可能會需要這樣一種科技

00:14:13.554 --> 00:14:18.792
它能讓你從一個整體得到信息
同時保護個體的隱私安全

00:14:20.527 --> 00:14:24.031
這樣的科技是存在的
我們稱之爲差分隱私

00:14:25.098 --> 00:14:29.603
差分隱私技術是用戶捐獻數據
最安全的方式之一

00:14:30.838 --> 00:14:33.507
它能幫助你從整體得到信息

00:14:33.707 --> 00:14:35.475
同時保護個體的隱私安全

00:14:36.076 --> 00:14:40.380
它提供了強大的數學算法
來保證個體的隱私安全

00:14:40.948 --> 00:14:44.318
在今年 我們將這項技術
集成到了iOS和macOS

00:14:45.452 --> 00:14:48.121
在我開始前
我想強調兩件事

00:14:48.188 --> 00:14:54.094
第一 這項技術是
我們的隱私技術工具箱裏的新成員

00:14:54.261 --> 00:14:56.630
我們已擁有了許多用以保護隱私的工具

00:14:56.797 --> 00:14:59.299
而它將是其中最令人興奮
最前景廣闊的一個

00:14:59.800 --> 00:15:04.304
第二 這將是一個快速的介紹
關於這項令人着迷的技術

00:15:04.371 --> 00:15:08.075
我將竭盡全力啓發大家
希望你也能爲之興奮

00:15:08.775 --> 00:15:10.110
讓我們開始

00:15:10.978 --> 00:15:13.714
如我之前所說
它提供了強大的數學算法保證

00:15:13.947 --> 00:15:16.116
讓我們先看看一些數學定理

00:15:17.217 --> 00:15:20.921
不 我想我們可以試着
換一個角度來認識它

00:15:21.388 --> 00:15:24.124
假如你有一些敏感數據

00:15:24.525 --> 00:15:28.028
給它加入一些噪音
你就得到了一些私有化數據

00:15:28.529 --> 00:15:31.098
然後你可以聚集這些私有化數據

00:15:31.365 --> 00:15:32.566
來得到一些信號

00:15:33.500 --> 00:15:36.270
讓我舉一個例子
我上週花費了多少個小時

00:15:36.503 --> 00:15:37.905
來準備這些幻燈片

00:15:37.971 --> 00:15:41.041
那是一個忙碌的星期
所以假設我工作了128個小時

00:15:42.075 --> 00:15:45.145
我給它添加一些噪音
也就是說

00:15:45.212 --> 00:15:47.948
我把這個數字變成
一個完全不同的數字

00:15:48.515 --> 00:15:51.251
讓我進步一解釋一下
噪音在這裏的含義

00:15:51.552 --> 00:15:54.988
先向大家聲明 這是一個簡化版的解釋

00:15:55.055 --> 00:15:57.925
但是它能夠描述這項技術的核心要領

00:15:58.225 --> 00:16:00.928
使用這個數字 128

00:16:01.128 --> 00:16:04.498
我們用它來生成一個投影數值
類似於哈希算法

00:16:04.798 --> 00:16:08.335
要生成這個數值
我需引入一個所有位置全部爲0的矢量

00:16:08.602 --> 00:16:11.839
只把第128號位置標註爲1

00:16:12.439 --> 00:16:15.475
這樣它就變成了只有一個1
其餘全是0的大型矢量

00:16:16.977 --> 00:16:19.847
要給它添加噪音
也就是切換矢量的

00:16:19.913 --> 00:16:21.982
某些位置上的數值

00:16:22.115 --> 00:16:24.251
一些0會變成1

00:16:24.351 --> 00:16:26.320
一些1會變成0

00:16:26.854 --> 00:16:31.959
最關鍵的一點是
0保持不變的概率

00:16:32.025 --> 00:16:34.361
只稍微大於它變成1的概率

00:16:34.862 --> 00:16:37.764
1保持不變的概率

00:16:37.831 --> 00:16:39.833
也只稍微大於它變成0的概率

00:16:40.534 --> 00:16:43.604
這就是模糊化處理數據的一種方式

00:16:43.871 --> 00:16:45.839
在將它分享給Apple之前完成

00:16:46.540 --> 00:16:49.643
這裏還有另外一個有趣的發現

00:16:49.977 --> 00:16:52.379
如果我對數據進行兩次模糊化處理

00:16:52.479 --> 00:16:54.181
即使是相同的數字

00:16:54.314 --> 00:16:56.717
每一次處理過後我會得到不同的數字

00:16:57.584 --> 00:16:59.653
不同於典型的哈希算法

00:16:59.720 --> 00:17:01.989
我無法使用字典攻擊

00:17:02.122 --> 00:17:04.790
來破譯它對應的數值

00:17:05.626 --> 00:17:08.328
這一切都在設備本地完成

00:17:10.797 --> 00:17:15.002
在你的數據被分享給Apple前完成

00:17:15.469 --> 00:17:17.604
另一個例子 如果我想知道

00:17:17.738 --> 00:17:20.507
Apple員工上週的工作時長

00:17:20.941 --> 00:17:25.612
我工作了128小時 Jessie工作了48小時
Timmy工作了130小時

00:17:26.280 --> 00:17:29.082
這些數據都收集自Apple員工

00:17:29.416 --> 00:17:31.385
然後噪音被添加到這些數據上

00:17:31.518 --> 00:17:36.623
最後 Apple收集到的
是一大堆二進制的噪音矢量

00:17:36.823 --> 00:17:40.227
每個單獨的矢量對於我們都毫無意義

00:17:40.594 --> 00:17:44.698
但是如果把它們加在一起
清除它們的噪音

00:17:44.765 --> 00:17:47.201
我們最後會得到一些特徵的統計結果

00:17:47.434 --> 00:17:48.702
比如說在這裏

00:17:48.769 --> 00:17:52.372
Apple員工上週的
平均工作時長爲41個小時

00:17:53.040 --> 00:17:56.810
我們先計算矢量和

00:17:56.877 --> 00:17:58.178
再使結果標準化

00:17:58.378 --> 00:18:00.080
接着觀察矢量的每一列

00:18:00.147 --> 00:18:02.749
尋找統計意義上的顯著值

00:18:02.916 --> 00:18:04.318
看它是否大於隨機數

00:18:05.419 --> 00:18:06.553
爲什麼這項技術很酷？

00:18:08.088 --> 00:18:10.090
因爲它爲我們提供了一種途徑

00:18:10.157 --> 00:18:12.659
安全地得到整體性的答案

00:18:12.993 --> 00:18:16.430
有了它 你可以計算平均值
判斷某種特徵屬性是否存在

00:18:16.797 --> 00:18:19.433
甚至繪製頻率直方圖

00:18:19.933 --> 00:18:21.335
這種方法能夠保證

00:18:21.401 --> 00:18:24.538
個體的隱私被充分尊重

00:18:24.605 --> 00:18:26.006
即使Apple也不例外

00:18:26.106 --> 00:18:28.141
我們只能從聚合的數據中得到結果

00:18:29.343 --> 00:18:30.978
可是你也許會問

00:18:31.445 --> 00:18:36.149
萬一我是唯一一個貢獻數據的人呢？

00:18:37.251 --> 00:18:40.621
有時候可能一個用戶會成爲唯一的聚合者

00:18:41.355 --> 00:18:45.292
爲了迴避這個問題
我們引入了“隱私預算”概念

00:18:45.359 --> 00:18:47.561
它限制了某臺設備

00:18:47.628 --> 00:18:51.398
在單位時間內的數據捐獻次數

00:18:51.899 --> 00:18:56.303
這些信息也不會綁定任何一個標識符

00:18:56.503 --> 00:18:59.072
之後我們也會從服務器上
永久刪除這些數據

00:18:59.740 --> 00:19:01.408
我們來看一看這個例子

00:19:01.642 --> 00:19:04.411
假如我們想了解表情符號的使用情況

00:19:04.711 --> 00:19:08.916
我們需要從願意分享
“診斷與使用”數據

00:19:08.982 --> 00:19:10.484
的用戶那裏收集數據

00:19:11.318 --> 00:19:14.655
當用戶開始使用鍵盤輸入表情符號

00:19:14.721 --> 00:19:16.723
數據被記錄在本地設備上

00:19:16.924 --> 00:19:19.693
接着Julien Jessie
和Timmy

00:19:19.860 --> 00:19:22.029
分享了各自的數據
且在設備本地添加了噪音

00:19:22.162 --> 00:19:24.464
在上傳給Apple之前

00:19:24.698 --> 00:19:27.734
隨着越來越多的人分享數據

00:19:27.935 --> 00:19:29.837
我們可以得到各類信息

00:19:29.903 --> 00:19:31.772
比如哪些表情符號是最受歡迎的

00:19:32.806 --> 00:19:35.442
我們可以使用這個信息

00:19:35.509 --> 00:19:37.110
相應調整它們在用戶界面的順序

00:19:37.177 --> 00:19:40.214
也能更準確地預測用戶的使用習慣

00:19:40.881 --> 00:19:43.383
今年我們將把這項技術

00:19:43.617 --> 00:19:45.352
主要應用到四個用例裏

00:19:45.552 --> 00:19:48.121
用它來收集表情符號數據

00:19:48.722 --> 00:19:50.691
用它來收集新造詞

00:19:50.757 --> 00:19:54.094
我們能學到本地字典裏
沒有的新詞 比如俚語

00:19:54.161 --> 00:19:56.797
我們還用它來收集深層鏈接數據

00:19:56.864 --> 00:19:58.866
查看哪些深層鏈接在應用裏最受歡迎

00:19:58.932 --> 00:20:02.903
讓它們在Spotlight
以及Lookup Hints中推廣

00:20:04.771 --> 00:20:06.106
這讓人非常興奮

00:20:06.273 --> 00:20:10.010
並且我們保證在採集數據時
不侵犯用戶隱私

00:20:10.677 --> 00:20:12.579
數據的收集對象僅限於

00:20:12.646 --> 00:20:15.282
開啓了“診斷與使用”選項的用戶

00:20:15.516 --> 00:20:18.185
如果你沒有開啓它

00:20:18.252 --> 00:20:20.254
我們就不會從你那裏收集數據

00:20:20.320 --> 00:20:21.855
你擁有決定權

00:20:23.123 --> 00:20:25.192
這項技術對你有何意義呢？

00:20:25.626 --> 00:20:29.096
我們認爲差分隱私是
一種前景非常廣闊的

00:20:29.162 --> 00:20:31.899
注重隱私保護的數據收集技術

00:20:32.399 --> 00:20:35.869
我們很高興能在今年把它集成到
iOS和macOS上

00:20:35.936 --> 00:20:39.673
從整體的角度收集數據
同時不侵犯個體隱私

00:20:40.340 --> 00:20:41.708
我們不使用任何標識符

00:20:42.009 --> 00:20:44.011
我們不收集任何原始數據

00:20:46.380 --> 00:20:50.184
這就是我們隱私保護工具箱裏的
另外一個成員

00:20:50.284 --> 00:20:52.553
我們希望它能被越來越多地使用

00:20:52.686 --> 00:20:54.922
來開發新的功能

00:20:56.190 --> 00:20:58.625
你們的用戶會看到我們的努力

00:20:58.825 --> 00:21:01.795
我們竭盡所能

00:21:01.929 --> 00:21:03.864
保護他們隱私的決心

00:21:04.097 --> 00:21:06.099
我們希望這能鼓勵你和我們一起

00:21:06.166 --> 00:21:08.936
採用這些尊重隱私的開發準則

00:21:09.970 --> 00:21:12.573
接下來我們將介紹
隱私的透明度和控制權

00:21:12.840 --> 00:21:15.275
我想邀請Jessie上臺

00:21:15.375 --> 00:21:16.276
謝謝

00:21:17.010 --> 00:21:18.645
大家好 我叫Jessie

00:21:18.712 --> 00:21:20.781
我也來自隱私工程團隊

00:21:20.848 --> 00:21:23.250
我負責以下產品隱私安全
如Apple Music

00:21:23.650 --> 00:21:25.152
Photos和教育類產品

00:21:26.553 --> 00:21:28.188
Julien給我們詳細介紹了

00:21:28.255 --> 00:21:30.824
如何識別用戶身份

00:21:30.891 --> 00:21:32.826
以及收集必要的數據

00:21:33.160 --> 00:21:35.996
來開發強大的功能
同時尊重用戶隱私

00:21:36.463 --> 00:21:40.133
除此以外 數據收集過程的透明
也非常重要

00:21:40.200 --> 00:21:42.669
讓用戶瞭解他們被收集的數據

00:21:43.337 --> 00:21:45.339
當你這樣做時
用戶會更加了解

00:21:45.405 --> 00:21:47.641
自己隱私的控制權

00:21:48.208 --> 00:21:50.244
只要用戶對他們隱私安全有信心

00:21:50.310 --> 00:21:51.812
你就贏得了他們的信任

00:21:52.813 --> 00:21:55.215
他們會更放心地使用你的應用

00:21:55.782 --> 00:21:58.385
其中一個提高用戶隱私透明度
增加控制權的例子

00:21:58.452 --> 00:22:00.587
是iOS 10中的廣告推送服務

00:22:02.089 --> 00:22:04.558
在News和App Store裏

00:22:04.825 --> 00:22:08.529
用戶可以看見這個藍色的廣告按鈕

00:22:09.129 --> 00:22:10.097
當用戶點擊它時

00:22:10.163 --> 00:22:13.133
他們就能知道
這條廣告爲什麼會被推送給自己

00:22:13.567 --> 00:22:16.270
所以當任何開發者購買廣告服務時

00:22:16.336 --> 00:22:19.072
可以選擇特定的目標用戶羣

00:22:19.139 --> 00:22:20.741
來投放廣告

00:22:21.241 --> 00:22:23.911
同樣的 用戶現在也能通過廣告信息

00:22:24.044 --> 00:22:26.513
清楚地知道自己所在的

00:22:26.914 --> 00:22:28.782
廣告用戶組

00:22:30.017 --> 00:22:34.121
除此以外 用戶還能進入隱私設置

00:22:36.190 --> 00:22:38.025
廣告

00:22:39.159 --> 00:22:40.761
查看廣告信息

00:22:41.261 --> 00:22:44.097
我們對用戶完全透明

00:22:44.231 --> 00:22:46.233
讓用戶知道我們正在收集哪些數據

00:22:46.300 --> 00:22:49.403
服務於News和App Store

00:22:49.703 --> 00:22:51.772
這個功能將會在接下來推出

00:22:52.840 --> 00:22:56.009
在廣告服務中
我們爲用戶提供隱私控制權

00:22:56.276 --> 00:22:57.911
是通過限制廣告追蹤的方式完成

00:22:58.846 --> 00:23:00.247
正如Julien提到的

00:23:00.314 --> 00:23:02.282
用戶擁有專門的廣告標識符

00:23:02.482 --> 00:23:04.318
你可以使用它來追蹤用戶

00:23:04.384 --> 00:23:06.653
在我們平臺上投放廣告

00:23:08.121 --> 00:23:10.858
當用戶打開限制廣告追蹤選項

00:23:11.091 --> 00:23:12.259
其實是在告訴我們

00:23:12.326 --> 00:23:15.062
他們不想被廣告追蹤

00:23:15.529 --> 00:23:17.898
因此在iOS 10中
我們在此基礎上更進一步

00:23:18.198 --> 00:23:20.400
當用戶開啓了限制廣告追蹤

00:23:20.801 --> 00:23:24.404
廣告標識符變成
一個全部爲0的UUID

00:23:25.506 --> 00:23:27.441
我們從代碼等級實現了這一功能

00:23:27.541 --> 00:23:29.643
一旦用戶開啓了廣告追蹤限制

00:23:29.776 --> 00:23:32.279
他們就再也不能
通過廣告標識符被追蹤到

00:23:33.380 --> 00:23:35.883
如果用戶取消了廣告追蹤限制

00:23:36.216 --> 00:23:39.386
你的應用就能訪問一個新的隨機標識符

00:23:41.688 --> 00:23:44.825
你也許會問
對於開啓了追蹤限制的用戶

00:23:44.892 --> 00:23:46.560
我還能給他們投放廣告嗎？

00:23:47.027 --> 00:23:48.161
當然可以

00:23:48.228 --> 00:23:50.197
你可以在應用裏顯示文意廣告

00:23:50.430 --> 00:23:52.232
根據應用內容的上下文來投放廣告

00:23:52.733 --> 00:23:55.536
你只是不能再追蹤廣告用戶

00:23:55.602 --> 00:23:57.337
如果他們開啓了廣告追蹤限制

00:23:58.038 --> 00:23:59.806
請注意 我們禁止緩存廣告標識符

00:23:59.940 --> 00:24:02.743
到用戶的應用的存儲裏

00:24:02.809 --> 00:24:05.646
因爲這會給用戶重置標識符帶來麻煩

00:24:07.381 --> 00:24:09.183
所以 這一切對你有什麼意義？

00:24:09.449 --> 00:24:12.719
我們提升了廣告服務的隱私透明度

00:24:12.786 --> 00:24:15.756
讓用戶更放心地使用
News和App Store

00:24:16.256 --> 00:24:19.193
我們從代碼等級開始支持
廣告追蹤限制

00:24:20.494 --> 00:24:23.397
當用戶能夠使用這些隱私保護選項

00:24:23.463 --> 00:24:25.232
比如廣告追蹤限制

00:24:26.033 --> 00:24:29.803
這能幫助他們作出正確的
隱私保護選擇

00:24:30.604 --> 00:24:33.006
我們還爲用戶提供另外一種方式

00:24:33.073 --> 00:24:36.243
來進行隱私保護設置
就是同意警報

00:24:37.945 --> 00:24:41.215
所以在iOS macOS tvOS
以及watchOS裏

00:24:41.515 --> 00:24:44.184
用戶有權決定哪些應用可以訪問

00:24:44.251 --> 00:24:45.953
某一類受保護的數據

00:24:46.854 --> 00:24:49.656
受保護數據包括日曆

00:24:50.090 --> 00:24:52.960
聯繫人 照片 HomeKit

00:24:54.494 --> 00:24:56.797
當你的應用第一次請求訪問時

00:24:56.864 --> 00:24:59.066
需要通過調用API來完成

00:24:59.466 --> 00:25:01.401
iOS會顯示這樣的警告

00:25:01.668 --> 00:25:03.937
這時用戶有權決定

00:25:04.171 --> 00:25:06.473
是否授予應用訪問權限

00:25:08.108 --> 00:25:11.545
當時機和情境都正確時

00:25:12.312 --> 00:25:14.581
用戶就能做出他們認爲正確的選擇

00:25:14.715 --> 00:25:16.416
我們稱這個爲
及時警告

00:25:18.519 --> 00:25:21.255
我還想給大家介紹一下
今年我們推出的新特性

00:25:21.321 --> 00:25:24.758
它們也都擁有隱私設置
和同意警報功能

00:25:25.259 --> 00:25:28.462
首先是媒體庫隱私設置

00:25:28.862 --> 00:25:31.465
它可授權開發者讀取
Apple Music用戶賬戶狀態

00:25:33.100 --> 00:25:34.735
讀取用戶的商店首頁信息

00:25:36.270 --> 00:25:37.971
向播放列表添加內容

00:25:39.339 --> 00:25:41.108
以及讀取用戶的媒體庫

00:25:42.976 --> 00:25:45.546
我們理解
用戶的媒體庫數據和

00:25:45.646 --> 00:25:47.414
Apple Music賬戶信息

00:25:47.481 --> 00:25:50.217
都是非常私人的信息

00:25:50.317 --> 00:25:52.352
所以我們希望用戶擁有決定權

00:25:52.419 --> 00:25:54.421
哪些應用能夠訪問這些信息
哪些不能

00:25:55.189 --> 00:25:59.059
現在如果你的應用
已可在iOS 9.3裏訪問媒體庫

00:25:59.226 --> 00:26:01.595
在iOS 10中你可以繼續訪問

00:26:02.663 --> 00:26:04.665
所以如何知道你是否已有訪問權限了？

00:26:05.699 --> 00:26:08.168
對於大多數的受保護類數據

00:26:08.235 --> 00:26:11.238
我們擁有一個授權狀態API

00:26:11.305 --> 00:26:14.508
對於不同類型的數據
API的名字可能會有所不同

00:26:14.575 --> 00:26:16.810
以媒體庫爲例

00:26:17.144 --> 00:26:18.912
你可以調用這個API

00:26:19.413 --> 00:26:21.248
然後得到這樣一個enum數值

00:26:22.549 --> 00:26:24.151
若是notDetermined

00:26:24.218 --> 00:26:26.153
兩個原因會造成這種情況

00:26:26.320 --> 00:26:28.522
一 你還沒有請求用戶授權

00:26:29.089 --> 00:26:32.726
或者二 你已經請求訪問受保護數據了

00:26:32.926 --> 00:26:35.796
隨後用戶重置了隱私設置

00:26:37.030 --> 00:26:38.732
如果你看到denied

00:26:39.032 --> 00:26:41.268
這表示用戶“不允許”

00:26:41.602 --> 00:26:45.072
他們不允許
你的應用訪問某類受保護數據

00:26:45.172 --> 00:26:47.074
這時你有幾個選擇

00:26:47.174 --> 00:26:49.643
你能相應地調整應用的使用方式

00:26:49.710 --> 00:26:51.778
讓用戶能夠使用一部分功能

00:26:52.212 --> 00:26:55.115
而不需要開放他們的數據

00:26:55.282 --> 00:26:58.719
或者 你可以打開應用的隱私設置

00:26:58.952 --> 00:27:01.588
也許這一次用戶會做出不同的決定

00:27:01.655 --> 00:27:03.056
如果他們願意的話

00:27:04.224 --> 00:27:05.859
若你看到restricted

00:27:05.926 --> 00:27:07.761
可能是由於這兩個原因

00:27:07.995 --> 00:27:11.365
一 這臺設備設有家長控制

00:27:11.532 --> 00:27:14.701
限制了應用程序對這類保護數據的訪問

00:27:15.068 --> 00:27:17.538
或者 二
這個應用被管制了

00:27:17.604 --> 00:27:21.308
也許它處於教育模式
或者企業模式

00:27:21.475 --> 00:27:24.311
設備管理員規定了你的應用程序

00:27:24.378 --> 00:27:25.979
不能訪問這類受保護數據

00:27:27.014 --> 00:27:29.650
當然若你看到authorized
代表你的應用程序已被授權

00:27:31.318 --> 00:27:33.153
此外 我們還推出了
其他非常棒的新特性

00:27:33.220 --> 00:27:35.155
它們也支持隱私設置

00:27:35.589 --> 00:27:37.191
另一個例子是語音識別

00:27:37.858 --> 00:27:41.361
你可以選擇是否允許
錄製的語音被上傳給Apple

00:27:41.428 --> 00:27:43.230
然後被轉錄成文字

00:27:43.931 --> 00:27:45.899
爲什麼我們讓用戶選擇

00:27:45.966 --> 00:27:48.402
哪些應用可以訪問語音識別
哪些應用不可以

00:27:48.569 --> 00:27:50.204
因爲我們想讓用戶知道

00:27:50.270 --> 00:27:51.905
一旦他們授權了訪問

00:27:52.072 --> 00:27:54.341
他們的語音文件

00:27:54.408 --> 00:27:56.677
會被上傳給Apple並轉錄成文字

00:27:57.845 --> 00:28:01.648
確保你使用這個API時
提前獲取授權

00:28:02.583 --> 00:28:04.084
我們還推出了SiriKit

00:28:04.585 --> 00:28:05.919
這非常令人興奮

00:28:06.019 --> 00:28:08.455
用戶現在可以直接使用Siri

00:28:08.622 --> 00:28:10.991
控制應用程序

00:28:13.093 --> 00:28:17.297
但是爲了使Siri懂得
用戶具體的操控請求

00:28:17.364 --> 00:28:20.133
你的應用必須
首先發送使用情境信息給Siri

00:28:20.200 --> 00:28:22.769
包括用戶個人信息以及應用程序信息

00:28:23.270 --> 00:28:25.339
我們希望給予用戶決定權

00:28:25.405 --> 00:28:28.075
哪些應用可發送情境信息給Siri

00:28:28.141 --> 00:28:29.610
以及哪些不可以

00:28:31.411 --> 00:28:33.714
所以你必須事先向用戶請求這項權限

00:28:33.780 --> 00:28:35.849
Siri纔會響應用戶的操作

00:28:36.617 --> 00:28:39.753
這項授權可以通過
requestSiriAuthorization API完成

00:28:41.188 --> 00:28:44.825
你也許已經聽說了
全新的TV單點登錄功能

00:28:45.826 --> 00:28:48.262
它允許特定的電視應用

00:28:48.695 --> 00:28:51.331
訪問用戶的訂閱狀態信息

00:28:51.398 --> 00:28:53.500
然後將他們自動登錄進應用程序裏

00:28:54.735 --> 00:28:57.104
目前這項功能只開放給特定的電視應用

00:28:57.204 --> 00:28:59.106
請諮詢我們的WWDR客戶經理

00:28:59.173 --> 00:29:01.642
如果你也想爲應用開通此項功能

00:29:03.043 --> 00:29:07.314
你們喜愛的iOS版Photos應用
其一切特性現都移植到tvOS上了

00:29:07.714 --> 00:29:09.216
同樣的還有HomeKit

00:29:09.449 --> 00:29:13.287
它們在tvOS上的
應用都擁有隱私設置

00:29:14.521 --> 00:29:16.924
除了這些強大的新功能外

00:29:17.157 --> 00:29:20.327
我們還更新了你的應用

00:29:20.394 --> 00:29:22.262
請求權限的方式

00:29:23.830 --> 00:29:28.135
2014年我們開始要求所有應用程序
向用戶請求使用位置信息時

00:29:28.202 --> 00:29:30.737
必須提前申請

00:29:30.804 --> 00:29:32.639
並說明使用位置信息的原因

00:29:32.973 --> 00:29:34.575
我們發現這對用戶很有用

00:29:34.641 --> 00:29:36.343
他們能做出更加正確的選擇

00:29:36.410 --> 00:29:39.680
如果他們理解位置信息被使用的原因

00:29:41.682 --> 00:29:46.253
所以在iOS 10中我們把這項服務
延伸到了所有類型的受保護數據

00:29:47.654 --> 00:29:51.024
當你的應用程序試圖訪問
任一保護類數據

00:29:51.091 --> 00:29:52.993
你需要在plist裏提前聲明

00:29:53.060 --> 00:29:57.130
並附帶明確的使用原因

00:29:58.432 --> 00:30:00.567
讓我們看一看這個列表

00:30:01.435 --> 00:30:04.771
回想一下我的應用有沒有使用到
這裏的任意一類數據？

00:30:05.739 --> 00:30:07.774
都有誰的應用使用到了一種數據？

00:30:08.141 --> 00:30:10.010
好的 兩類或者三類的呢？

00:30:11.144 --> 00:30:13.547
好的 你將需要提前聲明

00:30:13.614 --> 00:30:15.649
在應用的info plist裏面

00:30:15.916 --> 00:30:19.520
如果你是tvOS開發者
這四類受保護數據

00:30:19.586 --> 00:30:21.688
可以在tvOS上被申請訪問了

00:30:21.755 --> 00:30:25.425
你也需在應用info plist上
提前聲明

00:30:25.993 --> 00:30:30.631
現在 我將快速介紹
目的字符串裏的

00:30:30.764 --> 00:30:33.567
關鍵值和關鍵名
它們需在應用info plist裏提前聲明

00:30:33.834 --> 00:30:35.602
你們不需要現在就把它們記下來

00:30:35.669 --> 00:30:39.139
它們會在開發文檔和
Xcode上開放給大家

00:30:42.042 --> 00:30:46.079
我們來假設
你想編寫一個迪斯科燈光的應用

00:30:46.813 --> 00:30:49.550
用戶第一次下載後

00:30:49.616 --> 00:30:52.886
會瀏覽不同的特性 瞭解其功能

00:30:53.053 --> 00:30:56.757
當他們添加第一個迪斯科燈的時候

00:30:56.823 --> 00:31:00.861
你的應用會請求
HomeKit的訪問權限

00:31:02.196 --> 00:31:05.199
當時間和情境都正確的時候

00:31:05.265 --> 00:31:07.434
用戶看到同意警報
出現在屏幕上

00:31:07.701 --> 00:31:10.337
此時此刻 你將需要給用戶展示一條

00:31:10.404 --> 00:31:13.073
目的清晰 意義明確的目的字符串
在同意警報裏面

00:31:15.242 --> 00:31:17.244
我將給你展示 如何簡單地

00:31:17.311 --> 00:31:18.912
使用Xcode添加
目的字符串

00:31:20.814 --> 00:31:22.950
去到應用的target選項

00:31:23.717 --> 00:31:25.118
Info部分

00:31:26.019 --> 00:31:28.989
自定義iOS目標屬性

00:31:29.857 --> 00:31:31.124
添加新鍵

00:31:31.625 --> 00:31:33.393
在這個例子中我們選擇

00:31:33.794 --> 00:31:36.296
隱私HomeKit使用描述

00:31:38.665 --> 00:31:41.668
輸入一條意義明確的
目的字符串

00:31:41.735 --> 00:31:42.903
讓我們輸入...

00:31:42.970 --> 00:31:45.939
這將允許你使用HomeKit
來添加迪斯科燈光

00:31:47.007 --> 00:31:49.243
時間和情境都正確

00:31:49.576 --> 00:31:52.379
用戶知道爲什麼我們需要
HomeKit的使用權限

00:31:52.446 --> 00:31:55.449
他們更可能做出對於他們而言正確的選擇

00:31:56.316 --> 00:31:58.085
如果你不提前聲明

00:31:58.151 --> 00:32:00.821
你的應用會怎樣呢？

00:32:02.189 --> 00:32:03.757
你的應用程序會崩潰

00:32:04.625 --> 00:32:06.493
因此 爲了保護隱私安全

00:32:06.994 --> 00:32:09.963
任何爲iOS 10或其以上版本
開發的應用

00:32:10.697 --> 00:32:14.134
在請求某類數據的訪問權限之前

00:32:14.201 --> 00:32:17.771
必須先在info plist裏
提前聲明

00:32:18.505 --> 00:32:21.241
如果不這樣做
應用程序將會自動退出

00:32:21.475 --> 00:32:24.111
你的用戶會看到應用程序自動關閉

00:32:24.444 --> 00:32:27.681
在Xcode你能看到這樣的報錯

00:32:28.148 --> 00:32:31.485
它將指出應用請求訪問
數據的具體類型

00:32:31.552 --> 00:32:33.720
及你要在info plist裏
添加的具體key

00:32:34.555 --> 00:32:36.523
我們讓你的應用崩潰的原因

00:32:36.590 --> 00:32:39.126
是爲了防止你的應用被攻破時

00:32:39.393 --> 00:32:43.397
第三方訪問你沒有
請求過權限的保護數據

00:32:43.730 --> 00:32:46.233
我們不希望你的應用

00:32:46.300 --> 00:32:48.202
訪問任何未授權的保護數據

00:32:49.536 --> 00:32:52.206
請記住 你必須爲應用裏的

00:32:52.272 --> 00:32:55.275
所有用到的第三方庫負責

00:32:55.442 --> 00:32:57.945
當你選擇這些第三方庫時

00:32:58.345 --> 00:33:00.614
請保證它不侵犯用戶隱私

00:33:02.115 --> 00:33:03.984
所以這一切對你都意味着什麼呢？

00:33:05.085 --> 00:33:08.822
在iOS 10和tvOS中
有一些強大的新特性

00:33:09.790 --> 00:33:11.692
他們都擁有隱私設置

00:33:12.326 --> 00:33:13.894
你需要提前聲明

00:33:13.961 --> 00:33:16.730
請求讀取受保護數據

00:33:16.797 --> 00:33:18.732
在應用的info plist裏

00:33:19.199 --> 00:33:21.401
擁有一個清晰並明確的
目的字符串 

00:33:21.468 --> 00:33:23.937
將會幫助用戶做出更好的決定

00:33:25.138 --> 00:33:27.007
除了這些強大的新功能

00:33:27.074 --> 00:33:31.278
我們對現有的框架也做了一些更改

00:33:31.345 --> 00:33:34.615
來幫助你從頭打造應用的隱私保護

00:33:36.149 --> 00:33:38.685
首先 我想介紹一下
pasteboard的更改

00:33:40.787 --> 00:33:44.424
現你可設定一個過期時限
和localOnly變量

00:33:44.558 --> 00:33:46.527
給每個pasteboard上的條目

00:33:47.961 --> 00:33:50.130
設置過期時限

00:33:50.197 --> 00:33:52.533
會讓pasteboard上的
信息條目

00:33:52.733 --> 00:33:54.735
在超過期限那天被移除

00:33:55.903 --> 00:33:57.771
而設定localOnly爲真

00:33:57.838 --> 00:34:00.474
將會使相應的信息條目
從全局剪切板中被移除

00:34:01.675 --> 00:34:03.177
現在來看個例子

00:34:04.444 --> 00:34:06.380
這個例子中
我們有一個UIImage

00:34:06.780 --> 00:34:08.315
將把它放進pasteboard中

00:34:08.382 --> 00:34:10.083
和它一起的還有一條字符串
“Hello, world.”

00:34:12.652 --> 00:34:16.255
我們將會把過期時限
設置爲120秒後

00:34:17.324 --> 00:34:19.760
並且我們將把localOnly值
設置爲真

00:34:19.927 --> 00:34:22.262
所以 兩分鐘後這些信息

00:34:22.329 --> 00:34:23.664
將不會在pasteboard中
被找到

00:34:23.764 --> 00:34:28.302
並且這些信息也不能
從全局剪切板中被複制

00:34:29.536 --> 00:34:31.371
爲什麼要這麼做呢

00:34:31.438 --> 00:34:32.873
你需要了解一個事實

00:34:33.106 --> 00:34:35.509
當用戶在複製一些十分敏感的信息時

00:34:35.576 --> 00:34:40.013
比如說密碼 電話號碼 或者郵箱地址

00:34:40.112 --> 00:34:42.916
它們不應該長時間存在於剪切板上

00:34:42.983 --> 00:34:44.751
那麼就設定過期時限

00:34:45.418 --> 00:34:47.754
如果你覺得這些複製的信息

00:34:47.821 --> 00:34:49.556
不應該被用在全局剪切板上

00:34:50.157 --> 00:34:51.757
就設定localOnly爲真

00:34:53.893 --> 00:34:56.230
我們也對pasteboard
做了一些更改

00:34:56.463 --> 00:35:00.234
首先 所有已經被命名的剪切板
會被默認更改爲非持久的

00:35:00.634 --> 00:35:03.070
將剪切板設爲“持久”

00:35:03.270 --> 00:35:05.105
將會觸發一個棄用警告

00:35:05.973 --> 00:35:07.007
此外

00:35:07.074 --> 00:35:09.343
調用
Find pasteboard函數

00:35:09.409 --> 00:35:11.445
將會得到一個空白對象

00:35:12.746 --> 00:35:14.147
我們強烈推薦大家使用

00:35:14.214 --> 00:35:16.850
shared containers
而非pasteboard

00:35:16.917 --> 00:35:19.253
當你想在同一設備的不同應用中

00:35:19.319 --> 00:35:22.022
共享信息的時候

00:35:22.356 --> 00:35:23.891
這將會是更安全的做法

00:35:23.957 --> 00:35:25.826
相對於pasteboard來說

00:35:27.561 --> 00:35:30.397
我相信你們的應用程序很多都集成了
Core Spotlight框架

00:35:30.464 --> 00:35:33.166
所以這裏還有幾點需要大家注意

00:35:33.233 --> 00:35:35.936
尤其在集成Core
Spotlight框架過程中

00:35:36.270 --> 00:35:38.772
首先需要確保
用戶的每一個點擊動作

00:35:38.839 --> 00:35:40.908
不會導致
NSUserActivity被觸發

00:35:41.341 --> 00:35:43.544
你絕不會想讓你的系統呈現出

00:35:43.610 --> 00:35:45.512
一系列的用戶並不明白的事件

00:35:45.579 --> 00:35:48.749
相反的 只觸發那些真正有意義的
並且用戶會回去再看的事件

00:35:50.250 --> 00:35:53.520
並且 當用戶數據十分敏感時

00:35:53.720 --> 00:35:56.123
不要設定eligibleFor
PublicIndexing爲真

00:35:59.560 --> 00:36:03.330
你肯定還知道 在iOS 10中
我們新支持的微件

00:36:03.931 --> 00:36:05.465
當用戶開啓一個微件時

00:36:05.799 --> 00:36:09.436
它會在主頁面和鎖屏頁面同時顯示

00:36:10.170 --> 00:36:13.607
正是因爲這樣 我想推薦一些最佳做法

00:36:13.674 --> 00:36:16.143
來提醒你們
在創建自己的微件時

00:36:16.210 --> 00:36:19.146
謹記它們也在會顯示在鎖屏界面

00:36:19.646 --> 00:36:22.115
首先你需要評估

00:36:22.182 --> 00:36:24.251
那些將被放入微件
的數據敏感性

00:36:24.351 --> 00:36:27.254
若你覺得這些數據不適合出現在鎖屏上

00:36:27.621 --> 00:36:30.490
那就不要放入微件
或者想辦法

00:36:30.724 --> 00:36:32.092
不讓它出現在鎖屏上

00:36:33.293 --> 00:36:35.829
確保這些數據是連貫的並且可預測的

00:36:36.163 --> 00:36:37.831
當我今天開啓你的微件

00:36:38.632 --> 00:36:40.801
我明天是不是還能看到類似的內容？

00:36:41.368 --> 00:36:43.103
一個月過後呢？

00:36:44.805 --> 00:36:47.007
每天呈現不同的數據其實是可行的

00:36:47.074 --> 00:36:50.110
不過我需要了解什麼類型的
數據適合展示在那裏

00:36:51.011 --> 00:36:54.147
並且請記住那些屬性爲
FileProtectionType.complete的數據

00:36:54.314 --> 00:36:56.250
不能在鎖屏時出現

00:36:58.118 --> 00:37:00.554
接下來讓我展示一個實例

00:37:00.621 --> 00:37:02.523
一個查看好友位置的微件

00:37:02.956 --> 00:37:05.826
在鎖屏的時候 位置信息是不可用的

00:37:05.926 --> 00:37:08.929
因爲我們知道你朋友們的
位置信息是極其敏感的

00:37:08.996 --> 00:37:11.198
它們不應該出在鎖屏界面

00:37:11.465 --> 00:37:14.401
因此我們顯示了一條提醒
解鎖以查看位置信息

00:37:14.701 --> 00:37:16.403
並且位置信息並不在其中

00:37:16.637 --> 00:37:20.507
當我用touch ID去解鎖設備時
位置信息纔可見

00:37:21.909 --> 00:37:23.510
我們推薦這種做法

00:37:23.577 --> 00:37:26.847
尤其當你覺得微件的信息
很敏感時

00:37:31.185 --> 00:37:34.388
今天 Julien和我介紹了
很多方面的內容

00:37:35.022 --> 00:37:37.257
一開始 我們介紹了標識符

00:37:37.524 --> 00:37:40.160
它是進行用戶識別的最根本依據

00:37:40.394 --> 00:37:41.528
在應用程序中

00:37:41.595 --> 00:37:43.997
並且你應該更多地使用短期標識符

00:37:44.064 --> 00:37:46.133
和系統API提供的標識符

00:37:47.134 --> 00:37:50.237
然後我們介紹了

00:37:50.304 --> 00:37:52.472
當你在收集用戶數據的時候

00:37:52.806 --> 00:37:56.510
你應該通過一種更尊重隱私的方式
比如分級收集或者採樣收集

00:37:56.777 --> 00:37:59.446
或者應用新的技術
比如差分隱私

00:38:00.848 --> 00:38:04.218
給用戶提供更高的透明度
以及更多的控制權

00:38:04.284 --> 00:38:06.920
來管理標識符和數據的分享

00:38:06.987 --> 00:38:10.257
你將取得他們的信任
並鼓勵他們放心使用你的應用

00:38:12.359 --> 00:38:15.762
當你讓用戶決定
自己的隱私設置的時候

00:38:15.829 --> 00:38:19.867
這會促使他們作出
對自己更有利的決定

00:38:20.901 --> 00:38:22.903
我們還展示了一些特別棒的新特性

00:38:22.970 --> 00:38:25.005
及一些非常棒的工具
幫助你爲自己應用

00:38:25.072 --> 00:38:27.341
從頭打造隱私保護

00:38:28.742 --> 00:38:31.645
想要了解更多的詳情
請瀏覽這個網址

00:38:32.613 --> 00:38:35.682
這裏還有一些本週相關演講
你也許會感興趣

00:38:35.849 --> 00:38:36.717
謝謝