00:00:19.386 --> 00:00:21.822 
在StoreKit中利用Swift 3
進行In-App Purchase

00:00:21.889 --> 00:00:22.756 
大家好

00:00:29.229 --> 00:00:30.631 
我是Dana DuBois

00:00:30.697 --> 00:00:33.500 
在基礎框架團隊擔任技術經理

00:00:33.567 --> 00:00:37.137 
在iOS和tvOS上框架可以
幫助App Store更好發揮作用

00:00:37.204 --> 00:00:40.741 
今天我們要談論的是衆多框架中的一個

00:00:41.175 --> 00:00:42.309 
它是StoreKit

00:00:44.011 --> 00:00:46.914 
你們當中許多人知道
StoreKit已經存在了很長時間

00:00:46.980 --> 00:00:49.816 
它是在iPhone的iOS 3
系統中被引入的

00:00:50.117 --> 00:00:53.187 
從那時起到現在
它已經被成千上萬的應用使用

00:00:53.253 --> 00:00:55.589 
來實現各式各樣的商業模型

00:00:55.722 --> 00:01:00.627 
報紙 雜誌 遊戲

00:01:01.061 --> 00:01:03.163 
甚至約會應用都使用StoreKit

00:01:03.230 --> 00:01:05.065 
它實實在在的被廣泛使用着

00:01:05.465 --> 00:01:09.870 
關於StoreKit我們在
WWDC 上已經談論了很多

00:01:10.437 --> 00:01:12.506 
今年我們將要做一些新的東西

00:01:12.573 --> 00:01:14.675 
我們談論它在Swift上的使用

00:01:14.741 --> 00:01:17.010 
聽上去令人興奮
我們有些新應用接口可使用

00:01:17.878 --> 00:01:21.315 
多了一些新的東西
那就是Swift API

00:01:21.381 --> 00:01:22.482 
那真是太棒了

00:01:22.916 --> 00:01:24.918 
在上週 你們中的許多人
或許已經聽說了

00:01:24.985 --> 00:01:27.888 
圍繞着程序訂閱我們發佈了
一些重要的通知

00:01:27.955 --> 00:01:30.490 
這同樣也令我們興奮

00:01:30.691 --> 00:01:34.094 
我想很多開發者最終會去

00:01:34.161 --> 00:01:37.297 
使用程序訂閱的增強特性

00:01:37.531 --> 00:01:39.433 
我將給你們大體介紹下它的新特性

00:01:40.767 --> 00:01:43.303 
首先 分類

00:01:43.670 --> 00:01:46.240 
我們十分興奮的宣佈

00:01:46.306 --> 00:01:49.576 
分類將不再影響你選擇

00:01:49.643 --> 00:01:52.479 
去使用自動更新訂閱在你的應用中

00:01:53.213 --> 00:01:56.016 
但標準仍將存在

00:01:56.083 --> 00:01:58.619 
指導你如何使用自動更新訂閱

00:01:58.685 --> 00:02:01.021 
但分類將不會再是一個重要的影響因素

00:02:02.322 --> 00:02:05.092 
其次 每個人都會感到興奮

00:02:05.158 --> 00:02:07.728 
就是我們會把更多的收益給開發者

00:02:08.228 --> 00:02:12.232 
假如你保持你的訂閱用戶
使用一年以上 那是極好的

00:02:12.733 --> 00:02:14.468 
我想那將是一大單生意

00:02:19.540 --> 00:02:20.541 
定價

00:02:20.607 --> 00:02:23.143 
我們將更多的控制權給開發者

00:02:23.210 --> 00:02:26.180 
開發者通過iTunes
Connect來設置定價

00:02:26.246 --> 00:02:30.817 
基於領土之間 國家之間
爲他們的程序訂閱

00:02:31.084 --> 00:02:34.388 
如果由於商業原因
你需要調整在歐洲的定價

00:02:34.454 --> 00:02:38.292 
相比於美國來說
相對於過去現在你有了更多的權限

00:02:39.426 --> 00:02:42.329 
隨着定價的改變 我們將給你能力

00:02:42.396 --> 00:02:47.034 
來保存價格 爲部分用戶保留價格

00:02:47.100 --> 00:02:49.002 
那些已經使用了你程序訂閱的用戶

00:02:49.069 --> 00:02:50.938 
僅爲新的用戶調整價格

00:02:51.004 --> 00:02:54.007 
假如你想獎勵早期的使用者

00:02:54.074 --> 00:02:56.143 
你想讓他們繼續使用你的程序訂閱

00:02:56.210 --> 00:02:58.912 
但是你想爲新的用戶調整定價

00:02:58.979 --> 00:03:00.280 
現在你有這樣的權利了

00:03:01.248 --> 00:03:03.584 
隨之而來的是程序的升級和降級

00:03:03.650 --> 00:03:07.287 
這也是我們給與用戶更多的權利...

00:03:07.921 --> 00:03:11.391 
準確的說用戶可以在
你的服務中選擇想要的級別

00:03:11.458 --> 00:03:14.027 
假如用戶想升級到白金級

00:03:14.094 --> 00:03:16.296 
或者是回到普通級別

00:03:16.363 --> 00:03:19.266 
他們可以通過管理訂閱界面
來進行升級或者降級

00:03:19.333 --> 00:03:20.601 
在他們的設備上

00:03:22.169 --> 00:03:25.472  
以上就是程序訂閱新特性的大體介紹

00:03:25.906 --> 00:03:27.207  
更多關於程序訂閱的內容

00:03:27.274 --> 00:03:30.410  
如果你想將程序訂閱集成到你的應用中

00:03:30.477 --> 00:03:33.380 
你真的應當去 擴展訂閱的介紹

00:03:33.447 --> 00:03:34.481 
在iTunes Connect

00:03:34.715 --> 00:03:36.717 
今天下午四點
在Pacific Heights

00:03:37.651 --> 00:03:41.421 
他們將深入介紹
如何將程序訂閱集成到你的應用中

00:03:41.488 --> 00:03:43.557 
如何在你的應用中去管理你的程序訂閱

00:03:43.624 --> 00:03:45.592 
我極力推薦你們去參加那個活動

00:03:47.294 --> 00:03:48.629 
這就是程序訂閱

00:03:48.695 --> 00:03:51.665 
我要興奮地通知大家
除此外 還有新東西

00:03:51.999 --> 00:03:53.667 
那就是iMessage應用

00:03:54.001 --> 00:03:56.236 
我們在昨天的主題會中已經展示了

00:03:56.803 --> 00:03:59.006 
我們將帶給大家一個全新類別的應用

00:03:59.072 --> 00:04:01.942 
在iMessage應用和iMessage中

00:04:02.209 --> 00:04:05.546 
你將可以構建自定義的擴展

00:04:06.046 --> 00:04:10.717 
我們將在這些擴展中
允許In-App Purchase

00:04:10.784 --> 00:04:14.922 
在iMessage應用可以使用
同StoreKit幾乎一樣的API

00:04:14.988 --> 00:04:18.325 
你今天或許使用着
你在應用商店下載的普通應用

00:04:18.591 --> 00:04:21.161 
假如你有額外的內容發佈到市場

00:04:21.528 --> 00:04:24.665 
或者在iMessage中讓用戶體驗

00:04:25.365 --> 00:04:26.567 
現在我們支持它們了

00:04:26.967 --> 00:04:28.902 
這些特性將在iOS 10可以使用

00:04:28.969 --> 00:04:30.604 
我們爲這些特性感到興奮

00:04:30.671 --> 00:04:33.607 
我想開發者們將會很好利用這些新特性

00:04:35.409 --> 00:04:38.712 
就像我之前說過的
StoreKit已經存在一段時間

00:04:38.779 --> 00:04:41.548 
人們已長時間使用
In-App Purchase

00:04:41.615 --> 00:04:43.217 
但對在座的一些人
它是新的東西

00:04:43.283 --> 00:04:47.521 
我將簡單的介紹
何謂In-App Purchase

00:04:47.821 --> 00:04:51.124 
In-App Purchase
是數字內容或者服務

00:04:51.525 --> 00:04:53.827 
可以在你的應用中進行購買

00:04:54.528 --> 00:04:57.164 
然而 要清楚 它不是實體的商品

00:04:57.231 --> 00:04:58.699 
還有其他方法進行購買

00:04:58.765 --> 00:05:01.969 
這僅僅只是關於數字內容和服務

00:05:03.604 --> 00:05:06.006 
當我們談論數字內容和服務時

00:05:06.073 --> 00:05:07.241 
還有一大堆其他不同的類型

00:05:07.307 --> 00:05:09.009 
當使用iTunes Connect
對它進行配置的時候

00:05:09.076 --> 00:05:11.678 
有許多的選項需要你去確認

00:05:11.745 --> 00:05:15.482 
你需要選擇適合你內容的類型

00:05:15.883 --> 00:05:17.818 
讓我們來看下
我們談論的東西是什麼

00:05:18.585 --> 00:05:20.153 
可以消費的商品

00:05:20.521 --> 00:05:23.690 
人們在玩某個遊戲時
都有一定數量的金幣

00:05:23.757 --> 00:05:26.293 
流通的貨幣 或者在疾馳汽車裏的汽油

00:05:26.360 --> 00:05:28.929 
或者是用戶想要購買的一些東西

00:05:28.996 --> 00:05:32.199 
買一次 又買一次 用光剩餘的時間

00:05:32.266 --> 00:05:34.268 
這就是可以被購買的商品

00:05:35.402 --> 00:05:39.406 
不可以被消耗的產品是一成不變的

00:05:39.473 --> 00:05:42.075 
它始終一成不變 只要用戶想使用它

00:05:42.142 --> 00:05:43.510 
用戶們能恢復它

00:05:43.577 --> 00:05:47.981 
它可以在設備之間傳輸

00:05:48.048 --> 00:05:49.850 
這是可消費和
不可消費產品間的細小區別

00:05:49.917 --> 00:05:52.286 
同樣在一個遊戲中你有一把劍

00:05:52.352 --> 00:05:55.956 
或者你有一些類型的武器
再或者你駕駛一輛疾馳的汽車

00:05:56.023 --> 00:05:58.759 
或者等級
又或者你有一個實用的應用

00:05:58.825 --> 00:06:01.161 
你的應用或許有一個基礎版本

00:06:01.228 --> 00:06:03.864 
你或許想推出一個高級版本的應用

00:06:03.931 --> 00:06:06.667 
那就是一類不可消費的產品

00:06:08.068 --> 00:06:11.672 
當我們談論程序訂閱時
我們也有兩種類型的訂閱

00:06:11.738 --> 00:06:13.807 
有一種不能自動更新的訂閱

00:06:14.474 --> 00:06:16.543 
像它的名字那樣

00:06:16.610 --> 00:06:19.713 
它不會自動更新
它的更新取決於你和你的應用

00:06:19.780 --> 00:06:23.851 
你的後端來管理如何去更新訂閱

00:06:24.618 --> 00:06:27.454 
我們也有自動更新訂閱

00:06:27.521 --> 00:06:31.592 
這些程序訂閱的使用者
會週期性的付款給Apple

00:06:31.658 --> 00:06:34.361 
這些都基於你在後臺的配置

00:06:34.428 --> 00:06:36.029 
假如它是每月的程序訂閱

00:06:36.496 --> 00:06:38.198 
每個月我們會給用戶出賬單

00:06:38.265 --> 00:06:40.767 
只要他們一直選擇使用程序訂閱

00:06:42.970 --> 00:06:44.371 
以上就是訂閱的類型

00:06:45.239 --> 00:06:49.009 
讓我們將In-App Purchase加入到你的應用的核心部分

00:06:51.478 --> 00:06:54.214 
我們將要快速瀏覽

00:06:54.281 --> 00:06:57.251 
這些種類中的所有步驟
再深入瞭解其中的每一步

00:06:57.317 --> 00:07:00.087 
接下來我們將談論的是
如何在Swift中使用它

00:07:00.721 --> 00:07:05.092 
你清楚的知道你需要去擔心什麼

00:07:05.459 --> 00:07:07.561 
或者你曾經碰到的問題

00:07:07.628 --> 00:07:10.764 
太多的事情有時會讓我們感到厭煩

00:07:10.831 --> 00:07:13.066 
當你在開發中解決
StoreKit的問題時

00:07:13.600 --> 00:07:15.102 
一些事情需牢記

00:07:15.169 --> 00:07:16.670 
首先...

00:07:18.071 --> 00:07:21.508 
你需要準確瞭解你出售給用戶的是什麼

00:07:21.575 --> 00:07:24.111 
對於消費者就是使用你應用的用戶

00:07:24.178 --> 00:07:28.015 
需要做的僅僅是辨識出這個標識

00:07:28.081 --> 00:07:31.285 
這些你將發佈到應用內的標識

00:07:31.351 --> 00:07:32.619 
將立即展示給用戶

00:07:33.353 --> 00:07:36.623 
一旦你擁有了這些標識
你可以前往App Store

00:07:36.990 --> 00:07:38.792 
獲取到這些信息

00:07:39.092 --> 00:07:43.597 
本地化和標識相關的產品信息

00:07:43.664 --> 00:07:45.999 
確定本地化的信息很重要

00:07:46.066 --> 00:07:48.802 
App Store是全球化的
應用市場 你需要確保

00:07:48.869 --> 00:07:55.509 
你展示給用戶的是本地化處理後的信息

00:07:57.077 --> 00:08:01.415 
一旦你有了這些信息
你就可以展示你的產品

00:08:01.481 --> 00:08:03.050 
你可以去App Store
發佈他們出售你的產品

00:08:03.116 --> 00:08:05.519 
你的應用你做主

00:08:05.586 --> 00:08:09.089 
你可以構建優質的UI展示它們

00:08:09.890 --> 00:08:12.693 
用戶會被它們吸引 然後去購買

00:08:12.759 --> 00:08:16.163 
它們將會被出售 用戶會去挑選產品

00:08:16.230 --> 00:08:17.097 
立即看到產品

00:08:17.431 --> 00:08:21.502 
但是你需要爲你的產品創建支付

00:08:21.568 --> 00:08:23.103 
並且把它加入到了支付隊列

00:08:23.170 --> 00:08:25.873 
接下來我們談論的內容
會有許多關於支付隊列

00:08:27.574 --> 00:08:29.877 
當支付的訂單通過支付隊列時

00:08:29.943 --> 00:08:32.513 
關於交易的通知會被推送到你的應用

00:08:32.578 --> 00:08:35.015 
推送到達時你必須做出必要的響應

00:08:35.582 --> 00:08:38.184 
就是你將如何處理這些交易

00:08:39.052 --> 00:08:41.154 
最後 當支付完成後

00:08:41.221 --> 00:08:43.090 
你需要確保應用是可以正常使用

00:08:43.155 --> 00:08:44.958 
告知用戶它們支付了什麼

00:08:45.025 --> 00:08:48.795 
最後通知支付隊列
你已經處理了這筆交易

00:08:48.862 --> 00:08:51.431 
處理完所有的事情 產品是可用的

00:08:51.498 --> 00:08:53.267 
這樣這筆交易就完成了

00:08:54.401 --> 00:08:56.703 
這就是你需要採取的不同步驟如此迅速

00:08:56.770 --> 00:08:59.339 
我們將深入瞭解我們提到的每一步

00:08:59.406 --> 00:09:02.309 
需要特別注意的是支付隊列

00:09:03.277 --> 00:09:05.112 
支付隊列是應用內購買的核心

00:09:05.179 --> 00:09:07.247 
In-App Purchase
購買中

00:09:07.848 --> 00:09:12.186 
對於支付和購買的狀態來說
支付隊列是它們的來源

00:09:12.252 --> 00:09:14.521 
由於它們貫穿支付過程的始終

00:09:14.588 --> 00:09:18.125 
從用戶選擇商品到完成支付

00:09:19.126 --> 00:09:20.894 
需要注意

00:09:20.961 --> 00:09:23.830 
你應當依靠隊列並且只能依靠隊列

00:09:24.531 --> 00:09:29.102 
並且需要了解交易的過程 支付的狀態

00:09:29.536 --> 00:09:32.239 
假如你使用主機去下載

00:09:32.306 --> 00:09:34.908 
支付隊列將會告訴你所有的這些下載

00:09:39.446 --> 00:09:41.748 
另一個需要注意的是

00:09:42.349 --> 00:09:44.651 
如果支付隊列告訴你有一筆支付

00:09:45.085 --> 00:09:46.820 
它就是有效和真實的支付

00:09:47.454 --> 00:09:50.657 
在實際過程中 我們看到過一些案例

00:09:50.724 --> 00:09:53.794 
開發者有可能自己做了緩存

00:09:54.294 --> 00:09:57.798 
開發者會知道用戶點擊了產品

00:09:57.865 --> 00:10:00.067 
開發者管理着支付的各種狀態

00:10:00.400 --> 00:10:03.704 
然而這些應用有可能會崩潰
或者會發生其它事情

00:10:03.770 --> 00:10:06.707 
用戶將會在完成支付前關閉應用

00:10:06.773 --> 00:10:09.543 
用戶們將會回到遊戲或者其他地方

00:10:09.610 --> 00:10:11.478 
他們進行支付的頁面

00:10:11.812 --> 00:10:14.448 
開發者沒有必要關注這些響應

00:10:14.515 --> 00:10:15.916 
來自於支付隊列

00:10:15.983 --> 00:10:18.352 
因爲它們沒有監聽這些交易的支付

00:10:18.418 --> 00:10:21.588 
他們自己的隊列沒有支付隊列的狀態

00:10:22.155 --> 00:10:25.158 
因此你真的需要依賴支付隊列

00:10:25.225 --> 00:10:28.662 
來告知你在這些支付的過程中
發生了什麼

00:10:28.896 --> 00:10:30.631 
在實際應用中支付隊列十分重要

00:10:31.832 --> 00:10:33.467 
在這裏我們需要加入一些代碼

00:10:33.534 --> 00:10:37.871 
當你啓動應用時
用來監聽和觀察支付隊列

00:10:38.405 --> 00:10:41.074 
我們可以在這兒的例子中添加代碼

00:10:41.141 --> 00:10:43.010 
我們的didFinishLaunchingWithOptions函數

00:10:43.076 --> 00:10:46.280 
在我們啓動應用的時候會最先被執行

00:10:46.647 --> 00:10:49.650 
我們用它創建監聽支付交易的觀察者

00:10:49.716 --> 00:10:51.585 
在這個例子中它是應用代理本身

00:10:51.752 --> 00:10:54.821 
我們把它設置到了支付隊列上
並且把它加入到支付隊列

00:10:55.088 --> 00:10:58.625 
如果支付隊列有事情發生

00:10:58.692 --> 00:11:00.861 
在我們啓動應用前已經發生

00:11:00.928 --> 00:11:02.729 
我們將立即收到交易的通知

00:11:03.397 --> 00:11:07.401 
另一種被提及的是

00:11:07.467 --> 00:11:10.737 
在In-App Purchase時
使用兌換碼

00:11:10.971 --> 00:11:13.373 
用戶進入到App Store

00:11:13.440 --> 00:11:17.311 
並且在你應用的外部使用兌換碼完成了
In-App Purchase

00:11:17.544 --> 00:11:20.681 
用戶樂於使用In-App
Purchase進行消費

00:11:20.981 --> 00:11:22.749 
然後進入到你的應用中

00:11:22.816 --> 00:11:25.052 
如果你沒有監聽支付隊列

00:11:25.118 --> 00:11:26.954 
產品將不可用

00:11:27.588 --> 00:11:29.690 
在應用啓動的時候你需要監聽支付隊列

00:11:32.025 --> 00:11:33.827 
以上是關於支付隊列的簡記

00:11:34.394 --> 00:11:36.230 
讓我們回到實現流程上來

00:11:36.296 --> 00:11:39.233 
準確理解如何添加支付隊列
到你的應用中

00:11:41.001 --> 00:11:44.505 
首先要做的是加載標識符

00:11:44.571 --> 00:11:46.173 
爲In-App Purchase

00:11:46.807 --> 00:11:50.711 
進行iTunes Connect時
會有相同的標識符

00:11:50.944 --> 00:11:52.980 
你需要定義這些標識符
對他們進行命名

00:11:53.280 --> 00:11:54.915 
開發應用時要獲取標識符的列表

00:11:55.282 --> 00:11:56.517 
有不同的方法來獲取它們

00:11:56.583 --> 00:11:57.951 
如果你的應用十分簡單

00:11:58.385 --> 00:12:01.588 
你或許僅僅需要將這些標識符
複製到你的應用中

00:12:01.655 --> 00:12:06.126 
如果你的應用有基礎版本和高級版本

00:12:06.193 --> 00:12:08.061 
你有可能僅僅有一個可消費的版本

00:12:08.128 --> 00:12:10.364 
你僅僅需要複製標識符到你的應用中

00:12:10.631 --> 00:12:13.800 
然而 我們看到許多應用並沒那樣做

00:12:14.067 --> 00:12:15.903 
它們傾向於在外部

00:12:15.969 --> 00:12:19.506 
並且從他們提供的主機上
獲取應用內標識符

00:12:19.573 --> 00:12:23.410 
以便應用過期後
它們可以改變應用的可用性

00:12:24.378 --> 00:12:26.547 
或者準確地說
可以改變呈現給用戶的內容

00:12:27.414 --> 00:12:29.616 
它們這樣做是沒問題的
完全是符合規定的

00:12:30.150 --> 00:12:32.519 
我們想要說明的是如果你這樣做

00:12:32.586 --> 00:12:36.123 
請確保你的主機具有
穩定性和較高的可伸縮性

00:12:36.190 --> 00:12:39.326 
是In-App Purchase
流程的開始

00:12:39.560 --> 00:12:42.296 
最壞的事情是展示給用戶的價格
需要進行微調

00:12:42.362 --> 00:12:43.964 
當用戶正在等待購買的時候

00:12:44.498 --> 00:12:48.936 
這應該是可能發生的
假如你能提前抓取信息 那是極好的

00:12:49.436 --> 00:12:51.805 
如果你能在設備上緩存
這些信息那就更好了

00:12:51.872 --> 00:12:56.076 
你要清楚的知道如何進行抓取
和保存這些標識信息

00:12:57.845 --> 00:12:59.713 
即然你已經有了這些標識信息

00:12:59.780 --> 00:13:03.951 
你需要去App Store
來抓取產品本地化的信息

00:13:04.017 --> 00:13:05.686 
同產品密切相關的信息

00:13:06.954 --> 00:13:09.590 
你可使用SK產品請求來完成這些操作

00:13:09.890 --> 00:13:12.426 
這樣你就可以拿到你感興趣的標識符

00:13:12.893 --> 00:13:15.195 
爲了獲得更流暢的用戶體驗

00:13:15.262 --> 00:13:16.597 
你需要提前抓取這些標識符

00:13:16.663 --> 00:13:19.366 
你想要知道當用戶有可能感興趣

00:13:19.433 --> 00:13:21.468 
在看到你的
In-App Purchase時

00:13:21.535 --> 00:13:24.438 
你能在第一時間獲得這些信息

00:13:26.073 --> 00:13:28.876 
你首先要做的是創建你的SK產品請求

00:13:28.942 --> 00:13:31.178 
你傳遞你感興趣的標識符

00:13:32.179 --> 00:13:33.080 
你需要設置你的代理

00:13:33.146 --> 00:13:35.415 
它將給你的應用返回信息

00:13:35.482 --> 00:13:38.185 
當這些產品被加載的時候

00:13:39.586 --> 00:13:41.588 
你僅僅是需要調用開始
那是如此的簡單

00:13:44.858 --> 00:13:47.294 
代理看起來像上面那個樣子

00:13:47.694 --> 00:13:50.030 
我們有產品請求
didReceive函數會響應

00:13:50.097 --> 00:13:53.867 
它將傳遞給你從App Store上
下載的所有產品

00:13:54.201 --> 00:13:56.236 
每一個產品將會保留這些信息

00:13:56.303 --> 00:13:58.739 
像本地化的標題和描述

00:13:58.972 --> 00:14:01.375 
像我之前所說的App Store
是面向全球的應用市場

00:14:01.441 --> 00:14:04.645 
你是向全世界發佈
In-App Purchase

00:14:05.045 --> 00:14:06.146 
最好確保

00:14:06.213 --> 00:14:09.349 
你正在使用本地化的信息

00:14:09.583 --> 00:14:11.151 
來進行你的交易

00:14:11.251 --> 00:14:13.353 
比如本地化的標題和描述

00:14:14.555 --> 00:14:17.858 
甚至更重要的是價格和的價格本地化

00:14:18.025 --> 00:14:20.861 
你想提供給用戶
In-App Purchase價格

00:14:20.928 --> 00:14:24.665 
你需要確保呈現給用戶的格式
是他們能理解的

00:14:24.932 --> 00:14:29.236 
在全世界流通的貨幣
呈現的方式是不同的

00:14:29.837 --> 00:14:33.640 
你要知道正確展示價格的重要

00:14:34.074 --> 00:14:35.776 
我們將會講到這些

00:14:37.044 --> 00:14:40.681 
最後你拿到你的
In-App Purchase內容

00:14:40.747 --> 00:14:43.317 
啓動iTunes Connect時
這些事會發生

00:14:43.383 --> 00:14:47.221 
我們會給出下載時長的信息

00:14:47.287 --> 00:14:50.157 
和購買相關的版本信息

00:14:50.557 --> 00:14:52.426 
就像我提到的定價
該信息也很重要

00:14:52.492 --> 00:14:58.599 
當你呈現這些價格的字符時
要做出正確的選擇

00:14:58.932 --> 00:15:02.569 
當你呈現這些價格的時候
你想要使用換算到本地的價格

00:15:02.636 --> 00:15:05.105 
將它轉換到NS的數字格式

00:15:05.639 --> 00:15:08.609 
你將獲得關於定價的相關信息

00:15:08.842 --> 00:15:12.079 
那個NS的數字格式
將會帶有價格的信息

00:15:12.145 --> 00:15:13.814 
對它進行本地化操作

00:15:13.881 --> 00:15:16.550 
假如你對它設置了貨幣格式
你可以確信

00:15:16.617 --> 00:15:18.919 
你獲取的價格信息是正確的

00:15:19.152 --> 00:15:20.320 
你要做的另外一件事情是

00:15:20.387 --> 00:15:24.358 
不要在進行貨幣轉換的時候
進行無關的排序

00:15:24.424 --> 00:15:28.896 
App Store知道如何進行本地化
對貨幣進行轉換

00:15:29.162 --> 00:15:31.131 
所以不要做任何其他無關的操作

00:15:31.431 --> 00:15:34.701 
只要把定價原本的樣子
用NS數字格式呈現出來

00:15:35.269 --> 00:15:37.971 
下一步就是呈現你的UI

00:15:38.172 --> 00:15:40.040 
接着將不會過多談論產品的本地化了

00:15:40.107 --> 00:15:42.342 
你的產品你做主

00:15:42.409 --> 00:15:47.748 
你知道如何呈現你的UI
使你的應用盡可能獲得更高的銷量

00:15:48.749 --> 00:15:51.285 
然而 一旦購買完畢

00:15:52.352 --> 00:15:55.956 
或者一旦UI被顯示 我們將立即跳轉

00:15:56.023 --> 00:15:57.624 
自動完成購買

00:15:57.958 --> 00:16:02.296 
添加並且創建SK支付對象
完成上面的操作

00:16:02.362 --> 00:16:03.964 
並且把它加入到支付隊列當中

00:16:04.765 --> 00:16:08.268 
一旦你創建了SK支付對象
並且添加到支付隊列當中

00:16:09.069 --> 00:16:12.906 
隨着支付的進行你將會獲得一個回調

00:16:12.973 --> 00:16:14.608 
通過它更新交易

00:16:14.675 --> 00:16:17.878 
這就是你剛剛添加的
支付隊列的觀察者回調

00:16:17.945 --> 00:16:19.313 
當應用開始調用的時候

00:16:19.713 --> 00:16:21.748 
你創建了支付隊列的觀察者

00:16:21.815 --> 00:16:24.284 
觀察者會調用支付隊列的
函數來更新交易

00:16:24.351 --> 00:16:27.588 
在支付進行的過程中
你將獲得關於支付的消息

00:16:27.654 --> 00:16:30.624 
你需要做的就是創建你的SK支付對象

00:16:31.291 --> 00:16:32.793 
將創建的對象添加到支付隊列當中

00:16:32.993 --> 00:16:34.962 
消息開始陸續到來

00:16:35.729 --> 00:16:38.866 
你將會獲得關於整個交易過程的信息

00:16:38.932 --> 00:16:40.801 
你可能有一條消息
也許有許多條消息

00:16:41.635 --> 00:16:43.837 
你需要遍歷這些交易

00:16:44.171 --> 00:16:47.841 
並且監聽每筆交易的狀態變化

00:16:47.908 --> 00:16:48.876 
有許多不同的狀態

00:16:48.942 --> 00:16:51.879 
它們之中你最感興趣的是購買的狀態

00:16:51.945 --> 00:16:54.915 
從那兒你可以知道購買完成了

00:16:54.982 --> 00:16:57.484 
繼續去激活購買

00:16:57.551 --> 00:17:01.054 
我們將獲得一小部分數據
使得應用的內容是可用的

00:17:01.889 --> 00:17:04.790 
然而 我想說還有另外一種狀態

00:17:04.858 --> 00:17:07.261 
那就是延遲交易的狀態

00:17:07.928 --> 00:17:14.233 
延遲是在iOS 8中爲了購買前
詢問特性添加進來的

00:17:14.568 --> 00:17:16.803 
這是爲了讓家人共享iCloud

00:17:16.869 --> 00:17:21.441 
家裏的孩子可以去進行購買
例如In-App Purchase

00:17:21.508 --> 00:17:24.310 
孩子們的父母 監護人 擔保人

00:17:24.377 --> 00:17:27.814 
可以決定兒童可不可進行購買

00:17:27.881 --> 00:17:31.752 
延遲的狀態是你在登錄狀態進行
In-App Purchase時

00:17:32.419 --> 00:17:36.790 
延遲狀態需要獲得來自父母的許可

00:17:37.391 --> 00:17:40.994 
我們看到許多這種情況
並且想要將它解釋清楚

00:17:41.061 --> 00:17:44.831 
如果是在延遲狀態你不能阻塞你的UI

00:17:44.898 --> 00:17:47.301 
你應當以某種方式對它進行處理...

00:17:48.902 --> 00:17:50.737 
也許購買最後沒有發生

00:17:50.804 --> 00:17:54.241 
允許孩子們嘗試用你的應用進行購買

00:17:54.541 --> 00:17:58.212 
讓孩子們返回並且繼續可以使用遊戲

00:17:58.278 --> 00:18:00.113 
或者是他們感興趣的任何內容

00:18:00.180 --> 00:18:02.049 
因爲延遲購買會持續一小時或幾天

00:18:02.115 --> 00:18:05.018 
在他們父母審閱和同意這次購買前

00:18:05.085 --> 00:18:07.754 
不要微調 不要彈窗

00:18:08.155 --> 00:18:11.491 
僅僅是像購買從來沒有發生過一樣

00:18:11.558 --> 00:18:13.160 
就像你知道還沒開始一樣

00:18:15.596 --> 00:18:18.498 
一件我也想做的非常重要事情是

00:18:18.565 --> 00:18:21.668 
當你進行In-App Purchase時測試你的應用

00:18:21.735 --> 00:18:24.538 
就像測試你應用的其他功能一樣

00:18:25.072 --> 00:18:27.708 
通過iTunes store
可以實現上面的操作

00:18:27.774 --> 00:18:29.109 
沙盒環境

00:18:29.176 --> 00:18:30.911 
沙盒環境是一個特殊的環境

00:18:31.245 --> 00:18:35.349 
假如你運行的是有開發者簽名的應用

00:18:35.415 --> 00:18:39.086 
你進行的所有購買都會進入沙盒環境

00:18:41.889 --> 00:18:46.627 
然而 假如你對延遲交易的測試感興趣

00:18:46.693 --> 00:18:49.463 
沒有比創建一個家庭賬戶更好的方法

00:18:49.530 --> 00:18:51.999 
這樣你就能在沙盒環境下
測試延遲交易了

00:18:52.466 --> 00:18:55.869 
假如你想在沙盒環境中
測試你的延遲交易

00:18:55.936 --> 00:19:00.073 
你可以使用SimulatesAskToBuyInSandbox

00:19:00.140 --> 00:19:04.211 
你可以在你的SKMutable
支付對象中創建它

00:19:04.578 --> 00:19:06.079 
你傳遞給你的產品

00:19:06.146 --> 00:19:10.017 
然後你設置SimulatesAskToBuySandBox標記

00:19:10.083 --> 00:19:12.920 
這個標記會告訴
App Store 嘿

00:19:13.153 --> 00:19:17.324 
對待這次購買就像家裏
有小朋友在進行購買

00:19:17.958 --> 00:19:20.761 
一旦你將它加入到支付隊列
就會被髮送到App Store

00:19:20.827 --> 00:19:25.199 
然後App Store將會在
你的應用中返回給你延遲的狀態

00:19:25.265 --> 00:19:29.536 
這種方法可以讓你知道
你的應用可以在兒童購買時正常工作

00:19:31.638 --> 00:19:34.274 
我們同樣需要談論一下關於錯誤的處理

00:19:35.142 --> 00:19:36.410 
不是每件事情都正常執行

00:19:36.476 --> 00:19:38.912 
在你的應用中也會出現錯誤的狀態

00:19:39.546 --> 00:19:41.448 
尤其是在
In-App Purchase時

00:19:42.182 --> 00:19:45.886 
你需要牢記的是
不同的錯誤需要不同對待

00:19:46.353 --> 00:19:50.524 
我強烈建議你翻閱In-App
Purchase編程指南

00:19:50.591 --> 00:19:53.327 
或者StoreKit框架參考指南

00:19:53.393 --> 00:19:55.929 
來更好的理解使用中出現的錯誤

00:19:55.996 --> 00:19:58.398 
隨着程序的運行會有相應的返回

00:20:00.033 --> 00:20:03.103 
需要記住的是

00:20:03.170 --> 00:20:07.808 
大多數錯誤是不需要你去通知用戶的

00:20:07.875 --> 00:20:10.444 
許多錯誤是我們通知開發者的

00:20:10.644 --> 00:20:12.212 
讓開發者在應用中進行處理

00:20:12.713 --> 00:20:15.349 
我有過類似的經歷

00:20:15.415 --> 00:20:17.518 
我在使用開發者開發的應用
我隨意瀏覽着

00:20:17.584 --> 00:20:19.119 
我在進行網上購物

00:20:19.353 --> 00:20:20.554 
我點擊了購買

00:20:20.988 --> 00:20:24.491 
確認了價格緊接着
StoreKit的窗口就出現了

00:20:24.558 --> 00:20:27.528 
然後我又改變主意了
我想返回看看其他東西

00:20:27.728 --> 00:20:28.795 
我選擇了取消

00:20:29.329 --> 00:20:30.631 
可是取消發生錯誤

00:20:30.697 --> 00:20:34.501 
取消錯誤確實在你的應用中發生了

00:20:34.835 --> 00:20:38.605 
沒有必要將取消錯誤的警告展示給用戶

00:20:38.972 --> 00:20:41.175 
我們有時會在應用中看到這些錯誤

00:20:41.241 --> 00:20:42.776 
用戶知道他們進行了取消操作

00:20:43.143 --> 00:20:45.312 
沒有必要重複展示給他們

00:20:47.414 --> 00:20:50.350 
儘可能讓StoreKit
處理交易流程

00:20:50.417 --> 00:20:52.019 
再次強調我們將要談論支付隊列

00:20:52.085 --> 00:20:55.889 
支付將會在支付隊列中進行處理

00:20:56.190 --> 00:21:00.994 
App Store和StoreKit
會要求用戶進行購買確認

00:21:01.228 --> 00:21:02.429 
他們將會給出一個價格

00:21:02.896 --> 00:21:05.199 
這個價格需要同你應用內價格進行匹配

00:21:05.265 --> 00:21:06.400 
這就是爲什麼確認本地的價格信息正確

00:21:06.466 --> 00:21:09.336 
是如此重要

00:21:09.670 --> 00:21:11.004 
我們會對用戶進行認證

00:21:11.271 --> 00:21:13.307 
如果賬單信息有任何問題

00:21:13.373 --> 00:21:14.441 
我們需處理賬單問題

00:21:14.908 --> 00:21:18.745 
彈出確認框或者
做其他的特殊操作都是不必要的

00:21:18.812 --> 00:21:21.081 
讓StoreKit爲你處理這些問題

00:21:23.383 --> 00:21:25.719 
我們談論了進入交易隊列前的一小部分

00:21:25.786 --> 00:21:29.289 
我們談論了支付返回的一些狀態

00:21:30.224 --> 00:21:33.126 
一旦你的支付變成了購買的的狀態

00:21:33.193 --> 00:21:36.330 
你需要在你的應用中做出多種選擇

00:21:38.699 --> 00:21:42.769 
特別的 你需要驗證購買的時候

00:21:42.836 --> 00:21:45.072 
可以使用現金進行交易

00:21:46.540 --> 00:21:49.042 
我們有好幾種方法來完成這些購買操作

00:21:49.276 --> 00:21:52.346 
但是再次強調 你的應用
你的產品 你做主

00:21:52.579 --> 00:21:57.150 
你要特別注意你使用什麼技術

00:21:57.217 --> 00:22:02.856 
你用何種安全級別驗證購買的合法性

00:22:06.193 --> 00:22:10.497 
回執的驗證 回執會返回給應用

00:22:10.564 --> 00:22:11.865 
在購買的最後環節

00:22:11.932 --> 00:22:16.570 
回執就像消費者拿到的賬單

00:22:16.637 --> 00:22:20.240 
當你在商場進行購物或者類似的事情

00:22:20.440 --> 00:22:24.011 
回執包含購買的所有信息

00:22:24.077 --> 00:22:25.879 
還有購買的
In-App Purchase

00:22:26.313 --> 00:22:28.315 
有兩種主要的方法

00:22:28.382 --> 00:22:30.684 
你可以進行回執的校驗

00:22:31.151 --> 00:22:33.520 
首先是在設備自身上驗證

00:22:34.988 --> 00:22:36.490 
接下來是回執

00:22:36.557 --> 00:22:39.693 
你可以編寫代碼
將它在設備上分爲幾部分

00:22:39.760 --> 00:22:43.797 
授權來自Apple的回執

00:22:43.864 --> 00:22:47.134 
確認回執的現金來源是有效的

00:22:48.001 --> 00:22:53.073 
做這些是爲了解鎖應用中的一些特性

00:22:53.140 --> 00:22:54.708 
和內容

00:22:54.775 --> 00:22:57.044 
這是你必須選擇的

00:22:57.110 --> 00:23:01.381 
這些購買完全只能在客戶端進行嗎？

00:23:01.915 --> 00:23:04.418 
或者說如果你有服務端

00:23:04.952 --> 00:23:07.821 
你想在服務端做回執的驗證

00:23:07.888 --> 00:23:11.692 
因爲你想讓服務器爲
你的內容和服務提供網關服務

00:23:11.925 --> 00:23:15.863 
爲了完成上面的事情
你需要將發送到設備的回執

00:23:15.929 --> 00:23:19.266 
上傳到你的服務器

00:23:19.333 --> 00:23:21.768 
然後讓服務器發送回執
到App Store

00:23:21.835 --> 00:23:25.105 
有後臺的API可以對回執進行驗證

00:23:26.039 --> 00:23:28.308 
這可以做到從服務器到服務器

00:23:29.643 --> 00:23:33.981 
需要注意的一點是
App Store有後臺API

00:23:34.047 --> 00:23:36.416 
可以接受和驗證回執

00:23:36.483 --> 00:23:41.855 
但是你不能通過你的設備直接發送回執

00:23:42.022 --> 00:23:46.693 
那樣做是不安全的

00:23:46.760 --> 00:23:50.631 
如何保證來自你應用的回執是可信的

00:23:50.998 --> 00:23:54.968 
如果你想驗證回執的有效性

00:23:55.035 --> 00:23:57.304 
回執應當通過你的服務器

00:23:57.604 --> 00:23:59.273 
傳遞到App Store的後臺

00:24:01.909 --> 00:24:04.711 
讓我們來深入瞭解下回執是什麼

00:24:05.612 --> 00:24:09.917 
回執是你在進行In-App
Purchase時得到的可信記錄

00:24:10.517 --> 00:24:13.787 
它包含的信息允許你知道

00:24:13.854 --> 00:24:17.257 
在這個設備上用戶已經購買了應用

00:24:17.591 --> 00:24:21.195 
對開發者而言
是用戶在他們的設備上進行了購買

00:24:22.029 --> 00:24:23.430 
回執存儲在設備上

00:24:23.497 --> 00:24:26.934 
你應用本身的容器中

00:24:28.068 --> 00:24:30.838 
回執由App Store簽發
並且包含一些信息

00:24:30.904 --> 00:24:35.042 
允許你驗證來自
App Store的回執信息

00:24:36.210 --> 00:24:39.379 
這只是針對你的應用和設備來說

00:24:39.646 --> 00:24:42.349 
如果你的應用在不同的設備上運行

00:24:42.416 --> 00:24:45.686 
對於不同的用戶得到的回執也是不同的

00:24:47.955 --> 00:24:51.525 
這樣做是爲讓你知道回執大體的樣子

00:24:52.426 --> 00:24:55.929 
存儲在App Bundle中

00:24:56.363 --> 00:24:57.764 
我們提供應用程序接口
允許你能獲得這些信息

00:24:57.831 --> 00:24:59.833 
過一會兒我們將看到它大體的樣子

00:25:00.901 --> 00:25:02.302 
它是單個文件

00:25:03.270 --> 00:25:05.272 
很早很早以前回執的版本

00:25:05.339 --> 00:25:07.941 
以前每一個In-App
Purchase通常會有多個文件

00:25:08.008 --> 00:25:10.911 
但是自從iOS 7開始
我們有了統一的回執

00:25:10.978 --> 00:25:13.580 
在一個文件中包含了所有的信息

00:25:14.147 --> 00:25:17.851 
它裏邊也包含了證書和簽名信息

00:25:17.918 --> 00:25:20.954 
允許你通過這些信息驗證回執

00:25:22.923 --> 00:25:27.094 
我們通過使用公鑰密碼標準

00:25:27.160 --> 00:25:28.462 
7容器來完成上面的操作

00:25:28.662 --> 00:25:31.932 
容器裏邊包含了所有信息

00:25:31.999 --> 00:25:33.734 
容器使用的是開放的標準

00:25:33.800 --> 00:25:36.637 
你有許多可以參考的信息

00:25:36.703 --> 00:25:40.374 
關於如何使用PKCS7標準容器

00:25:41.742 --> 00:25:43.610 
容器進行加載

00:25:43.844 --> 00:25:46.380 
裏麪包含有用的信息

00:25:46.446 --> 00:25:48.048 
是需要你去解析的

00:25:48.248 --> 00:25:53.120 
裏面的編碼是ASN1格式的
也是公開的標準

00:25:55.022 --> 00:25:58.792 
有很多不錯的標準
可以選擇用來做回執的驗證

00:25:58.859 --> 00:26:01.028 
OpenSSL就是其中的一個

00:26:01.662 --> 00:26:03.430 
有時開發者會創建他們自己的標準

00:26:04.231 --> 00:26:06.099 
在這兒我要強調的是

00:26:06.166 --> 00:26:08.802 
這是你的應用 這是你的錢

00:26:09.303 --> 00:26:10.404 
這是你的生意

00:26:10.704 --> 00:26:13.841 
如何更好的驗證回執依賴你做出的選擇

00:26:13.907 --> 00:26:16.143 
你要使用什麼技術

00:26:19.179 --> 00:26:22.349 
然而 不論你選擇什麼
都會有相似的處理過程

00:26:22.416 --> 00:26:23.750 
你在支付過程中會經歷的

00:26:24.318 --> 00:26:27.754 
首先 你需要在你的應用中定位回執

00:26:27.821 --> 00:26:29.690 
使用NS bundle API

00:26:30.424 --> 00:26:32.759 
上面就是它在Swift中的樣子

00:26:32.826 --> 00:26:35.696 
你可通過NS Bundle進行調用

00:26:35.996 --> 00:26:39.233 
App Store回執的URL
會通過上面的函數回傳

00:26:39.299 --> 00:26:42.236 
它是本地的URL 在本地的文件系統

00:26:42.803 --> 00:26:45.472 
一旦你有了URL
你需要把它放入NS數據中

00:26:45.539 --> 00:26:48.375 
你可以獲得二進制形式的回執

00:26:50.844 --> 00:26:54.248 
需要注意
你現在已經加載了二進制文件

00:26:55.082 --> 00:26:58.318 
證書會有過期時間

00:26:58.385 --> 00:26:59.686 
你必須十分小心

00:26:59.753 --> 00:27:01.455 
在覈對過期日期的時候

00:27:02.456 --> 00:27:05.158 
只是因爲它是發行在一定時間內

00:27:05.559 --> 00:27:09.429 
並不意味着那個有效期是有效的

00:27:09.496 --> 00:27:10.964 
在未來所有時間裏

00:27:11.899 --> 00:27:13.667 
所以如果你正檢查有效期

00:27:13.734 --> 00:27:18.939 
比較App Store發行
receipt時間

00:27:19.006 --> 00:27:20.941 
而不是當前日期

00:27:21.275 --> 00:27:24.778 
它不像SSL握手 你每次都想檢查它

00:27:25.112 --> 00:27:28.715 
只有被髮行時 它纔是唯一有效的

00:27:28.782 --> 00:27:31.652 
或者只有被髮行時
這纔是唯一有效的檢查日期

00:27:32.152 --> 00:27:34.655 
或者它是完全有效的根本
不用檢查日期

00:27:35.022 --> 00:27:37.391 
但是你要做的是檢查

00:27:37.457 --> 00:27:40.494 
receipt上的根證書頒佈機構

00:27:41.128 --> 00:27:44.097 
這將驗證它來自Apple

00:27:44.164 --> 00:27:46.934 
你可以相信它 因爲它是
Apple的receipt

00:27:47.701 --> 00:27:49.102 
所以檢查到根

00:27:52.606 --> 00:27:54.508  
所以再次，這只是一種給你一個想法

00:27:54.575 --> 00:27:56.543  
關於receipt內部的情況

00:27:57.244 --> 00:28:00.647  
它的有效負荷 我所說的ASN1格式

00:28:00.714 --> 00:28:01.982  
是一系列的屬性

00:28:02.049 --> 00:28:04.284 
你可以把它當做一本NS字典

00:28:05.185 --> 00:28:06.753 
它包含類型和值

00:28:07.087 --> 00:28:09.690 
還有我們將要標記一些這
些類型和值

00:28:09.756 --> 00:28:12.492 
那裏還有比我們今天討論的更多

00:28:12.559 --> 00:28:14.094 
你可以在線得到很多

00:28:14.161 --> 00:28:16.930 
通過我們的receipt
驗證編程指南

00:28:17.664 --> 00:28:20.968 
但是一些你主要想使用的是

00:28:21.869 --> 00:28:25.706 
類型2和類型3 包括捆綁標識符

00:28:25.772 --> 00:28:28.775 
和receipt的捆綁版本

00:28:29.810 --> 00:28:32.980 
希望這和你的應用程序中的匹配
並且你應該檢查它

00:28:33.914 --> 00:28:37.551 
所以你應該檢查捆綁標識符
和捆綁版本

00:28:37.618 --> 00:28:39.620 
然後要記住的一件事是

00:28:39.686 --> 00:28:44.224 
你應該在你的APP的二進制文件中
使用硬編碼值

00:28:44.725 --> 00:28:48.295 
這是一個更容易讓我進去並
改變信息列表P

00:28:48.662 --> 00:28:51.598 
如果那個是你正在使用去
匹配的假receipt

00:28:51.665 --> 00:28:56.403 
相對於我同改變你程序有
效負荷去匹配receipt

00:28:56.503 --> 00:28:59.139 
所以如果你真的想去確認
那個receipt是

00:28:59.206 --> 00:29:02.376 
爲你的程序的 使用硬編碼值

00:29:04.811 --> 00:29:07.247 
你現知道這receipt是
爲你的應用程序的

00:29:07.314 --> 00:29:09.049 
你想去確認它是爲

00:29:09.116 --> 00:29:11.185 
那些正在運行receipt的設備

00:29:11.652 --> 00:29:12.920 
這是一個小的技巧

00:29:12.986 --> 00:29:17.658 
你要去做的是看一下SHA-1哈希

00:29:17.724 --> 00:29:19.626 
它是在類型5中返回的

00:29:20.460 --> 00:29:22.496 
類型5包括這個哈希

00:29:22.729 --> 00:29:26.333 
哈希是有信息片段組成

00:29:26.400 --> 00:29:28.735 
是App Store在購買時獲取的

00:29:28.969 --> 00:29:32.406 
是你在驗證時獲取的信息片段

00:29:33.106 --> 00:29:35.209 
特別是捆綁的標識

00:29:36.076 --> 00:29:38.412 
所以你想在你的應用中保留硬編碼值

00:29:38.478 --> 00:29:39.680 
你的APP綁定標識

00:29:40.214 --> 00:29:41.682 
設備標識

00:29:42.049 --> 00:29:43.617 
這是一個或多個API用於那個

00:29:43.684 --> 00:29:46.753 
它是在iOS和macOS有些不同

00:29:46.820 --> 00:29:49.423 
但是你要加載這個設備的標識符

00:29:49.957 --> 00:29:51.692 
然後這個不透明的值

00:29:51.758 --> 00:29:55.762 
這個不透明的值是基本上
一點加密熵

00:29:55.829 --> 00:29:58.398 
它是一個包含在
回執裏的加密鹽值

00:29:58.465 --> 00:30:01.969 
它允許哈希隨着時間推移
而改變即使如果綁定標識

00:30:02.035 --> 00:30:04.137 
和設備標識不改變

00:30:04.204 --> 00:30:07.207 
你應該基本上獲取這個在
receipt裏的不透明值

00:30:07.274 --> 00:30:08.942 
把它包括在你的哈希裏

00:30:09.543 --> 00:30:14.214 
一旦你擁有了它 SHA-1哈希
對比它同屬性5

00:30:14.281 --> 00:30:17.184 
如果匹配 你知道它是你的設備

00:30:19.887 --> 00:30:22.956 
對於你的在設備上的APP
是唯一的

00:30:26.293 --> 00:30:31.265 
receipt還包括你的所有
in-app purchases信息

00:30:31.532 --> 00:30:37.237 
所以我們這裏所看到的是全部
遠不止類型17

00:30:37.304 --> 00:30:42.409 
類型17是爲了用戶用你的
應用程序所做的每次購買

00:30:42.476 --> 00:30:45.779 
它包括一條關於
in-app purchase的記錄

00:30:46.346 --> 00:30:48.248 
類型17的有效載荷

00:30:49.116 --> 00:30:53.820 
不是一個字符串 它實際上是
另外一個ASN1文檔

00:30:54.488 --> 00:30:56.957 
它擁有自己的值

00:30:58.292 --> 00:30:59.560 
所以這些看起來像什麼

00:30:59.626 --> 00:31:03.697 
好吧 1701 這是購買的數量

00:31:03.764 --> 00:31:05.866 
所以我們以前討論過消費品

00:31:06.800 --> 00:31:11.538 
用戶能有購買10包硬幣在
你的遊戲裏

00:31:11.605 --> 00:31:12.906 
或者100包硬幣

00:31:13.173 --> 00:31:17.544 
這將是數量 購買的數量

00:31:17.611 --> 00:31:19.913 
這是針對特定的標識符

00:31:21.081 --> 00:31:23.350 
這個產品標識符，我們以前討論過

00:31:23.417 --> 00:31:25.385 
這個是那個標識符你用來

00:31:25.452 --> 00:31:30.190 
從App Store加載你的
in-app purchase數據

00:31:30.257 --> 00:31:32.559 
如你在iTunes Connect
設置的樣子

00:31:33.894 --> 00:31:36.463 
標識符 這是一個交易標識符

00:31:36.530 --> 00:31:38.699 
這是一個對於交易的唯一標識符

00:31:38.765 --> 00:31:40.367 
它被用來購買

00:31:41.935 --> 00:31:43.237 
購買的日期

00:31:44.171 --> 00:31:47.341 
然後最後的一個新事物 不是新的

00:31:47.407 --> 00:31:50.777 
但是一件事我想去強調是我們也包括

00:31:50.844 --> 00:31:52.679 
自動更新訂閱

00:31:52.746 --> 00:31:55.249 
訂閱有效期

00:31:55.749 --> 00:31:58.452 
所以如果你正切換你的應用去訂閱

00:31:58.519 --> 00:32:00.020 
那是對你非常重要的

00:32:00.254 --> 00:32:03.156 
你將會使用這種類型 你將會
使用它去知道

00:32:03.223 --> 00:32:04.992 
訂閱是否有效

00:32:05.058 --> 00:32:11.164 
我們是否需要去讓用戶去或者
你需要去仔細檢查

00:32:11.231 --> 00:32:13.500 
用戶是否在一個有效的訂閱狀態

00:32:13.967 --> 00:32:15.802 
因此領域非常重要

00:32:17.905 --> 00:32:19.106 
然後另外一個注意

00:32:19.306 --> 00:32:22.009 
如果你在Store裏有個應用

00:32:22.476 --> 00:32:24.945 
它是付費的並且你有興趣

00:32:25.012 --> 00:32:27.381 
切換它到一個訂閱模式

00:32:28.081 --> 00:32:31.718 
有一件事你想去確保你檢查
是主要的receipt裏面

00:32:31.785 --> 00:32:34.254 
應用receipt本身是類型19

00:32:34.588 --> 00:32:37.291 
這包括原始應用程序版本

00:32:37.357 --> 00:32:39.059 
是應用買來的版本

00:32:39.693 --> 00:32:43.096 
所以如果我買的它是1.0版本
的付費應用

00:32:43.497 --> 00:32:46.300 
並且在2.0版本你轉至訂閱模式

00:32:46.834 --> 00:32:49.136 
我想看一下程序的原始版本

00:32:50.103 --> 00:32:54.141 
因爲我想確認我把那個用戶
當成付費用戶

00:32:54.208 --> 00:32:57.144 
他們是或者不是一個訂閱用戶

00:32:57.511 --> 00:33:01.849 
我認爲這是一個很差的體驗
如果模式轉換爲訂閱

00:33:01.915 --> 00:33:05.285 
並且你並不尊重他們買原始APP版本

00:33:05.586 --> 00:33:08.755 
所以如果你切換成訂閱模式
記住這些非常重要

00:33:12.092 --> 00:33:13.493 
另外兩個注意關於receipt

00:33:13.560 --> 00:33:16.129 
receipt是在購買時發行的

00:33:18.165 --> 00:33:20.334 
但是它實際上是同樣可以續訂的

00:33:21.068 --> 00:33:24.972 
但只針對in-app
purchase的特定的類型

00:33:25.205 --> 00:33:29.376 
所以當我們討論可消費的
和不可更新的訂閱的時候

00:33:29.877 --> 00:33:33.247 
他們將會在receipt裏被刷新

00:33:34.081 --> 00:33:38.285 
所以可消費和不可續訂的
訂閱只會出現一次

00:33:38.352 --> 00:33:41.154 
他們出現剛好在交易生成之後

00:33:42.122 --> 00:33:43.624 
他們不會出現在那裏

00:33:43.690 --> 00:33:46.860 
當用戶刷新receipt
同樣在該設備上

00:33:46.927 --> 00:33:48.929 
或者當他們切換至另外一個設備

00:33:50.197 --> 00:33:53.967 
但是 不可消費和自動更新的訂閱

00:33:54.034 --> 00:33:56.170 
會一直出現在用戶的receipt裏

00:33:56.737 --> 00:33:58.038 
你可以拿回那些東西

00:33:58.105 --> 00:34:01.642 
應該拿回那些東西
通過StoreKit API

00:34:03.010 --> 00:34:04.811 
我們可以看一下那個看起來像什麼

00:34:04.878 --> 00:34:07.447 
他在IOS和macOS有些不同

00:34:08.014 --> 00:34:11.385 
在iOS receipt
不存在或者是無效的

00:34:11.451 --> 00:34:14.121 
你應該使用
StoreKit API去刷新它

00:34:15.355 --> 00:34:17.658 
但是記住你必須擁有網絡

00:34:17.724 --> 00:34:20.127 
我們需要去連接App Store

00:34:20.527 --> 00:34:22.196 
我們需要去驗證用戶

00:34:22.496 --> 00:34:24.898 
我們必須要知道他們真的是那些
已經購買過這個東西的人

00:34:24.965 --> 00:34:27.568 
所以他們將要輸入他們的密碼

00:34:27.634 --> 00:34:29.303 
或者使用他們的指紋

00:34:31.338 --> 00:34:33.940 
如果你正在做一些事情如

00:34:35.208 --> 00:34:38.011 
應用每次啓動刷新receipt

00:34:38.078 --> 00:34:40.614 
這絕不是一個好的模式去遵循

00:34:40.681 --> 00:34:44.016 
或者如果你正在做一些事情
如在檢查receipt是無效的

00:34:44.083 --> 00:34:47.821 
然後獲取它，因爲你知道或許有些東西

00:34:47.888 --> 00:34:49.489 
有些東西看起來不對

00:34:49.556 --> 00:34:52.559 
你想小心點你不會陷入一遍
又一遍的循環中

00:34:52.626 --> 00:34:56.429 
如果你的應用崩潰而你正檢查
你的receipt啓動

00:34:56.864 --> 00:34:58.966 
或者如果你保持檢查並且它是無效的

00:34:59.032 --> 00:35:02.135 
關於的驗證碼就是不對的

00:35:02.336 --> 00:35:04.805 
你不想去驗證和取回
那個receipt

00:35:04.872 --> 00:35:06.273 
一遍又一遍

00:35:06.340 --> 00:35:08.342 
所以這些都必須要小心

00:35:10.210 --> 00:35:13.046 
這些能夠在iOS完成通過

00:35:13.113 --> 00:35:16.416 
這些能夠通過一個
SKRecipt刷新請求完成

00:35:17.017 --> 00:35:18.819 
你設置的代理並且
調用了start

00:35:19.186 --> 00:35:22.723 
這個會在代理中通知你的應用程序

00:35:22.789 --> 00:35:25.058 
當receipt被更新而且你能繼續

00:35:25.125 --> 00:35:27.561 
並且處理這些交易在receipt中

00:35:27.628 --> 00:35:30.230 
就好像他們由用戶購買一樣

00:35:31.265 --> 00:35:33.333 
在macOS一點不同

00:35:33.834 --> 00:35:35.469 
如果receipt是無效的

00:35:35.836 --> 00:35:38.539 
你將會退出伴隨着編碼173

00:35:38.605 --> 00:35:41.875 
這個會告訴Finder
他們替我把receipt取得

00:35:43.410 --> 00:35:46.013 
再次 這裏需要網絡

00:35:46.079 --> 00:35:48.815 
用戶可以登錄Store

00:35:50.050 --> 00:35:52.920 
這個可以完成通過
調用exit 173

00:35:55.656 --> 00:35:58.892 
然後我只想去再次強調
server-to-server驗證

00:35:58.959 --> 00:36:01.328 
若你正在做一個自動更新的
receipt並且你有

00:36:01.395 --> 00:36:03.230 
一個自動更新的訂閱

00:36:03.297 --> 00:36:05.399 
如果你有在服務器上可用的內容

00:36:05.465 --> 00:36:11.171 
你可能有一個hosted implementation
備份你的in-app purchases

00:36:11.905 --> 00:36:14.575 
所以如果你正在做
server-to-server驗證

00:36:14.641 --> 00:36:18.111 
這個會允許你去在服務器端驗證
receipt

00:36:18.178 --> 00:36:20.814 
那是用戶獲取用於他們的in-app
purchases是有效的

00:36:21.481 --> 00:36:23.684 
因此你拿到在那個設備上的
receipt

00:36:23.750 --> 00:36:25.118 
你上傳它去服務器

00:36:28.622 --> 00:36:30.924 
但是 我要再次強調它

00:36:31.024 --> 00:36:34.928 
不要直接發送receipt去驗證
receipt的端點

00:36:35.395 --> 00:36:38.765 
這是不安全的還有你不應該那樣做

00:36:40.300 --> 00:36:43.737 
有件事需要注意是驗證receipt
的端點返回的是一個JSON

00:36:43.804 --> 00:36:46.240 
有效載荷和實際包括信息

00:36:46.306 --> 00:36:48.976 
像如果你的receipt過期了

00:36:49.042 --> 00:36:51.845 
你會從App Store那裏
得到最新的版本

00:36:51.912 --> 00:36:55.315 
它會包括一些關於它有效的信息

00:36:55.382 --> 00:36:59.186 
或者如果receipt的狀態不對

00:36:59.253 --> 00:37:02.189 
所以再次 有在線文檔

00:37:02.256 --> 00:37:05.158 
關於到底驗證receipt的端點
如何工作的

00:37:07.861 --> 00:37:11.431 
好吧 我們已經通過了
我們已經購買了

00:37:11.665 --> 00:37:13.367 
我們已經完成了交易處理

00:37:14.034 --> 00:37:17.171 
這取決於你決定到底你怎麼去驗證

00:37:17.237 --> 00:37:19.306 
receipt和哪個安全層級

00:37:19.373 --> 00:37:21.875 
你將要把它放到後面
還有什麼技術你將會使用

00:37:22.109 --> 00:37:24.011 
你驗證了那個購買是真的

00:37:24.077 --> 00:37:26.413 
那個背後有一個貨幣交易

00:37:26.713 --> 00:37:30.384 
使用戶可以買到什麼取決於你

00:37:30.450 --> 00:37:32.920 
再交易結束的時候做得很好

00:37:33.420 --> 00:37:37.791 
這裏有兩個方法
去實現而且我們以前討論過

00:37:38.091 --> 00:37:40.460 
你可能只有隱藏在你的應用的功能

00:37:40.527 --> 00:37:42.029 
你將要解鎖的

00:37:42.229 --> 00:37:43.897 
你的一個基本版本的應用程序

00:37:43.964 --> 00:37:47.367 
一個免費的基本版本
現在已經是一個專業版本

00:37:47.434 --> 00:37:50.671 
你只需要設置那個狀態並且
確保對用戶是可用的

00:37:51.305 --> 00:37:54.708 
或者如果你有來自服務器上的內容

00:37:54.775 --> 00:37:56.176 
你需要去下載它

00:37:57.144 --> 00:37:58.512 
一堆不同的技術

00:37:58.579 --> 00:38:00.013 
一堆實現的不同方式

00:38:00.080 --> 00:38:01.849 
現在我要強調它們中的一部分

00:38:03.550 --> 00:38:06.486 
一個是Apple提供的一個更新的

00:38:06.553 --> 00:38:08.555 
是按需資源

00:38:08.822 --> 00:38:11.592 
這個方法能使你的應用程序

00:38:11.658 --> 00:38:16.363 
在初始下載的時候儘可能的小和壓縮

00:38:16.430 --> 00:38:17.631 
如二進制文件

00:38:17.931 --> 00:38:20.367 
如果你要去讓別的資源

00:38:20.434 --> 00:38:21.768 
關聯應用程序

00:38:21.835 --> 00:38:23.737 
如果你的遊戲有一堆不同的等級

00:38:23.804 --> 00:38:28.375 
而它們讓你知道圖片和視頻關聯它們

00:38:28.442 --> 00:38:33.013 
你可以在你的應用清單裏把
他們分解成不同的組件

00:38:34.147 --> 00:38:38.151 
按需資源是託管在
App Store中

00:38:38.218 --> 00:38:40.020 
所以你不同擔心託管的問題

00:38:40.287 --> 00:38:41.722 
它是可擴展和穩定的

00:38:41.788 --> 00:38:44.324 
我們已經用這個爲全世界緩存

00:38:44.625 --> 00:38:46.927 
你的用戶可以更快的獲取他們的內容

00:38:48.962 --> 00:38:50.597 
一件事需要記住的是

00:38:50.864 --> 00:38:53.767 
它可以包含任何類型代碼執行異常

00:38:53.834 --> 00:38:56.670 
所以所有的代碼都在
你原始的二進制文件裏

00:38:56.737 --> 00:39:00.174 
但是它可以包含
其他類型的你想要的內容

00:39:01.408 --> 00:39:05.145 
它只在IOS和tvOS中可用

00:39:05.212 --> 00:39:08.415 
macOS現在不支持按需資源

00:39:09.049 --> 00:39:11.218 
所以那個技術是你可能選擇去使用

00:39:11.285 --> 00:39:14.655 
它去獲取額外的內容在購買完成之後

00:39:14.922 --> 00:39:16.723 
如果你有興趣想了解多一些關於它

00:39:16.957 --> 00:39:20.961 
我強烈建議你看一下
“按需資源的優化”這個講座

00:39:21.028 --> 00:39:24.164 
它在Mission裏 在這個房間
週四早上10點

00:39:27.201 --> 00:39:30.838 
另外一個Apple提供的技術是
in-app purchase託管內容

00:39:30.904 --> 00:39:34.875 
你可以這個內容關聯你的
in-app purchase

00:39:34.942 --> 00:39:37.477 
在iTunes連接和再次連接

00:39:37.811 --> 00:39:39.746 
它託管在Apple服務器上

00:39:39.947 --> 00:39:42.449 
所以你不用擔心主機本身

00:39:42.516 --> 00:39:43.951 
可擴展和可靠地

00:39:44.151 --> 00:39:45.619 
緩存全世界

00:39:46.987 --> 00:39:50.357 
一件事需要記住的關於這個和ODR

00:39:50.424 --> 00:39:53.026 
是這個會在後臺下載你的內容

00:39:53.093 --> 00:39:54.695 
你的應用不需要運行

00:39:54.761 --> 00:39:58.699 
所以用戶完成購買
並且會離開你的應用

00:39:58.765 --> 00:40:01.568 
運行其他的應用
而你需要去下載這些內容

00:40:01.635 --> 00:40:02.736 
那些會繼續運行

00:40:04.104 --> 00:40:07.941 
每個in-app purchasable產品你有最高2G容量

00:40:08.008 --> 00:40:10.277 
所以不是所有的應用程序共有2G容量

00:40:10.344 --> 00:40:12.312 
是每個產品2G

00:40:13.547 --> 00:40:17.417 
這個iOS tvOS
macOS是支持的

00:40:17.618 --> 00:40:21.154 
所有 再次另外一個擁有
Apple託管內容的方法

00:40:21.221 --> 00:40:23.123 
爲你in-app purchase

00:40:25.859 --> 00:40:28.395 
讓我們看一下那個可能看起來有點

00:40:28.462 --> 00:40:30.864 
一個付款通過了

00:40:31.331 --> 00:40:34.568 
用戶 你驗證它並且你準備去下載內容

00:40:34.635 --> 00:40:37.304 
你將在更新的交易中回調

00:40:37.371 --> 00:40:38.739 
你的付款觀察者

00:40:40.007 --> 00:40:41.074 
那麼我們再往下一點

00:40:41.141 --> 00:40:42.609 
你將看到你的交易

00:40:42.676 --> 00:40:44.578 
你將獲知一筆其中的交易

00:40:44.645 --> 00:40:46.813 
包含一個或多個下載

00:40:47.047 --> 00:40:49.650 
你所需要做的只是回傳那個下載

00:40:49.716 --> 00:40:52.853 
去“支付隊列” 它會開始下載

00:40:54.521 --> 00:40:58.659 
如果你的應用程序有興趣使用託管
in-app purchase

00:40:58.725 --> 00:41:02.696 
你將擁有一個支付隊列更新下載的方法

00:41:02.763 --> 00:41:04.831 
在你的支付隊列觀察者裏

00:41:07.201 --> 00:41:08.769 
這個會給你全部的信息

00:41:08.836 --> 00:41:11.071 
關於下載當他們進來

00:41:11.138 --> 00:41:15.209 
包括像進度這樣的東西會
調用並讓你知道進度

00:41:15.275 --> 00:41:17.911 
你會用這個去更新UI

00:41:18.145 --> 00:41:19.279 
或者時間剩餘

00:41:19.646 --> 00:41:22.316 
或者如果錯誤發生
你需要對它做出反應

00:41:22.716 --> 00:41:24.084 
這些信息會在這裏

00:41:24.351 --> 00:41:28.021 
然後一旦下載完成一個URL會被提供

00:41:28.088 --> 00:41:31.925 
那是一個本地URL 就在文件系統上

00:41:31.992 --> 00:41:35.162 
所以你可以抓取它然後在那裏你可以
與你的內容進行交互

00:41:36.697 --> 00:41:39.199 
這是in-app
purchases託管怎麼工作

00:41:40.400 --> 00:41:43.904 
但是你可能也想自託管這些內容

00:41:43.971 --> 00:41:45.506 
完全有效的事情

00:41:45.706 --> 00:41:47.975 
如果你有一個隨時間變化的目錄

00:41:48.041 --> 00:41:50.677 
如果你有一些不同的東西你不需要

00:41:50.744 --> 00:41:53.947 
去放到Apple託管
自託管內容完全有效的選擇

00:41:54.414 --> 00:41:58.418 
一件事需要記住
那裏有後臺下載的API

00:41:58.485 --> 00:42:01.054 
你必須用NSURL會話調用

00:42:01.154 --> 00:42:02.823 
這個是託管這個內容的方法

00:42:04.525 --> 00:42:07.094 
內容可以被下載
即使你的應用不是激活狀態

00:42:07.160 --> 00:42:09.329 
若你扔使用
NSURLConnection

00:42:09.763 --> 00:42:10.864 
那是過時的

00:42:10.931 --> 00:42:13.166 
那不是一個好的體驗

00:42:13.233 --> 00:42:15.302 
對應用戶來使用NSURL會話

00:42:15.669 --> 00:42:18.505 
所以這個是非常重要的
對於你使用這些API

00:42:21.375 --> 00:42:23.243 
這個是它在Swift中的樣子

00:42:23.810 --> 00:42:26.547 
你將要創建一個會話配置

00:42:26.980 --> 00:42:30.817 
這是一個配置你想命名爲一個唯一的

00:42:30.884 --> 00:42:34.021 
對於你的應用程序用於描述那個會話
是關於什麼的

00:42:35.522 --> 00:42:37.124 
你將要創建會話

00:42:37.191 --> 00:42:39.026 
你要傳入配置的值

00:42:39.092 --> 00:42:43.030 
你要傳入代理 這將是任何對象你想要

00:42:43.096 --> 00:42:45.432 
獲取這些下載的信息

00:42:45.666 --> 00:42:47.134 
你會給出隊列

00:42:47.201 --> 00:42:51.338 
這個操作隊列實際上是在
你的代理中被調用的

00:42:51.405 --> 00:42:54.842 
什麼線程和什麼操作隊列
將會在代理裏調用

00:42:54.908 --> 00:42:57.811 
所以你想要確保你創建了一個專用的

00:42:57.878 --> 00:42:59.413 
操作隊列

00:43:01.281 --> 00:43:04.418 
然後開始下載 你創建了一個任務

00:43:04.484 --> 00:43:08.555 
你遞交請求和與in-app
purchase關聯URL

00:43:08.922 --> 00:43:10.023 
你調用繼續

00:43:10.357 --> 00:43:16.163 
這個會在你的後臺開始自託管
in-app purchase下載

00:43:16.864 --> 00:43:20.634 
伴隨着下載開始你的代理會接收到信息

00:43:20.701 --> 00:43:24.738 
它將在URL會話
didWriteData方法裏被調用

00:43:25.606 --> 00:43:27.875 
這會給你這個能力

00:43:27.941 --> 00:43:29.510 
你可以帶入這些信息

00:43:29.576 --> 00:43:31.545 
並且它能讓你去更新UI

00:43:31.612 --> 00:43:33.347 
你可能有一個進度條

00:43:33.413 --> 00:43:34.715 
或其他東西你想告訴用戶

00:43:34.781 --> 00:43:36.550 
關於下載的進度

00:43:39.753 --> 00:43:43.423 
但是重要的你要記住
你的應用程序有可能退出

00:43:44.024 --> 00:43:46.159 
在下載的過程中

00:43:46.226 --> 00:43:48.896 
所以當你的應用程序重啓

00:43:49.329 --> 00:43:53.300 
你想把這些後臺下載會話重新連接

00:43:54.134 --> 00:43:55.936 
所以在你的應用程序代理裏

00:43:56.003 --> 00:44:00.174 
你會執行處理事件爲後臺URL會話

00:44:00.707 --> 00:44:04.545 
這會讓操作系統喚醒你的應用程序

00:44:04.611 --> 00:44:09.316 
並且告訴它這個後臺下載剛剛完成

00:44:09.383 --> 00:44:12.119 
或者正在進行 或者出了什麼問題

00:44:12.553 --> 00:44:15.455 
所以處理事件爲後臺URL會話

00:44:15.522 --> 00:44:19.793 
這裏會把之前使用的配置的標識符傳入

00:44:20.194 --> 00:44:23.063 
你會重新創建帶有標識符的配置

00:44:23.597 --> 00:44:27.968 
重新創建一個重新連接後臺會話的會話

00:44:28.502 --> 00:44:31.171 
然後你要做的是那裏有個完成句柄

00:44:31.238 --> 00:44:35.843 
它會被傳入應用代理方法

00:44:35.909 --> 00:44:38.011 
你需要去調用完成處理程序

00:44:38.078 --> 00:44:41.415 
一旦你完成了
你就完成了所有關於下載的動作

00:44:41.481 --> 00:44:44.785 
所以如果下載完成
你需要去把它放入你的容器

00:44:44.852 --> 00:44:46.453 
解壓它 讓它工作

00:44:46.720 --> 00:44:49.590 
你需要去調用完成處理程序
一旦你完成了所有工作

00:44:49.656 --> 00:44:53.727 
讓OS知道你已經完成了所有工作

00:44:55.796 --> 00:44:57.865 
所以這能使資產可用

00:44:58.632 --> 00:44:59.633 
但是你還沒有完全完成

00:44:59.700 --> 00:45:01.268 
即使你已經做了所有可以做的

00:45:01.335 --> 00:45:02.870 
用戶已經擁有他們買到的

00:45:03.337 --> 00:45:06.773 
你還是要做另外一件事
你需要告訴StoreKit

00:45:06.840 --> 00:45:09.009 
你已經完成了交易

00:45:09.776 --> 00:45:12.713 
這個很重要因爲我們保留這個交易

00:45:12.779 --> 00:45:14.081 
在我們的購買隊列中

00:45:14.147 --> 00:45:15.816 
我們保留它在
我們的state machine

00:45:16.183 --> 00:45:18.685 
如果你的應用程序死機並且重啓

00:45:18.752 --> 00:45:20.454 
或者用戶離開並返回

00:45:20.521 --> 00:45:22.823 
支付隊列會持續告訴你這些

00:45:22.890 --> 00:45:26.827 
它實際會持續做這些在你行爲
後臺API調用的時候

00:45:26.894 --> 00:45:29.096 
所以這樣會用光用戶的數據空間

00:45:29.329 --> 00:45:30.898 
所以及時清理是非常重要的

00:45:30.964 --> 00:45:33.100 
在你完成交易之後

00:45:33.867 --> 00:45:35.736 
但是你應該確保是你做的

00:45:35.802 --> 00:45:38.005 
當內容下載完成

00:45:38.238 --> 00:45:41.608 
如果你完成了交易 然後開始下載

00:45:42.276 --> 00:45:44.578 
我們會再告訴你關於那個交易一次

00:45:44.645 --> 00:45:47.748 
所以如果下載失敗或者下載出錯

00:45:48.015 --> 00:45:49.550 
你不會得到更新信息

00:45:49.616 --> 00:45:52.186 
所以你要確保下載完成

00:45:52.252 --> 00:45:54.588 
然後調用完成交易

00:45:56.490 --> 00:45:59.359 
所以 再次 支付會繼續在
隊列裏直到你完成它

00:45:59.960 --> 00:46:02.729 
如果你正在下載託管內容
另外一件你需要記住的

00:46:02.796 --> 00:46:04.898 
是你需要完成下載

00:46:04.965 --> 00:46:07.601 
如果你在下載完成之前完成交易

00:46:07.668 --> 00:46:09.136 
我們會停止下載

00:46:11.338 --> 00:46:14.508 
這個可以很容易被實現通過
調用SK支付隊列

00:46:14.575 --> 00:46:18.979 
完成交易和傳遞交易到支付隊列

00:46:22.549 --> 00:46:26.553 
所以 用戶已經使用你的應用
他們已經購買了in-app purchase

00:46:26.620 --> 00:46:29.156 
他們喜歡你的內容 他們決定

00:46:29.656 --> 00:46:30.958 
你知道我的空間已經用完

00:46:31.024 --> 00:46:33.927 
我會刪除應用
可能我稍後會重新下載它

00:46:34.261 --> 00:46:36.063 
或者他們切換到另外一個設備

00:46:36.430 --> 00:46:38.665 
這總是很重要的
他們可以要回那些

00:46:39.800 --> 00:46:45.806 
非消費型和自動更新in-app
purchase到應用裏

00:46:45.906 --> 00:46:48.008 
他們需要能恢復以前的內容

00:46:48.775 --> 00:46:51.178 
所以恢復交易允許用戶

00:46:51.245 --> 00:46:55.983 
恢復非消費和自動更新的訂閱

00:46:57.751 --> 00:47:00.487 
消費的和非自動更新的訂閱

00:47:00.554 --> 00:47:02.456 
這取決於你去管理這個狀態

00:47:02.890 --> 00:47:06.026 
所以可能有一些你剛好保存在本地

00:47:06.093 --> 00:47:08.128 
可能有一些你存儲在Cloud中

00:47:08.195 --> 00:47:11.064 
或者你存在自己的託管後臺

00:47:11.131 --> 00:47:14.835 
這取決於你去管理
你究竟想如何恢復內容

00:47:14.902 --> 00:47:17.738 
但是對於非消費和自動更新

00:47:17.871 --> 00:47:22.576 
你可以恢復它們使用恢復API

00:47:25.546 --> 00:47:29.116 
再次 我們提供API用於
SK支付隊列恢復

00:47:29.183 --> 00:47:30.484 
完成交易

00:47:30.817 --> 00:47:34.955 
那能夠降低一個品牌的應用的更新版本

00:47:35.389 --> 00:47:37.090 
和in-app purchase
receipt

00:47:38.425 --> 00:47:40.227 
再次 你會想去觀察隊列

00:47:40.294 --> 00:47:43.430 
你把它加到你的應用代理 所以當然
你正在觀察隊列

00:47:43.497 --> 00:47:44.498 
你正在獲取信息

00:47:44.565 --> 00:47:46.600 
關於這些交易當它們進入

00:47:46.867 --> 00:47:48.035 
因爲我們將調用

00:47:48.101 --> 00:47:50.771 
支付隊列恢復完成 交易結束

00:47:50.838 --> 00:47:54.174 
這個會告訴你所有的發生的恢復

00:47:54.241 --> 00:47:55.709 
你會只想去處理它們

00:47:55.776 --> 00:47:57.845 
好像它們剛被用戶購買

00:47:58.345 --> 00:48:00.581 
或者我們會告訴你錯誤發生了

00:48:00.647 --> 00:48:02.983 
可能你需要讓用戶再嘗試一次

00:48:03.083 --> 00:48:04.785 
或者對應的更新你的UI

00:48:05.252 --> 00:48:07.421 
所以 觀察隊列非常重要

00:48:09.690 --> 00:48:13.460 
再次 一旦恢復完成
你可以看看receipt

00:48:13.527 --> 00:48:15.596 
並且解鎖對應的內容和功能

00:48:18.665 --> 00:48:20.033 
現在我們會感覺好點的是

00:48:20.100 --> 00:48:21.335 
你創造了自己的應用

00:48:21.401 --> 00:48:24.404 
你準備去提交它到
App Store你想確保

00:48:24.471 --> 00:48:25.839 
你能通過審查

00:48:26.373 --> 00:48:27.941 
有些事情需要記住

00:48:28.909 --> 00:48:30.978 
我們剛剛討論的恢復

00:48:31.245 --> 00:48:33.714 
你真的需要一個恢復機制

00:48:33.780 --> 00:48:35.115 
它不必要是個UI按鈕

00:48:35.182 --> 00:48:38.151 
你需要一些應用內在機制去允許用戶

00:48:38.218 --> 00:48:41.321 
要回他們的內容否則這不會通過審查

00:48:43.056 --> 00:48:46.360 
再次 對應非消費和自動更新的訂閱

00:48:46.426 --> 00:48:49.930 
你不會在恢復中得到其他的
in-app purchase類型

00:48:51.798 --> 00:48:54.067 
一件事需要記住的是

00:48:54.835 --> 00:48:57.671 
我們想讓這些同購買隔離開

00:48:57.738 --> 00:48:59.039 
恢復是免費的

00:48:59.306 --> 00:49:02.609 
用戶不會感到疑惑如果他們做了恢復

00:49:02.676 --> 00:49:04.978 
他們需要輸入
來自App Store的密碼

00:49:05.045 --> 00:49:06.780 
這會消耗他們任何東西

00:49:06.847 --> 00:49:09.349 
這個在你的應用程序是非常明顯的

00:49:09.416 --> 00:49:12.519 
他們做的這次恢復操作不是一次購買

00:49:12.586 --> 00:49:14.254 
這是完全隔離開的

00:49:14.321 --> 00:49:17.157 
所以你要確保的是你的UI反映

00:49:19.593 --> 00:49:22.362 
其他你想要記住的消息

00:49:22.429 --> 00:49:26.066 
對於自動更新訂閱的是關於政策的

00:49:27.534 --> 00:49:29.937 
保留信息在市場文本里

00:49:31.305 --> 00:49:34.308 
確保一旦他們訂閱了

00:49:34.374 --> 00:49:36.310 
他們就可以立刻得到內容

00:49:36.376 --> 00:49:39.713 
他們不需要等待直到下個階段開始

00:49:39.780 --> 00:49:40.914 
任何東西出現

00:49:40.981 --> 00:49:43.717 
如果你訂閱了
你應該會馬上獲取一些信息

00:49:44.184 --> 00:49:45.853 
你應該獲取信息

00:49:45.919 --> 00:49:48.455 
關於你應該只能通過訂閱獲得

00:49:48.522 --> 00:49:52.759 
而不是一堆產品或者內容

00:49:52.826 --> 00:49:54.661 
他們本可以在別處獲取免費

00:49:54.728 --> 00:49:57.030 
所以 這就是一些政策

00:49:57.097 --> 00:50:01.335 
我強烈建議你看一下
“APPS審查政策指南”這個講座

00:50:01.535 --> 00:50:04.171 
我已經聽說
現在已經有一本漫畫書關於它

00:50:04.238 --> 00:50:07.140 
所以我強烈建議你把這些全部學習一遍

00:50:07.374 --> 00:50:08.609 
因爲它們一直在變化

00:50:08.675 --> 00:50:11.211 
你應該時刻關注它的變化

00:50:12.412 --> 00:50:14.715 
關於非更新的訂閱這裏有些其他政策

00:50:14.781 --> 00:50:16.283 
你要記住

00:50:16.583 --> 00:50:20.387 
關於隱私和確保用戶有能力去參與

00:50:20.454 --> 00:50:22.489 
或退出

00:50:24.758 --> 00:50:27.895 
然後最終這最重要的事情
是通過應用反饋

00:50:27.961 --> 00:50:30.964 
是如果你已經在你的應用裏擁有購買
它應該可以工作

00:50:32.032 --> 00:50:34.368 
你完成購買 內容就應該出現

00:50:34.601 --> 00:50:36.170 
它們應該得到信息

00:50:36.236 --> 00:50:38.105 
他們應該在那裏得到內容

00:50:38.172 --> 00:50:40.407 
如果它是缺陷或者如果他是容易錯誤

00:50:40.474 --> 00:50:46.813 
或者如果有什麼事情發生當
評論人正在評論它

00:50:46.880 --> 00:50:49.683 
在應用評論環境內部

00:50:50.050 --> 00:50:52.252 
你就會在那裏立刻得到評論中的問題

00:50:52.319 --> 00:50:53.320 
所以測試它

00:50:53.387 --> 00:50:56.690 
測試它在Sandbox
確保一切如你期望的工作着

00:50:59.393 --> 00:51:02.462 
所以剛纔總結下我們今天討論的

00:51:03.797 --> 00:51:06.633 
始終遵守支付隊列

00:51:06.934 --> 00:51:09.536 
如果你在你的應用裏與
in-app purchase交互

00:51:09.603 --> 00:51:14.408 
首先你的應用應該設置
一個支付隊列觀察者

00:51:14.474 --> 00:51:17.211 
去獲取信息關於支付的進展情況

00:51:18.846 --> 00:51:22.382 
你應該從App Store中
獲取本地化產品信息

00:51:22.449 --> 00:51:24.985 
這是通過一個SK產品請求

00:51:25.686 --> 00:51:27.788 
它會返回本地化信息

00:51:27.855 --> 00:51:31.191 
所以用戶在他們國家的信息

00:51:31.258 --> 00:51:34.628 
關聯到App Store
賬戶賬單信息

00:51:36.463 --> 00:51:39.333 
再次強調
使用產品所在地的貨幣單位

00:51:39.566 --> 00:51:44.204 
這裏有個SK產品返回
它有一個關聯的場所

00:51:44.271 --> 00:51:48.275 
你應該去使用它
爲了展示價格和貨幣信息

00:51:50.377 --> 00:51:52.346 
使用receipt去驗證你的購買

00:51:52.412 --> 00:51:55.048 
再次 它們是你的購買 這是你的生意

00:51:55.249 --> 00:51:58.218 
你應該去做決定關於怎麼
最好的去驗證receipt

00:51:58.285 --> 00:52:01.054 
是否在本地驗證或者在服務器

00:52:01.121 --> 00:52:02.956 
後面是什麼技術

00:52:03.490 --> 00:52:06.860 
要知道到底每個優點和缺點是什麼

00:52:06.927 --> 00:52:08.629 
用那個做下你的決定

00:52:09.763 --> 00:52:11.598 
最終使內容是可用的

00:52:11.665 --> 00:52:15.769 
你可以在那個設備的你的應用裏解鎖它

00:52:16.069 --> 00:52:19.907 
或者你可以發出一個
App Store自己的託管請求

00:52:20.174 --> 00:52:24.278 
或者你可以發出一個請求
到後端主機API

00:52:24.545 --> 00:52:25.979 
使內容可用

00:52:26.046 --> 00:52:28.315 
但是用一個可靠的而且快速的方法做它

00:52:28.382 --> 00:52:32.052 
如果你自託管
確保你的服務器是可擴展的

00:52:32.386 --> 00:52:35.389 
你知道緩存適度

00:52:35.455 --> 00:52:39.927 
是真的準備爲了用戶
很好地使用你的應用

00:52:41.228 --> 00:52:43.730 
然後最終完成交易

00:52:43.797 --> 00:52:45.766 
最後一件你需要確保的事情是

00:52:45.832 --> 00:52:48.302 
交易不再存在在支付隊列中

00:52:48.368 --> 00:52:51.205 
否則你的觀察者將會不斷的被通知

00:52:51.271 --> 00:52:52.940 
關於它當你的應用啓動

00:52:53.607 --> 00:52:59.513 
這將感覺很奇怪用戶可能不得不

00:52:59.947 --> 00:53:01.448 
在特定的時間進行身份驗證

00:53:01.515 --> 00:53:06.687 
或者那裏可能存在後臺
代替你應用的API正在發生

00:53:06.753 --> 00:53:09.990 
爲用戶使用完數據空間
如果你不能完成交易

00:53:11.091 --> 00:53:12.092 
所以始終那樣做

00:53:14.027 --> 00:53:18.799 
然後 允許用戶恢復完成交易

00:53:18.866 --> 00:53:21.168 
你需要一個恢復機制在你的應用裏

00:53:21.235 --> 00:53:25.172 
如果你有非消費或者自動更新的訂閱

00:53:25.239 --> 00:53:28.308 
這會允許用戶去獲取之前已經購買的

00:53:30.544 --> 00:53:34.481 
更多信息請在開發者網站上

00:53:34.982 --> 00:53:37.885 
我強烈建議你返回並稍後看看它

00:53:39.119 --> 00:53:41.588 
然後兩個相關的話題我們今天提到的

00:53:41.655 --> 00:53:44.224 
如果你正使用訂閱在你的應用裏

00:53:44.625 --> 00:53:47.261 
你應該明確的檢查“介紹擴展訂閱”

00:53:47.327 --> 00:53:49.062 
在iTunes Connect
今天稍後的時間裏

00:53:49.463 --> 00:53:51.365 
或者如果你對按需資源有興趣

00:53:51.431 --> 00:53:54.101 
週四早晨來看一下

00:53:54.168 --> 00:53:55.002 
這是全部

00:53:56.036 --> 00:53:56.937 
謝謝