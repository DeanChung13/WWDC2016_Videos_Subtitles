00:00:20.167 --> 00:00:21.467 
Apple Push Notification Service的
新功能

00:00:21.533 --> 00:00:23.900 
歡迎來到724號會議

00:00:24.433 --> 00:00:27.867 
關於Apple Push Notification Service的
新功能

00:00:28.067 --> 00:00:29.900 
我是Mayur Mahajan

00:00:30.433 --> 00:00:35.000 
我從事於Apple Push
Notification Service 即APNS

00:00:35.433 --> 00:00:39.833 
我迫不及待跟你們分享
APNS中即將上線的功能

00:00:41.867 --> 00:00:45.600 
首先讓我們回顧一些
過去已經增強的功能

00:00:45.667 --> 00:00:47.033 
這些功能是在去年發佈的

00:00:48.067 --> 00:00:51.833 
首先我們提供了一種新的服務端協議

00:00:51.900 --> 00:00:55.233 
基於HTTP/2來進行
持續的推送

00:00:56.000 --> 00:00:58.967 
HTTP/2協議傳輸採用二進制編碼

00:00:59.233 --> 00:01:02.833 
支持在一個連接中使用多種數據流

00:01:03.100 --> 00:01:04.833 
並且十分快速

00:01:05.567 --> 00:01:11.433 
這種新的協議讓推送一則消息
變得很容易

00:01:13.000 --> 00:01:16.500 
這種新的協議支持即時的反饋

00:01:17.000 --> 00:01:20.833 
從而可以立即獲知設備的token
是否處於激活狀態

00:01:22.033 --> 00:01:25.467 
這種協議還允許發送
更多字節的有效載荷

00:01:26.000 --> 00:01:27.500 
最多可以發送4000字節

00:01:27.567 --> 00:01:31.633 
你可以利用這一點
來創建更加豐富的應用

00:01:33.367 --> 00:01:36.633 
此外 我們還簡化了證書的處理

00:01:37.467 --> 00:01:41.367 
所以你們現在只需要維護更少的證書

00:01:41.600 --> 00:01:43.833 
這些證書被用來與APNS進行連接

00:01:45.300 --> 00:01:49.400 
我們獲得了很多積極的反饋
這些反饋來自開發者社區

00:01:50.600 --> 00:01:54.400 
我們現在每秒推送着數十萬條通知

00:01:54.467 --> 00:01:55.900 
歸功於使用了這種新的協議

00:01:56.667 --> 00:02:00.267 
如果你還沒有試用過新的推送服務
那麼你真的應該去嘗試一下了

00:02:03.367 --> 00:02:09.067 
讓我們重新來看一下那些關鍵的步驟
關於發送一則Push Notification

00:02:09.767 --> 00:02:12.967 
右下角是客戶端應用

00:02:13.333 --> 00:02:16.767 
右上角是供應商

00:02:17.033 --> 00:02:20.767 
它是一個服務端組件用來連接APNS

00:02:21.333 --> 00:02:23.467 
並且發送
Push Notification

00:02:24.667 --> 00:02:27.100 
目前在你開始發送通知之前

00:02:27.800 --> 00:02:30.367 
你應該註冊
Push Notification

00:02:30.433 --> 00:02:31.767 
通過你的開發者帳號來完成

00:02:33.600 --> 00:02:37.200 
這樣你的應用就可以
向操作系統來註冊推送服務

00:02:37.700 --> 00:02:39.867 
當它在設備上運行的時候
左下角

00:02:41.100 --> 00:02:44.967 
設備會向APNS請求一個token

00:02:45.033 --> 00:02:47.100 
這個token用來代表這個應用

00:02:47.633 --> 00:02:49.800 
設備會將該token傳遞給你的應用

00:02:51.433 --> 00:02:53.700 
這個token具有唯一的標識性

00:02:53.767 --> 00:02:56.600 
代表了你的應用運行在了相應的設備上

00:02:58.200 --> 00:03:02.100 
你的應用應該將
該token轉發給供應商

00:03:03.167 --> 00:03:05.400 
現在供應商服務

00:03:05.467 --> 00:03:09.500 
就可通過客戶端的證書連接到APNS

00:03:09.833 --> 00:03:14.100 
然後發送一個標準的
HTTP/2的POST請求

00:03:14.967 --> 00:03:17.100 
從而向那個token
發送一次推送

00:03:20.133 --> 00:03:25.867 
HTTP/2供應商接口將
提供一個即時迴應

00:03:25.933 --> 00:03:29.033 
來表示是否能成功發送

00:03:29.700 --> 00:03:31.600 
同時 APNS收到

00:03:31.667 --> 00:03:35.333 
並且會驗證這個推送請求是否有效

00:03:36.467 --> 00:03:41.233 
如果發生錯誤
就會報告這個token無效

00:03:41.967 --> 00:03:45.200 
APNS會返回
一個狀態碼爲400的錯誤信息

00:03:45.900 --> 00:03:51.067 
或者“無效請求”
以及相關的錯誤指示

00:03:51.600 --> 00:03:54.467 
舉例來說 設備token無效

00:03:56.400 --> 00:04:00.400 
新的供應商協議會提供即時的反饋

00:04:00.967 --> 00:04:03.867 
如果設備token被移除了

00:04:04.467 --> 00:04:10.333 
那麼你會得到一個HTTP/2的迴應
其狀態碼410或代表移除的文字描述

00:04:11.800 --> 00:04:15.467 
並且該回應中
還提供了一個時間戳來標識

00:04:15.533 --> 00:04:20.533 
APNS何時知道
該設備token被移除了

00:04:24.067 --> 00:04:26.300 
我們還簡化了證書的相關處理

00:04:26.700 --> 00:04:28.933 
作爲新的供應商協議的一部分

00:04:30.167 --> 00:04:33.267 
你現在只需要規定一次證書

00:04:33.500 --> 00:04:38.600 
來覆蓋你的應用
complication以及Voip Push

00:04:39.900 --> 00:04:44.300 
這個證書既可以在開發環境

00:04:44.367 --> 00:04:46.067 
又可以在生產環境中使用

00:04:47.200 --> 00:04:51.267 
這樣可以減少很多麻煩
在管理 新建

00:04:51.333 --> 00:04:55.333 
以及撤回證書的過程中
開發者可以避免一些過去出現的麻煩

00:04:57.267 --> 00:05:00.633 
現在 讓我們來聽一下
像你們開發者的反饋

00:05:01.033 --> 00:05:02.900 
並且我們已經認識到了

00:05:02.967 --> 00:05:04.900 
簡化工作流程的重要性

00:05:04.967 --> 00:05:07.800 
那些在發送推送通知中涉及到的流程

00:05:08.967 --> 00:05:12.700 
我們意識到管理證書實在是太複雜了

00:05:12.767 --> 00:05:14.100 
對於很多應用來說

00:05:15.867 --> 00:05:20.433 
所以今天我們非常激動的通知
一個新的

00:05:20.500 --> 00:05:24.767 
簡潔的認證機制會引入到APNS中

00:05:25.933 --> 00:05:28.800 
token認證機制介紹

00:05:28.867 --> 00:05:31.600 
在APNS中的應用

00:05:34.500 --> 00:05:39.767 
Token認證機制通過
用供應商的token

00:05:40.167 --> 00:05:44.267 
在發送通知的過程中
替代了客戶端的證書

00:05:47.467 --> 00:05:50.300 
這種認證token是用來

00:05:50.367 --> 00:05:54.000 
簡化服務端與APNS之間的連接方式

00:05:55.133 --> 00:05:59.733 
此外 這些token非常容易
通過程序生成

00:06:00.400 --> 00:06:05.533 
所以再也不用擔心
需要去處理那些證書過期的問題了

00:06:06.833 --> 00:06:11.033 
這一切能實現依賴於
JSON Web token

00:06:11.600 --> 00:06:15.467 
作爲一種生成認證證書的機制

00:06:16.900 --> 00:06:23.600 
有很有多種程序語言
選項的庫可以用

00:06:23.667 --> 00:06:25.033 
來生成這些token

00:06:27.800 --> 00:06:29.900 
現在 在我們討論一些細節之前

00:06:30.267 --> 00:06:32.400 
關於token認證機制的細節

00:06:33.267 --> 00:06:34.667 
讓我們首先了解

00:06:34.733 --> 00:06:36.867 
證書認證機制是如何工作的

00:06:39.533 --> 00:06:40.733 
你們可以選擇參加

00:06:42.667 --> 00:06:46.667 
通過開發者賬號獲得一個客戶端證書

00:06:48.000 --> 00:06:52.167 
當使用同一種認證連接APNS的時候

00:06:52.900 --> 00:06:56.067 
APNS會提供一個服務端的證書

00:06:56.600 --> 00:06:58.733 
用來讓你信任和效驗

00:07:00.233 --> 00:07:01.833 
就像握手一樣

00:07:02.200 --> 00:07:05.767 
你的供應商會爲客戶端證書籤名

00:07:06.233 --> 00:07:11.233 
從而APNS會進行效驗並且建立證書

00:07:12.100 --> 00:07:16.067 
此時一個彼此信任的連接就建立了

00:07:16.133 --> 00:07:19.200 
在APNS與供應商之間

00:07:20.500 --> 00:07:24.100 
任何通過這個連接發送的
推送都會附加

00:07:24.167 --> 00:07:27.600 
一個客戶端證書中的應用標示

00:07:32.333 --> 00:07:34.367 
當使用token認證機制的時候

00:07:35.100 --> 00:07:38.667 
你應通過賬戶選擇一個token
的簽名鍵值

00:07:40.200 --> 00:07:43.700 
然後你的供應商建立一個PLS連接

00:07:44.233 --> 00:07:45.967 
並不需要包含一個客戶端證書

00:07:46.733 --> 00:07:50.500 
但是 在通過這個連接發送通知之前

00:07:51.033 --> 00:07:54.733 
供應商需要創建一個認證的token

00:07:55.100 --> 00:07:57.433 
包含你的團隊ID

00:07:58.000 --> 00:08:02.133 
然後爲它簽名

00:08:06.967 --> 00:08:11.000 
現在就可以通過這個連接發送通知了

00:08:12.100 --> 00:08:13.867 
每一個通知消息

00:08:14.567 --> 00:08:18.133 
在簽名後都需要
包含這個認證token

00:08:19.167 --> 00:08:23.767 
這個請求還需要包含應用相關的信息

00:08:25.200 --> 00:08:29.900 
APNS首先驗證
來自服務端的token

00:08:30.500 --> 00:08:32.500 
然後再處理請求

00:08:35.033 --> 00:08:37.799 
如果請求被成功的處理了

00:08:38.767 --> 00:08:43.600 
APNS就會返回一個
包含成功信息的迴應

00:08:45.233 --> 00:08:47.900 
如果請求中沒有token信息

00:08:47.967 --> 00:08:50.267 
或者token信息無效

00:08:51.200 --> 00:08:54.667 
返回的迴應會包含一個錯誤指示信息

00:08:56.233 --> 00:09:01.233 
作爲一個提醒類型的服務
APNS不會在有錯誤發生時關閉連接

00:09:03.267 --> 00:09:06.933 
現在讓我們來看一下
如何生成一個供應商token

00:09:08.533 --> 00:09:12.000 
你首先需要配置一個簽名鍵值

00:09:12.567 --> 00:09:15.800 
在證書、身份

00:09:15.867 --> 00:09:18.067 
配置下設置(開發者賬戶中)

00:09:20.867 --> 00:09:23.900 
這樣產生了一個公共-私有的鍵值面板

00:09:24.267 --> 00:09:27.633 
然後這個私有的鍵就可以使用了

00:09:27.700 --> 00:09:31.000 
用來當作密碼爲token數據簽名

00:09:32.600 --> 00:09:35.267 
Apple會使用對應的公匙

00:09:35.900 --> 00:09:37.733 
來對token進行效驗

00:09:39.267 --> 00:09:42.400 
下面讓我們來關注下
如何生成token

00:09:45.800 --> 00:09:48.867 
上面是一個例子 用來說明

00:09:48.933 --> 00:09:53.600 
一個JSON Web Token
在參與請求中是什麼樣子的

00:09:55.367 --> 00:09:58.733 
讓我們看一下
該JSON Web token結構

00:10:01.033 --> 00:10:02.933 
你可以看到它有三個部分

00:10:03.300 --> 00:10:09.133 
每一個部分都是被
base-64編碼過的URL的形式

00:10:09.200 --> 00:10:11.433 
一段時期內這種形式都不會改變

00:10:13.033 --> 00:10:16.767 
下面被解碼的部分
代表着該Web token

00:10:18.633 --> 00:10:20.867 
第一個部分是header

00:10:21.767 --> 00:10:23.867 
它包括了一些屬性

00:10:23.933 --> 00:10:28.000 
用來描述了token簽名使用的算法

00:10:28.633 --> 00:10:32.067 
在我們的例子中 使用的是ES256

00:10:34.300 --> 00:10:38.400 
它還描述了鍵的標識符

00:10:38.467 --> 00:10:40.367 
這個鍵是用來給token簽名的

00:10:43.067 --> 00:10:47.167 
claim部分包含了用於效驗的數據

00:10:47.467 --> 00:10:50.633 
那就是你的開發者的團隊ID

00:10:51.067 --> 00:10:53.333 
可以通過你的開發者賬戶獲得

00:10:55.400 --> 00:10:59.233 
claim部分中的下一個屬性
是一個初始化的時間戳

00:10:59.633 --> 00:11:02.633 
用來表示時間點

00:11:04.467 --> 00:11:07.767 
token的最後一個部分一個簽名

00:11:07.833 --> 00:11:11.767 
通過對一些數據使用了加密算法後
再進行了base-64的編碼

00:11:12.200 --> 00:11:14.467 
這些數據來源於
header以及claim部分

00:11:15.367 --> 00:11:20.533 
這樣避免了任何未授權的幹預
來自token

00:11:25.267 --> 00:11:31.900 
這裏是一個HTTP/2創建的
一個使用token認證的請求

00:11:33.100 --> 00:11:34.100 
就像你看到的那樣

00:11:34.933 --> 00:11:38.133 
這個請求包括了一個header區
以及一個數據區

00:11:39.067 --> 00:11:44.533 
header區由很多
APNS相關的變量組成

00:11:45.500 --> 00:11:48.800 
現在你可以看到header區了

00:11:49.267 --> 00:11:51.400 
包含了一個認證header

00:11:52.367 --> 00:11:56.667 
在“bearer”值
後面是帶簽名的供應商token

00:11:59.000 --> 00:12:03.233 
如果這個帶token認證的
請求是有效的

00:12:03.733 --> 00:12:07.500 
那麼迴應就會返回一個
200的狀態碼或者“OK”的信息

00:12:11.367 --> 00:12:13.733 
這裏可以看到這種迴應的結構

00:12:13.800 --> 00:12:16.467 
如果供應商token是無效的

00:12:17.500 --> 00:12:22.000 
會返回403的狀態碼
或者“禁用”的信息

00:12:23.267 --> 00:12:29.567 
現在APNS會要求
週期性的產生新的token

00:12:32.000 --> 00:12:34.000 
如果token存在的時間太長

00:12:34.633 --> 00:12:39.267 
迴應同樣會
返回403或者“禁用”的信息

00:12:39.900 --> 00:12:44.167 
並且會指示出token過期了

00:12:46.400 --> 00:12:50.500 
APNS會要求token的創建時間

00:12:50.900 --> 00:12:52.967 
必須在一個小時以內

00:12:54.300 --> 00:12:59.233 
但並不是每一個連接都需要
產生一個新的token

00:13:00.067 --> 00:13:03.400 
實際上處於性能的考慮 我們建議

00:13:03.467 --> 00:13:07.167 
在token有效的時候
就一直使用它

00:13:11.433 --> 00:13:15.333 
所以這裏還有一些更多的
關於token認證的細節

00:13:16.533 --> 00:13:19.867 
就如之前提到的供應商token

00:13:20.267 --> 00:13:22.433 
需要週期性的被創建

00:13:23.267 --> 00:13:27.333 
但是 需要注意
鍵值“簽名”不會失效

00:13:28.567 --> 00:13:33.333 
如果你覺得“簽名”鍵值
需要變化

00:13:33.933 --> 00:13:36.667 
那麼可以在開發者賬戶中撤銷它

00:13:37.000 --> 00:13:38.867 
然後部署一個新的鍵

00:13:41.100 --> 00:13:46.433 
作爲一個提醒類型的服務
APNS會長久支持證書認證方式

00:13:47.867 --> 00:13:50.800 
並且也會長久支持token認證方式

00:13:51.733 --> 00:13:54.400 
並且這種token認證方式會
在今年內晚些時候出現

00:13:57.367 --> 00:14:02.333 
本次會議的更多的信息請訪問頁面

00:14:02.667 --> 00:14:09.667 
developer.apple.com/wwdc16/724

00:14:12.867 --> 00:14:15.633 
下面是一些關於
Notification的相關會議

00:14:15.700 --> 00:14:17.233 
你可能會感興趣：

00:14:18.333 --> 00:14:20.500 
主題爲Introduction
to Notifications的會議

00:14:20.567 --> 00:14:24.967 
在週三的上午9點
於Pacific Heights召開

00:14:25.700 --> 00:14:29.033 
接下來
主題爲Advanced Notifications的會議

00:14:29.233 --> 00:14:32.533 
會在週三的上午10點
於Pacific Heights召開

00:14:32.867 --> 00:14:34.633 
我們希望到時候還再能看到你們

00:14:35.033 --> 00:14:36.233 
謝謝大家