00:00:19.553 --> 00:00:21.655 
使應用自適應 第一部分

00:00:21.722 --> 00:00:24.424 
大家早上好
至今爲止你們的會議進行的怎樣？

00:00:25.292 --> 00:00:27.528 
我叫Kevin
是interface builder工程師

00:00:27.594 --> 00:00:29.997 
Brent將在晚些時候加入

00:00:30.297 --> 00:00:33.600 
今天我們要談論的話題是自適應

00:00:33.667 --> 00:00:36.336 
它使得我開發一個應用

00:00:36.403 --> 00:00:39.606 
不僅僅在我們的所有設備上過得去

00:00:39.673 --> 00:00:41.074 
而是看上去很棒

00:00:41.675 --> 00:00:44.044 
這就是我們今天要討論的話題

00:00:44.578 --> 00:00:47.414 
我將開始我的演講

00:00:47.481 --> 00:00:49.783 
這個是你一定要帶走的

00:00:50.317 --> 00:00:52.152 
當關於自適應時

00:00:52.219 --> 00:00:57.324 
系統將會爲你進行大部分工作
我們將要分析它

00:00:57.958 --> 00:01:00.294 
我將告訴你係統爲你做了什麼

00:01:00.360 --> 00:01:01.662 
值得知道的事

00:01:01.728 --> 00:01:05.165 
還有你們開發者應該怎麼互動

00:01:05.232 --> 00:01:07.367 
和插入這個系統

00:01:08.869 --> 00:01:10.838 
但是在那之前我想退後一步

00:01:10.904 --> 00:01:12.906 
想要提供一些動機

00:01:12.973 --> 00:01:16.510 
想告訴你爲什麼這是好消息

00:01:17.611 --> 00:01:20.147 
Apple去年的嘴巴很大

00:01:20.214 --> 00:01:23.183 
我們賣出了第10億臺iOS設備

00:01:23.250 --> 00:01:26.587 
我不知道你們怎麼想
但是這個數字讓我驚呆了

00:01:27.454 --> 00:01:29.289 
現在你有一個公平的看法

00:01:29.690 --> 00:01:32.326 
關於自適應
數量並不那麼重要

00:01:32.860 --> 00:01:34.161 
我承認這點

00:01:34.228 --> 00:01:36.930 
但是我們知道它們不是同樣的設備

00:01:36.997 --> 00:01:39.066  
這不是10億臺最初的iPhone

00:01:39.132 --> 00:01:40.667  
所以這會是很酷的事
不是嗎？

00:01:41.201 --> 00:01:43.470  
這些年Apple發佈了大量設備

00:01:43.537 --> 00:01:47.207 
有不同的比例 尺寸和形狀

00:01:47.274 --> 00:01:48.775 
我是說甚至顏色

00:01:49.943 --> 00:01:51.979 
在Apple我們還相信

00:01:52.379 --> 00:01:55.949 
不管你擁有什麼設備
你可以按你喜歡的方式拿它們

00:01:56.016 --> 00:01:58.085 
不管是縱向還是橫向

00:01:58.986 --> 00:02:00.454 
但是除了這些物理設備本身

00:02:00.521 --> 00:02:03.957 
我們還有軟件特性
比如slide over

00:02:04.024 --> 00:02:06.860  
和這些多任務特性

00:02:06.927 --> 00:02:09.395  
並且增加可能的組合數

00:02:09.463 --> 00:02:10.964  
你的應用有可能面對

00:02:11.765 --> 00:02:13.500  
不要忘記其他事像是動態字體

00:02:13.567 --> 00:02:17.337  
在這用戶可以設置字體
然後所有應用

00:02:17.404 --> 00:02:20.307  
會起反應 重新佈局
你們現在都這樣做對嗎？

00:02:21.875 --> 00:02:26.380 
我們還有特性像是語言方向

00:02:26.446 --> 00:02:28.749 
它是從左到右或從右到左

00:02:29.016 --> 00:02:31.785 
我們在那些新iPad上還有顯示色域

00:02:31.852 --> 00:02:33.153 
我們將在今年發佈

00:02:33.220 --> 00:02:35.055  
Apple TV也有新特性

00:02:35.122 --> 00:02:37.724  
像淺色和深色界面樣式

00:02:38.325 --> 00:02:41.094  
保守估計可能的組合數

00:02:41.161 --> 00:02:45.365  
在iOS你的應用可能面對超過300
種組合

00:02:46.233 --> 00:02:47.134 
這麼多

00:02:47.901 --> 00:02:53.407 
這就是爲什麼說系統爲你做了
很多工作是個好消息

00:02:54.474 --> 00:02:56.610 
這裏的關鍵字是大部分

00:02:57.945 --> 00:03:01.315 
作爲開發者有很多方法

00:03:01.381 --> 00:03:03.350 
可以插入和定製體驗

00:03:03.417 --> 00:03:05.352 
因爲你想要你的應用有獨特外觀

00:03:05.419 --> 00:03:07.521 
這就是我們想要討論的

00:03:08.789 --> 00:03:13.060 
首先我們要討論自適應的基礎系統

00:03:13.126 --> 00:03:14.528 
我們稱之爲特徵系統

00:03:15.295 --> 00:03:17.164 
然後Brent會來給你一個演示

00:03:17.231 --> 00:03:21.134 
我們是怎麼改進用來開發
自適應應用的工具的

00:03:21.201 --> 00:03:23.704 
這就是我們在第一部分要覆蓋的
內容

00:03:24.004 --> 00:03:25.239 
是今天的議題

00:03:25.839 --> 00:03:28.775 
你們絕對會想在明天回來參加
第二部分

00:03:28.842 --> 00:03:30.677 
因爲我們會給你實用工具

00:03:30.744 --> 00:03:33.480 
關於新增加的技術和技巧

00:03:33.547 --> 00:03:36.416 
你們可以用來使你們的應用
自適應

00:03:36.817 --> 00:03:38.385 
然後我們會把這些放在一起

00:03:38.452 --> 00:03:42.389 
然後給你們一些很好的
演示和代碼例子

00:03:43.023 --> 00:03:47.094 
讓我們開始討論自適應的基礎系統

00:03:47.160 --> 00:03:48.262 
被稱爲特徵系統

00:03:48.328 --> 00:03:51.632 
有三件事我想要提出

00:03:51.698 --> 00:03:54.101 
首先我會告訴你它是什麼

00:03:54.168 --> 00:03:55.669 
這是一個很好的出發點

00:03:55.903 --> 00:03:59.206 
然後我們會討論特徵系統的一個
特定部分

00:03:59.273 --> 00:04:00.574 
我們稱之爲尺寸類

00:04:01.508 --> 00:04:05.579 
告訴你們這個系統是怎樣工作的
背景知識是個好主意

00:04:05.646 --> 00:04:08.682 
因爲這使得你怎樣和它互動更
清楚

00:04:10.317 --> 00:04:11.218 
什麼是特徵？

00:04:11.852 --> 00:04:16.255 
特徵描述你程序運行的環境

00:04:17.524 --> 00:04:20.360 
horizontalSizeClass
是一個特徵的例子

00:04:20.494 --> 00:04:23.463 
它描述體驗應該是怎樣的

00:04:23.530 --> 00:04:26.066 
當你的應用是水平時可用的空間

00:04:26.133 --> 00:04:28.202 
無論你擁有的空間有多少

00:04:28.268 --> 00:04:33.140 
一個特徵本身並沒有和它相關的值

00:04:33.207 --> 00:04:35.909 
這是特徵集合發揮作用的地方

00:04:36.443 --> 00:04:37.811 
你可以認爲特徵集合

00:04:37.878 --> 00:04:42.316 
是一個詞典映射鍵也就是特徵到值

00:04:42.883 --> 00:04:46.820 
大部分特徵有枚舉的可能值

00:04:46.887 --> 00:04:48.589 
所以你知道你要怎麼思考

00:04:48.655 --> 00:04:50.757 
關於開發你的應用

00:04:51.792 --> 00:04:54.061 
特徵集合通常包括不只一個東西

00:04:54.127 --> 00:04:55.028 
這很好

00:04:55.095 --> 00:04:56.196 
通常它們包含多個東西

00:04:56.263 --> 00:04:58.031 
即使你在屏幕上看到的3個

00:04:58.098 --> 00:05:01.335 
也小於特徵集合的大小

00:05:01.401 --> 00:05:04.938 
你使你的應用自適應時將要處理

00:05:06.540 --> 00:05:09.109 
讓我給你更多什麼是特徵的例子

00:05:09.176 --> 00:05:11.044 
我們會談論更多尺寸類

00:05:11.144 --> 00:05:14.314 
還有動態字體大小
這是今年新增的

00:05:15.048 --> 00:05:17.985 
還有佈局方向
從左到右或從右到左

00:05:18.051 --> 00:05:21.722 
這三個是佈局特徵的例子

00:05:22.222 --> 00:05:24.258 
特徵還可以描述外觀

00:05:24.591 --> 00:05:29.029 
正在運行的屏幕的色域是什麼

00:05:29.096 --> 00:05:33.333 
或對Apple TV界面樣式是什麼
是淺色還是深色

00:05:34.368 --> 00:05:36.403 
但是特徵還可以描述能力

00:05:36.470 --> 00:05:41.675 
你正在使用的設備是否
支持3D touch

00:05:42.843 --> 00:05:44.845 
如果你想要所有可能的特徵的
完整列表

00:05:44.912 --> 00:05:47.381 
你可以用來使你的應用自適應

00:05:47.447 --> 00:05:49.716 
查看UITraitCollection接口

00:05:49.983 --> 00:05:53.654 
但是現在我想要討論尺寸類

00:05:54.888 --> 00:05:58.625 
你的應用可能運行在很多不同的
尺寸上

00:05:59.193 --> 00:06:02.462 
這是所有可能的尺寸的滑稽簡化

00:06:03.497 --> 00:06:06.600 
它有三種

00:06:06.667 --> 00:06:08.669 
定製特別突出

00:06:08.735 --> 00:06:10.904 
一是屏幕尺寸

00:06:10.971 --> 00:06:12.673 
二是方向

00:06:12.973 --> 00:06:15.008 
三是適配

00:06:15.075 --> 00:06:17.511 
這就像是你在多任務模式裏

00:06:17.845 --> 00:06:19.947 
不使用形式系統來實現它的一個方式

00:06:20.013 --> 00:06:23.784 
是對其中的任何一個的改變進行響應

00:06:24.051 --> 00:06:25.586 
但那會帶來很多工作

00:06:27.454 --> 00:06:31.124 
所以你要做的是讓你的佈局基於

00:06:31.191 --> 00:06:33.527 
你的應用的可用空間

00:06:33.594 --> 00:06:36.964 
而不是那三個可定製的方面

00:06:37.564 --> 00:06:39.666 
我說的和可用空間互動是什麼意思？

00:06:39.733 --> 00:06:42.269 
我們有兩種方式和可用空間互動

00:06:42.336 --> 00:06:44.404 
給定改變的尺寸

00:06:44.671 --> 00:06:47.374 
所以有粗粒改變比如改變

00:06:47.441 --> 00:06:50.878 
從iPhone到iPad
在尺寸上是一個大的改變

00:06:51.411 --> 00:06:54.047 
還有細粒改變比如

00:06:54.114 --> 00:06:58.519 
從iPhone 6s到SE
這是小一些的改變

00:06:58.986 --> 00:07:01.622 
對每個改變
細粒或粗粒

00:07:01.688 --> 00:07:03.023 
你需要用到不同的技術

00:07:03.090 --> 00:07:04.892 
不同的技術會幫助你處理

00:07:05.659 --> 00:07:08.362 
讓我們從粗粒改變開始

00:07:10.097 --> 00:07:11.632 
這想我們都很熟悉這句引用

00:07:11.698 --> 00:07:13.267 
這是我最喜歡的引用

00:07:13.433 --> 00:07:17.704 
我們工程師喜歡創造間接的層
來幫我們解決問題

00:07:17.771 --> 00:07:20.240 
讓事情變簡單
誠實的說是懶

00:07:20.841 --> 00:07:23.744 
所以尺寸類
是一個間接層

00:07:24.411 --> 00:07:28.415 
間接層總是描述一些更高階的行爲

00:07:28.882 --> 00:07:30.517 
什麼高階行爲

00:07:30.584 --> 00:07:34.521 
是尺寸類正在描述的
那就是體驗

00:07:35.422 --> 00:07:37.357 
讓我給你2個例子

00:07:37.858 --> 00:07:41.595 
第一個是我們經常看到的典型例子

00:07:41.662 --> 00:07:43.263 
iPad上我們有一個主從佈局

00:07:43.330 --> 00:07:45.933 
信息被並行顯示

00:07:46.233 --> 00:07:50.070 
在主欄的改變會反應在右邊的詳情欄

00:07:51.171 --> 00:07:53.540 
但是在iPhone沒有這麼大的空間

00:07:53.607 --> 00:07:56.210 
我們顯示信息的方式改變了

00:07:56.643 --> 00:07:58.612 
我們用一個瀏覽控制器

00:07:58.679 --> 00:08:01.949 
我們會更多的用鑽入的方式呈現
信息

00:08:02.850 --> 00:08:04.084 
News是另一個例子

00:08:04.151 --> 00:08:07.120 
在iPad上我們有座標視圖

00:08:07.187 --> 00:08:11.191 
坐在沙發上滾動翻閱新聞

00:08:11.625 --> 00:08:13.293 
但在iPhone上
它是一個表格視圖

00:08:13.360 --> 00:08:15.796 
我只能快速用手指滾動

00:08:16.496 --> 00:08:20.300 
所以體驗取決於我們怎麼呈現信息

00:08:20.367 --> 00:08:22.936 
當你思考應用的粗粒改變時

00:08:23.003 --> 00:08:26.740 
思考這類體驗
你呈現信息的方式

00:08:26.807 --> 00:08:30.644 
來決定是否以及怎樣呈現那些信息

00:08:32.546 --> 00:08:33.480 
讓我們說一些具體的

00:08:33.547 --> 00:08:36.015 
我將複習一些高階的事情

00:08:36.383 --> 00:08:38.418 
什麼是尺寸類？

00:08:38.784 --> 00:08:40.921 
這是我們帶回特徵系統的地方

00:08:40.988 --> 00:08:43.023 
尺寸類有2個特徵

00:08:43.090 --> 00:08:46.193 
這是horizontalSizeClass
這是verticalSizeClass

00:08:46.260 --> 00:08:49.530 
有兩個可能值緊湊和普通

00:08:49.930 --> 00:08:52.666 
緊湊表明你的空間受限

00:08:52.733 --> 00:08:55.869 
所以你要用緊湊的方式呈現信息

00:08:56.703 --> 00:08:58.906 
普通說明你的空間不受限

00:08:58.972 --> 00:09:01.041 
你可以自由探索

00:09:01.575 --> 00:09:04.578 
至少到你12.9英寸的
iPad Pro的邊界

00:09:05.812 --> 00:09:07.981 
這表明我們有4個組合

00:09:08.248 --> 00:09:11.151 
關於特徵和可能的值

00:09:12.052 --> 00:09:14.054 
現在我想快速指出一些標註

00:09:14.121 --> 00:09:15.155 
我用在這個幻燈片中

00:09:15.222 --> 00:09:16.623 
因爲這些標註你會看到

00:09:16.690 --> 00:09:19.826 
在Interface Builder文檔和
這個系統的一些其他地方

00:09:20.127 --> 00:09:22.296 
所以它是描述尺寸類的組合

00:09:22.362 --> 00:09:24.031 
這裏有兩件事需要注意

00:09:24.431 --> 00:09:27.134 
首先這裏有一個W表明是寬度類

00:09:27.201 --> 00:09:30.037 
值C或者R代表緊湊和普通

00:09:30.103 --> 00:09:32.539 
H代表這是高度類或者垂直類

00:09:32.639 --> 00:09:34.341 
再一次有C或者R

00:09:34.575 --> 00:09:35.909 
我們在Interface Builder裏
看到這些

00:09:35.976 --> 00:09:37.778 
你也會在文檔中看到

00:09:37.845 --> 00:09:39.780 
我希望你們熟悉它

00:09:40.547 --> 00:09:43.217 
一些設備是怎麼被歸類到這些組合？

00:09:43.784 --> 00:09:47.054 
一個緊湊的寬度
但是高度的普通的

00:09:47.120 --> 00:09:49.890 
比如說縱向的iPhone

00:09:50.524 --> 00:09:53.560 
iPad是普通的寬度和高度

00:09:53.627 --> 00:09:56.363 
在兩種方向上

00:09:57.297 --> 00:10:00.968 
你會看到橫向的iPhone有緊湊
的寬度和高度

00:10:01.034 --> 00:10:03.637 
6s Plus是一個例外

00:10:03.704 --> 00:10:06.006 
在水平時有普通寬度

00:10:06.073 --> 00:10:08.942 
當它橫向時
這就是爲什麼你看到主從佈局

00:10:09.009 --> 00:10:11.778 
比如郵件 當你用6s Plus時

00:10:15.616 --> 00:10:17.117 
這會怎麼幫助我？

00:10:17.384 --> 00:10:19.086 
這怎麼使我的生活變容易？

00:10:19.152 --> 00:10:21.088 
一個明顯的事是不需思考

00:10:21.154 --> 00:10:24.424 
300種組合
你只需要思考4種

00:10:25.025 --> 00:10:26.159 
但是等等
它變得更好

00:10:26.660 --> 00:10:28.729 
你只需要思考兩種

00:10:28.996 --> 00:10:34.234 
因爲寬度類是最常用的特徵類

00:10:34.301 --> 00:10:35.836 
你需要處理的

00:10:36.503 --> 00:10:38.338 
如果我們考慮所有可能的特徵

00:10:38.405 --> 00:10:41.308 
佈局特徵是最常見的類別

00:10:41.475 --> 00:10:42.709 
在我們要打交道的特徵中

00:10:43.143 --> 00:10:47.147 
在佈局特徵中尺寸類是最常見的
佈局特徵

00:10:47.214 --> 00:10:48.348 
你將會打交道

00:10:48.415 --> 00:10:51.518 
特別是尺寸類和寬度類

00:10:51.752 --> 00:10:54.721 
是目前爲止你最常打交道的類

00:10:55.122 --> 00:10:57.124 
也就是說你設計你的應用

00:10:57.191 --> 00:10:58.992 
考慮你想要它們如何不同

00:10:59.059 --> 00:11:00.961 
在iPad和iPhone之間

00:11:01.261 --> 00:11:04.431 
主要是思考水平的不同

00:11:05.299 --> 00:11:07.134 
當然你們會有定製的應用

00:11:07.201 --> 00:11:09.136 
你們會做特別的事
我們知道

00:11:09.469 --> 00:11:13.740 
但是最常見的情況是隻考慮
寬度類

00:11:14.908 --> 00:11:17.110 
現在系統需要決定

00:11:17.544 --> 00:11:22.015 
設備 方向 適配怎樣符合這些組合

00:11:23.116 --> 00:11:24.084 
有趣的地方是

00:11:24.151 --> 00:11:27.754 
這些組合會在相同的設備
上改變

00:11:27.821 --> 00:11:29.923 
隨着用戶操作你的應用

00:11:29.990 --> 00:11:32.593 
我可以帶來slide over
我可以進入多任務

00:11:32.759 --> 00:11:34.761 
我可以改變設備的方向

00:11:35.229 --> 00:11:37.598 
所以如果你使用尺寸類

00:11:37.664 --> 00:11:40.100 
要表現你的數據

00:11:40.367 --> 00:11:42.236 
系統會爲你做很多工作

00:11:42.302 --> 00:11:45.839 
它會在所有設備和方向間過渡

00:11:45.906 --> 00:11:47.975 
適配過去現在和未來

00:11:48.442 --> 00:11:51.411 
這很有幫助
這簡化你的工作

00:11:51.478 --> 00:11:53.380 
使你的應用自適應

00:11:55.182 --> 00:11:57.251 
讓我給你一些例子關於動態

00:11:57.317 --> 00:11:59.753 
改變發生在系統裏的

00:12:00.521 --> 00:12:03.090 
再次回到split view控制器

00:12:03.690 --> 00:12:05.792 
當我的iPad是橫向時

00:12:05.859 --> 00:12:08.195 
我們會有並排的兩個視圖控制器

00:12:08.262 --> 00:12:10.330 
但是在iPhone上我們摺疊它

00:12:10.564 --> 00:12:11.765 
到一個瀏覽控制器

00:12:12.132 --> 00:12:15.536 
若你使用UI Split View控制器
你會自動得到這個行爲

00:12:16.336 --> 00:12:19.973 
除了視圖控制器結構
這還作用於展示

00:12:20.274 --> 00:12:23.877 
假設我有一個iPad我帶來一個彈出
它將會是這種標註樣式

00:12:24.311 --> 00:12:28.248 
但是在iPhone它會變成模型展示
樣式

00:12:28.749 --> 00:12:31.818 
再一次 若你使用套件裏的控制和展示

00:12:31.885 --> 00:12:34.087 
你就會得到很多爲你預設好的行爲

00:12:34.421 --> 00:12:35.856 
尺寸類會改變

00:12:35.923 --> 00:12:37.691 
而你的應用會自動適應

00:12:38.058 --> 00:12:38.926 
這很整潔

00:12:40.727 --> 00:12:42.396 
讓我們來談談細粒改變

00:12:42.462 --> 00:12:43.664 
我只想說一點

00:12:43.730 --> 00:12:46.500 
那也是在尺寸類中

00:12:46.567 --> 00:12:51.972 
你會想要使用自動佈局
來對可用空間的變化做出反應

00:12:52.306 --> 00:12:54.975 
在自動佈局中你可以指定佈局的關係

00:12:55.042 --> 00:12:56.443 
在一個非常有陳述性的表格中

00:12:56.710 --> 00:12:58.245 
然後系統就會自動移動元素

00:12:58.312 --> 00:13:01.915 
並且改變元素的大小
當可用的空間改變時

00:13:02.049 --> 00:13:03.350 
在更細分的層次

00:13:04.751 --> 00:13:08.655 
除了粗粒和細粒還有一種改變

00:13:08.722 --> 00:13:11.024 
我稱之爲中粒改變

00:13:11.458 --> 00:13:12.960 
我不打算告訴你它是什麼

00:13:13.026 --> 00:13:14.228 
我會保持懸念

00:13:14.294 --> 00:13:15.662 
這樣你們就會回來看第二部分

00:13:15.729 --> 00:13:18.098 
他們會告訴你關於中粒改變的一切

00:13:19.867 --> 00:13:22.402 
我們已經談過了什麼是尺寸類

00:13:22.469 --> 00:13:25.038 
我們向你展示了特徵系統

00:13:25.405 --> 00:13:26.907 
我現想告訴你們一些背景知識

00:13:26.974 --> 00:13:28.275 
關於系統怎麼工作

00:13:28.442 --> 00:13:30.410 
以及作爲開發者
你們怎麼插入其中

00:13:32.713 --> 00:13:34.948 
用一句話簡而言之

00:13:35.115 --> 00:13:36.316 
特徵系統工作的方式

00:13:36.383 --> 00:13:39.186 
是它得到一個特徵集合並且把它
向下傳遞

00:13:39.253 --> 00:13:42.589 
穿過你的視圖結構
給一路上的所有停止點

00:13:42.656 --> 00:13:44.758 
一個處理特徵集合的機會

00:13:45.359 --> 00:13:48.462 
這都是從屏幕層開始
屏幕會得到一個特徵集合

00:13:48.795 --> 00:13:50.097 
需要注意的重點

00:13:50.163 --> 00:13:53.734 
是每個設備 方向 適配

00:13:53.800 --> 00:13:56.370 
都會有一個完整的指定的特徵集合

00:13:56.670 --> 00:14:00.040 
也就是說不同的特徵會有值

00:14:01.241 --> 00:14:02.943 
然後屏幕會向下傳遞給所有窗口

00:14:03.010 --> 00:14:06.046 
在那個屏幕上
窗口將把它傳遞

00:14:06.113 --> 00:14:08.348 
給它的視圖的根視圖控制器

00:14:08.415 --> 00:14:11.818 
然後再不停地傳遞給子視圖控制器
和子視圖

00:14:12.853 --> 00:14:18.525 
現在這一路上的每一個停止點都
符合UITraitEnvironment

00:14:18.592 --> 00:14:23.096 
UITraitEnvironment有一個被稱爲
traitCollectionDidChange的關鍵方法

00:14:23.430 --> 00:14:25.365 
在這一路上的每個停止點
這個特徵集合

00:14:25.432 --> 00:14:28.802 
被向下傳遞都會調用
traitCollectionDidChange

00:14:29.102 --> 00:14:31.972 
這是開發者需要覆蓋的方法

00:14:32.172 --> 00:14:34.074 
來使你的應用自適應

00:14:34.408 --> 00:14:36.910 
traitCollectionDidChange
是這裏的關鍵方法

00:14:37.611 --> 00:14:40.414 
你基本上只需要覆蓋它

00:14:40.547 --> 00:14:42.683 
在視圖控制器和視圖這層

00:14:44.184 --> 00:14:45.853 
這是一個簡單的線性例子

00:14:45.919 --> 00:14:47.721 
什麼是複雜一點的例子？

00:14:48.121 --> 00:14:50.424 
讓我們看橫向的iPad

00:14:50.490 --> 00:14:52.059 
我們有自己的屏幕
到這個窗口

00:14:52.125 --> 00:14:54.027 
向下到視圖split view
控制器等等

00:14:54.094 --> 00:14:56.730 
在這裏我們看到發生了變化

00:14:57.064 --> 00:15:00.000 
當特徵集合向下傳遞時

00:15:00.067 --> 00:15:02.102 
實際上你可以改變特徵集合

00:15:02.169 --> 00:15:04.438 
當向子視圖控制器傳遞時

00:15:04.872 --> 00:15:06.907 
split view控制器
將會爲你這樣做

00:15:06.974 --> 00:15:07.908 
它將要做的是

00:15:07.975 --> 00:15:12.412 
改變它要傳遞給特徵集合主視圖
控制器的特徵集合

00:15:12.479 --> 00:15:14.882 
它要改變
horizontalSizeClass

00:15:14.948 --> 00:15:17.017 
爲一個緊湊尺寸類

00:15:17.084 --> 00:15:19.653 
而向細節視圖傳遞一個普通的

00:15:19.920 --> 00:15:21.021 
你們也可以這樣做

00:15:21.088 --> 00:15:24.258 
當你們開發你們自己的視圖
控制器容器時

00:15:24.558 --> 00:15:27.160 
但是一般你們不需要這樣做

00:15:28.595 --> 00:15:31.231 
這是traitCollectionDidChange
是什麼樣子的例子

00:15:31.298 --> 00:15:33.734 
我會帶你看一些關鍵點

00:15:34.034 --> 00:15:35.969 
首先爲了讓系統幫你完成一系列
工作

00:15:36.036 --> 00:15:37.371 
你需確保調用super函數

00:15:38.071 --> 00:15:40.974 
接下來你希望工作只在特徵

00:15:41.041 --> 00:15:42.910 
你感興趣的特徵改變了

00:15:43.510 --> 00:15:45.045 
我聽到了你的問題

00:15:45.345 --> 00:15:47.314 
traitCollectionDidChange
被調用了

00:15:47.381 --> 00:15:48.682 
這難道不表明特徵改變了？

00:15:48.749 --> 00:15:50.050 
這是對的

00:15:50.117 --> 00:15:53.654 
特徵集合在任何特徵改變時被調用

00:15:54.188 --> 00:15:56.290 
通常你的應用只想知道少量的特徵

00:15:56.356 --> 00:16:01.195 
大多數情況下只是水平尺寸類

00:16:01.395 --> 00:16:04.031 
所以你想要確保你沒有做額外的工作

00:16:04.097 --> 00:16:07.100 
如果你感興趣的特徵沒有改變

00:16:08.535 --> 00:16:11.271 
接下來我要改變可能的值

00:16:11.338 --> 00:16:13.340 
對horizontalSizeClass

00:16:13.407 --> 00:16:14.641 
作爲一個邊注

00:16:14.975 --> 00:16:17.578 
我傾向於使用switch語句

00:16:17.644 --> 00:16:20.914 
當我在Swift和Objective-C裏
處理枚舉類型時

00:16:20.981 --> 00:16:24.451 
因爲這表明枚舉的申明改變時

00:16:24.518 --> 00:16:28.021 
如果有一個新的類型
我會在構建時得到警告

00:16:28.355 --> 00:16:30.157 
若我在使用詳盡的switch語句

00:16:30.490 --> 00:16:32.559 
我鼓勵你們也這樣做

00:16:32.626 --> 00:16:34.194 
這節省了我大量時間

00:16:35.329 --> 00:16:37.197 
比如說它的值是緊湊

00:16:37.264 --> 00:16:39.399 
我會離開來設置我的約束條件

00:16:39.800 --> 00:16:43.737 
所以對所有要自適應的視圖
和視圖控制器

00:16:43.804 --> 00:16:47.007 
traitCollectionDidChange
需要被覆蓋

00:16:48.041 --> 00:16:50.077 
再一次這會調用所有符合

00:16:50.143 --> 00:16:51.712 
UITraitEnvironment的方法

00:16:51.879 --> 00:16:54.548 
這是你進行自適應的地方

00:16:55.315 --> 00:16:57.351 
看起來要做很多工作

00:16:57.417 --> 00:16:59.319 
實現
traitCollectionDidChange

00:16:59.386 --> 00:17:01.421 
對每一個視圖和視圖控制器

00:17:01.488 --> 00:17:03.724 
對你應用所有可能的改變

00:17:04.223 --> 00:17:05.526 
很多事有可能改變

00:17:05.992 --> 00:17:08.962 
所以有很多系統會爲你處理

00:17:09.029 --> 00:17:11.431 
traitCollectionDidChange

00:17:12.098 --> 00:17:14.734 
比如一個系統是
Interface Builder

00:17:14.800 --> 00:17:17.671 
若你使用Interface 
Builder 來構造你的界面

00:17:17.738 --> 00:17:21.275 
你在Interface Builder裏
使用自適應性和尺寸類

00:17:21.340 --> 00:17:23.676 
系統知道怎樣自動應用

00:17:23.743 --> 00:17:25.244 
當特徵集合改變時

00:17:26.046 --> 00:17:28.048 
另一個例子是資產類別

00:17:28.115 --> 00:17:30.184 
你可以針對不同的色域指定不同的圖像

00:17:30.250 --> 00:17:32.686 
不同的尺寸類
不同的比例

00:17:32.753 --> 00:17:36.356 
都會在traitCollectionDidChange
裏被應用

00:17:37.024 --> 00:17:41.828 
最後UIAppearance
可以爲了特徵集合被定製

00:17:41.895 --> 00:17:44.498 
所以你可以用不同的顏色方案

00:17:44.565 --> 00:17:46.934 
針對Apple TV的
淺色和深色模式

00:17:47.000 --> 00:17:49.536 
這些改變都會自動被應用

00:17:49.603 --> 00:17:51.572 
在traitCollectionDidChange中

00:17:51.638 --> 00:17:53.307 
你會想借助這些系統

00:17:53.373 --> 00:17:54.808 
爲你處理這些

00:17:54.875 --> 00:17:56.977 
這讓你很清楚地表明

00:17:57.044 --> 00:17:59.880 
關於你想要你的界面怎麼應對和
適應

00:17:59.947 --> 00:18:02.282 
這使得遵守和維護都變得非常簡單

00:18:03.817 --> 00:18:07.387 
回顧一下我們這麼久所看到的

00:18:07.754 --> 00:18:11.925 
特徵描述你的應用運行的環境

00:18:11.992 --> 00:18:14.494 
特徵集合是一系列的特徵

00:18:14.561 --> 00:18:16.096 
有它們相關聯的值

00:18:16.230 --> 00:18:20.434 
可能是佈局特徵
外觀特徵

00:18:20.501 --> 00:18:21.935 
也可以是性能特徵

00:18:23.003 --> 00:18:24.805 
要覆蓋
traitCollectionDidChange

00:18:24.872 --> 00:18:26.840 
來使你的應用自適應

00:18:27.007 --> 00:18:29.009 
你想要藉助系統來響應

00:18:29.076 --> 00:18:30.878 
traitCollectionDidChange

00:18:31.912 --> 00:18:34.982 
尺寸類描述你的應用的體驗

00:18:35.215 --> 00:18:37.217 
你的信息是怎麼編排的

00:18:38.051 --> 00:18:40.053 
然後回來

00:18:40.120 --> 00:18:42.356 
系統可以爲你做如此多的工作

00:18:42.422 --> 00:18:44.958 
如果你藉助我們給你的這些工具

00:18:46.460 --> 00:18:51.331 
我再用20分鐘來展示自適應的
強大之處

00:18:51.765 --> 00:18:54.635 
要看它有多酷
你需要在活動中看到它

00:18:55.135 --> 00:18:58.238 
所以我想請Brent來演示那些改變

00:18:58.305 --> 00:19:01.642 
我們一直對工具所做的
來改進自適應的工作流程

00:19:01.708 --> 00:19:03.177 
有請Brent Shank

00:19:09.283 --> 00:19:10.184 
謝謝你Kevin

00:19:10.350 --> 00:19:12.452 
現在你們知道了基本的構造組件

00:19:12.519 --> 00:19:14.588 
用來增加應用的自適應性

00:19:14.788 --> 00:19:17.925 
那就是特徵 特徵集合和尺寸類

00:19:17.991 --> 00:19:19.493 
我們演示Xcode怎樣

00:19:19.560 --> 00:19:22.296 
還有Interface
Builder編輯器 使這變得容易

00:19:22.729 --> 00:19:23.931 
讓我去演示電腦

00:19:25.766 --> 00:19:27.267 
離這挺遠

00:19:31.905 --> 00:19:36.410 
我認爲構建一個簡單的視圖很有
幫助

00:19:36.810 --> 00:19:40.113 
來聚焦到特徵集合系統的根本

00:19:40.447 --> 00:19:41.949 
來添加一點自適應性

00:19:42.449 --> 00:19:43.684 
這就是我們要構建的

00:19:43.750 --> 00:19:45.252 
這很簡單

00:19:45.319 --> 00:19:47.554 
這描述一個位置
我選擇Tenaya湖

00:19:47.621 --> 00:19:49.056 
你應該把它加進列表

00:19:49.122 --> 00:19:51.191 
這是個很棒的地方
在Yosemite

00:19:51.391 --> 00:19:53.393 
這個視圖在頂部顯示一個標籤

00:19:53.460 --> 00:19:55.662 
在底部是這個地方的圖像

00:19:56.063 --> 00:19:58.899 
請注意在iPad上有一些改變

00:19:58.966 --> 00:20:01.435 
一些元素在iPhone上沒有出現

00:20:01.735 --> 00:20:02.636 
你看到在頂部

00:20:03.303 --> 00:20:04.805 
標籤看起來不同

00:20:04.872 --> 00:20:08.041 
那隻出現在iPad上

00:20:08.275 --> 00:20:09.877 
我們現在要構建這些

00:20:09.943 --> 00:20:13.113 
你會看到這在Xcode 8裏使用
工具來做多麼簡單

00:20:13.914 --> 00:20:16.216 
我已經創建了這個項目
我會轉到

00:20:16.984 --> 00:20:20.020 
這個標籤頁
我已有載入好的storyboard

00:20:20.621 --> 00:20:22.890 
有一些東西值得看一下

00:20:22.956 --> 00:20:26.226 
在Xcode 8 Interface
Builder 畫布裏

00:20:26.760 --> 00:20:28.662 
首先請看視圖是怎麼被渲染的

00:20:29.296 --> 00:20:31.365 
看起來就像縱向的iPhone 6s

00:20:31.431 --> 00:20:32.933 
因爲它確實就是

00:20:32.999 --> 00:20:35.702 
我們用模擬器來渲染這些內容

00:20:35.969 --> 00:20:39.306 
你在設計畫布裏得到像素完美渲染

00:20:39.406 --> 00:20:42.242 
我們認爲這對你的工作流程
有巨大的幫助

00:20:42.476 --> 00:20:44.011 
當你嘗試將這些美麗的設計

00:20:44.077 --> 00:20:46.880 
從設計者那帶入你的應用時

00:20:47.981 --> 00:20:49.683 
另一個值得注意的事是那個

00:20:50.083 --> 00:20:50.984 
謝謝

00:20:55.088 --> 00:20:57.925 
另一個大的改變是現在
在Interface Builder畫布裏的場景

00:20:57.991 --> 00:21:01.528 
總是被按照真實設備的尺寸來渲染

00:21:01.595 --> 00:21:03.030 
或者它們的一個配置

00:21:03.597 --> 00:21:05.799 
相比前個版本的Xcode
這是一個大的改變

00:21:06.300 --> 00:21:09.136 
讓我們看看其他新特性

00:21:09.203 --> 00:21:11.738 
我在底部這條這裏放大

00:21:11.805 --> 00:21:13.640 
你可以看到所有東西

00:21:13.907 --> 00:21:16.543 
這是Interface Builder
畫布的底部按鈕條

00:21:16.677 --> 00:21:17.978 
它存在有一段時間了

00:21:18.045 --> 00:21:20.514 
在右手邊你可以看到控制

00:21:20.581 --> 00:21:21.882 
用來添加布侷限制條件

00:21:22.082 --> 00:21:23.217 
我希望你對它們熟悉

00:21:23.584 --> 00:21:27.120 
在中間是Xcode 8的
新的放大控制

00:21:27.187 --> 00:21:29.723 
如果你還沒有安裝和試用beta版

00:21:29.790 --> 00:21:31.692 
很吸引人的一點是可以編輯你的
場景

00:21:31.859 --> 00:21:33.627 
在任何縮放級別中

00:21:33.694 --> 00:21:35.195 
請一定試用一下
它很棒

00:21:40.300 --> 00:21:43.103 
但是今天我想談的是這裏的這個
按鈕

00:21:43.704 --> 00:21:45.439 
它說視圖作爲iPhone 6s

00:21:45.506 --> 00:21:48.008 
在括號裏有標註說

00:21:48.075 --> 00:21:49.376 
如果你坐在後面看不到

00:21:50.210 --> 00:21:51.645 
它說wC hR

00:21:51.845 --> 00:21:53.547 
這是告訴我尺寸類

00:21:53.614 --> 00:21:56.116 
我正在查看的設備配置的尺寸類

00:21:56.350 --> 00:21:57.818 
這是一縱向iPhone 6s

00:21:57.985 --> 00:22:01.255 
也就是說它是有緊湊寬度和
正常長度的設備

00:22:01.321 --> 00:22:03.323 
這是一些Kevin談過的術語

00:22:03.390 --> 00:22:06.460 
我會展示怎麼用它們來添加適應性

00:22:07.661 --> 00:22:10.931 
場景被渲染在
縱向的iPhone 6s上

00:22:10.998 --> 00:22:12.366 
如果我想要改變它呢？

00:22:12.432 --> 00:22:15.402 
你只需要點擊查看作爲按扭

00:22:15.469 --> 00:22:17.671  
它會打開新的設備配置條

00:22:17.738 --> 00:22:20.040  
它是Xcode 8中全新的
很酷

00:22:25.045 --> 00:22:27.447 
我放大了讓你看清楚

00:22:27.514 --> 00:22:29.816 
這裏有很多堆疊的圖標

00:22:29.883 --> 00:22:31.618 
最左邊的一堆表示

00:22:31.685 --> 00:22:34.821 
Apple目前推出的不同的設備尺寸

00:22:34.888 --> 00:22:37.057 
我們在左邊有最大的iPad

00:22:37.291 --> 00:22:39.493 
在右邊有最小的iPhone

00:22:39.860 --> 00:22:42.029 
緊鄰它的是一堆按鈕

00:22:42.095 --> 00:22:45.098 
讓你選擇想要查看場景的方向

00:22:45.165 --> 00:22:46.500 
我現在就要這麼做

00:22:46.800 --> 00:22:48.135 
我要轉到橫向

00:22:48.202 --> 00:22:51.538 
在設計畫布中你可以在所有設備
中循環

00:22:51.605 --> 00:22:55.442 
還可以循環所有方向
來查看你的內容會被怎樣顯示

00:22:55.509 --> 00:22:56.643 
和渲染
這很酷

00:22:57.845 --> 00:22:58.745 
謝謝

00:23:01.815 --> 00:23:06.019 
所以iPhone很有趣
但是iPad更有趣

00:23:06.086 --> 00:23:07.321  
我現在選擇一個

00:23:07.754 --> 00:23:10.424  
你可以看到那有一系列其他的按鈕

00:23:10.490 --> 00:23:12.626  
出現
它代表適配

00:23:12.759 --> 00:23:16.763 
iPhone對每個方向只有一個適配
就是全屏

00:23:17.397 --> 00:23:20.100 
iPad有趣一些
因爲你的應用

00:23:20.400 --> 00:23:24.004 
你的用戶可以選擇在slide over
或split view中運行你的應用

00:23:24.071 --> 00:23:25.572 
這就是在這裏適配是什麼

00:23:25.739 --> 00:23:29.309 
如果你選擇這個你會看到
屏幕現在渲染

00:23:29.376 --> 00:23:33.914 
這個應用就好像用戶在iPad
中的slide over中運行它一樣

00:23:33.981 --> 00:23:35.883 
所以在設計畫布中就考慮這些

00:23:35.949 --> 00:23:38.418  
你可以在所有配置中循環

00:23:38.619 --> 00:23:40.587 
所有的方向 設備

00:23:41.088 --> 00:23:42.789 
來查看你的內容會被如何編排

00:23:42.856 --> 00:23:44.625 
這是一個很強大的新工作流程

00:23:44.925 --> 00:23:46.260 
會節約你大量時間

00:23:52.332 --> 00:23:55.202 
這就是Xcode 8
中Interface Builder的新功能

00:23:55.269 --> 00:23:57.971 
現在我們來看看構建這個視圖
要進行的工作

00:23:58.438 --> 00:24:00.040 
這是我們首先要做的

00:24:00.107 --> 00:24:01.008 
我們要添加這個標籤

00:24:01.308 --> 00:24:05.212 
我們要這樣添加它
它就會在所有設備配置中生效

00:24:05.546 --> 00:24:08.882 
這可能是你在Interface
Builder中做的最多的

00:24:09.149 --> 00:24:13.253 
你通常不太基於尺寸類來定製化

00:24:13.820 --> 00:24:14.988 
讓我們現在這樣做

00:24:15.589 --> 00:24:20.494 
我有設備定製條
iPads被選中了

00:24:20.561 --> 00:24:22.196 
什麼被選中並不重要

00:24:22.262 --> 00:24:25.332 
因爲我將要做的是使它作用於
每一個

00:24:26.233 --> 00:24:29.203 
我在Interface
Builder庫裏 找到標籤

00:24:29.269 --> 00:24:30.304 
我把它拖出來

00:24:30.938 --> 00:24:33.740 
我現在要添加一些自動佈局
約束條件

00:24:33.807 --> 00:24:36.376 
就像Kevin說過的
這是系統的一個功能

00:24:36.443 --> 00:24:40.714 
我們提供它使得

00:24:40.781 --> 00:24:43.517 
你的UI適應所有不同的設備配置

00:24:43.951 --> 00:24:45.152 
我要添加一些約束條件

00:24:45.652 --> 00:24:50.190 
我要把它固定到頂部
做爲垂直間距

00:24:50.557 --> 00:24:53.060 
我把這個在容器裏水平居中

00:24:53.393 --> 00:24:55.762 
我在它們間加入垂直間距的約束

00:24:56.196 --> 00:24:58.765 
垂直間距下的圖像視圖

00:24:59.399 --> 00:25:03.971 
我有一些內容我要粘貼到這
看起來不錯

00:25:04.037 --> 00:25:06.974 
我有一個約束
在這個圖像視圖

00:25:07.040 --> 00:25:09.042 
和頂部的佈局之間
我不再需要它了

00:25:09.142 --> 00:25:10.377 
因爲我添加了標籤

00:25:11.578 --> 00:25:12.613 
我要刪除它

00:25:12.980 --> 00:25:15.716 
我如何知道做的是正確的
並且添加了正確的約束條件？

00:25:15.782 --> 00:25:18.085 
這就是設備配置條發揮作用的地方

00:25:18.151 --> 00:25:21.255 
因爲看它在iPhone中是怎樣顯示
的很容易

00:25:21.321 --> 00:25:23.090  
你可以看到它停留在正確的位置

00:25:23.156 --> 00:25:27.394 
我遍歷所有的設備甚至不同的方向

00:25:27.528 --> 00:25:28.362 
好的

00:25:28.428 --> 00:25:30.964 
這是你常用的操作

00:25:31.231 --> 00:25:34.001 
每天都在Interface
Builder中做 很容易

00:25:34.801 --> 00:25:37.204 
讓我們來添加一些適應性

00:25:37.271 --> 00:25:39.973 
一些利用特徵集合系統的定製化

00:25:40.707 --> 00:25:41.775 
我們現在要做什麼？

00:25:42.276 --> 00:25:45.646 
我們要修改這個標籤
頂部這個標籤的字體

00:25:46.113 --> 00:25:50.717 
設計師想用System Semibold 36
但是隻針對iPad

00:25:51.585 --> 00:25:53.020 
讓我們回到storyboard

00:25:54.154 --> 00:25:57.858 
當你考慮爲一個設備添加定製化

00:25:58.058 --> 00:26:00.627 
你應該考慮的是添加定製

00:26:00.694 --> 00:26:04.097 
給一個特定的特徵集合
在這個例子中是一個尺寸類

00:26:04.498 --> 00:26:08.168 
我們爲所有的iPad
和iPhone進行設計

00:26:08.502 --> 00:26:11.138 
但是作爲一個開發者
你應該能夠轉化

00:26:11.205 --> 00:26:13.907 
它成爲尺寸類
你想要針對的

00:26:14.274 --> 00:26:15.409 
我們使這變得很容易

00:26:15.576 --> 00:26:21.215 
比如我有一個iPad和尺寸類
在設備條被選定了

00:26:21.281 --> 00:26:23.016 
我會放大這樣你可以看到

00:26:23.550 --> 00:26:26.019  
它顯示普通寬度 普通高度

00:26:26.186 --> 00:26:27.187  
所以你不需要猜測

00:26:27.254 --> 00:26:30.257  
一個特定設備配置的尺寸類是什麼

00:26:30.324 --> 00:26:32.459  
你只需要在設備條中選擇配置

00:26:32.526 --> 00:26:34.461  
Interface Builder
會告訴你尺寸類是什麼

00:26:34.661 --> 00:26:36.196  
我們認爲這是另一個優秀的改進

00:26:36.797 --> 00:26:39.967  
現在讓我們介紹

00:26:40.133 --> 00:26:43.770 
讓我們看看這個標籤在不同尺寸類
中看起來是怎樣的

00:26:44.571 --> 00:26:46.173 
我在畫布中選中它

00:26:47.140 --> 00:26:48.842 
然後來到屬性查看器

00:26:48.909 --> 00:26:50.477 
我已經選擇了它

00:26:50.844 --> 00:26:52.012 
我會再放大

00:26:52.079 --> 00:26:54.414 
所以你可以看清楚這個查看器

00:26:56.149 --> 00:26:59.586 
你看到那有很多屬性

00:26:59.720 --> 00:27:00.787 
這個光標真大

00:27:00.854 --> 00:27:02.389 
邊上有一個+按鈕

00:27:02.823 --> 00:27:05.692 
這個+按鈕表明那個屬性

00:27:05.759 --> 00:27:08.462 
可以用特徵集合系統來定製

00:27:09.296 --> 00:27:10.364 
讓我們現在就這麼做

00:27:10.631 --> 00:27:12.533 
我想要改變字體所以我點擊這裏

00:27:12.599 --> 00:27:15.702 
出現菜單允許我添加定製化

00:27:15.769 --> 00:27:17.538 
爲普通寬度 普通高度

00:27:18.205 --> 00:27:19.306 
它爲什麼這麼做？

00:27:19.373 --> 00:27:21.642 
因爲我有普通寬度

00:27:21.742 --> 00:27:23.944 
普通高度的設備配置被選中了

00:27:24.011 --> 00:27:25.012 
這是有意義的

00:27:25.879 --> 00:27:28.315 
我們將這麼做
會發生的事是

00:27:28.382 --> 00:27:32.019 
那個屬性查看器現在爲字體
顯示另一行

00:27:32.119 --> 00:27:33.654 
再次 它有同樣的標註

00:27:33.954 --> 00:27:37.424 
和我在設備條中看到的屬性查看器

00:27:37.491 --> 00:27:39.259 
這就是爲什麼它很重要

00:27:39.326 --> 00:27:41.628 
在這裏你知道發生了什麼

00:27:45.432 --> 00:27:47.801 
讓我們來改變
我會調出字體編輯器

00:27:48.001 --> 00:27:51.705 
我選擇Semibold
因爲我總是照着設計師說的做

00:27:51.805 --> 00:27:52.639 
36

00:27:53.040 --> 00:27:54.474 
然後點擊完成

00:27:54.775 --> 00:27:58.145 
你可以看到在畫布上渲染的更新

00:27:58.212 --> 00:27:59.479 
如果我選擇iPhone

00:28:01.114 --> 00:28:02.416 
我可以預期會發生的是

00:28:02.516 --> 00:28:04.484 
字體會和剛纔改變之前一樣

00:28:04.585 --> 00:28:07.921 
因爲我只針對普通寬度 普通高度
的設備

00:28:07.988 --> 00:28:09.122 
在那次編輯中

00:28:09.790 --> 00:28:13.026 
這就是使用屬性查看器的例子

00:28:13.093 --> 00:28:15.762 
添加基於尺寸類的定製化

00:28:16.129 --> 00:28:17.598 
這是第一個定製

00:28:18.031 --> 00:28:19.800 
讓我們添加另一個

00:28:19.867 --> 00:28:22.636 
這次我想要添加這個標籤

00:28:22.703 --> 00:28:24.771 
我想只針對iPad

00:28:25.439 --> 00:28:26.940 
我回到storyboard

00:28:27.441 --> 00:28:29.409 
因爲我想對iPad添加這個定製

00:28:29.476 --> 00:28:31.144 
我需要在設備條中選擇它

00:28:31.478 --> 00:28:35.015 
請注意設備條上的這個按鈕

00:28:35.082 --> 00:28:36.850 
上面寫的是爲特徵改變

00:28:37.384 --> 00:28:40.087 
當你點擊這個按鈕時會出現一個
彈出窗口

00:28:40.153 --> 00:28:43.390 
問你我們想要怎樣介紹這個特徵

00:28:43.457 --> 00:28:44.491 
什麼樣的特徵

00:28:44.558 --> 00:28:46.360 
你想要針對的特徵集合

00:28:47.461 --> 00:28:48.328 
這是什麼意思？

00:28:48.395 --> 00:28:49.596 
我有一個普通寬度

00:28:49.663 --> 00:28:54.001 
普通高度尺寸類設備配置

00:28:54.268 --> 00:28:56.670 
我可以選擇對普通寬度普通高度
進行定製

00:28:56.737 --> 00:28:58.705 
如果我點擊這兩個複選框

00:28:59.173 --> 00:29:02.342 
但我也可以選擇定製普通寬度

00:29:02.442 --> 00:29:05.646 
任意高度
或任意高度普通寬度

00:29:05.712 --> 00:29:06.613 
好的

00:29:06.680 --> 00:29:10.317 
我想要定製普通寬度而已

00:29:10.784 --> 00:29:11.718  
所以我這樣做

00:29:11.785 --> 00:29:14.087  
這個工具條顯示藍色陰影來告訴我

00:29:14.488 --> 00:29:17.491  
我將做基於尺寸類的定製

00:29:17.925 --> 00:29:21.128  
讓我們看看這個工具條的內容

00:29:22.029 --> 00:29:23.030  
我會在這放大

00:29:24.498 --> 00:29:28.335 
你可以看到它說我將改變8個
普通寬度的設備

00:29:28.402 --> 00:29:29.736 
設備配置

00:29:29.803 --> 00:29:31.939 
我看到橫向和縱向的iPad

00:29:32.339 --> 00:29:36.143 
以及一些slide over配置

00:29:36.210 --> 00:29:37.177 
這是有意義的

00:29:37.244 --> 00:29:39.513 
但是我還在這看到iPhone
這是爲什麼？

00:29:40.280 --> 00:29:42.616 
如果我把鼠標放在上面我看到

00:29:42.683 --> 00:29:44.985 
這是橫向的
iPhone 6s Plus

00:29:45.052 --> 00:29:47.054 
Kevin說過因爲這個設備很大

00:29:47.120 --> 00:29:50.557 
它在橫向時使用普通寬度尺寸類

00:29:50.624 --> 00:29:53.193 
這很好
你會經常想要

00:29:53.527 --> 00:29:57.464 
提供不同的體驗給不同的設備配置

00:29:57.564 --> 00:29:58.799 
但在這例子裏我不想那樣做

00:29:58.866 --> 00:30:01.502 
我只想針對iPad定製

00:30:02.035 --> 00:30:02.870 
我要怎麼做？

00:30:02.936 --> 00:30:04.671 
我回到爲特徵改變

00:30:04.805 --> 00:30:08.375 
這一次我要對普通寬度和普通高度
進行改變

00:30:08.442 --> 00:30:12.179 
當我這樣做時注意iPhone
從工具條裏消失

00:30:12.880 --> 00:30:16.884 
我將要進行的編輯只會對這些配置
生效

00:30:17.084 --> 00:30:17.918 
好的

00:30:18.285 --> 00:30:20.254 
讓我們做那些

00:30:20.320 --> 00:30:23.991 
我會拖出一個標籤
把它放在這

00:30:25.292 --> 00:30:27.294 
我會添加一些約束條件

00:30:27.628 --> 00:30:29.863 
來保證它待在正確的位置

00:30:30.497 --> 00:30:31.498 
好了

00:30:31.565 --> 00:30:32.733 
我會點擊完成改變

00:30:33.333 --> 00:30:34.768 
讓我們回到屬性查看器

00:30:34.835 --> 00:30:37.504 
因爲我想要聚焦在一些複選框上

00:30:37.571 --> 00:30:38.872 
你之前看到過的

00:30:39.173 --> 00:30:42.042 
我想你瞭解爲什麼這麼做

00:30:42.709 --> 00:30:45.979 
我爲了特徵進行改變
我選擇了寬度和高度

00:30:46.580 --> 00:30:49.016 
表明我設置了這個工具條來進行
定製化

00:30:49.082 --> 00:30:50.717 
爲普通寬度 普通高度

00:30:50.884 --> 00:30:51.952 
當我做這些時

00:30:52.519 --> 00:30:53.453 
我拖出來一個視圖

00:30:53.520 --> 00:30:56.557 
我把它加入視圖層級

00:30:56.857 --> 00:30:59.459 
針對普通寬度普通高度

00:30:59.793 --> 00:31:01.828 
這就是這個複選框向我顯示的

00:31:02.095 --> 00:31:03.897 
大部分時候你添加視圖

00:31:04.031 --> 00:31:06.366 
到你的場景
它們會被安裝到全局

00:31:06.466 --> 00:31:08.168 
所以它們會出現在所有設備配置

00:31:08.235 --> 00:31:09.603 
不管是什麼尺寸類

00:31:10.270 --> 00:31:13.373 
但是當我在這個模式下
當工具條是藍色時我添加視圖

00:31:13.440 --> 00:31:15.209 
或者添加自動佈局約束條件

00:31:15.442 --> 00:31:18.145 
它們只會安裝到特定的尺寸類中

00:31:18.212 --> 00:31:19.613 
那些我針對它們進行編輯的尺寸類

00:31:20.047 --> 00:31:22.049 
理解這些很重要

00:31:23.383 --> 00:31:24.418 
再一次要證明這些

00:31:24.484 --> 00:31:27.688 
可以在設備配置條中遍歷iPhone

00:31:27.754 --> 00:31:28.989 
這個標籤不在那

00:31:29.056 --> 00:31:31.825 
所以我做對了
我添加了視圖只出現在

00:31:31.892 --> 00:31:34.494 
普通寬度普通高度的設備中

00:31:34.761 --> 00:31:35.662 
好的

00:31:36.430 --> 00:31:38.332 
我們要做的下件事

00:31:38.398 --> 00:31:42.336 
是我們要用設備條進行更多編輯

00:31:43.003 --> 00:31:44.438 
如你所見

00:31:44.905 --> 00:31:48.509 
當我來到一個iPhone
那有太多空間

00:31:48.575 --> 00:31:51.111 
在頂部標籤和圖像視圖之間

00:31:51.178 --> 00:31:53.213 
現在我回到設計

00:31:53.280 --> 00:31:54.915 
我的設計師希望它們緊湊

00:31:55.449 --> 00:31:56.450 
我要怎麼實現它？

00:31:56.583 --> 00:31:58.485 
非常酷的事是

00:31:58.552 --> 00:32:02.623 
你實際上可以定製自動佈局約束
條件的常量

00:32:02.789 --> 00:32:07.694 
用一個變種
像我們已經針對尺寸類做過的那樣

00:32:08.428 --> 00:32:09.696 
讓我們現在這麼做

00:32:09.763 --> 00:32:11.365 
你看到如果我選擇這個圖像視圖

00:32:11.431 --> 00:32:15.536 
記住我在它們之間添加了垂直間隔

00:32:15.602 --> 00:32:19.740 
好了

00:32:20.107 --> 00:32:24.611 
我點擊了這個約束
我看到這個自動佈局約束條件

00:32:24.678 --> 00:32:26.413 
我看到它的很多屬性

00:32:27.047 --> 00:32:29.149 
你可以看到常量的值是61

00:32:29.216 --> 00:32:31.185 
問題就出在這個值太大

00:32:31.652 --> 00:32:35.222 
我可以編輯它而且我可以只
針對iPhone編輯它

00:32:35.289 --> 00:32:37.624 
爲了使縱向的普通高度的設備
緊湊

00:32:37.858 --> 00:32:42.029 
再次 我可以點擊爲特徵改變
我會針對寬度和高度定製

00:32:42.496 --> 00:32:47.234 
你可以看到這個工具條的內容顯示
iPhone

00:32:49.069 --> 00:32:51.205 
但是爲什麼這些iPad配置會出現
在這？

00:32:51.271 --> 00:32:56.009 
請記住當iPad在slide over
或split view模式中時

00:32:56.076 --> 00:32:57.177 
沒有那麼多空間

00:32:57.244 --> 00:32:58.879 
你應用的空間受限

00:32:58.946 --> 00:33:02.382 
你希望把iPhone的體驗也帶到
這種情況下的iPad

00:33:02.850 --> 00:33:03.684 
這是有意義的

00:33:03.750 --> 00:33:06.453 
所有你在這看到的iPad配置

00:33:06.520 --> 00:33:09.656 
有普通高度配置也會變緊湊

00:33:09.723 --> 00:33:11.491 
這很好
這就是我想要的

00:33:12.125 --> 00:33:16.029 
我進入了爲特徵改變
這個工具條變藍了

00:33:16.663 --> 00:33:18.732 
我可以再次選擇這個約束

00:33:23.070 --> 00:33:23.971 
好了

00:33:25.205 --> 00:33:27.875 
請注意我將把這個值改成45

00:33:27.941 --> 00:33:30.811 
請注意屬性查看器

00:33:31.311 --> 00:33:32.980 
我提交這次編輯會發生什麼

00:33:33.247 --> 00:33:35.916 
就像我們定製字體時一樣

00:33:35.983 --> 00:33:38.752 
Interface Builder
添了另一行約束

00:33:38.986 --> 00:33:41.688 
你可以看到這是使用相同的尺寸類

00:33:41.755 --> 00:33:43.023 
我在這個工具欄裏配置的

00:33:43.423 --> 00:33:45.092 
我已經改變了這個

00:33:45.259 --> 00:33:48.295 
我爲這個約束常量添加了一個
定製化

00:33:48.695 --> 00:33:52.999 
通過在設備條裏開始一次編輯

00:33:53.066 --> 00:33:54.868 
但是我使這次編輯直接反映
在畫布中

00:33:54.935 --> 00:33:56.937 
這很酷

00:33:57.504 --> 00:33:59.907 
我遍歷這些設備
看起來都不錯

00:33:59.973 --> 00:34:02.276 
但還不夠接近

00:34:02.843 --> 00:34:03.844 
我如何解決該問題？

00:34:04.311 --> 00:34:07.981 
你可能以爲我要回去使這個
工具條變藍

00:34:08.047 --> 00:34:09.783 
然後試着編輯

00:34:09.850 --> 00:34:11.685 
這不是正確的做法

00:34:11.752 --> 00:34:13.219 
需要理解的重點是

00:34:13.286 --> 00:34:14.454 
當你爲特徵改變時

00:34:14.521 --> 00:34:17.357 
你引入基於尺寸類的變種

00:34:17.791 --> 00:34:20.159 
但是你不用這個流程來編輯它們

00:34:20.226 --> 00:34:23.362 
更好的難道不是你可以直接編輯

00:34:23.597 --> 00:34:25.866 
那些定製化 在畫布中
是的你可以

00:34:26.333 --> 00:34:30.036 
我選擇了一個iPhone
Interface Builder知道這點

00:34:30.103 --> 00:34:33.739 
它還知道我有一個針對它的定製

00:34:34.842 --> 00:34:36.543 
所以當我去編輯它時

00:34:36.610 --> 00:34:38.277 
它知道我想要數據去到哪

00:34:38.411 --> 00:34:40.781 
如果我把45改成30

00:34:40.848 --> 00:34:43.350 
請注意屬性查看器發生的變化

00:34:43.417 --> 00:34:45.252 
它會爲尺寸類更新

00:34:45.319 --> 00:34:48.021 
因爲它知道我有基於尺寸類的定製

00:34:48.288 --> 00:34:50.324 
我們認爲這是強大的新流程

00:34:50.389 --> 00:34:53.126 
它讓你通過設備條引入變種

00:34:53.360 --> 00:34:56.630 
然後你可以繼續直接在畫布裏
編輯那些變種

00:34:57.264 --> 00:34:59.399 
就這麼多
我想交還給Kevin

00:35:07.074 --> 00:35:07.941 
謝謝你Brent

00:35:08.008 --> 00:35:08.976 
謝謝

00:35:10.010 --> 00:35:11.845 
我想要回顧一些事情

00:35:11.945 --> 00:35:14.715 
Brent在它的演示裏提到的

00:35:15.048 --> 00:35:17.551 
首先我們介紹了新的設備配置條

00:35:17.618 --> 00:35:19.920 
在這你可以看到設備

00:35:20.320 --> 00:35:23.223 
你可以看到你的應用在它們中
以及在它們中移動

00:35:23.290 --> 00:35:25.993 
我們還有一個新的流程用來引入
定製化

00:35:26.059 --> 00:35:27.694 
在不同的特徵間

00:35:28.161 --> 00:35:32.132 
你可以用屬性查看器進行精細的
編輯

00:35:32.499 --> 00:35:34.134 
屬性查看器還讓你

00:35:34.201 --> 00:35:36.637 
查看所有你做出的改變

00:35:36.703 --> 00:35:39.406 
如果你還有疑問要怎麼設置這些

00:35:39.473 --> 00:35:43.143 
你永遠可以進入查看器來看你
做了哪些定製化

00:35:43.510 --> 00:35:45.179 
還有一個爲特徵改變的模式

00:35:45.245 --> 00:35:48.649 
在這你可以做一些大的樣式改變

00:35:49.216 --> 00:35:51.084 
像Brett提到的這很重要

00:35:51.151 --> 00:35:54.821 
這個模式是爲了引入新的定製化

00:35:55.422 --> 00:35:57.024 
一旦你離開這個模式

00:35:57.090 --> 00:36:00.527 
Interface Builder會知道怎麼
更新這些定製化

00:36:00.594 --> 00:36:04.431 
你基於你當前看到的設備做出的

00:36:04.498 --> 00:36:06.200 
這工作的很好

00:36:07.201 --> 00:36:09.670 
現在這些改變不僅對iOS有效

00:36:09.736 --> 00:36:13.941 
這些流程改變也對tvOS
和watchOS有效

00:36:14.007 --> 00:36:15.676 
還有Interface
Builder

00:36:17.311 --> 00:36:19.479 
總之

00:36:19.713 --> 00:36:22.182 
我談論了特徵系統的基本

00:36:22.249 --> 00:36:24.518 
我們談論了特徵怎麼描述環境

00:36:24.785 --> 00:36:27.087 
traitCollectionDidChange
要怎麼被覆蓋

00:36:27.154 --> 00:36:30.791 
來進行你的所有適應性
在系統的幫助下

00:36:31.425 --> 00:36:32.392 
還有尺寸類

00:36:32.459 --> 00:36:36.463 
描述你怎樣顯示信息的檢驗

00:36:37.397 --> 00:36:39.733 
Brett像你們演示了新流程和工具

00:36:39.800 --> 00:36:42.102 
Interface Builder
現在如何允許你

00:36:42.169 --> 00:36:47.074 
在設備中查看你的界面

00:36:47.140 --> 00:36:49.943 
同時能夠編輯底層的數據

00:36:50.010 --> 00:36:51.745 
針對特徵集合和特徵

00:36:51.812 --> 00:36:54.181 
你想要你的應用自適應的

00:36:55.315 --> 00:36:58.986 
這就是第一部分
它的重點

00:36:59.052 --> 00:37:02.222 
是系統會爲你做大部分工作

00:37:02.589 --> 00:37:04.525 
你有很多種方法插入

00:37:04.591 --> 00:37:07.094 
做爲開發者藉助那些

00:37:07.160 --> 00:37:10.264 
我爲看到你們的自適應性應用
感到興奮

00:37:10.731 --> 00:37:14.034 
請在明天回來
因爲我們會討論更多

00:37:14.101 --> 00:37:16.937 
會給你們更多技術

00:37:17.004 --> 00:37:18.705 
使應用自適應

00:37:18.772 --> 00:37:21.675 
我們會用一些演示把它們整合

00:37:22.242 --> 00:37:26.313 
除了明天的演講還有自動佈局

00:37:26.380 --> 00:37:27.481 
你們也會想看

00:37:27.548 --> 00:37:30.083 
來看我們在自動佈局上做的改進

00:37:30.150 --> 00:37:31.885 
包括一些更精細的改變

00:37:31.952 --> 00:37:33.587 
會有一個優秀的演講

00:37:33.787 --> 00:37:36.156 
祝你們接下來的一週度過美好的時光
午餐享用愉快！