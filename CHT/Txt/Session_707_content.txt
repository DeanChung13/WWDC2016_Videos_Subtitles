介紹通知
大家早上好
歡迎來到我們的演講介紹通知
我是Kritarth JainiOS通知組的工程師
今天我的同事Julien會在這個演講的下半部分加入我
這個組在去年工作得很努力
來給你們一個優秀的iOS 10通知
我們很高興今天可以和你分享這些
我們會從對通知做一個概覽開始
今天我們有一個全新的框架用來進行用戶通知
作爲它的一部分 我們會覆蓋註冊
創建內容 爲通知排期
管理它們 和通知上的行動處理
最後 我們要介紹一個新的功能
叫做服務擴展我們認爲你會很喜歡它
但有更多關於iOS 10的通知要談
我們不會在這次演講中涉及到所有
將有一個高級通知演講
在這個之後就在這間屋子裏
所以請一定要觀看
我們從談談用戶通知開始
現在我很確定你們都對通知是什麼樣子的很熟悉
這是你的應用如何發送信息
給你的用戶當你的應用不在前臺時
這是一個發送信息的push機制
相比pull機制
你的用戶主動進入應用
來獲得內容或信息
你做爲應用開發者
有不同的方式來將這些通知發送給用戶
他們可以是視覺警告
通知作爲一個橫幅從頂部滾下來
你可以給通知關聯聲音和震動警告
以及給應用圖標加角標
這樣用戶知道哪個應用有可用數據
根據用戶的語境
他們如何看到通知有不同的方法
如果設備解鎖了通知作爲一個橫幅從頂部滾下來
當設備鎖定時通知
在用戶的鎖屏上顯示
如果用戶錯過了這些通知
他們可以進入Notification Center
並且看到所有未讀通知在那裏等待他們
所以有哪些不同種類的通知
作爲一個應用開發者你可以用來發送通知？
主要有兩種
本地通知和遠程通知
根據它們的來源
讓我們分別看看它們
現在是本地通知
這些被設備上的應用使用
本地通知的使用例子
基於時間或位置的觸發器
你的應用和系統排期這些通知
在用戶的設備上顯示通知
當用戶處理這些通知時
你的應用被回調
我提到過 例子可以包括任務提醒警告
日曆警告 或者基於位置的觸發器
現在不是你的所有應用都包括在用戶的設備上
很多還有服務器端的部分
你的服務器端應用位於穿過網絡的你的服務器上
要方便這樣的通知我們有遠程通知
讓我們看看遠程通知是怎麼工作的
本次交換中包括的主要部分是Apple Push通知服務
或者簡寫爲APNs
這是遠程通知的一部分
你的遠程應用發送通知負載給APNs
接下來APNs盡最大努力把通知發送到用戶設備上
向他們顯示通知並且轉發給用來處理的應用
當用戶操作它時
遠程通知的例子是news警告
當你的服務器端獲得了最新的
爆炸新聞並轉發這些通知
給不同設備向所有客戶
安裝了你的應用在他們的設備上的客戶
即時消息警告也是 數據庫被管理在你自己的服務器上
當一條新消息到達時你傳遞通知
到用戶設備上
現在遠程通知有兩個不同的部分
可以是面向用戶的或靜默更新
面向用戶通知就像它的名字所暗示的
在設備上顯示給用戶
通過正確的設定通知負載
你可以添加顯示給用戶的內容
與面向用戶的通知相對照我們還提供靜默更新通知
這個靜默更新通知工作
當你的通知負載包括內容可用標誌
當設備收到這條通知時
系統知道在後臺喚醒你的應用
來進行後臺應用刷新
你的客戶端應用會聯繫
你的遠程服務器應用
來獲得最新的可用內容
下一次用戶來到設備
他們將看到最新的信息
給他們一個很好的用戶體驗
這就是對這兩種不同通知的概括
你可以使用的通知的種類
現在在我們往下之前讓我們做一個快速回顧
iOS上已有的通知API
你用UI應用來註冊你的應用
然後排期你的應用想要發送的通知
這是UIKit框架的一部分我確定你們大部分都很熟悉
然而現在已有的API有一些問題
比如對本地
和遠程通知有不同的回調這有可能造成重複代碼
並且只有有限的控制
當你的應用已經發送通知給用戶之後
並且有不同的支持
針對Apple目前支持的不同平臺上的通知
所以我們很想解決這個問題並且
除此之外給你們提供一些很棒的新功能
來提升你的應用用戶的通知體驗
今天我們很高興地宣佈一個新的框架
來進行用戶通知
讓我們看看這個新的框架包括什麼
首先它有一個熟悉的API
和目前已經存在的API有同樣的功能
所以把你的代碼從已有API轉移到
新的框架很容易
我們還擴展了你可以在通知上設置的內容選項
來發送更豐富的通知給你的用戶
我們把處理本地和遠程通知的代碼整合在了一起
所以你只需要更少的代碼來處理通知
我們還簡化了委託方法
這是你的應用
當用戶在通知上與動作互動時獲得的
我們還包括了更好的通知管理
這表明你的應用現在可以訪問通知
不論是將要發送還是已經發送給用戶
允許你刪除和更新通知
我們會在這次演講中看看所有這些方面的更多細節
從iOS 10開始我們允許你的應用
來對通知進行應用內的展示
現在你的應用獲得了完全相同的外觀和感受
因爲系統對你的應用提供支持
你現在可以對擴展排期和處理通知
最後我們添加了擴展指向
通知它本身但是我會在稍後介紹更多
這個新框架還允許我們
在不同平臺上都有單一的通知API
Apple支持的平臺 包括iOSwatchOS和tvOS
讓我們看看這對不同平臺都意味着什麼
在iOS上我們完整的支持管理
排期新框架支持的通知
在watchOS上我們繼續已有的對轉發通知的支持
從用戶的設備到他們的Watch
但是從watchOS 3開始我們讓你的WatchOS應用
在Watch本身上進行本地通知
這表示
你的Watch不需要連接你的設備
而你的應用還是可以進行通知
比如你有健身應用
你的應用的用戶
出去健身 忘記了帶設備
你仍然可以發送通知給他們
當他們達到目標或者健身時間時
就在Watch自己上
關於更多在WatchOS進行通知
我們有“WatchOS快速互動技巧”的演講
繼續 對tvOS
我們現在支持給應用圖標加角標爲本地和遠程通知
這可以被不同方式利用比如
如果你的應用想讓用戶知道
他們沒看的集數
你可以在應用圖標上加角標顯示這個數字
或者對一個回合制的遊戲
如果用戶有一個在等待的回合
給應用圖標加角標讓用戶知道有一個回合在等待他們
這是這個新框架允許你幹什麼的概覽
在Apple的所有不同平臺上
讓我們繼續深入iOS上的通知
你的應用是如何發送這些通知
給用戶的設備使他們能夠看到？
在你能夠這樣做之前
第一步是你的應用需要註冊
讓我們看看註冊是什麼意思
通知是對用戶的打斷
所以很重要的事是你獲得用戶的授權
和許可在你發送通知給他們之前
所以你可以要求許可來進行橫幅 聲音警告
或者給應用圖標加角標你第一次這麼做時
你的用戶收到有這樣消息的提示
你需要爲本地和遠程通知進行註冊
在代碼裏進行註冊容易得只要
調用requestAuthorization
在和你的應用關聯的UNUserNotificationCenter對象上
傳遞給它正確的參數
你想要爲什麼註冊
然而請注意現在用戶允許的設置
是在設置菜單裏對每個應用高度可配置的
所以你的應用用戶總是可以回去
將它們打開或關閉取決於他們的偏好
在iOS 10我們給你能力
在你的應用中訪問用戶設置
所以你可以在通知上更聰明
根據他們的偏好在你想要發送給用戶的通知上
但是註冊並不就此結束
對於遠程通知還有一步令牌註冊
用UIApplication已有的API
你要註冊遠程通知
你需要網絡連接這樣系統可以和APNs聯繫
爲這次註冊 爲你的設備和你的應用
這個令牌返回給你的客戶端應用
然後你需要把它轉發給你的服務器端應用
這很重要因爲這個令牌需要被包括
做爲通知負載的一部分
你的遠程應用發送給你的APNs
因爲令牌的作用是作爲鍵識別你的設備
和想要發送通知到的應用
這就是註冊
現在你的應用已經準備好開始發送通知給用戶
這之後你要做的第一件事
是創建這個通知的內容
我確信你們都看過了全新的通知的外觀
我們在iOS 10中引入的通知
我們對它們允許你們做的事感到很興奮
我們從顯示你的通知的標題開始
在所有iOS通知中
我們還爲副標題包括了另一個域
所以你可以更靈活地發送不同信息給用戶
當然 有內容主體
讓我們看看怎麼在代碼中設置這些
只要簡單地創建UNmutableNotificationContent對象
並設置它的不同屬性就是這些
對遠程通知 這很相似
你的通知負載的結構是像這樣的
再一次你設置負載的不同屬性
在發送給APNs前
但是對於內容還沒有完
我們決定再進行一步從iOS 10開始
我們允許所有應用在通知中附加媒體
所以你可以有更豐富的
更五彩繽紛的通知使你的用戶看到
關於更多媒體附件我們會進行介紹
在怎樣在高級通知中設置這些的演講中
這樣你的內容就已經準備好了
你的應用要做的下件事是判斷它什麼時候想要發送這條通知
因此有觸發器
在iOS 10中我們支持不同的觸發器主要是push
時間間隔 日曆和基於位置的觸發器
push觸發器是遠程通知獨有的
當你的遠端通知發送通知給APNs
它和關聯的push觸發器一起到達設備
其他的觸發器都是和本地通知關聯的
基於時間間隔的觸發器允許你安排
一個離現在特定時間的通知
比如 如果你想要從現在起2分鐘後發送通知
或者從現在開始每小時發送一次
這還允許你馬上發送通知
通過把時間間隔設置成0
與基於時間間隔的觸發器對照的是基於日曆的觸發器
它允許你設定一個未來特定的日期和時間發送通知
這樣你就有更多控制來設定通知發送的準確時間
這個的例子是在明早的特定時間
或者在每個星期某天的某個時刻重複
最後一種觸發器我們有基於位置的觸發器
使用你設備的絕對位置
或者和藍牙燈塔的相對位置
來判斷你的設備是否正在進入或離開一個區域
你可以發送通知給用戶
一個例子是當用戶離開家時
設備離開鄰近區域
或者說用戶在雜貨店
你的應用想發送一個打折的優惠券
這就是不同的觸發器做爲新框架的一部分
現在你的內容已經準備好了
你知道你什麼時候想要發送通知
剩下的下一步是和系統爲這個通知排期
對本地通知只需簡單地調用增加請求
在UNUserNotificationCenter對象上
然後在觸發器上
系統向用戶顯示通知
對遠程通知
你服務器端的應用傳送負載給APNs
APNs盡力把通知發送到
用戶的設備上
讓我們歸納一下目前爲止我們討論過的發送機制
你的應用在最開始和系統進行註冊
然後創建內容
判斷什麼時候發送通知
最後和系統爲通知排期
導致通知顯示在用戶的設備上
就是這麼簡單
讓我們對代碼進行一下總結
從調用requestAuthorization來註冊開始
你創建通知的內容
你創建觸發器 在這個情況下一個簡單的基於時間間隔的觸發器
然後你把所有的一切打包到
一個UNNotificationRequest對象
傳遞一個重要的獨特的識別符
將在這次演講晚些時候談到它
然後你和系統對這個通知排期
完成通知的傳送
目前爲止我們談論了對通知發生了什麼
當你的應用在後臺並且並沒有操作它時
但是如果你的程序在前臺時收到通知會發生什麼呢？
爲此我們提供通知處理
當你的應用在前臺時
你的應用需要實現UNUserNotificationCenter委託
它有一個方法是willPresent通知
讓你獲得通知的內容
作爲傳遞給這個方法的UNNotification對象的一部分
現在這個方法還有CompletionHandler
它必須在這個函數的最後被調用
需要注意的一件事是CompletionHandler接受
顯示選項參數
現在這允許你做的事是應用內顯示
我們早先談到的
讓我們看看如何配置它的一個例子
假設你的應用仍然希望向用戶顯示這個視圖
和你的聲音警告當你的應用在前臺時
這隻需要簡單的調用handlerBlock
使用不同的參數
如果你不想要應用內顯示你只需不傳遞任何參數
這就是你的應用在前臺時的通知處理
讓我們繼續談談通知管理
通知管理是這個框架新加的功能
它允許你訪問通知
你本地已經排期的通知中等待發送的
以及訪問已經發送的通知
用戶可能已經收到了包括本地和遠程通知
現在你還可以刪除已經發送給用戶的通知
並且可以更新或者提升這些通知
通知的重要部分是請求識別符
在摘要中你看到請求識別符
被設置在通知的請求對象上
對遠程通知有一個新的請求數據頭
apns-collapse-id你需要在負載中設置它
系統用這個請求識別符來知道哪個通知
是你請求刪除或更新的
讓我們用例子來看看通知管理
假設你的應用想要給一個遊戲發送通知
它想要在遊戲開始時這麼做
你從創建UNNotificationRequest開始
和系統爲它排期但是如果遊戲取消了
只需要簡單地調用removePendingNotificationRequest
傳遞給它相同的遊戲識別符
你爲初始通知創建的識別符
但是如果遊戲時間更新了要怎麼辦？
你創建一個新的請求
給它和給初始請求相同的識別符
設置新的觸發器時間
和系統一起給它排期
這轉而導致更新通知
讓我們繼續看看已經發送的通知
並談談分數更新
你通過創建通知請求開始
把它發送給系統
但是假設錯誤的分數被髮送了
你可以簡單地刪除通知
通過調用removeDeliveredNotification
給予相同的識別符
如果分數更新了
這是遊戲中常見的情況
你在這種情況下能做的就是創建一個通知請求
給它相同的識別符
把新的分數內容傳遞給它
並簡單地和系統爲它排期
這是什麼意思讓我們把這當成例子來看看
那個通知已經在那爲初始的分數更新
通過調用更新像我在代碼裏顯示的 這導致
通知在通知列表裏獲得了更新
取代開始的通知
這樣你不會使用戶的通知列表變得凌亂
你可以在多種方法中使用它來彙集信息
這對你的應用是合適的
這就是通知管理
它給你的應用很多控制
在已經發送給用戶的通知上
目前爲止在這次演講中我們談了
你的應用怎麼發送通知給用戶
那exchange的另一面呢？
通知是很有互動性的不管是默認的行動
還是你的應用對它們設置的定製的行動
要談談通知行動讓我邀請
我的同事Julien來繼續這次演講
謝謝
嘿大家
我是Julien
我是框架測試組的軟件工程師
Kritarth向你們展示了網絡流程
和當前的用戶通知框架
從註冊
到通知被髮送到設備上的時候
現在讓我們談談行動
用戶可以在通知上進行的行動
你的應用可以知道三種行動
第一個是默認行動
這是用戶從通知中打開你的應用
當設備解鎖時可以這麼做
並且用戶收到一個通知
他們可以點擊橫幅這會打開你的應用
這可以在鎖屏上進行
當用戶從左向右滑動
也可以在Notification Center中
當用戶向下滑動來顯示Notification Center
他們可以點擊任意你的通知
來打開你的應用
現在第二類行動是定製行動
它們在可行動通知中
我們在iOS 8中引入了可行動通知
它們提供給用戶一個快速運行行動的方式
直接從通知中
而不需要啓動你的應用
現在這些定製行動它們顯示爲按鈕
在通知內容的下面有可定製的標題
在iOS 9中我們引入了文本輸入行動
這樣用戶可以快速回復消息
直接在通知中
這種定製行動可以是後臺的或前臺的
一個後臺行動會關閉通知
並且在後臺給你少量時間
來處理用戶選擇的定製行動
另一方面 一個前臺行動
會關閉通知並且前臺啓動你的應用
這樣你可以處理那個定製行動
現在這些定製行動在iOS和watchOS上都可用
首先讓我們看看在iOS它看起來是什麼樣子
我們以iPhone 6S爲例
在這臺設備上用戶可以使用3D touch來展開一個通知
當他們這麼做時 定製行動會出現在通知內容下面
有一些行動像你看到的 可以是文本輸入
這樣用戶可以快速回復消息
現在在watchOS上
一樣的 定製行動出現在通知內容的下面
一些行動也可以是文本輸入行動
在watchOS上你有機會
提供一些建議
是用戶可能選擇的
爲你的文本輸入行動
關於更多關於watchOS通知的信息
你可以參加快速交互技術
針對watchOS今天晚些時候的演講
現在我們談過了定製行動看起來像什麼
讓我們首先談談你可以怎樣註冊你的定製行動
並把它們顯示給用戶
要註冊 你首先要做的是
創建一個行動對象
你給它一個獨特的識別符還給它一個標題
標題會出現在我們之前看到的可定製按鈕上
行動默認是後臺行動
但你還可以提供一些選項
比如如果你想要它是前臺行動
現在你的所有行動需要和種類關聯
種類需要一個獨特的識別符
你把它給你所有的行動
你現在還可以提供一些目的識別符
關於目的的更多信息
你可以參加介紹SiriKit演講
你還可以向種類提供一些選項
我們稍後會討論其中的一個
一旦你創建了所有的行動和種類
你唯一需要做的就是註冊它們
向你的應用關聯的UNUserNotificationCenter對象註冊
現在讓我們談談你可以如何向用戶呈現這些定製行動
你可以在本地和遠程通知中這麼做
首先是遠程通知
你唯一要做的事是設置種類識別符
在遠程通知負載的APS字典中
現在這個識別符需要匹配識別符中的一個
你之前註冊的種類識別符
對本地通知你只需要設置種類識別符
在你創建的可修改內容中
同樣的識別符需要匹配
你之前註冊的識別符
讓我們談談你的應用知道的第三種行動
它是刪除行動
刪除行動是iOS 10新加入的
它發生在用戶刪除一條特定通知時
你可以使用它比如你有一個日曆應用
並且假設你發送了一條遠程通知給你的用戶關於
即將到來的會議
用戶看到了這條通知並且決定刪除它
在這種情況下你可能想要停止發送
其他遠程通知到這個用戶的其他設備
因爲他們已經看過這條通知了
用戶可以怎樣實際上刪除通知？
他們可以在鎖屏上這麼做
通過從右向左滑動
並且點擊清除按鈕
他們也可在NotificationCenter這麼做
也是從右向左滑動
然後點擊清除按鈕這會刪除這條通知
因爲這不是你通常要更新的情況
請記得早前當我們談論你可以註冊的種類
我們談到了一些選項這是其中一個
customDismissAction選項
讓我們看看早前我們用來註冊種類的代碼
你在這需要做的唯一一件事
就是簡單地添加customDismissAction
給這個種類的選項
你的應用會收到這個行動
當刪除這個種類的通知時
讓我們總結今天提到的行動
首先是默認行動
用戶從通知中打開你的應用
第二種是可行動通知中的定製行動
提供給用戶快速的方法
直接從通知中執行一個行動
最後第三個是刪除行動
這是iOS 10中新加入的它允許你知道
什麼時候用戶刪除了特定通知
現在讓我們談談你可以怎樣處理迴應
來自這些行動 在你的應用中
到目前爲止我們有多種方法基於
用戶是否從通知打開應用
或者我們有定製行動或者文本輸入行動
或者這是來自遠程或本地通知
現在有了我們新的通知框架
我們可以用單一方法來做這些
它是UNUserNotificationCenter委託協議的一部分
你需要實現的方法
是didReceive迴應有CompletionHandler
現在讓我們仔細看看回應對象
和你能在應用中用它做什麼
你的迴應對象有一個行動識別符
可以是默認 刪除行動
或者任何你創建的定製行動
它可以有一個用戶文本屬性如果它是一個文本輸入行動
它還可以有一個通知對象
有請求對象和通知的識別符
以及觸發器和內容
根據觸發器的種類你可以知道是否它是
來自本地或遠程通知
這就是新的用戶通知框架的全部內容
你可以處理行動的迴應
現在讓我們談談遠程通知
這是目前遠程通知的流程
我們在演講的前些時候看過
你有你的服務識別
它會發送遠程通知到負載
給APNs
然後它被髮送給設備並顯示給用戶
可能你們有些人在一種情況中
你有服務器端應用並且你通信
到你的iOS應用可能使用一些
端到端加密
如果你可以使用相同的端到端加密豈不更好嗎？
也爲你的遠程通知使用相同的端到端加密
爲此在iOS 10中我們引入了服務擴展
現在我們要談談什麼是服務擴展
以及你可以怎樣在應用中實現它
現在服務擴展是一個非UI iOS擴展在iOS 10中可用
也就是說它運行在後臺
它的主要目的是增加或替換內容
屬於可見的或者遠程通知在他們顯示給用戶前
讓我們再看看目前的通知工作流程
你有你的服務器端應用
你發送負載給APNs
然後它被髮送給設備
現在有了這個擴展
你可以修改內容
在你從服務器端應用發送它
和它在設備上顯示給用戶之間的時間
你在這個例子中可以看到
我有一個標題和副標題
然後我修改了通知的主體
關於服務擴展的一些更多細節
你會獲得一個短的運行時間也就是說這不是
爲了長時間在後臺運行的任務
而且如果你沒有及時提供一些更新了的內容
你會獲得一個回退方法
萬一你仍然沒法提供一些更新了的內容
我們會顯示你發送給用戶的原本的遠程通知
一些潛在的使用方法
你可以爲你的遠程通知使用端到端加密
你也可以添加一些附件到你的遠程通知
使它們更豐富
現在有一個詳細的例子關於如何這麼做
在高級通知演講中
現在讓我們談談如何
在你的應用中實現這個新的服務擴展
首先你需要在Xcode項目中
添加新的目標
你可以用模板 它在應用擴展部分的下面
它叫通知服務
現在這個模板有一個主類
我們要看看它的一個簡化版本
這類是UNNotification服務擴展的一個子類
它有兩個主要的方法
第一個方法是didReceive有ContentHandler
現在這個方法會給你當前的請求
有通知的識別符和內容
然後我們有ContentHandler
你需要調用ContentHandler
當你想要顯示通知給用戶時
你需要提供一些內容給它
第二種方法是服務擴展時間會過期
這會被調用
如果你無法及時提供更新了的內容
請記住如果你沒能在這個方法中調用ContentHandler
我們會顯示你發送的原始遠程通知內容
現在讓我們談談你能怎麼觸發這個代碼
從遠程通知觸發
我們有一個很簡單的例子關於遠程通知的有警告的負載
如你所見我們有一個新的鍵可修改內容鍵
我們需要利用這個鍵讓系統知道
你希望服務擴展被啓動
來更新遠程通知的內容
你不需要每次都用這個鍵
只有你想要替換通知內容時使用它
現在你可以看到我還添加了我自己的一些加密過的內容
讓我們看看一些代碼
可以處理這個遠程通知的負載
你可看到我們有didReceive請求方法
我做的第一件事是我把加密過的內容解密
在遠程通知負載中
然後我創造一個MutableNotificationContent對象
然後我賦值通知的主體
和我們之前得到的解密過的內容
最後我們調用ContentHandler
顯示通知內容給用戶
實現新的服務擴展就是這麼簡單
在你的應用中實現
現在讓我們回顧一下我們今天討論過的內容
我們看了通知的概覽有本地和遠程通知
我們展示給你新的用戶通知框架
在iOS  watchOS和tvOS上都可用
我們說瞭如何註冊通知
以及如何創建你的內容
如何爲你的通知排期本地的或遠程的
我們還說了新的管理
你可以對待發和已發的通知進行
然後我們說了不同的行動
用戶可以在你的通知上觸發
如何在應用內處理這些行動的迴應
最後我們展示了全新的服務擴展
允許你增加或替換內容
可視的遠程通知的內容在它們顯示給用戶前
關於更多信息 你可以訪問這個網址
我們會有一些相關的演講
這之後緊接着的是高級通知演講
我們強烈建議你參加它
如果你對通知感興趣
如果你想知道更多Watch上的通知的信息
你可以參加“watchOS快速互動技巧”的演講
謝謝大家