Game Center的新特性
大家早上好
謝謝來這裏
我是Megan Gardner我是Game Center軟件工程師
今天我們討論Game Center的新特性
若你還不知什麼是Game Center
Game Center是Apple社交遊戲網絡
它允許開發者定義排行榜你的用戶可以向它提交分數
還定義你的玩家可以獲得的成就
我們還有挑戰
它利用排行榜和成就
來添加多人遊戲元素到你的單人遊戲
我們還有兩個多人遊戲API是實時的和基於回合的
iOS macOS和tvOS上都可以使用這些功能
今年我們宣佈了watchOS
那麼有什麼新特性？
我們今年有一些新東西
首先我們有一個很好的發送多人遊戲邀請的方式
接着我們有Game Center應用的大新聞
如果你們已經發現了
我們有全新的API
針對持續遊戲會話我們對此感到興奮
我們宣佈Apple Watch支持
我們沒時間在本次演講談論Apple Watch
但如果你對這感興趣
我強烈建議你去
看Apple Watch遊戲技術在這間房間 今天下午晚些時候
讓我們談談基於消息的多人遊戲邀請
現在你可以和任何能發消息的人一起玩
我們的Game Center多人遊戲看起來像是這樣
這是我們的GKMatchmakerViewController
你們中的大多數用它來設置你們的匹配
這是我們完成的內置UI
它允許你的用戶邀請他們Game Center好友
和使用自動匹配的立即遊戲功能
你們中的一部分實現了GKMatchmaker
這是我們的編程API
它允許你實現你自己的UI並設置你自己的邀請
但若你一直用GKMatchmakerViewController
現在它看起來是這樣
這是我們新集成的消息視圖控制器
你會注意到一些區別
沒有氣泡但這不是最重要的部分
現在它直接和消息集成
這允許你的用戶可以發送消息
給聯繫人裏的任何人
然後可以和他們一起玩遊戲
讓我們看看它是什麼樣子的
這是Doodle Jump中的多人遊戲視圖控制器
你可以點擊立即遊戲並且自動匹配會和以前一樣工作
然而我們對點擊邀請好友時會發生什麼更感興趣
這會帶來這個新的消息視圖控制器
你可以看到我們有這個漂亮的富鏈接
在角落裏有小的Doodle Jump圖標
我添加了一點文本來告訴你的用戶
關於這個鏈接會讓他們做什麼
這完全基於iCloud技術
所以你的所有用戶需要登錄
iCloud使它能夠工作
你可以在收件人域裏開始輸入
這會用聯繫人自動完成或者你可以鍵入
一個電子郵件地址或者電話號碼屬於你知道的任何人的
或者你剛剛見到的任何人
或者你可以點擊加號按鈕這會帶來聯繫人
這是我的所有聯繫人
我有他們的消息信息
你在中間還能看到一個最近標籤
這裏會有你的Game Center好友
以及你的用戶最近在GameCenter裏一起玩過遊戲的人
附近的功能是同樣的
在本地網絡中查找玩家
也在玩同一個遊戲的玩家
所以我會點擊Alisha 邀請我的朋友Alisha一起玩
然後點擊添加
會把她填入收件人域
然後你可以這和消息的功能是一樣的
這基本上就是消息UI
你的用戶可以添加額外的文字然後這會被髮送到所有這些玩家
若我點擊一個Game Center玩家
他們的名字會被顯示成灰色
他們會收到Game Center通知
他們不會得到一些奇怪的GameCenter iMessage
它會做爲通知進入所以如果我們點擊發送按鈕
這會被髮送給Alisha
在Alisha的屏幕上看起來是這樣
她可以點擊鏈接來接受邀請
這會直接把她帶入遊戲
並開始連接
就像她點擊通知會發生的事一樣
我們還有的功能是如果她沒有Doodle Jump
這會把它帶到商店她可以下載
並玩遊戲就像她可以在通知做的
我說過我們不需要做什麼
來實現這些
我們只替換了視圖控制器
所以如果你一直在用這個視圖控制器
那麼你已經能夠得到這些功能
一旦iOS 10發佈
你的所有用戶都能這樣做來邀請他們知道的任何人
他們不再被限制在Game Center好友中
然而我們有一個東西如果你想你可以定製化
那就是富鏈接圖像
就在這目前是Game Center圖標
如果你想把這換成一些別的
你覺得更適合代表你的遊戲
或者更適合用來表明這是一個遊戲邀請
或者一個有趣的事人們會想點擊它
那麼你可以...
你要做的是添加這個文件GKMessageInvite到你的程序包中
用同樣的方式然後我們會提取它
如果你想要定製你的通知聲音
我們也可以提取它並定製你的富鏈接
這和Safari使用的富鏈接技術是相同的
所以這被用來使用各種各樣的圖像
這對Game Center好友說明什麼？
我們不再需要好友因爲我們可以和任何人一起玩
所以我們會凍結好友列表
但是你仍然可以查看任何你的Game Center好友
在最近玩家標籤頁中
你還是可以獲得好友好友還是存在的
我們不是要刪除他們他們還在那
但是你將不能發送 接收 回覆
任何好友請求因爲
GKFriendRequestComposeViewController現在被棄用了
它也並沒有被使用很多
這對Game Center應用意味什麼？
如果你下載了包圍這款遊戲你可以注意到一些改變
Game Center作用是什麼？
在iOS 9中它被用來管理你的帳戶
管理你的好友
你可以瀏覽遊戲列表你可以查看你的排行榜
查看你的成就和挑戰
發送挑戰查看你的回合
但是這些你都可以在系統的其他部分裏完成
更重要的是在你的應用中
所以我們移除了Game Center應用
那我們在哪做那些事？
要管理你的帳戶你可以在設置裏這麼做
如果你想要管理好友你仍然可以在設置裏這麼做
要瀏覽你的遊戲我們有App Store
你可以看你的主屏
你查看排行榜 成就和挑戰從GKGameCenterViewController
如果你不用這個視圖控制器你可以有你自己的UI
如果你現在沒有
在你的遊戲中顯示挑戰或者排行榜和成就
我們強烈建議你從現在開始這麼做
你還可以查看和進行你的回合從GKMatchmaker...
GKTurnBasedMatchmakerViewController
所以我們移除了這個應用
所有功能都存在在其他地方更重要的是在你的應用裏
我們想要我們的用戶花費
你的用戶花費更多時間在你的應用中
我們有手機的其他部分我們不需要他們的更多時間
所以我們移除了這個應用
讓我們談談會話
這是我們全新的API我們對它感到很興奮
這是一個全新的多人遊戲方式
所以Game Center多人遊戲它現在看起來是什麼樣子？
我們有兩個主要API針對實時和回合制
實時會連接兩到四名玩家
這些連接要求立即握手
如果任何人離開連接整個連接都會失去
你只是來回傳送數據
遊戲一結束那些數據馬上消失
回合制可以連接16名玩家
我們有一個很正式的API來傳遞和交換回合
你需要遵守這些規定
你需要確保你的遊戲適合那個結構
所有遊戲被保存在Game Center服務器中
直到它們過期
什麼是會話？
會話是我們新的基於iCloud的多人遊戲
我們有通用接口來保存和共享遊戲數據
這是一些易於分享的小的數據
人們可以分享給他們想一起玩遊戲的人
這是一個完全靈活的遊戲結構我們不強加任何東西給你
你可以做任何你想做的
我們有非常穩定可靠的實時流你可以在會話中建立
這允許你和任何人一起玩
一個會話看起來是怎樣的？
我們有兩個主要的東西
我們有遊戲數據可能是更重要的部分之一
但是還有同樣重要的就是玩家
這就是你所需的全部
你得到一個會話所需要的全部基本
是一個玩家和一些遊戲數據
你可以有多個玩家
如果你想和其他人一起玩這很有用
我們還能在那些玩家間發送消息
這些消息會做爲Game Center通知到達
你可以有那些消息在玩家間來回發送
或者多個玩家可以同時羣發消息
和這些消息一起的我們可以加角標
所以你可以發送這些消息並給那些玩家加角標
讓他們知道會話中發生了一些事
他們可能需要處理
現在我只顯示四個玩家
但是在一個會話中我們可以最多有100個玩家
比以前能有的多了很多
我們能有多個不同類型的會話
你可以有隻有一或兩個玩家的小型會話
你也可以有4個 100個 7個玩家
那些玩家可以被分到不同組中
所有這些會話可以同時運行並且你的玩家可以
同時在所有不同的會話中
我們還有實時流如果你在會話中
你想要快速在不同玩家間傳送數據
那麼你的玩家只需要設置他們的連接狀態
我們會在後臺建立管道
這允許玩家開始互相通信
讓我們進入實際的API看看一個會話是由什麼組成的
我們有一些類我們有GKGameSession
它允許你的玩家和會話數據
以及其他玩家互動
我們有GKCloudPlayer是會話中的一個玩家
GKEventListener幫助你知道發生的重要事
在你的玩家所在的任何會話中
我們還有GKGameSessionError
給你更具體的錯誤
當你和會話一起工作時有可能遇到
讓我們談談GKGameSession
這是你主要的馱馬
每個會話的幾乎所有工作都是在這完成的
它基本上允許你做任何事你可以創建一個會話
離開會話 載入和保存遊戲數據
分享會話
添加和刪除玩家
查看誰正在玩發送通知
設置和清除角標
加入流在那些流上發送數據
基本上你將要做的所有事都需要和GKGameSession互動
關於它的更多細節
你可以最多儲存512KB的遊戲數據
數據會被儲存在用戶的iCloud上
這不是關聯到你的遊戲用戶會在其iCloud上有這些數據
這會計入他們的iCloud限制
它會遵守CloudKit慣例
關於誰擁有那些數據數據是怎樣分享的 隱私
當數據被刪除時發生了什麼
消息和角標 像我說過的Game Center通知一樣進來
它們被這樣加角標
現在可以更直接地控制角標
被你 作爲開發者
我們會更深入一些
但是角標數字來自哪裏會很清楚
而且你應該能夠理解它爲什麼是這樣 它是什麼 並能改變它
成爲任何你想要的
我們還有這些實時流
利用已有的Apple基礎設施
這和FaceTime和iMessage運行在同樣的技術上
所以它很強大 穩定它被建造來處理大量數據
所以若我們想要創建一個會話我們需要做什麼？
首先我們需要一個標題用來描述這個會話
你可以定義它或者從用戶那得到它
你需要容器標識符
你爲你的應用設置的iCloud容器
並且設置一個可以在多個應用之間使用的容器
如果你想多個遊戲可以訪問相同的數據
比如你有免費版本和付費版本
或者你的遊戲的其他版本如果你的設置正確
他們仍然都能訪問相同數據
你還可以設置流玩家的最大數量
有一個硬限制是最多16名玩家可以在一個實時流中
但是如果你想要使它更低或者不同
你可以在創建會話時降低限制
但是你需要在創建時決定它
然後你用所有相關信息調用createSessionInContainer
它會給你一個會話你可以開始操作和使用它
你需要對會話做的第一件事
是找到如何保存和載入你的數據
任何會話中的玩家都可以訪問那些數據
這只是一個每個人都在使用的二進制大對象
還有一點會話的元數據
幫助你避免和解決衝突
那是最後修改日期和最後修改玩家
這樣你知道誰最後修改了它
它是否對你很重要需要保存
或者你的數據很有可能是最新的
你可以調用loadDataWithCompletionHandler
它會把數據提供給你
你可能還想保存數據
我之前說過 512KB
但是你可以對那個數據做任何你想做的
它可以是任何東西只要在大小的限制內
以completionHandler來調用saveData
如果有衝突
如果其他人在間隔裏進行了保存
你會得到錯誤和衝突的數據
我們等會會談到更多關於這的內容
任何時候有人保存數據
會伴隨一個事件監聽器
如果你設置事件監聽器來監聽一個會話中的玩家保存數據
那麼你會知道什麼時候其他人保存了數據
這樣你很有可能需要更新和解決
數據的任何本地衝突
像我說的保存衝突可能發生
這發生在兩個玩家嘗試在幾乎相同的時間保存數據
因爲沒有正式的經過一回合
很有可能兩個玩家在同時進行了一輪
如果你是這麼設計和實現你的遊戲的
假設我們有玩家2和3都在同一時間保存
他們中的一個會贏我假設是玩家2
這表明當玩家3嘗試保存時他會得到一個錯誤
而且衝突數據會被返回
現在你需要找出如何解決這個衝突
因爲我們沒有指定數據格式
我們也不知道數據的意思
所以你需要自己設計數據結構
用一種方式使你容易
找出那些衝突是什麼並解決它們
然後重新調用saveData
使那些數據被保存
如果你不重新調用saveData你的數據不會被保存
你需要繼續調用saveData
直到不返回衝突
然後所有東西都是最新的
所有東西對你的用戶都是一樣的
然後你可以繼續
然後每件事都很完美
我們已經談過了多人遊戲你怎麼獲得
額外的玩家到你的會話中？
任何在會話中的玩家可以邀請其他玩家參加
你會獲得一個URL你需要把它發給其他人
你可通過iMessage 電子郵件Twitter Facebook發送它
打印 粘到一顆樹上這可能不是個好方法
但是隻要你把這個URL給其他人
他們可以點擊它然後可以加入那個會話
最簡單的方法是通過分享表
因爲它就在這彈出然後你可以發送消息
這可能是最簡單的這麼做的方法
如果玩家1
如果他從會話中得到URL
他們用分享表設立iMessage
來發送給玩家2他們添加了一些文字
“嘿 你想和我一起玩嗎？”結果是這個iCloud URL
它會被髮送給玩家2他們會點擊它
一旦他們這樣做玩家2就加入了
爲了獲得這個URL
你只需要調用getShareURLWithCompletionHandler
它會給你一個URL你可以對它做任何你想做的
然後無論何時一個玩家加入了會話
事件監聽器didAddPlayer將被調用
這會讓你知道其他人加入了你的會話
並且相應地繼續進行遊戲
我們一直在說玩家他們到底是什麼？
我們有GKCloudPlayer
這和你以前使用的GKPlayers不同
GKCloudPlayer只在會話中使用
它有兩部分數據
一個對你的應用來說獨特的玩家標識符和顯示名字
這是用戶想用來顯示的名字
這完全不是一個GKPlayer對象
如果你嘗試把它用於排行榜或成就
其他多人遊戲 或任何事
它並不工作所以請不要這麼做
每個人都會很失望
所以怎麼獲得我們的雲玩家
我們可以獲得當前登錄的玩家
會話中的大部分都會從你的當前玩家中被調用
雖然並不需要確保你有這個玩家
你說 哦這個玩家正在保存數據
這些都在後臺爲你處理了
但是你可能想知道誰擁有會話？
你可能想知道如果會話被刪除了
如果其他玩家擁有它
這將會刪除每個人的數據
你可能還想要清除你的角標
發送消息知道更多的這些
你還可以獲得會話中的其他玩家
這只是會話的一個屬性
這是你把消息發送給其他玩家的最好方式
特別是設置和清除角標
說到消息和角標
讓我們談談那些
這些消息我們稱之爲消息
但它們作爲Game Center通知傳入
像我說的 所有玩家都可以發送消息在任何時候給任何玩家
這些消息很容易本地化
你還可以和消息一起發送一點數據
如果有相關信息
你可能想傳給其他玩家關於這個消息是什麼
或者有什麼特殊的東西是他們應該看的
並且你還可以選擇性的給消息接收者加角標
這樣任何收到消息的人也會收到一個角標
和消息
那代碼是怎樣的？
sendMessageWithLocalizedKey你有了所有參數 發送給誰
你是否想給那些玩家加角標
被調用的事件監聽器是
會話didReceiveMessagefromPlayer
會在任何一個通知到達時被調用
讓玩家知道有東西到達
他們可能想知道或處理
角標
我說過角標可以被包括在消息中
基本上任何時候你發送一條消息
你可以爲那名玩家啓用角標狀態
你每個會話獲得一個角標
這表明是否有事需要你來處理
這些角標可以在任何時候設置和清除
所以如果你發送一條消息然後
像是 嘿我在遊戲裏需要幫助我們正在做這件事
然後沒有人出現你可以清除角標
像是 沒關係 我不想和你說話
所以你可以保持所有數據相關並最新
應用圖標會顯示總計數
如果你有三個會話並且都有角標
應用圖標會顯示3
如果只有一個有角標圖標會顯示1
我們會幫你合計它們
但是會話設置角標是基於什麼應該很清楚
角標數字來自哪
所以讓我們談談管理會話
我們創建了一個會話我們保存了它 我們載入了它
我們載入了數據我們把它發送給一些玩家
你的用戶關閉了你的應用他們完成了一些別的事
你回來你想要載入那些會話
並確保你獲得所有相關數據
這樣他們可以再次開始遊戲
你要做的第一件事是調用載入會話loadSessionsInContainer
這個容器和開始的應用容器是同一個你在裏面創建了會話
這會載入準系統數據
爲你的本地玩家參與的所有會話
然後根據那些數據
你會想要找出你要載入哪個會話
會話有兩個主要部分用來識別它
一個是你給我們的標題但是標題並不是獨特的
你可以用任何你想用的
所以這不足以用來載入一個會話
當創建會話時我們會給你一個標識符
你要用它來載入特定會話
調用loadSessionWithIdentifier這會給你會話的所有信息
包括你需要知道的所有事
用來開始載入數據
發送消息給其他玩家繼續遊戲
你可能會想刪除會話
如果你調用removeSessionWithIdentifier
這和我們剛剛說到的是同樣的標識符
如果玩家不擁有會話
這隻會把他們刪除出會話
並不會刪除任何數據
但是如果你刪除那個玩家創建的會話
這會刪除數據
不僅僅是對這個玩家而是玩家中的所有人
這時你可能想看看誰是本地玩家
找出他們是不是要對每個人這麼做
也許發送
警告給用戶 嘿你會爲每個人刪除它
這樣他們知道他們是在做什麼
任何時候一個玩家被刪除了
事件監聽器didRemovePlayer會被調用
這樣你就知道有人離開了
你可以相應地繼續更新你的遊戲
讓我們談談遊戲會話流
這是會話中的實時元素
目前爲止的其他內容聽起來都是基於回合的
你保存 發送消息
我們還可以在遊戲中有實時元素
遊戲會話流
你可以連接當前在會話中的任何玩家
每個在會話中的人
如果他們願意開始互相發送數據
這是你如何這麼做
你可以查看會話中任意玩家的狀態
你可以發送數據給所有玩家在你建立的連接上
你還可以添加和刪除玩家而不需要重新開始連接
你可以讓一些人蔘加
兩個人在玩第三個人想加入
你不需要重置所有事
一旦他們開始
他們就開始接收和發送數據你不需要進行握手
我們在後臺爲你處理這些
那麼我們怎麼建立連接？
你只需要爲玩家設定連接狀態
你只需要以completionHandler調用setConnectionState
有很多原因可能造成這失敗其中一個原因是
如果已經達到會話的最大玩家數
如果第17個玩家嘗試加入流
你一共有17人
那麼這就會失敗他們無法加入流
你可以看到玩家是否被設置一個特定狀態
這個狀態是連接和斷開
你可以看到多少其他玩家目前已經連接和他們是誰
任何時候一名玩家改變連接狀態
不管是連接或斷開事件監聽器 會話
玩家 didChangeConnectionState會被調用
這樣你就知道那是否改變了
和你目前和多少人一起玩
一旦你建立了連接你可能想開始發送數據
所有的數據會被髮送給所有連接的玩家
你可以發送這些可靠或不可靠
和我們的實時API相同
根據哪個更重要確保玩家收到數據
或者確保他們儘快收到數據
任何時候數據被髮送了
事件監聽器didReceiveDataFromPlayer會被調用
你可以獲得數據並在本地更新遊戲
並繼續玩你的遊戲
這就是構成會話的所有基本要素
讓我們談談一些例子看看它實際看起來是怎樣
當你創建一個遊戲時
首先你得到你基本的回合制遊戲
你建立了會話 獲得遊戲數據
加入了一些玩家
可能是玩家1的回合
他們首先發現是他們的回合並且保存數據
數據可以被玩家2 3 4載入
玩家1可以向玩家2發送消息
發送角標並說 嘿輪到你了
可能你想這麼做
玩家2可以載入遊戲 開始玩
找出要怎麼處理新數據進行他們的回合 保存數據
然後把回合交給玩家4
因爲沒有特定的方法關於回合如何傳遞
這由你決定你可以從1到2 從2到3
從4到1 你想怎樣都行
沒有回合傳遞的特定方法
坦白說我們不知道你在幹什麼
所以你把遊戲傳遞給玩家4
他們完成他們的回合並繼續
你有了一個相當基本的回合制遊戲所需的所有元素
你還可以做一個實時遊戲
你設置好所有玩家
你讓每個人打開連接狀態
一旦連接狀態打開
我們會在後臺建立管道來允許他們互相連接
一旦全都建立起來
你的玩家可以開始發送數據給其他人
這些數據會繼續傳送
只要這些連接可用
關於會話
如果你想在結束時保存任何信息
比如誰贏了 排名
或任何信息關於這個特定實時遊戲
你可以有一些持續的數據
你想和會話一起保存
這些是基本的例子
但會話真正強大之處
是可以進行更復雜的遊戲
假設你有一個遊戲會話
這是一個回合制遊戲但是你想要更復雜的回合
這有一個遊戲
它有交易卡片的元素
當來到玩家的回合時你可能可以交易卡片
可能用磚交易羊或者什麼東西
你可以通過桌上談話
在一個真的桌面遊戲中完成的事情
你可以用會話更容易地完成
假設是玩家1的回合他想要和其他玩家交易
然後他們發送一條消息說“嘿 我想要用磚交易羊
有人感興趣嗎？”
你可以發送這條消息和一些數據
讓用戶知道嘿這是我想要的
然後發送給每個人
假設玩家4像是“哦聽起來很好 我願意進行交易”
或者“我對這個交易沒興趣用小麥交易羊如何？”
或者類似的
他們可以發送消息給玩家1
加角標並說
“嘿 這是...我接受你的交易”或者“我有不同的交易”
你可以來回發送消息找出你想做的
一旦玩家1決定 “我接受交易”或“我拒絕交易”
他們可以進行他們的回合去掉每個人的角標
保存數據 去掉自己的角標
然後把回合交給玩家2
我們還可以更容易地加入
多人遊戲這可能複雜一點
假設你有一個多人遊戲如King of the Hill之類的東西
所有人都在會話中
但是你一次只想兩個人能玩
你開始你的會話你有玩家1和2
他們會打開連接狀態
加入一個遊戲並來回傳遞數據
他們會有一些一對一的肉搏戰
其中的一個玩家會被淘汰
讓我們假設是玩家1
然後玩家2繼續和隊列中的下一個人玩
你不需要用任何方式停止遊戲
你不需要建立任何連接屏幕
一旦玩家3設定了連接狀態
你可以開始來回發送數據
立即給玩家2和3
他們會進行他們的回合看誰贏了
這次[聽不清]
然後玩家4可以加入這個打架
他們可以建立連接並繼續
你可以繼續這樣
繼續進行任何循環賽
如果你有100個玩家你可以循環全部100個玩家
繼續進行King of the Hill式的打鬥
然後你可以保存遊戲數據
這允許有持續的排名
和持續的天梯
在會話中的這些人中
另一個你可能遇到的情況是幫助一名單人玩家
假設你有一個單人遊戲
你用會話保存數據這完全可以
你完全可以用會話來完成一個單人遊戲
並用這做爲一種方法
來保存和發送數據
這樣你的所有數據可以容易地更新到所有設備中
但是你的玩家遇到了困難他們玩了好一會了
他們無法完成這一關他們真的有困難
如果你這樣實現你的遊戲
那麼玩家1可以分享遊戲給其他玩家
他們可以帶入玩家2
然後你可以加入一些元素允許玩家2
幫助玩家1通過這關通過一些合作方法
或者你可以允許玩家2幫玩家1玩這一關
這樣他們就可以通過遊戲卡關的地方
讓玩家1有更多樂趣
玩家2可以進來做任何你讓他們做的
保存遊戲數據
然後他們可以離開遊戲
玩家1可以繼續玩遊戲
好像玩家2從來沒有在遊戲裏出現過一樣
這就是遊戲會話
它允許你和有iCloud賬戶的任何人一起玩遊戲
你不需要是他們的好友
所以更靈活的遊戲結構將允許你 開發者
用任何你喜歡的方式建立遊戲
我們有很簡單的多人遊戲連接
這很容易建立 很穩定
允許傳送大量的數據
我們對看到新的可能的遊戲類型感到興奮
你會趕上因爲會話的能力
因爲在遊戲中混合回合制和實時元素
我們很想看到你們會做出什麼
這就是今年Game Center的新特性
我們有新的基於消息的多人遊戲邀請
現在允許你能夠發消息給任何人玩遊戲
我們移除了Game Center應用
我們有剛談過的持續遊戲會話
我們還宣佈了Apple Watch支持
如果你想知道更多關於本次演講的信息你可以上這個鏈接
我們是演講611
我們有一些相關演講 你可能感興趣
我們有“Apple Watch遊戲技術”下午晚些時候
這周早些時候我們還有一些演講你可以觀看視頻
還有一些其他的沒有列在這裏
謝謝到來有一個愉快的WWDC