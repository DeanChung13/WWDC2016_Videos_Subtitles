Apple TV遊戲輸入控制
謝謝大家
大家好 歡迎參加Apple TV遊戲輸入控制研討會
我是JJ Cwik遊戲技術軟件工程師
我們在去年九月重新引入了Apple TV
並且提到了10英尺體驗
這作爲一種共享的公衆體驗
是真正適合遊戲設置中較長的會話的體驗
事實是
人們就喜歡在客廳玩兒遊戲
Apple TV無疑是理想選擇
Apple TV爲你提供所需工具
創建引人注目的遊戲體驗
今天 我很高興地跟大家一起探討Siri Remote、
MFi遊戲控制器以及如何完美地將兩者整合到遊戲中
在我開始爲大家劇透之前 先來看看tvOS 10裏增加了什麼新特性
正如你們在本週一所瞭解的
有些遊戲不是Siri Remote支持的高級遊戲機制
這些遊戲可以把需要遊戲控制器的需求選擇性地包含進來
現在 我們最多能支持四個MFi遊戲控制器
這對於多玩家遊戲來說無疑是個好消息
我們還在本週一發佈了一個Apple TV遙控器應用
用於控制Apple TV
並充當遊戲輸入設備
我將在本場研討會中逐一談到以上幾點
好了 讓我們開始吧
tvOS上的應用
一般是從聚焦引擎 獲取輸入數據
或從觸摸和手勢中
但還有第三種方式
即從Siri遙控器 直接讀取輸入
和使用遊戲控制器框架的遊戲控制器上
現在我簡要描述一下游戲控制器框架
你們中可能有人沒接觸過它
遊戲控制器框架最初
用於將第三方遊戲控制器植入到遊戲中
我們把這些兼容的遊戲控制器叫做MFi控制器
自從框架更新後
框架也支持Siri遙控器了
遊戲控制器框架是一個標準化的簡單API
可以獲取所有控制器並使用相同的API調用
而無論控制器的供應商是誰
它使控制器的檢測變得標準化
它會 無縫處理控制器的連接和斷開
在遊戲運行時
並允許你控制輸入
更確切地說是從控制器中讀取輸入
用輪詢或事件驅動模型
這在tvOS、iOS和MacOS上都能用
所以 雖然這場演講是面向tvOS的
但是大量代碼和概念都能用在iOS和macOS上
現在你應該對框架有了大概的瞭解
我再具體說一下
有一個核心類
在遊戲控制器框架中叫GCController
這代表着實物控制器...
Siri遙控器 也是用這個類
和MFi遊戲控制器
在應用中 你最想做的第一件事可能
就是獲得一份當前所有已連接的控制器的列表
你就得在GCController中使用控制器的類方法
這會返回一份當前已連接的控制器列表
是GCController實例數組
如果沒有的話 就返回一個空數組
控制器連接和斷開是常事兒
在應用運行時
要想知道什麼時候連接和斷開就需要 添加觀察者
給GCCcontrollerDidConnectNotification
和GCControllerDidDisconnectNotification
理想位置是在
應用的Did Finish Launchingwith Options中添加
我們現已知道哪些控制器已連接
我要把重心轉移到Siri遙控器上來
Siri遙控器 作爲遊戲控制器充當遊戲觸摸表面
通過我剛提到的GCController類
在遊戲控制器框架中有這種profile的概念
以及profiles集合的常見功能
Siri遙控器支持這兩種profile
第一個profile叫GCMicroGamepad
用於操作觸摸表面
和Siri 遙控器上的按鈕
Siri遙控器支持的第二個profile叫GCMotion
用於 獲得陀螺儀
和加速計 在Siri 遙控器上
請注意 跟iOS上的習慣不一樣
在iOS上 動作通過CoreMotion框架表達
而在tvOS上 動作通過遊戲控制器框架表達
那麼 讓我們依次看一下每種profile
首先是GCMicroGamepad
Siri遙控器上的觸摸表面
會作爲各種虛擬DPAD在遊戲中體現出來
你可以用模擬表示法來查詢DPAD的值
是一個XY座標對
或一種數碼輸入 基本上有四個按鈕分別是上、下、左、右
GCMicroGamepadprofile還有一A按鈕
相當於點擊遙控器
這個非常適合作爲遊戲的原始動作
尤其是當豎着拿着遙控器時
並且這個profile還有一個X按鈕
這個作爲遊戲中的第二個動作很有幫助
而且當遙控器朝側面傾斜很自然地
和橫向拿着時 大拇指一般會放在觸摸表面上
並且另一個大拇指會放在X按鈕上
請注意 這個遙控器上還有一個菜單按鈕
我們稍後會再談
遙控器上的其它按鈕將留作系統使用
這裏有段示例代碼 演示有多麼簡單
從按鈕中讀取數據
在這裏 我們看到已經連接了一個控制器
這樣我們就可以從MicroGamepadprofile中讀取數據了
MicroGamepad profile存儲了A按鈕和X按鈕屬性
我們只看一下isPressed屬性
這個屬性將確定是否按了這些按鈕
我們還支持一種事件驅動模型
所以 如果你想得知
是什麼時候按下按鈕的 若不想做輪詢你可以使用事件驅動模型
這些叫做pressedChangeHandler
這個代碼塊會在按鈕變更狀態時運行
通常來說按下按鈕的通知會被調用兩次
一次是按下去 一次是彈起來
以上說的是按鈕
現在讓我們來看DPAD
我剛纔說過 DPAD可讀取四個按鈕分別是上、下、左、右
有意思的是 還有另外種陳述
是兩個座標軸 X軸和Y軸
現在讓我們來看一下
你可看到MicroGamepad上有一個DPAD屬性
有X軸和Y軸兩個屬性
我們可以讀取這兩個屬性的值
並返回一個浮動的標準值在0或 抱歉
在負1和正1之間的標準值
正如你所期待的那樣我們還有個事件回調可用
請注意 在這種情況下我們使用了值變更處理器
或我們提供了一值變更處理器
在DPAD上 而不是在X軸和Y軸上
這是因爲我們想在任何一個軸發生變化時都得到通知
DAPD遙控器有一些很有意思的地方
我想具體談一下
第一個是DPAD開窗
這是什麼呢 這實際是定義
DAPD的X軸和Y軸的原點
現在你可能會想原點不應該總是在中心嗎
很多時候 這個問題的答案是不見得
很多時候 玩家並不會太關注
他們在觸摸表面上正在觸摸的精確位置
他們只是想把大拇指放在觸摸表面上並相對 移動
於他們最開始觸摸的地方
DAPD開窗允許你
作爲遊戲開發者去挖掘這個相對動作
因此會在觸摸表面上的初始觸摸點創建一個原點
然後 從那之後的進一步移動會有一個DAPD值報告給
相對於原點的 遊戲
讓我們舉例解釋一下
這是觸摸表面我把我的大拇指按在這兒
請注意 我並沒按在觸摸表面的正中央
但啓用DPAD開窗以後
這裏將作爲X軸和Y軸的原點
請注意 有一個虛構的DPAD窗口
位於以原點爲中心的區域的外部
請看 當我的拇指劃過觸摸表面時會發生什麼
報告給遊戲的值是相對於這個原點的
並跟窗口的尺寸成一定比例
現在 我繼續在觸摸表面移動拇指
會同時拖動窗口和兩個軸一起移動
現在 我們已經建立了一個新原點
在觸摸表面上的進一步的移動
都會有相對於這個新原點的DPAD值報告給遊戲
這就是DPAD開窗
如果你想始終接收DPAD的絕對值
你可以使用reportsAbsoluteDpadValues屬性
將它設爲真
這樣我們總是能將原點
定位在觸摸表面的正中央
然後 我按下拇指並在觸摸表面上移動
所有值都是相對於
觸摸表面的正中心的
那麼這就是DPAD開窗
下一個講旋轉
遊戲的DPAD值
是以縱向爲前提的 意思就是當X軸向右 Y軸向上時
但是 這可能會導致一個問題
如果玩家想橫向玩兒呢？
在這種情況下你的遊戲就需要調換這些值
使遊戲在橫向時也能正常運行
但是 如果用戶朝相反方向傾斜遙控器會怎麼樣呢
你就需要將這些值調換爲相反方向時的值
那麼 要如何實現呢
要麼就強制用戶
始終按指定方位玩兒遊戲
要麼就得讀取加速計數據
並追蹤方位變更
但你並不想這麼做
所以我們提供了一個叫allowsRotation的屬性
這個屬性的默認設置爲假
如果把它設爲真那麼報告給遊戲的DPAD值
會匹配遙控器的任何一種方位
當這個屬性設爲真並當遙控器爲縱向方位時
X軸向右 Y軸向上
在左橫向方位時X軸向右 Y軸向上
在右橫向方位時 你猜對了X軸向右 Y軸向上
所以 如果你的遊戲要允許玩家在橫向方位玩兒遊戲
就要把允許旋轉設爲真
這樣你就不用擔心方位變更
或需要自己旋轉DPAD值了
那麼這就是旋轉
下一個講動作
我前面提到過 第二個profile
Siri遙控器支持的叫GCMotion
當用戶移動遙控器時 重力
由GCMotion profile提供用戶加速度矢量中的 就會被更新
請注意 這些值在接觸遊戲之前已經被過濾了
那麼 如果你有一個tvOS遊戲
並且你正在做動作過濾我們建議你把它移除
這樣就不會給遊戲造成任何不必要的滯後
另外 這是混合動作數據我的意思是
加速計和陀螺儀會 加強
相互 和矯正
就像在iPhone上一樣重力矢量
加速計中的會矯正陀螺儀中的漂移
並且陀螺儀數據會
使加速計中的值保持順暢
它們相互增強
實際上劇烈運動會淹沒這種作用
正因爲如此 我們建議你在遊戲中避免創建 情境
需要用戶劇烈搖動遙控器的
因爲這會使數據很難保持準確性
直到傳感器能夠找到機會固定下來
接下來 我想說一下菜單按鈕
現在 tvOS支持的所有控制器
在遊戲控制器框架中都有一個菜單按鈕
跟Siri遙控器 菜單按鈕一樣行爲也一樣
和MFi遊戲控制器上的
在tvOS的app中
當按下菜單按鈕時 行爲變更
是由情境因素決定的
有時候按菜單按鈕會最小化應用
並返回Apple TV主屏幕
通常是在遊戲的主菜單中實現的
而其他時候按菜單按鈕會返回 上一級
應用菜單級的
通常是在子菜單中實現的
最後 有時候按菜單按鈕會暫停
或重新開始激活的遊戲設置
非遊戲應用完全是在UIKit中進行編碼的
在很大程度上 會毫不費力地得到前兩種行爲 而不用做任何額外的工作
但是對於大多數遊戲來說 由於有自定義UI 必須做一些額外的工作
來向系統傳達它們的意圖
讓我具體解釋一下
在UIKit中當按下UIKit應用的菜單按鈕時
會使子視圖控制器突然離開堆棧
這就使你返回菜單的上一級
你可以依次執行 每次按下菜單按鈕
使子視圖控制器突然離開堆棧
然後在某一時刻你只有一個視圖控制器了
就是你的根視圖控制器它會留在堆棧中
當堆棧中只有一個視圖控制器時
下一次按下菜單按鈕時會最小化應用
並使你返回Apple TV的主屏幕
相比之下大部分遊戲的結構都不一樣
通常遊戲中的UI都是自定義的這並不是在UIKit中進行編碼的
並且遊戲一般有 場景轉換
不同部分之間的這也不能在UIKit中進行編碼
正因爲如此 它們一般能 被釋放
通過只剩一個視圖控制器即根視圖控制器
在遊戲的整個持續過程中
但按照我們剛說的規則
因爲在堆棧中只有一個視圖控制器那麼在遊戲的各個層面上
按菜單按鈕將默認彈回
Apple TV主屏幕
那麼你就需要某種方式向系統傳達
何時按菜單按鈕
返回Apple TV主屏幕及何時按菜單按鈕不返回Apple TV主屏幕
進入GCEventViewController
這是一個爲單一玩家創建的特殊視圖控制器
或更準確地說 是爲有單一視圖控制器的遊戲控制器遊戲
如果你正在做的就是這種遊戲
你應該把這個特殊視圖控制器設爲你的根視圖控制器
這個視圖控制器有一個屬性叫
controllerUserInteractionEnabled
這是控制 的關鍵
什麼時候按菜單按鈕返回主屏幕的
當它的值爲假時這個視圖控制器會有效地
截止按下菜單按鈕這個行爲
並阻止它們建立響應鏈
從而有效地讓你繼續待在應用中
偶爾也可用來調用控制器暫停處理器
我們稍後會講到
當這個值設爲真時
菜單按鈕事件就會 繼續建立
響應鏈 像平常一樣
這時應用會被最小化
並返回Apple TV主屏幕
你作爲遊戲開發者你的工作是管理 狀態
controllerUserInteractionEnabled的
當用戶在遊戲的不同部分後退和前進時
我要給你們看一個方塊圖
那麼在Apple TV的主屏幕我們啓動應用
有些遊戲有啓動畫面而有些則是遊戲介紹
但最終 很多遊戲都會在遊戲內部的主菜單着陸
無論是哪一種 用戶的期望是
當按菜單按鈕時 它們會立即返回
Apple TV的主屏幕
因此 要把controllerUserInteractionEnabled設爲真
當用戶繼續遊戲的其他部分時
比如激活的遊戲設置或在子菜單中
用戶的期望是按菜單按鈕後
不返回Apple TV的主屏幕
那麼在這些情況下
就把controllerUserInteractionEnabled設爲假
如果用戶再回到遊戲內部的主菜單
要記得把這個值再設爲真
這就是我們的第一個行爲
即何時返回Apple TV主屏幕及何時不返回Apple TV主屏幕
我們還有另外兩個行爲
我們需要考慮返回子菜單
以及暫停和重新開始激活的遊戲設置
基本上就是這個圖解中顏色較暗的框
好消息是 這些都是在controllerPausedHandler中得到處理的
controllerPausedHandler是一個代碼塊 你要提供給
控制器或者不如說是每個控制器
這個代碼塊會在按菜單按鈕時運行
並不會把你帶回Apple TV主屏幕
用這個代碼塊檢測是個很簡單的事兒
你是否在子菜單中需要返回上一級菜單
如果你在激活的遊戲設置中就觸發暫停狀態
就這麼簡單 現在按菜單按鈕的行爲處理地都很得當了
無論是在遊戲的哪個位置
現在讓我們來談談MFi遊戲控制器
有些遊戲可以充分利用擴展控制
由無線擴展手柄提供的
並且這些是玩家可能會持有的可選附件
說到擴展 我們指的是控制佈局
而且很可能是你已經很熟悉的佈局
左側有一個DPAD
四個面板按鈕
以A、B、X、Y出現在這些位置
右側有 菱形佈局
控制器的前方有兩個搖桿
頂部有兩個肩部按鈕和兩個觸發器
目前我提到的所有按鈕
都是壓敏性按鈕 我稍後再詳細解釋
還有剛討論過的菜單按鈕
以及四盞LED玩家指示器
就像Siri遙控器支持GCMicroGamepad一樣
擴展遊戲控制器支持GCExtendedGamepad profile
你會注意到左側有一個表列出了所有屬性
還要注意數據類型GCControllerDirectionPad
和GCControllerButtonInput
這兩個跟你在Siri遙控器上所使用的數據類型相同
有一點我想單獨說一下就是DPAD
和按鈕以及這個表上的任何一個輸入
實際上都是壓敏性的
所以 即使我們通常認爲這些按鈕和輸入只是一些數字
在你可能見過的其它控制器中
像DPAD和麪板按鈕以及肩部按鈕
都是壓敏性的
因此可以從模擬感應器和數字感應器中讀取
讓我們看一下那個模擬數字對偶的代碼
以A按鈕爲例 第一行是
獲取是否按了按鈕的數字狀態
所以如果你的遊戲只在指定情況下
關注是否按了一個按鈕你可以使用這行代碼來解決
然而 若你關注用了多大力度去按按鈕
那就要使用值屬性了
這可以給你的遊戲添加更多的細微控制 效果很好
也許你正在創建一款運動遊戲
並且允許玩家改變傳遞的速度
從輕輕地傳遞到快速地傳遞
你可以通過讀取按按鈕的力度來實現
值屬性
正如你所期待的我們還提供事件回調函數
請注意有一個pressedChangeHandler
是響應按壓屬性的
用於變更布爾狀態或數字狀態
還有一個值變更屬性用於響應值或
抱歉 一個值變更處理器用於響應值屬性
一般來說 按一次按鈕會多次調用值變更處理器
因爲按鈕要被按下去然後再彈回來
而對於想尋求指導的你們來說
是否使用輪詢或事件回調
並沒有硬性規定 但輪詢有利於
讀取那些在較長時間內持續變更的輸入
也許就像賽車遊戲中的加速器
被關聯到按鈕觸發器
或遊戲控制器的觸發器上
事件回調有利於
處理按鈕的邊緣過度
比如你有一款冒險遊戲玩家揮舞自己的寶劍
如果你想 激活揮舞寶劍的動畫
在按按鈕的瞬間
那就要用到事件回調了非常好用
在這點上 你可能大概瞭解了
連接和讀取輸入的機制
從Siri遙控器和遊戲控制器中
且你很可能會開始思考
你的遊戲要支持哪種控制類型
要不要只支持Siri遙控器
還是Siri遙控器和MFi遊戲控制器都支持？
如你們在本週一所瞭解到的信息
Siri遙控器不支持的高級遊戲機制的遊戲
可以要求使用遊戲控制器
那麼指定遊戲支持哪種控制器類型
是在Xcode中實現
在你的目標設定中有個功能選項卡
能在這個選項卡中發現遊戲控制器功能
啓用這個功能
並選擇遊戲所支持的控制器類型
與這個GUI的交互將改變鍵和值
相應info.plist文件中的
這對於應用介紹頁面來說很重要因爲 所有遊戲
鏈接了遊戲控制器框架的 都會
更精確地說都會在應用介紹頁面中找到這些鍵
鏈接了遊戲控制器框架的所有遊戲的
真正涉及到的是App Store
因爲你的用戶們將在App Store中獲知
遊戲是否支持遊戲控制器
或需要遊戲控制器
此外 用戶可能會收到警告如果他們嘗試
下載一款需要遊戲控制器的遊戲
並且之前沒有在那臺Apple TV上配對過遊戲控制器的話
請注意 這只是一種保障措施
因爲很可能 的遊戲
需要遊戲控制器 可能仍會啓動
就算沒有檢測到已連接的遊戲控制器
這種情況是你需要說明和處理的
很可能用戶只不過是忘記
打開遊戲控制器
那麼在這種情況下 就要通知玩家
沒有檢測到任何遊戲控制器並要求他們連接一個遊戲控制器
否則 用戶可能會覺得奇怪爲什麼不能控制遊戲
還有一個問題你要考慮
就是以這種方式通知用戶
只適用於控制器斷開連接的情況
這是因爲控制器
或者更精確地說是可用的控制器可能會通過你的初步檢測
但是在應用運行過程時
其中一個遊戲控制器可能會斷開連接
如果這是唯一可用的遊戲控制器
那麼此時 遊戲就不能再繼續了因爲至少需要一個遊戲控制器
此時 也需要告知用戶
要了解更多信息 請查看tvOS設計
會話802獲得更多遊戲控制器的信息
現在讓我們談點兒新東西Apple TV遙控器應用
正如你在本週一所瞭解到的信息這是個新應用
可以從developer.apple.com上下載beta版
這個應用可控制你的Apple TV
在屏幕中央有一大片觸摸表面
而屏幕上的按鈕跟Siri遙控器上的按鈕相同
重點是 它可以充當遊戲輸入設備
在tvOS上的實現方式是
以一種非常熟悉的方式通過遊戲控制器框架充當遊戲觸摸表面
實際上是一個仿真的Siri遙控器
因此它顯示爲一個GCController實例
並支持GCMicroGamepad
GCMotion profiles就跟Siri遙控器一樣
事實上 它是不可辨別的
在Siri遙控器的遊戲控制器框架中
因此你爲Siri遙控器寫的代碼也可以用在tvOS上
這些遙控器默認爲合併
因此 如果你有一個Siri遙控器和一個TV遙控器應用
默認會在控制器數組中作爲一個遊戲控制器出現
意思就是 任何一個的按鈕輸入都會體現在遊戲中
就像來自同一個控制器一樣
DPAD輸入也一樣
但是對於動作我們並不希望讓動作輸入形成
覆蓋並跟另一個動作輸入衝突
所以我們從一個控制器中取出動作 或 抱歉
一次只從一個遙控器中取出一個動作
我們所取動作的遙控器是
最後接收用戶輸入的遙控器無論是滑動
在觸摸表面還是按下A或X按鈕
如果你想選擇性地分開這些遙控器
並 把它們顯示爲不同的實例
在控制器數組中
你需要
進入info.plist文件
添加布爾鍵GCSupportsMultipleMicroGamepads
並把它設爲是 現在Siri控制器和Apple TV控制器應用將顯示爲
在數組中 不同的控制器實例
現在我想談一下Apple TV遙控器應用內部的一個特殊模式
叫遊戲控制器模式
在此模式下 用戶可以隨意切換出入
在連接了遊戲控制器框架的遊戲中
這個應用是橫向的 同樣地
DPAD值被旋轉了90度甚至在它們進入應用之前就旋轉了
那麼你的應用並不需要做任何設置或修改來使用這種模式
但是請注意若遊戲是手動把DPAD值旋轉90度
那麼你實際上是做了兩次旋轉
所以我們的建議是
如果允許玩家 橫向地玩兒遊戲
用Siri遙控器和遊戲控制器模式
就在Apple TV遙控器應用上
allowsRotation設爲真就像我們剛纔談到的那樣
然後讓我們爲你處理方位和DPAD的變更
還有一點要注意
Apple TV遙控器應用的遊戲控制器模式
會把觸摸表面和A按鈕分離開
這點跟Siri遙控器不一樣
Siri遙控器是點擊觸摸表面激活A按鈕
但這並不會造成任何麻煩
用戶仍然可以在兩者上同步輸入
並且你的遊戲代碼仍然會檢測在兩者上的同步輸入
但關鍵點是如果你的遊戲代碼假設
按下A按鈕會同時激活觸摸表面
那麼這跟遊戲控制器模式上的實現方式不一樣
Apple TV遙控器應用的
最後 我想談一下多控制器
總是有人會問Apple TV能支持多少個控制器
答案是在新版tvOS 10中能支持一個Siri遙控器
和四個MFi遊戲控制器以及Apple TV遙控器應用
一般來說 會在多玩家遊戲的情境中提出這個問題
在tvOS 10中增加爲四個MFi遊戲控制器
這對於多玩家遊戲來說無疑是個好消息
最初可能並不明顯
但這對於單一玩家遊戲來說也很重要
讓我解釋一下
當應用啓動時
你不確定你是否只發現一個已連接的Siri遙控器
或也許你會發現一個已連接的遊戲控制器
或者各發現了一個
或者也許你會發現一個Siri遙控器
多個遊戲控制器和TV遙控器應用
瞭解這種情況吧？
那麼此時關鍵點在Apple TV上
從多個控制器上接收輸入很常見
即使是一個單一玩家的遊戲
重要的是 你提前不知道
用戶打算使用哪個控制器
你不能假設控制器的數組下標爲零的
即爲玩家想要使用的那個控制器
那麼 我們該如何處理？
嗯 關鍵是
玩家可以隨時切換控制器
也許他們啓動了應用
瀏覽了遊戲菜單
然後啓動了角色這過程一直都用Siri遙控器控制
然後 他們切換到MFi遊戲控制器
來實際開始控制角色
允許玩家 自由和靈活地切換
在不同的控制器之間而無需提示用戶
用不必要的確認對話
或無需要求用戶退出遊戲設置
再使用一個不同的控制器重新進入遊戲設置的遊戲
將會打造一種真正了不起的無縫體驗
我們該如何實現呢？
嗯 一種方式是把
輸入所有控制器的都作爲單一玩家遊戲的有效輸入
所以 如果你有個角色在DPAD屏幕上移動
並且允許接入所有已連接的控制器
那麼 將允許它們的DPAD控制角色移動
按鈕也一樣 如果角色 跳躍
通過按A按鈕那麼就要允許 所有A按鈕
所有已連接的控制器上的控制角色
如果某個控制器在遊戲過程中接入
那麼你也可開始悄悄地追蹤那個控制器
並允許它的輸入控制角色
現在 運行起來很順暢了
我們要給玩家一個認知
即他們可以在多個控制器之間來回切換
這實際上是一個手動合併策略
我們從Siri遙控器 獲取輸入
和遊戲控制器上並全部提供給我們的單一玩家體驗
但是 我在這裏還要說一個極端情況就是動作
我舉例解釋一下
如果你的遊戲使用了動作
比如用Siri遙控器控制飛機在空中飛行的姿勢
你還可以把那個控制轉移給搖桿用搖桿控制飛機
若玩家正在用遊戲控制器玩兒遊戲的話
這完全沒問題 很好用
關鍵顧慮是 當你正在手動合併Siri遙控器和遊戲控制器時
你不想讓控制飛機的遊戲杆
被任何可能來自Siri遙控器的動作數據覆蓋
當你正在手動合併Siri遙控器和遊戲控制器時
那麼在這種情況下遊戲中控制飛機姿勢的代碼
應該檢測該信息是取自
動作還是取自搖桿
然後再返回來看我們的例子
當我用Siri遙控器控制飛機時
如果我換成遊戲控制器
那麼那個遊戲控制器上的任何用戶輸入
無論DPAD還是搖桿或觸發器或按鈕
都將開始忽略來自Siri遙控器動作
並使用正確的搖桿來控制
飛機姿勢 反過來也一樣
如果我換成Siri遙控器用戶輸入
也就是滑動觸摸表面或按下A或X按鈕
將在那一刻起聽從來自Siri遙控器的動作
並切換到Siri遙控器
通過這個 我們制定了控制方案對玩家來說非常靈活
可以實現儘可能無縫地切換
在研討會結束之前 我想說
我在這裏向你們演示的技術
可以直接用在你的遊戲中
或者也許它們是個良好的開端你可以進行調整
和自定義使它們完美地適合你的遊戲環境
但無論如何 我真的鼓勵你們
超越控制器的連接 機制
和斷開 以及讀取按鈕值
真正思考你要如何
把遊戲控制器整合到你的遊戲中去
因爲 如果處理得當
站在玩家的立場上用戶就會對遊戲控制器視而不見
並真正忘情地投入到遊戲中來
享受你所努力營造的遊戲體驗
這纔是遊戲的真諦
好了 我們今天說了很多
總結一下
我們談到了Siri遙控器如何支持GCMicroGamepad profile
GCMotion profile中
我談到了DPAD開窗和allowsRotation
我還談到了菜單按鈕
以及在Apple TV上所預期的行爲如何進行改變
根據你的應用的情境
以及如何使用GCEventViewController
和控制或暫停處理器來控制行爲
我還談到了MFi遊戲控制器
這些控制器使用GCExtendedGamepad profile
並引入壓敏性
並且現在可以在遊戲中要求作爲控制器使用了
我還談到了TV遙控器應用
它其實是個仿真的Siri遙控器
從遊戲控制器框架角度來說
而且我還談到了Apple TV遙控器應用的遊戲控制器模式
和設計注意事項
以便你的遊戲如你所期待的那樣能使用Apple TV遙控器應用
最後 結束時 我談了多控制器
及其對多玩家遊戲的重要性
但同樣重要的是也要考慮到單一玩家遊戲
也就是說 允許玩家在遊戲中儘可能無縫地切換控制器
在遊戲中儘可能無縫地
這是本場研討會的URL
你們可以從這兒觀看視頻、查看文檔和示例代碼
這場是607會話
其他相關的會話還有“掌握tvOS上的UIKit
和tvOS設計”
還有tvOS實驗室可以解答你的一般疑問
非常感謝你們的關注 祝你們在接下來的演講中度過一段美好的時光