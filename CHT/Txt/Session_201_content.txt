關於國際化的實踐
好的
大家好
大家好
你們好 歡迎大家來到 WWDC
這應該是你們今早的第一個會話
如果你聽不懂我剛開始所說的
那你就來對了
那麼
我們會討論一些關於國際化的問題
你應該知道
Apple面向全世界發售其產品
三分之二Apple用戶是不在美國的
這也是爲什麼它這麼重要的原因
爲了確保你應用中的語言體驗沒有問題
我們的用戶涵蓋了從舊金山到米蘭再到迪拜
還有像是從新德里到香港
當然了
這些用戶很可能是使用你的或者Apple的應用
通過他們的母語
他們也可能會使用這些應用
用你想象不到的跟那個地區根本無關的語種
例如英語
你可能會感到奇怪這可是個相當全球化的語言
今天我會跟你們談談有什麼新的東西
我們近年關於國際化的探索
一些關於本地化的基礎知識
還有國際化你的應用
有些技巧令你將代碼稍作修改就能變成一個不錯的應用
對於全球的用戶
最後是一些設計層面的東西
還有就是
從心理層面分析你該怎麼做你的應用
我們從新的特性開始講起吧
我很興奮的向你們介紹
iOS 10中新加入的多語言鍵盤
如果你們左右環顧一下
你可能正好挨着
會講多種語言的人
美國是個十分多語種的地方
加州尤其如此
在iOS10中我們提供了多語言鍵盤來處理這種環境
你們從這若干種語言中任選出兩種
或是屏幕這邊的任意兩種
你可以在同樣的佈局中打字了而不需要用地球鍵來切換
你還有自動改錯功能
以及兩種語言的預測拼寫功能
我們所做的另一個改進是加入了拉美西班牙語
其被加入了iOSwatchOS還有tvOS
這可能是頭一次
你的應用會碰到語言變體
其不是給特定國家設計的
我待會兒會從代碼層面來解釋下這有多重要
另一個很棒的改進是新的計量格式器
其被加入到foundation中
它會處理一種語言中的單位轉換
以及在後臺處理該區域要注意的風俗習慣問題
它已經支持了超過20種不同的單位
像是溫度 能量 壓力等等
在此
我不會深入展開來講
週五有個專門講這個專題會話
請去參加那個會話吧
我們近年也本地化了數字鍵盤
因此當你請求數字鍵盤的時候
你會自動得到
支持不同編號體系的鍵盤
例如支持阿拉伯數字和印度語數字
當你處於當前狀態時
你會看到鍵盤的左下角有一個123鍵
來讓你在不同的計數系統間進行切換
在這些情況下
你可能想要能帶ASCII數字的鍵盤
當你確定你要進行的輸入
必須限定爲ASCII數字時
比如要輸入信用卡號和IP地址時
這些是特殊的例子但是你應該考慮到這些情況
在macOS Sierra中的一個重要新特性
就是支持像是阿拉伯語和希伯來語本地化從右向左輸入
macOS重新設計了從右向左讀寫的語言
當然macOS加入了我們已有的家庭
其中像是iOS和watchOS這類產品已經支持了
本地化的從右向左讀寫的語言
這個是挺大的主題 我不會就此展開
有個專門講這個主題的演講
會在中午上午九點舉行叫做國際用戶界面的新特性
你們應該去聽一下
我們從一些基本概念開始講起吧
都是關於國際化所需要知道的概念
讓我們看一個iOS預裝的應用時鐘應用
它的界面重新設計了不過你們應該看着還會眼熟
那麼有哪些方面
你需要進行國際化
來讓這個應用適應不同的語言和國家呢
首先 你需要本地化所有的字符串
也就是任何有字符串的按鈕標籤或是視圖
你得保證它被翻譯成
所有你要支持的語言
接下來還有另一類的字符串需要被本地化
但它是格式化的內容因此你應該使用格式器
來實現
這會節省你大量的工作
最後 你需要國際化整個佈局
以便它可以在從右向左的語言環境下運轉良好
而對於會產生更長或更短翻譯結果的語言
這是與源語言相比較而言
如果我們所有都弄對了那麼我們就把這個英文應用
翻譯成中文應用吧 它看起來不錯
注意在中文環境下上午/下午標示是在
數字之前而英文環境下正好相反
它在諸如阿拉伯語這類從右向左讀寫的語言環境下效果也不錯
注意看現在整個應用的佈局是如何呈現從右向左的
在這個例子中 看看在阿拉伯語環境下是如何使用阿拉伯-印度語數字的
這和英語環境下的運行是不同的
如果你用的是格式器這些就不用你操心了
這些就是開發方面的一些基礎知識
讓我們也來看看用戶角度的基礎知識
當用戶獲得一個新的Apple設備像是iPhone 他會做什麼呢
當你打開每個Apple設備
首次都會讓你選擇一種語言
深入探究的話其實就是
每種語言都有與其對應的編碼
當然了 每個區域也有相應的編碼
我們假定一個用戶選擇的是西班牙語 美國
其實最後生成的語言編碼是es-US
你可能不知道的是
語言編碼也是有體系結構的
例如 西班牙語 美國
實際上是繼承於拉美西班牙語
而其又繼承於原生西班牙語
這非常的重要
因爲不是每個應用都會被本地化爲西班牙語 美國
所以我們想要知道
用戶傾向的次選語言是什麼
如果我們不支持他們最喜歡的語言
顯示在系統上
而且這個體系結果不僅是針對西班牙語
甚至是像英語都是有這樣的體系結構的
例如 印度英語
其拼寫體系是要更接近於英式英語 相比美式英語來說
因此它就是繼承於英式英語的體系結構的一部分
英語和西班牙語只不過是其中兩種語言對於這種體系結構來說
我們還有其他語言像是漢語法語 葡萄牙語
也有類似的體系結構
所以我希望你們把這些要點都記下來
當然不用了
我提到這些點的原因就是
因爲我們會幫助你們解決這類問題
而你根本就不用操心這個
我會在下面告訴你們要怎麼實現
我們首先要做什麼呢
我們需要本地化所有的字符串
還要進行一些設置
這些設置挺簡單的 不過確實要做
我不打算在這細說
因爲有很多的文檔可供參考
而且還有另外一個講座專門是講如何設置你的應用的
假設你已經完成了你的本地化設置
那麼此時你的應用裏就有了一些本地化的字符串
若你使用storyboard
並使用其中的國際化基板 你就完成了
你不用再做什麼 啓動你的應用吧
字符串成功加載
你都完成啦
如果你要在代碼中創建或載入字符串
你需要調用NSLocalizedString
NSLocalizedString會運用非常好的邏輯
來處理我剛纔提過的體系結構
它會爲你加載最恰當的字符串
注意給你的翻譯器加上個註釋
因爲根據不同的語境同樣的單詞經常會有不同的意思
而註釋會幫助理清它
讓我們看個更復雜些的場景
假如說你是從遠程服務獲取字符串的
像是從服務器或是另一個進程
在這種情況下 你可能想讓服務器
或是其他進程知道
這就是我的應用的啓動語言
請給我相匹配的字符串
爲了實現這個功能
你可以在你啓動的Bundle上調用喜歡的本地化
以此獲得第一種語言並將其發給你的遠程服務
如果你還有更多參與的設置
出於某種原因你有一個列表的可選語言
而在服務器上沒有正好匹配
你在客戶端上列表裏的語言
假如說你在服務器端有一個更大的集
那麼你可以調用preferredLocalizations方法
並傳給它你所擁有的備選集
它會給你匹配最合適的語言
我提到Bundle語言匹配邏輯
在上面幾張幻燈片好多次了
那它到底是什麼呢
Bundle在底層爲你做了什麼呢
Bundle爲你做的就是它在思考一些事情 比如
恩 用戶喜歡英語 美國
但是我們沒有英語 美國的本地化配置
不過我們有英語的配置在此它就會給你英語的配置
它會弄明白 你想要印度式英語
我們有英式的而不是印度式的那我們就給你英式的
在拉美西班牙語的例子中
如果你說我喜歡墨西哥式英語
它會試着給你最好的匹配結果
從列表中看就是拉美西班牙語
類似的 有關於漢語還有很多其他語言
這種本地化的語言體系邏輯非常複雜
你應該不想在你的應用中執行
如果你的代碼是可以實現
使用語言識別器
通過連字符分割它或者諸如此類的代碼
請把代碼刪除 因爲你不應該這麼做
現在你已經本地化了你的所有字符串也使用了正確API
你應該再檢查一下你所做的
是否真的把應用本地化了
爲了實現這個目的你可使用Xcode 8新靜態分析器
它會幫你找到本地化中出現的任何問題
你把非本地化的字符串放到UI的位置
這就是所有關於本地化字符串的內容了
接下來我們談一下格式器
現如今你能看到很多這類應用
關於送達服務的
但是你這裏看到的這個可不怎麼樣
它上面寫着AM9:41
英語用戶會覺得這寫的根本不對
但相信我我在實際的應用中看到過這種格式
你可能會發現在中文裏是正好相反的
中文裏把a.m./p.m.記號放在數字後面的話
是完全錯誤的
那我們應該如何避免這樣的錯誤呢
其實問題是在於我們使用了一個方法
方法叫做formatter.dateFormat還通過它設置了一個固定的格式
似乎看上去這麼做是對的
其在代碼中很整潔但實際上是錯的方法
儘管在英語環境下它顯示的是正確的結果
它會顯示9:41 a.m.
但如果你是在中文環境下結果就是錯誤的
爲什麼呢因爲它設定的是固定的格式
而不管你運行的是哪種語言
正確的方法應該是
在日期格式器上使用預定義的短風格
它會爲你顯示正確的結果無論是在英語環境
漢語環境還是你應用可能本地化的其他語言
當然還有其他更多風格供選擇
有我剛剛演示給你的短風格
也有稍微長一點的風格 它帶有秒數
還有帶時區的風格
或帶完整時區名顯示的
對於不同的需要有着對應的不同風格
當然了 不僅僅是有關於時間的
也有關於日期的
從短期到長期的風格一應俱全
你可能會找到我說
這些是挺好的但是沒有一種風格是我的設計師想要的
他們只想要整年的或者光要這個 光要那個
沒問題
你可以用一個格式
重要的是要使用它的話
要用到setLocalizedDateFormatFromTemplate方法
這會保證它接受你的格式
解釋當前引號中的語言
然後給你該語言對應的正確本地化格式
還有兩個你可能沒有用過的類
儘管不是今年剛出的不過還是很新
日期控件 它可以讓你生成格式
一個區間段 像是4小時25分鐘
或是日期間隔 像是這個講座的時間上午9點到9點40
使用這些類的優勢在於
它會爲你負責所有的本地化工作
接下來我們談談另一種你可以格式化的數據類型
名稱
現在...
如果你是這麼顯示你的用戶名字的
或者是他們朋友的名字當他們打開你的應用時
這會讓他們對你的應用留下一個非常壞的印象
我們不該這麼做
你應該正確顯示這些名字
爲給定的語言和腳本
我們應該怎麼做呢
其實挺簡單的
你需要創建一個PersonNameComponents對象
將其填入一些名字的組件然後就像其他的格式器
你就從組件中請求字符串即可
你想要什麼風格都可以
我們有很多的風格可供選擇從長的 像是全名
到縮略的 你可以用首字母縮寫
當然了 它也支持多語種
近年所出的新特性是名稱語法分析支持
你既能分析一個全名也能分析一系列的部件
而且實現它就像創建一個格式器那樣容易
發給它一個字符串 然後看下組件
如果返回nil 那麼就沒有成功分析
組件構造
有個挺酷的事是
這不是個檢查某個靜態規則集合的靜態API
它其實是個統計數據模型
所以即使你是以相反的順序傳入名字的
它也知道在John Appleseed中
John更可能是名
而Appleseed是姓
而它仍將正確分析語法
它也支持多個語種
有很多個格式器
我着重說了
Date和PersonNameComponents格式器
簡單說明瞭關於日期的components和interval格式器
有些格式器我沒有提到
它們都是系統中現有的格式器
這個是全新的measurement格式器
這也是新發布的一個格式器
請用下這些格式器
無論在你代碼的哪個地方因爲使用它們是正確的
你也會減少使用本地化字符串
這是你在這些例子中應該避免使用的
那麼
就是這麼多了
在字符串方面你整個的UI就是本地化的
那麼讓我們來看下在佈局方面應該做些什麼
以確保UI是和那些字符串正常工作的
這裏的關鍵字是Auto Layout
它要做的正如其名
就是要實現自動佈局
不管你是在左還是右優先的應用
若你使用“自動佈局”你都會得到
自動生成一個基於從右向左語言的用戶界面
自動佈局是一個重要的話題
我不會展開講你應該如何使用自動佈局
因爲有很多的會話 不僅是今年
還有往年的 介紹了其相當多的細節
你應該使用UIStackView
和NSStackView 儘量多用因其是非常容易使用的API
是用自動佈局的API這會讓你的視圖
跳轉爲從右向左語言顯示
並且當它們得到長和短的字符串時會進行恰當的調整
我們會給你們一些示例代碼
向你展示如何使用Stack Views來實現一個時鐘應用
對於佈局你要牢記一點
就是有時候你得有點創造性
當前的屏幕內容是以英文顯示的
你確定你不想用Apple ID麼
你在這有兩個選項用或者不用Apple ID
你可以想象在某些語言環境中
翻譯可能會長一點就放不到這兩個緊挨着的按鈕中
那你該怎麼做呢
在這種情況下你會發現整個視圖進行了切換
從左右適應變成了上下適應
諸如此類的創造性UI元素是你應該記住的
在你的應用中
你向翻譯器請求縮短一個字符串
甚至在該語言環境下都不能明確表意時
接下來要介紹的是豎直靈活性
你們的應用可能以前都沒有考慮過這點
恩
我們在OS中有很多的腳本
爲了支持像是越南語 泰語阿拉伯語和印地語
或高或低或兼有
與書寫英文所用的基礎拉丁字母相比
我們經常會碰到一個錯誤
就是有人可能把標籤的clipsToBounds設爲true
它會將兩邊的文本剪切
這會讓佈局變得很醜
在那種語言環境下看起來很糟糕
你會丟失重要的語義信息
像是變音符
在這個例子中右邊所有詞的發音都變了
當你像這樣剪切它們的時候
想要修復它很容易
如果有標籤的話不要將clipsToBounds設爲true
這樣就能解決這個問題
更有趣的是 如果你有個多行的標籤
你也需要考慮行內間距
我們來看下這裏
左側有印地語 而右側有英語
抱歉這裏弄反了是英文在左邊 印地語在右邊
不過
看看如果我們擠佔的話會怎麼樣
將印地語擠佔到跟英語有着相同的豎直空間
這看起來很難認
任何一個印地語讀者都會告訴你
這簡直太難讀了 看起來一點都不好
因此你要做的就是
給予每個腳本充足的空間
使其在屏幕看起來既美觀又易讀
好消息是這很容易實現
當你用多行標籤的時候
其實大部分情況都是默認的不過你還是確認
你正確設置了定製的字體
也就是你通過UI字體API獲得了想要的字體
你也許會說
我有一個定製字體但是我用不了
這其實是可以解決的 你應該
你應該看下週三關於字體和排版的講座
它深入的講瞭如何保證
定製字體如何貼合動態類型
接下來對於table views我們所做的很巧妙
如果你所選的語言是帶有較高的書寫字母
我們會把表格的行高給調大
比起其在其他語言中的效果 像是英語
這是給了書寫字母足夠的空間
這會讓那些語言整體看上去更加自然
要發揮這個優勢的話你要在代碼中使用
標準UITableViewCell風格
你可能會說 我用的是定製的cell
這樣就不能正常工作了
這可不是有個標籤就能實現的
它不像你想的那麼簡單
好吧
我同意 不過
至少我發現若你使用UITableViewCell
它是可高度定製化的
它有很多的過載方法可供你使用
總能得到你想要的外觀效果
所以先試試它吧在你實現一個完全定製的
UITableViewCell之前
我想介紹的小的代碼改進就是這麼多
它們會讓你的應用面向國際用戶時表現更加出色
讓我們談一些別的吧更抽象 更以設計爲基礎的東西
還有些從心理層面你要記住的東西
繼而做出很棒的應用
首先就是圖標學
當你進入App Store想要找一款應用時
頭一個你會注意到的東西就是圖標
很多時候 至少對於我來說
如果圖標不好看我就不會買因爲它會顯示在我的主屏幕上
我可不想在那顯示一個不好看的應用
所以圖標是很重要的
還有一點也很重要就是你所選擇的圖標
要對於不同的語言都適用
還有對於不同佈局方向的語言
不管是從左向右的還是從右向左的
Photos有一個不錯的圖標
這就是一個不錯的圖標案例
它不包含文字或者數字使其拘泥於某種特定的語言
它也沒有從左往右或是從右往左的方向性
所以它在日語 英語阿拉伯語下都表現出色
如果你要做一個從右向左的本地化
而且你想保證你的UI看起來不錯
對於從右向左的語言來說
你就得檢查一下你所用的插圖
如果你所使用的插圖是帶有方向性的
你需要把它變爲適配從右向左語言的
你可能需要創造專門的插圖
爲從右向左的語言來使用
這裏有個例子是你不能直接水平翻轉這個插圖
如果你要用從右向左語言的話你需要創作專門的插圖
不過如果你有隻需要翻轉的插圖的話
有一個API可以實現
而你就不需要再單獨做一張插圖了
對此更多的信息
在“國際用戶界面的新特性”的會話中有
這個會話將在週五舉行但是關鍵是資源目錄
另一個你可能想到 可能想不到的
是你應用的名字
當你看全世界不同的App Store時
我們最習以爲常的就是
用戶更喜歡買的應用
就是用母語寫的應用
這點對於應用的名字來說同樣適用
因爲如果他們能夠一目瞭然的
通過一行應用的名字和描述就知道這個應用是幹什麼用的
那他們就更有可能
點進應用界面去看一下
當然了 這個世界
全世界用戶越來越會多種語言
或者他們至少會雙語
因此你的應用不應該假設
UI所用的語言以及其與內容的關聯
用戶所輸入的
例如 一個常見的例子是
像亞洲的國家 比如印度和東南亞地區
人們會把手機語言設爲英文
但是他們也會用當地語言寫成的內容
就像是本例子中的印地語
因此當你的應用運行在英文環境時
不要想當然的認爲用戶會輸入英文
特別是要用中文和日文鍵盤來測試你的應用
確保其是正常工作的
在此我想給你們展示一個應用
我們覺得完全證明我剛纔所說的
那就是Evernote
首先你看下程序圖標
它沒有任何的字母 符號或是其他什麼
可能與單一語種有關聯的東西
這很不錯
他們還將應用的名字本地化成了中文
如果你講中文的話
你就會發現他們做了一個很棒的雙關語
因爲他們所選擇的中文詞彙
同時也包含了他們的圖標中象這個字
這挺酷的
你會發現他們也本地化了程序截圖
這些截圖做的非常的細緻
例如你會發現 在這張本地化的截圖中
他們要創建一個note
屏幕上顯示的是中文鍵盤
所以用戶所看到的
從截圖中所看到就是他們能得到的當他們下載這個應用的時候
而這正是用戶所希望看到的
所以充分利用這些優勢吧你可以上傳
本地化的名字 描述 截圖到App Store
最後 我想要談下驚喜和亮點
你想做出偉大產品的加分項
爲使用特定語言的人
或是特定國家的人
我會舉幾個例子
一個就是如果你有任何預定義的內容
像是模板和頁面
你就可以創建
不同的定製化內容來給不同的語言
例如 在Pages中
你有針對幾種語言定製的卡片模板
我要舉的另外一個例子是
對於更高級的特性 假如說你要支持
你要做個日曆應用 你想把它做好
專門給中東和大量的亞洲國家使用
像是使用農曆的中國
你就可以支持農曆顯示
在你的日曆應用中就如iOS和OS X所做的那樣
因爲這樣做會給那些用戶帶來更加豐富的用戶體驗
你能改進的地方取決於你的應用是做什麼的
你需要審視一下你自己的應用
來看看你能在哪裏給用戶帶來驚喜
這就是我今天想說的全部內容
總結一下就是
本地化你的應用
使用標準系統API如Formatter和Bundle
確保應用的佈局是具有靈活性的
讓不同的語言完美的工作不管是有更短翻譯
更長翻譯
標準尺寸 不標準尺寸英文的書寫字母
還是更高的書寫字母
當爲你的應用設計圖標時
要確保它是基於世界的設計
不要太爲某個特定語言服務
最後
恰當的本地化你的應用名稱
還有截圖
更多的內容 你可以點擊這條鏈接
來獲得其它有用的鏈接
關於國際化和本地化的
還有其他一些很酷的講座
就是我在演講中提到過的
例如“國際用戶界面的新特性”
還有“自動佈局的新特性”
還有一個我想特別提一下的是內嵌式應用設計
它講的都是我最後提到的那些內容
如何考慮包容性設計因素
既是爲了國際化
也是爲了需要特殊支持的用戶
要說的就是這些了
非常感謝