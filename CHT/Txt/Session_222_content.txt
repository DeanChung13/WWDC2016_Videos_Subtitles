使應用自適應 第一部分
大家早上好至今爲止你們的會議進行的怎樣？
我叫Kevin是interface builder工程師
Brent將在晚些時候加入
今天我們要談論的話題是自適應
它使得我開發一個應用
不僅僅在我們的所有設備上過得去
而是看上去很棒
這就是我們今天要討論的話題
我將開始我的演講
這個是你一定要帶走的
當關於自適應時
系統將會爲你進行大部分工作我們將要分析它
我將告訴你係統爲你做了什麼
值得知道的事
還有你們開發者應該怎麼互動
和插入這個系統
但是在那之前我想退後一步
想要提供一些動機
想告訴你爲什麼這是好消息
Apple去年的嘴巴很大
我們賣出了第10億臺iOS設備
我不知道你們怎麼想但是這個數字讓我驚呆了
現在你有一個公平的看法
關於自適應數量並不那麼重要
我承認這點
但是我們知道它們不是同樣的設備
這不是10億臺最初的iPhone
所以這會是很酷的事不是嗎？
這些年Apple發佈了大量設備
有不同的比例 尺寸和形狀
我是說甚至顏色
在Apple我們還相信
不管你擁有什麼設備你可以按你喜歡的方式拿它們
不管是縱向還是橫向
但是除了這些物理設備本身
我們還有軟件特性比如slide over
和這些多任務特性
並且增加可能的組合數
你的應用有可能面對
不要忘記其他事像是動態字體
在這用戶可以設置字體然後所有應用
會起反應 重新佈局你們現在都這樣做對嗎？
我們還有特性像是語言方向
它是從左到右或從右到左
我們在那些新iPad上還有顯示色域
我們將在今年發佈
Apple TV也有新特性
像淺色和深色界面樣式
保守估計可能的組合數
在iOS你的應用可能面對超過300種組合
這麼多
這就是爲什麼說系統爲你做了很多工作是個好消息
這裏的關鍵字是大部分
作爲開發者有很多方法
可以插入和定製體驗
因爲你想要你的應用有獨特外觀
這就是我們想要討論的
首先我們要討論自適應的基礎系統
我們稱之爲特徵系統
然後Brent會來給你一個演示
我們是怎麼改進用來開發自適應應用的工具的
這就是我們在第一部分要覆蓋的內容
是今天的議題
你們絕對會想在明天回來參加第二部分
因爲我們會給你實用工具
關於新增加的技術和技巧
你們可以用來使你們的應用自適應
然後我們會把這些放在一起
然後給你們一些很好的演示和代碼例子
讓我們開始討論自適應的基礎系統
被稱爲特徵系統
有三件事我想要提出
首先我會告訴你它是什麼
這是一個很好的出發點
然後我們會討論特徵系統的一個特定部分
我們稱之爲尺寸類
告訴你們這個系統是怎樣工作的背景知識是個好主意
因爲這使得你怎樣和它互動更清楚
什麼是特徵？
特徵描述你程序運行的環境
horizontalSizeClass是一個特徵的例子
它描述體驗應該是怎樣的
當你的應用是水平時可用的空間
無論你擁有的空間有多少
一個特徵本身並沒有和它相關的值
這是特徵集合發揮作用的地方
你可以認爲特徵集合
是一個詞典映射鍵也就是特徵到值
大部分特徵有枚舉的可能值
所以你知道你要怎麼思考
關於開發你的應用
特徵集合通常包括不只一個東西
這很好
通常它們包含多個東西
即使你在屏幕上看到的3個
也小於特徵集合的大小
你使你的應用自適應時將要處理
讓我給你更多什麼是特徵的例子
我們會談論更多尺寸類
還有動態字體大小這是今年新增的
還有佈局方向從左到右或從右到左
這三個是佈局特徵的例子
特徵還可以描述外觀
正在運行的屏幕的色域是什麼
或對Apple TV界面樣式是什麼是淺色還是深色
但是特徵還可以描述能力
你正在使用的設備是否支持3D touch
如果你想要所有可能的特徵的完整列表
你可以用來使你的應用自適應
查看UITraitCollection接口
但是現在我想要討論尺寸類
你的應用可能運行在很多不同的尺寸上
這是所有可能的尺寸的滑稽簡化
它有三種
定製特別突出
一是屏幕尺寸
二是方向
三是適配
這就像是你在多任務模式裏
不使用形式系統來實現它的一個方式
是對其中的任何一個的改變進行響應
但那會帶來很多工作
所以你要做的是讓你的佈局基於
你的應用的可用空間
而不是那三個可定製的方面
我說的和可用空間互動是什麼意思？
我們有兩種方式和可用空間互動
給定改變的尺寸
所以有粗粒改變比如改變
從iPhone到iPad在尺寸上是一個大的改變
還有細粒改變比如
從iPhone 6s到SE這是小一些的改變
對每個改變細粒或粗粒
你需要用到不同的技術
不同的技術會幫助你處理
讓我們從粗粒改變開始
這想我們都很熟悉這句引用
這是我最喜歡的引用
我們工程師喜歡創造間接的層來幫我們解決問題
讓事情變簡單誠實的說是懶
所以尺寸類是一個間接層
間接層總是描述一些更高階的行爲
什麼高階行爲
是尺寸類正在描述的那就是體驗
讓我給你2個例子
第一個是我們經常看到的典型例子
iPad上我們有一個主從佈局
信息被並行顯示
在主欄的改變會反應在右邊的詳情欄
但是在iPhone沒有這麼大的空間
我們顯示信息的方式改變了
我們用一個瀏覽控制器
我們會更多的用鑽入的方式呈現信息
News是另一個例子
在iPad上我們有座標視圖
坐在沙發上滾動翻閱新聞
但在iPhone上它是一個表格視圖
我只能快速用手指滾動
所以體驗取決於我們怎麼呈現信息
當你思考應用的粗粒改變時
思考這類體驗你呈現信息的方式
來決定是否以及怎樣呈現那些信息
讓我們說一些具體的
我將複習一些高階的事情
什麼是尺寸類？
這是我們帶回特徵系統的地方
尺寸類有2個特徵
這是horizontalSizeClass這是verticalSizeClass
有兩個可能值緊湊和普通
緊湊表明你的空間受限
所以你要用緊湊的方式呈現信息
普通說明你的空間不受限
你可以自由探索
至少到你12.9英寸的iPad Pro的邊界
這表明我們有4個組合
關於特徵和可能的值
現在我想快速指出一些標註
我用在這個幻燈片中
因爲這些標註你會看到
在Interface Builder文檔和這個系統的一些其他地方
所以它是描述尺寸類的組合
這裏有兩件事需要注意
首先這裏有一個W表明是寬度類
值C或者R代表緊湊和普通
H代表這是高度類或者垂直類
再一次有C或者R
我們在Interface Builder裏看到這些
你也會在文檔中看到
我希望你們熟悉它
一些設備是怎麼被歸類到這些組合？
一個緊湊的寬度但是高度的普通的
比如說縱向的iPhone
iPad是普通的寬度和高度
在兩種方向上
你會看到橫向的iPhone有緊湊的寬度和高度
6s Plus是一個例外
在水平時有普通寬度
當它橫向時這就是爲什麼你看到主從佈局
比如郵件 當你用6s Plus時
這會怎麼幫助我？
這怎麼使我的生活變容易？
一個明顯的事是不需思考
300種組合你只需要思考4種
但是等等它變得更好
你只需要思考兩種
因爲寬度類是最常用的特徵類
你需要處理的
如果我們考慮所有可能的特徵
佈局特徵是最常見的類別
在我們要打交道的特徵中
在佈局特徵中尺寸類是最常見的佈局特徵
你將會打交道
特別是尺寸類和寬度類
是目前爲止你最常打交道的類
也就是說你設計你的應用
考慮你想要它們如何不同
在iPad和iPhone之間
主要是思考水平的不同
當然你們會有定製的應用
你們會做特別的事我們知道
但是最常見的情況是隻考慮寬度類
現在系統需要決定
設備 方向 適配怎樣符合這些組合
有趣的地方是
這些組合會在相同的設備上改變
隨着用戶操作你的應用
我可以帶來slide over我可以進入多任務
我可以改變設備的方向
所以如果你使用尺寸類
要表現你的數據
系統會爲你做很多工作
它會在所有設備和方向間過渡
適配過去現在和未來
這很有幫助這簡化你的工作
使你的應用自適應
讓我給你一些例子關於動態
改變發生在系統裏的
再次回到split view控制器
當我的iPad是橫向時
我們會有並排的兩個視圖控制器
但是在iPhone上我們摺疊它
到一個瀏覽控制器
若你使用UI Split View控制器你會自動得到這個行爲
除了視圖控制器結構這還作用於展示
假設我有一個iPad我帶來一個彈出它將會是這種標註樣式
但是在iPhone它會變成模型展示樣式
再一次 若你使用套件裏的控制和展示
你就會得到很多爲你預設好的行爲
尺寸類會改變
而你的應用會自動適應
這很整潔
讓我們來談談細粒改變
我只想說一點
那也是在尺寸類中
你會想要使用自動佈局來對可用空間的變化做出反應
在自動佈局中你可以指定佈局的關係
在一個非常有陳述性的表格中
然後系統就會自動移動元素
並且改變元素的大小當可用的空間改變時
在更細分的層次
除了粗粒和細粒還有一種改變
我稱之爲中粒改變
我不打算告訴你它是什麼
我會保持懸念
這樣你們就會回來看第二部分
他們會告訴你關於中粒改變的一切
我們已經談過了什麼是尺寸類
我們向你展示了特徵系統
我現想告訴你們一些背景知識
關於系統怎麼工作
以及作爲開發者你們怎麼插入其中
用一句話簡而言之
特徵系統工作的方式
是它得到一個特徵集合並且把它向下傳遞
穿過你的視圖結構給一路上的所有停止點
一個處理特徵集合的機會
這都是從屏幕層開始屏幕會得到一個特徵集合
需要注意的重點
是每個設備 方向 適配
都會有一個完整的指定的特徵集合
也就是說不同的特徵會有值
然後屏幕會向下傳遞給所有窗口
在那個屏幕上窗口將把它傳遞
給它的視圖的根視圖控制器
然後再不停地傳遞給子視圖控制器和子視圖
現在這一路上的每一個停止點都符合UITraitEnvironment
UITraitEnvironment有一個被稱爲traitCollectionDidChange的關鍵方法
在這一路上的每個停止點這個特徵集合
被向下傳遞都會調用traitCollectionDidChange
這是開發者需要覆蓋的方法
來使你的應用自適應
traitCollectionDidChange是這裏的關鍵方法
你基本上只需要覆蓋它
在視圖控制器和視圖這層
這是一個簡單的線性例子
什麼是複雜一點的例子？
讓我們看橫向的iPad
我們有自己的屏幕到這個窗口
向下到視圖split view控制器等等
在這裏我們看到發生了變化
當特徵集合向下傳遞時
實際上你可以改變特徵集合
當向子視圖控制器傳遞時
split view控制器將會爲你這樣做
它將要做的是
改變它要傳遞給特徵集合主視圖控制器的特徵集合
它要改變horizontalSizeClass
爲一個緊湊尺寸類
而向細節視圖傳遞一個普通的
你們也可以這樣做
當你們開發你們自己的視圖控制器容器時
但是一般你們不需要這樣做
這是traitCollectionDidChange是什麼樣子的例子
我會帶你看一些關鍵點
首先爲了讓系統幫你完成一系列工作
你需確保調用super函數
接下來你希望工作只在特徵
你感興趣的特徵改變了
我聽到了你的問題
traitCollectionDidChange被調用了
這難道不表明特徵改變了？
這是對的
特徵集合在任何特徵改變時被調用
通常你的應用只想知道少量的特徵
大多數情況下只是水平尺寸類
所以你想要確保你沒有做額外的工作
如果你感興趣的特徵沒有改變
接下來我要改變可能的值
對horizontalSizeClass
作爲一個邊注
我傾向於使用switch語句
當我在Swift和Objective-C裏處理枚舉類型時
因爲這表明枚舉的申明改變時
如果有一個新的類型我會在構建時得到警告
若我在使用詳盡的switch語句
我鼓勵你們也這樣做
這節省了我大量時間
比如說它的值是緊湊
我會離開來設置我的約束條件
所以對所有要自適應的視圖和視圖控制器
traitCollectionDidChange需要被覆蓋
再一次這會調用所有符合
UITraitEnvironment的方法
這是你進行自適應的地方
看起來要做很多工作
實現traitCollectionDidChange
對每一個視圖和視圖控制器
對你應用所有可能的改變
很多事有可能改變
所以有很多系統會爲你處理
traitCollectionDidChange
比如一個系統是Interface Builder
若你使用Interface Builder 來構造你的界面
你在Interface Builder裏使用自適應性和尺寸類
系統知道怎樣自動應用
當特徵集合改變時
另一個例子是資產類別
你可以針對不同的色域指定不同的圖像
不同的尺寸類不同的比例
都會在traitCollectionDidChange裏被應用
最後UIAppearance可以爲了特徵集合被定製
所以你可以用不同的顏色方案
針對Apple TV的淺色和深色模式
這些改變都會自動被應用
在traitCollectionDidChange中
你會想借助這些系統
爲你處理這些
這讓你很清楚地表明
關於你想要你的界面怎麼應對和適應
這使得遵守和維護都變得非常簡單
回顧一下我們這麼久所看到的
特徵描述你的應用運行的環境
特徵集合是一系列的特徵
有它們相關聯的值
可能是佈局特徵外觀特徵
也可以是性能特徵
要覆蓋traitCollectionDidChange
來使你的應用自適應
你想要藉助系統來響應
traitCollectionDidChange
尺寸類描述你的應用的體驗
你的信息是怎麼編排的
然後回來
系統可以爲你做如此多的工作
如果你藉助我們給你的這些工具
我再用20分鐘來展示自適應的強大之處
要看它有多酷你需要在活動中看到它
所以我想請Brent來演示那些改變
我們一直對工具所做的來改進自適應的工作流程
有請Brent Shank
謝謝你Kevin
現在你們知道了基本的構造組件
用來增加應用的自適應性
那就是特徵 特徵集合和尺寸類
我們演示Xcode怎樣
還有InterfaceBuilder編輯器 使這變得容易
讓我去演示電腦
離這挺遠
我認爲構建一個簡單的視圖很有幫助
來聚焦到特徵集合系統的根本
來添加一點自適應性
這就是我們要構建的
這很簡單
這描述一個位置我選擇Tenaya湖
你應該把它加進列表
這是個很棒的地方在Yosemite
這個視圖在頂部顯示一個標籤
在底部是這個地方的圖像
請注意在iPad上有一些改變
一些元素在iPhone上沒有出現
你看到在頂部
標籤看起來不同
那隻出現在iPad上
我們現在要構建這些
你會看到這在Xcode 8裏使用工具來做多麼簡單
我已經創建了這個項目我會轉到
這個標籤頁我已有載入好的storyboard
有一些東西值得看一下
在Xcode 8 InterfaceBuilder 畫布裏
首先請看視圖是怎麼被渲染的
看起來就像縱向的iPhone 6s
因爲它確實就是
我們用模擬器來渲染這些內容
你在設計畫布裏得到像素完美渲染
我們認爲這對你的工作流程有巨大的幫助
當你嘗試將這些美麗的設計
從設計者那帶入你的應用時
另一個值得注意的事是那個
謝謝
另一個大的改變是現在在Interface Builder畫布裏的場景
總是被按照真實設備的尺寸來渲染
或者它們的一個配置
相比前個版本的Xcode這是一個大的改變
讓我們看看其他新特性
我在底部這條這裏放大
你可以看到所有東西
這是Interface Builder畫布的底部按鈕條
它存在有一段時間了
在右手邊你可以看到控制
用來添加布侷限制條件
我希望你對它們熟悉
在中間是Xcode 8的新的放大控制
如果你還沒有安裝和試用beta版
很吸引人的一點是可以編輯你的場景
在任何縮放級別中
請一定試用一下它很棒
但是今天我想談的是這裏的這個按鈕
它說視圖作爲iPhone 6s
在括號裏有標註說
如果你坐在後面看不到
它說wC hR
這是告訴我尺寸類
我正在查看的設備配置的尺寸類
這是一縱向iPhone 6s
也就是說它是有緊湊寬度和正常長度的設備
這是一些Kevin談過的術語
我會展示怎麼用它們來添加適應性
場景被渲染在縱向的iPhone 6s上
如果我想要改變它呢？
你只需要點擊查看作爲按扭
它會打開新的設備配置條
它是Xcode 8中全新的很酷
我放大了讓你看清楚
這裏有很多堆疊的圖標
最左邊的一堆表示
Apple目前推出的不同的設備尺寸
我們在左邊有最大的iPad
在右邊有最小的iPhone
緊鄰它的是一堆按鈕
讓你選擇想要查看場景的方向
我現在就要這麼做
我要轉到橫向
在設計畫布中你可以在所有設備中循環
還可以循環所有方向來查看你的內容會被怎樣顯示
和渲染這很酷
謝謝
所以iPhone很有趣但是iPad更有趣
我現在選擇一個
你可以看到那有一系列其他的按鈕
出現它代表適配
iPhone對每個方向只有一個適配就是全屏
iPad有趣一些因爲你的應用
你的用戶可以選擇在slide over或split view中運行你的應用
這就是在這裏適配是什麼
如果你選擇這個你會看到屏幕現在渲染
這個應用就好像用戶在iPad中的slide over中運行它一樣
所以在設計畫布中就考慮這些
你可以在所有配置中循環
所有的方向 設備
來查看你的內容會被如何編排
這是一個很強大的新工作流程
會節約你大量時間
這就是Xcode 8中Interface Builder的新功能
現在我們來看看構建這個視圖要進行的工作
這是我們首先要做的
我們要添加這個標籤
我們要這樣添加它它就會在所有設備配置中生效
這可能是你在InterfaceBuilder中做的最多的
你通常不太基於尺寸類來定製化
讓我們現在這樣做
我有設備定製條iPads被選中了
什麼被選中並不重要
因爲我將要做的是使它作用於每一個
我在InterfaceBuilder庫裏 找到標籤
我把它拖出來
我現在要添加一些自動佈局約束條件
就像Kevin說過的這是系統的一個功能
我們提供它使得
你的UI適應所有不同的設備配置
我要添加一些約束條件
我要把它固定到頂部做爲垂直間距
我把這個在容器裏水平居中
我在它們間加入垂直間距的約束
垂直間距下的圖像視圖
我有一些內容我要粘貼到這看起來不錯
我有一個約束在這個圖像視圖
和頂部的佈局之間我不再需要它了
因爲我添加了標籤
我要刪除它
我如何知道做的是正確的並且添加了正確的約束條件？
這就是設備配置條發揮作用的地方
因爲看它在iPhone中是怎樣顯示的很容易
你可以看到它停留在正確的位置
我遍歷所有的設備甚至不同的方向
好的
這是你常用的操作
每天都在InterfaceBuilder中做 很容易
讓我們來添加一些適應性
一些利用特徵集合系統的定製化
我們現在要做什麼？
我們要修改這個標籤頂部這個標籤的字體
設計師想用System Semibold 36但是隻針對iPad
讓我們回到storyboard
當你考慮爲一個設備添加定製化
你應該考慮的是添加定製
給一個特定的特徵集合在這個例子中是一個尺寸類
我們爲所有的iPad和iPhone進行設計
但是作爲一個開發者你應該能夠轉化
它成爲尺寸類你想要針對的
我們使這變得很容易
比如我有一個iPad和尺寸類在設備條被選定了
我會放大這樣你可以看到
它顯示普通寬度 普通高度
所以你不需要猜測
一個特定設備配置的尺寸類是什麼
你只需要在設備條中選擇配置
Interface Builder會告訴你尺寸類是什麼
我們認爲這是另一個優秀的改進
現在讓我們介紹
讓我們看看這個標籤在不同尺寸類中看起來是怎樣的
我在畫布中選中它
然後來到屬性查看器
我已經選擇了它
我會再放大
所以你可以看清楚這個查看器
你看到那有很多屬性
這個光標真大
邊上有一個+按鈕
這個+按鈕表明那個屬性
可以用特徵集合系統來定製
讓我們現在就這麼做
我想要改變字體所以我點擊這裏
出現菜單允許我添加定製化
爲普通寬度 普通高度
它爲什麼這麼做？
因爲我有普通寬度
普通高度的設備配置被選中了
這是有意義的
我們將這麼做會發生的事是
那個屬性查看器現在爲字體顯示另一行
再次 它有同樣的標註
和我在設備條中看到的屬性查看器
這就是爲什麼它很重要
在這裏你知道發生了什麼
讓我們來改變我會調出字體編輯器
我選擇Semibold因爲我總是照着設計師說的做
36
然後點擊完成
你可以看到在畫布上渲染的更新
如果我選擇iPhone
我可以預期會發生的是
字體會和剛纔改變之前一樣
因爲我只針對普通寬度 普通高度的設備
在那次編輯中
這就是使用屬性查看器的例子
添加基於尺寸類的定製化
這是第一個定製
讓我們添加另一個
這次我想要添加這個標籤
我想只針對iPad
我回到storyboard
因爲我想對iPad添加這個定製
我需要在設備條中選擇它
請注意設備條上的這個按鈕
上面寫的是爲特徵改變
當你點擊這個按鈕時會出現一個彈出窗口
問你我們想要怎樣介紹這個特徵
什麼樣的特徵
你想要針對的特徵集合
這是什麼意思？
我有一個普通寬度
普通高度尺寸類設備配置
我可以選擇對普通寬度普通高度進行定製
如果我點擊這兩個複選框
但我也可以選擇定製普通寬度
任意高度或任意高度普通寬度
好的
我想要定製普通寬度而已
所以我這樣做
這個工具條顯示藍色陰影來告訴我
我將做基於尺寸類的定製
讓我們看看這個工具條的內容
我會在這放大
你可以看到它說我將改變8個普通寬度的設備
設備配置
我看到橫向和縱向的iPad
以及一些slide over配置
這是有意義的
但是我還在這看到iPhone這是爲什麼？
如果我把鼠標放在上面我看到
這是橫向的iPhone 6s Plus
Kevin說過因爲這個設備很大
它在橫向時使用普通寬度尺寸類
這很好你會經常想要
提供不同的體驗給不同的設備配置
但在這例子裏我不想那樣做
我只想針對iPad定製
我要怎麼做？
我回到爲特徵改變
這一次我要對普通寬度和普通高度進行改變
當我這樣做時注意iPhone從工具條裏消失
我將要進行的編輯只會對這些配置生效
好的
讓我們做那些
我會拖出一個標籤把它放在這
我會添加一些約束條件
來保證它待在正確的位置
好了
我會點擊完成改變
讓我們回到屬性查看器
因爲我想要聚焦在一些複選框上
你之前看到過的
我想你瞭解爲什麼這麼做
我爲了特徵進行改變我選擇了寬度和高度
表明我設置了這個工具條來進行定製化
爲普通寬度 普通高度
當我做這些時
我拖出來一個視圖
我把它加入視圖層級
針對普通寬度普通高度
這就是這個複選框向我顯示的
大部分時候你添加視圖
到你的場景它們會被安裝到全局
所以它們會出現在所有設備配置
不管是什麼尺寸類
但是當我在這個模式下當工具條是藍色時我添加視圖
或者添加自動佈局約束條件
它們只會安裝到特定的尺寸類中
那些我針對它們進行編輯的尺寸類
理解這些很重要
再一次要證明這些
可以在設備配置條中遍歷iPhone
這個標籤不在那
所以我做對了我添加了視圖只出現在
普通寬度普通高度的設備中
好的
我們要做的下件事
是我們要用設備條進行更多編輯
如你所見
當我來到一個iPhone那有太多空間
在頂部標籤和圖像視圖之間
現在我回到設計
我的設計師希望它們緊湊
我要怎麼實現它？
非常酷的事是
你實際上可以定製自動佈局約束條件的常量
用一個變種像我們已經針對尺寸類做過的那樣
讓我們現在這麼做
你看到如果我選擇這個圖像視圖
記住我在它們之間添加了垂直間隔
好了
我點擊了這個約束我看到這個自動佈局約束條件
我看到它的很多屬性
你可以看到常量的值是61
問題就出在這個值太大
我可以編輯它而且我可以只針對iPhone編輯它
爲了使縱向的普通高度的設備緊湊
再次 我可以點擊爲特徵改變我會針對寬度和高度定製
你可以看到這個工具條的內容顯示iPhone
但是爲什麼這些iPad配置會出現在這？
請記住當iPad在slide over或split view模式中時
沒有那麼多空間
你應用的空間受限
你希望把iPhone的體驗也帶到這種情況下的iPad
這是有意義的
所有你在這看到的iPad配置
有普通高度配置也會變緊湊
這很好這就是我想要的
我進入了爲特徵改變這個工具條變藍了
我可以再次選擇這個約束
好了
請注意我將把這個值改成45
請注意屬性查看器
我提交這次編輯會發生什麼
就像我們定製字體時一樣
Interface Builder添了另一行約束
你可以看到這是使用相同的尺寸類
我在這個工具欄裏配置的
我已經改變了這個
我爲這個約束常量添加了一個定製化
通過在設備條裏開始一次編輯
但是我使這次編輯直接反映在畫布中
這很酷
我遍歷這些設備看起來都不錯
但還不夠接近
我如何解決該問題？
你可能以爲我要回去使這個工具條變藍
然後試着編輯
這不是正確的做法
需要理解的重點是
當你爲特徵改變時
你引入基於尺寸類的變種
但是你不用這個流程來編輯它們
更好的難道不是你可以直接編輯
那些定製化 在畫布中是的你可以
我選擇了一個iPhoneInterface Builder知道這點
它還知道我有一個針對它的定製
所以當我去編輯它時
它知道我想要數據去到哪
如果我把45改成30
請注意屬性查看器發生的變化
它會爲尺寸類更新
因爲它知道我有基於尺寸類的定製
我們認爲這是強大的新流程
它讓你通過設備條引入變種
然後你可以繼續直接在畫布裏編輯那些變種
就這麼多我想交還給Kevin
謝謝你Brent
謝謝
我想要回顧一些事情
Brent在它的演示裏提到的
首先我們介紹了新的設備配置條
在這你可以看到設備
你可以看到你的應用在它們中以及在它們中移動
我們還有一個新的流程用來引入定製化
在不同的特徵間
你可以用屬性查看器進行精細的編輯
屬性查看器還讓你
查看所有你做出的改變
如果你還有疑問要怎麼設置這些
你永遠可以進入查看器來看你做了哪些定製化
還有一個爲特徵改變的模式
在這你可以做一些大的樣式改變
像Brett提到的這很重要
這個模式是爲了引入新的定製化
一旦你離開這個模式
Interface Builder會知道怎麼更新這些定製化
你基於你當前看到的設備做出的
這工作的很好
現在這些改變不僅對iOS有效
這些流程改變也對tvOS和watchOS有效
還有InterfaceBuilder
總之
我談論了特徵系統的基本
我們談論了特徵怎麼描述環境
traitCollectionDidChange要怎麼被覆蓋
來進行你的所有適應性在系統的幫助下
還有尺寸類
描述你怎樣顯示信息的檢驗
Brett像你們演示了新流程和工具
Interface Builder現在如何允許你
在設備中查看你的界面
同時能夠編輯底層的數據
針對特徵集合和特徵
你想要你的應用自適應的
這就是第一部分它的重點
是系統會爲你做大部分工作
你有很多種方法插入
做爲開發者藉助那些
我爲看到你們的自適應性應用感到興奮
請在明天回來因爲我們會討論更多
會給你們更多技術
使應用自適應
我們會用一些演示把它們整合
除了明天的演講還有自動佈局
你們也會想看
來看我們在自動佈局上做的改進
包括一些更精細的改變
會有一個優秀的演講
祝你們接下來的一週度過美好的時光午餐享用愉快！