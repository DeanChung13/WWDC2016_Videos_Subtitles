WatchOS 3的新特性
好的
謝謝
我很激動能跟大家講講watchOS 3的新特性
當然我們十分關注watchOS 3
努力優化系統性能
並對此做出了很多改進
以確保你所有的應用快速流暢地運行
我們還投入了大量的時間來優化導航
它實際上促進了性能的優化
因爲我們能越快地讓用戶打開應用
他們就能越早開始使用也就能越快地
放下手腕能繼續做其他事情
除了對系統進行提升
我們也花了很多時間
優化我們所有應用中不同的東西
所有這些改進實際上都圍繞着三個主要方面
對於手錶應用我向你保證也提醒你
你會聽到很多這方面的信息在其他手錶主題的演講裏
那麼首先要保證的就是一目瞭然
要想手錶應用能一目瞭然就需要很多不同的元素
最基礎的就是錶盤
因爲錶盤上的complication
給你很好的機會
顯示最重要的信息
讓用戶在你的應用上掃一眼就行
當然 在watchOS 2我們也做了快捷視圖
在watchOS 3 這個功能被合併進了一個新的停靠欄
這是顯示簡單明瞭的信息很好的地方
因爲它很快就可以被找到無論從系統的什麼地方
並且能讓你十分輕鬆地大概瞭解和概覽
你的應用上最好和最重要的信息
除了要能一目瞭然
我們還想讓所有的應用都隨時可操作
隨時操作性也包含了很多內容
它可以指你能在手錶上進行操作
你看到了我們已經重新設計了很多內置應用
以保證我們最常用的功能
只要點擊幾下就能輕鬆訪問
比如鍛鍊應用現在就能很快進入了
並且只要點一下就能開始鍛鍊了
定時應用現在改進了常用定時器
你可以把它直接設在最頂部
只要你進入應用點一下
就可以開始計時了
這種方式是
我們極力建議你們去考慮的
就是找到應用裏最常用的操作
把它們放到最頂層讓它們更容易被訪問
當然 可操作性並不一定意味着
你必須能對手錶本身進行操作
它可能就只是指方便顯示用戶想要操作的內容
即便是他們最終不一定會在手錶上操作
我想再次強調complications是最好的選擇 新停靠欄也是
它們顯示了是最要的信息給用戶
方便他們在真實的情況下操作
第三個方面當然就是反應力
要保證你的應用保持更新並能及時響應
每當用戶有需要的時候
我們對watchOS 3做的大部分性能提升
都是面向這一方面
就是讓所有應用以最快的速度響應
通過將它們存在內存裏這個過會兒講
並且保證它們可以很快地恢復工作
我們就能保證它們擁有最快的反應速度
你最好能
確保應用的及時反應
就是採用新的後臺應用刷新技術
這個一會兒我們細講
來保證你的應用已經將內容準備好
在用戶要使用的時候顯示給他們
那麼想到應用當然
我們可以回到應用的全屏視圖
這是大多數人對應用的第一印象
但是這也許不是最常用的地方
讓用戶在Apple Watch上與應用互動
因爲要讓互動簡短
我們有其他很棒的界面
能讓我們更快捷地使用大部分最常用的操作
當然complications
直接在錶盤上顯示你需要的信息
還有通知 會以最及時的速度彈出信息
Apple Watch通知系統很棒
因爲你要執行代碼來彈出通知
其內容和自定義UI都正好是你想要的界面
當然 在watchOS 3上有了新停靠欄
打開應用只要按一下側鍵
不管你現在系統的什麼位置
那麼 停靠欄裏的應用很棒因爲他們可以立即反應
你點一下它馬上就會全屏顯示
你就可以立刻開始互動完全無需等待
停靠欄這麼好不僅因爲它能直接與應用互動
還因爲它能消化信息
watchOS2裏的快捷視圖
這個功能現在被挪到了watchOS 3的停靠欄裏
所以你可以快速從你最喜愛的應用裏
滑動瀏覽視圖信息
因爲它高度精簡了來自所有應用的信息
所以停靠欄集合了我們能提供的最好的快捷視圖
讓你能快速地訪問應用
並提供了更多的功能性
對於像Reminder這樣的應用兩者都要具備
你可以快速瀏覽你需要去做的事情
當你點進去的時候它會立刻全屏
並且可以互動這樣你就可以勾掉事項了
對於其他類型的應用可能就只具備功能性
比如鍛鍊應用
我們將一些最常用的鍛鍊方法
你最想做的鍛鍊放到了最頂層
那麼你可以點擊它們讓應用全屏
再點一下就可以開始鍛鍊了
停靠欄 如我們所說對於瀏覽信息也很有幫助
例如活動應用 這類應用好處在於
只概括顯示這個應用的信息
在活動環裏
通常都是全屏顯示你可以看到高度概括的信息
這真正是一目瞭然很便於理解
活動應用經過重新設計如果你進入它
會發現應用的導航被簡化了
在watchOS 2裏它有四個水平排列的標籤
每個都可以垂直拉動
而在watchOS 3裏僅一個視圖也可以垂直拉動
最頂部是活動的概括
下面就是細節顯示
所以它又簡單又快捷
讓你不用進入應用就能看到你想要的信息
現在我們想讓手錶上的互動時間儘可能短
那麼這個新的導航模式和這些改進
可以讓應用立刻反應並啓動
它幫助我們保證
那些Apple Watch上最常用的任務
可以在幾秒鐘之內完成
在你考慮
如何更新Apple Watch的應用
watchOS 3的應用或若你還沒有應用
你就要考慮要放些什麼內容進去
我會強烈建議你們花些時間
想想如何縮短互動時間
2秒的確是個很短的時間
但是就在爭取達到這一目標的過程中你能真正找到
最適合你應用的設計方法
讓他們在Apple Watch上給出最完美的體驗
在接下來的時間裏我要講四件事
第一是後臺應用刷新
就像我之前說的那樣這是watchOS 3中最大的改進
這十分重要對創建反應靈敏的手錶應用來說
我們會用很多時間來講這一點
接着我要講一點導航簡化的內容
因爲我們做了很多努力去簡化系統的導航
但是下一步就是要簡化應用裏的導航
我將分享一些我們自己是如何做的想法
而且我相信你也一定能想出很多方法
去簡化你的應用導航
之後我們再來講一下拓展API的可用性
我們從watch SDK平臺上帶來了一些很棒的框架
還有了一些全新的框架
而且也對現有的框架做了很多改進
所以我們會講到裏面很多高層次的知識點
還會爲你推薦一些其他精彩演講
能讓你瞭解更多細節
最後我們會講可發現性和配置
因爲創建應用只是第一步
你還要把它帶到用戶面前並且在手錶上進行配置
那麼我們就從後臺應用刷新開始
後臺應用刷新是很重要的一部分
在創建反應靈敏的手錶應用時
在你開始任何工作之前
後臺應用刷新就已經開始爲你工作了
你不需要真的去採用任何API來獲得它的幫助
那麼第一件事就是
把所有用戶喜愛的應用都存在內存裏
他們在後臺啓動
然後暫停並一直處於待命狀態
這樣一旦用戶要用它們
它就只要簡單的恢復而我們就不用等待
一個完全啓動的過程
那麼 我提到過這適用於用戶喜愛的應用
但我的指向十分具體
這是用戶當前錶盤上所有的應用
那麼任何多功能表盤上的應用
就是他們最喜歡的應用
同樣 用戶放到停靠欄裏的所有應用
也是他們最喜歡的應用
這些應用都存在內存裏
並隨時在需要時啓動
這是用戶最方便訪問的應用
因爲他們只要輕點一下表盤
或者只要滑動停靠欄就好
因此它們要一直在那裏隨時待命
反應越快越好
就像我說的你什麼都不用做
即使是現有watchOS 2應用也能自動做到這一點
但在使用後臺應用刷新時還是要用到一些API
你可以用它們讓你的應用反應更快
一旦它們成爲前臺
就要保證它們是最新的並隨時可用
你能用它做的第一件事顯然就是
升級你的complication以及升級你的應用
讓應用保持最新就要一直升級
另外還有一個很重要的方面
這可能不會那麼直觀
就是你還要更新快照
你可能會想快照是什麼意思
因爲你從來沒有給快照寫過代碼
它特別適用於停靠欄裏的應用
現在 當停靠欄第一次出現在前臺時
所有停靠欄裏的應用都在內存裏
但是他們是暫停的當前並不運行
一旦停靠欄轉到前臺它顯示的
就是一個快照是應用最後一次運行的狀態
一旦用戶選定了停靠欄裏的一個應用
它就會恢復工作
即便它依然縮在停靠欄裏
但與此同時我們還展示了一個快照
表示了最近一次的狀態
重要的是快照也要更新
這樣你就不會一直顯示舊信息直到應用重新恢復工作
更重要的是如果你快速滑動停靠欄
而不停在任何一個應用上
它們在滑動中不會暫停和恢復
因此滑動時看到的只是上次最後顯示的快照
所以你必須要確保
這些快照更新到當前的信息
而後臺應用刷新就讓這件事變得十分簡單
一開始這裏有些自動的行爲
是系統給你的
甚至在你添加任何請求更新之前
第一個 應該很顯然
如果你已經進入應用並使用它
那麼用戶可能已經看到了一些新信息
或者已經進行了一些操作想要更新這個快照
以便在下次顯示
當用戶退出應用
系統會自動安排一次快照更新
代你完成這件事
這處理起來其實十分簡單
因爲有了這個新的後臺應用刷新方法
這是所有後臺刷新活動要經過的路徑
只要在WatchKit擴展代理上添加這個簡單的方法
它會被回調在任何一個刷新活動出現的時候
那麼第一個就是自動快照
這發生在應用暫停的時候
但用戶可能也會在其他時候從應用上瀏覽信息
所以就要常常更新快照
我們就都自動處理了
另一個可能就不這麼明顯
就是在一個通知被瀏覽以後
如果用戶看到一個長通知
他們可能已經看見一些新信息
將你應用裏的新動態通知他們
如果他們進入停靠欄
但是看到的信息是過時的
肯定會很大跌眼鏡
所以當你的通知關閉後
系統會自動安排一個後臺快照任務
跟這個例子裏一樣
這樣你就能更新快照和complication
從而保證一切都保持最新狀態並且同步
當然 有的時候
你會想自己安排更新
你瞭解你的用戶也清楚你的數據
所以有時候你就想自己主動更新內容
那麼這裏有兩種方法可用
第一是關於complication
接下來的問題就是快照裏要放什麼內容？
首先也是最需要放進快照裏的
就是你的應用裏日常顯示的內容
這樣看上去很實時
並且用戶打開應用時能看到你想要呈現的內容
但是你也可以選擇
提供一些不同的自定義信息
這樣在停靠欄上就很好看而且便於一目瞭然地理解
比如Dexcom G5手機應用
在這個應用裏我最關心的
是我當前的血糖水平
所以在停靠欄裏
我會看到突出的大數字就在屏幕中央
但是當我實際進入應用
我就會更關心細節而不僅僅是個讀數
所以當我把應用全屏
它就可以轉換並顯示更多的信息
當我打開應用看到的在這個例子裏
是一個歷史圖表顯示過去時間裏更多的信息
你不一定非要
在停靠欄快照裏顯示不同信息
通常不那麼做
只要顯示應用裏的內容就好
但你的確有了更多靈活性所以如果對應用來說
在停靠欄快照裏顯示不一樣的東西很有意義
那麼就要保證進入應用的時候的轉換
流暢和諧不會出現衝突
除了這些自動的快照任務
和保持快照更新
你可能也想定期
在應用後臺更新數據
那麼也有幾種方法讓你去實現它
現在 你可能只想上網
獲取一些數據那你就使用
NSURLSession和Watch Connectivity
但是其實還有很多其他方法
首先一個就是更新complication
complications可以直接在錶盤上看到
所以更重要的就是
他們也要實時更新
那麼現在有一種更新只針對
當前錶盤上的應用
這就是靜默complication推送更新
現在這些更新類型都在watchOS 2系統下
但是它們不太好使因爲你無法保證
在一天的時間內能更新多少
所以比較難以把握
你能使用多少和什麼時候發送
在watchOS 3下這個更新有了巨大的改進
我們現在可以保證在一天的時間內
錶盤上的每個應用可以收到50個推送更新
這很好因爲它讓你有機會
計劃在一天的時間內要使用多少個更新
那麼舉個例子假設我們有個股票的應用
我們就用最天真的想法
就是在一整天裏發佈50個更新
這樣就是每30分鐘更新一次
這也不是太壞但是我們可以做到更好
如果我們思考一下這裏顯示的數據
它們的相關信息以及我們的用戶行爲
比如說假設我們知道
用戶一般會在12點到6點之間睡覺
這樣的話
我們就不需要在這個時間段更新
那麼我們就可以把剩餘的更新次數
分佈在其他時間段
這樣我們的更新頻率就提高到20分鐘一次
這是個很大的改進卻只花費了很少的力氣
當然 如果我們更瞭解
數據本身並能將其也納入考慮
那麼我們還能做到更好
那麼假設我們知道我們的股票
只來自於紐約證券交易所
那麼我們的更新只要在9:00到16:00之間
就是開盤的時候
這樣頻率就提升到8.5分鐘一次
很顯然
這個特定的例子不適用於大部分應用
但是這個理念是可以的
考慮下你所有的額外信息
比如 你用戶的習慣
以及你所顯示的數據類型
你就有很多機會來進一步提高用戶體驗
當他們在手錶上使用應用的時候
但是這些都只是當前錶盤上顯示的complications
如果你的應用不在當前的錶盤上
而是在停靠欄裏或者在當前錶盤上
推送更新似乎沒有多大意義
還有其他方法能讓你更新數據
在這些情況下 你可能會想
定期在後臺更新
在一天的時間內
那麼我們還有另外一個後臺應用刷新API
它可以讓你設置下一次你要運行的時間
而且每次運行都會有些不同的東西
供你選擇
你能通過NSURLSession或Watch Connectivity下載數據
你也可以只從手錶的數據庫裏下載新數據
前提是你已經擁有所有信息
另外
你還可以設置下次更新的時間段
所以這不是個固定的週期不需要提前都想好
每次運行你都有機會選擇
下一次最佳的更新時間
這樣你就可以按照數據類型進行優化
因爲你知道什麼時候會更新
現在 至少
你能保證應用可以每小時運行一次
但是我們還有其他工具可以讓你
更頻繁的更新
那麼第一件事就是你的應用要支持complication
如果當前錶盤上有complication
那麼你的應用就可以
更快的更新不止每小時一次
但是即便不在當前錶盤上
你也能提高更新頻率
可用的更新總數
是固定的對所有當前停靠欄裏的應用來說
如果停靠欄已滿並且所有十個應用都在
那麼每個應用的更新都是一小時一次
但是如果用戶的停靠欄沒有滿裏面只有幾個應用
那麼本來用於其他未使用的應用的更新次數
可以分發給當前的應用
這樣的話一小時就不止一次更新了
在你設計應用的時候
也許一小時一次最便於計劃
因爲這是最低保證
但是記住你可以讓運行
更頻繁根據不同的情況
我最後想要講的一點是關於complication推送
complication推送當你想到推送
第一個能想到的就是服務器發起的推送
這的確是一個選擇
你可以從服務器發起complication靜默推送
但是你可能想不到
其實complication推送
也可以來自iPhone上的應用
推送更新API其實是WatchConnectivity框架一部分
那麼如果你iPhone上的應用因爲某些其他原因而運行
比如用戶直接在使用
又或者它在手機上運行了後臺應用刷新API
它可給手錶發一個complication推送更新
來更新complication的UI
所以 即便你沒有服務器
也可以進行推送
並且可以利用這個方法
讓你的錶盤保持更新
這就是你要記住的
當你設計應用的complications和刷新策略時
那麼現在來快速總結下後臺應用刷新
和它的工作原理
而且我要特別再強調一次
它是創建反應靈敏的應用時非常重要的部分
無論你在Apple Watch上創建什麼類型的應用
我強烈建議你們去看看
“讓你的手錶時刻更新”的演講
更多地瞭解後臺應用刷新
以及如何讓你的應用保持活躍 靈敏和更新
那麼下面我們來講講導航優化
我之前說過我們已經做了很多工作
優化Apple Watch本身的導航
所以系統已經可以很快的找到你的應用
下一步就是優化應用裏的導航
這就能很快找到信息
和用戶需要的操作
那麼我就以一個常用的模式作爲開頭
許多應用都會對它們的數據進行分層
打個比方這裏有個頂層視圖
上面有很多信息列的都是優先事項
這種情況下我寫了一個應用來記錄
我今天喝的所有飲料
現在 如果你需要任何一個指定項目的信息
你就可以點擊它它就會滑到細節頁面
那麼這裏我們看到今天目前爲止我喝了三杯咖啡
在watchOS 2裏
如果你需要看其他項目的更多信息
你就可以按一下返回鍵
找到那個項目然後滑動進入
現在這個看上去沒有多少負載
但是根據要把互動時間縮短到多少
附加時間會來回變動
這樣就能很快提速
在watchOS 3裏你會看到很多應用
使用這種模式
我們現在爲其引入了新的導航風格
你可以只用手指或者數碼錶冠
來快速滑動翻頁在不同的項目之間
不用來回轉換導航了
如果你看看 比如說股票和天氣的應用
他們經過重新設計開啓這種ok互動
而且我們也想讓你們能很簡單地
把它應用到你的應用裏
WatchKit的表格界面控制現在可以選擇
開啓垂直頁模式
當你要導航進一個細節視圖時
選擇這個就會十分簡單
你只要做幾件事
首先你當然是要在表格上啓動這一選項
然後你還要注意
在你的storyboard上使用segues
來表達從表格到細節視圖的轉換
這樣你就給了WatchKit所有它需要的信息
讓它能預生產上層和下層的視圖
並把他們放進垂直分頁界面
這樣就可在它們之間移動了
你看這也沒有多少改變而且十分簡單
你唯一要記住的
就是要實際去監測它
你還需要保證細節視圖的設計
就是能把所有細節信息放進一個屏幕裏
如果細節視圖本身可以滑動
那麼細節視圖裏的滑動
就會優先於外部分頁界面
所以你一定要將注意力集中在
簡化細節項目的視圖
你還會發現在股票和天氣應用裏
本來watchOS 2裏的這些視圖
要垂直滑動並且包含大量信息
而現在就只有一頁
所以就能很簡單地轉換
就這樣 我們讓用戶可以很快地進入應用
我們優化了後臺刷新讓我們的數據保持更新
我們也優化了導航在應用裏面
最後一部分就是要保證
個人與Apple Watch的互動要短
要讓用戶能儘快退出應用
在Apple Watch上這就意味着用戶能放心
不用端着手腕一直看
有幾種方法可以讓你實現這一想法
我們這裏就只看一個例子
假設我們有個應用是用來訂晚餐的
當我點擊Buy鍵
我就會開啓與一個服務器的網絡活動
它會進行幾個操作
來決定我是否可以購買
這可能需要點時間
那麼我首先傾向於顯示
給用戶一個未決定的進度指示器
讓他們知道處理進行中
但是不知道多久能完成
不幸的是 這樣他們只能舉着胳膊不動
等到任務完成出現點什麼
但是我很有信心在絕大多數情況裏
這些任務都是會成功的
讓他們坐着等這麼久實際上對我也沒有好處
那麼 你就可以考慮
顯示一些確定界面
讓用戶相信你在處理這個任務
不需要等着它完成
在這種情況下 我就說“收到！我們正在處理你的訂單！”
當用戶看到這個他們就可以放心地
放下手腕了
那麼你就可以繼續在後臺操作最多有30秒的時間
通過在NSProcessInfo上使用後臺活動API
總的來講 一切都不錯
而且你不用再把用戶的注意力拉回來
當然有的時候也會出問題
可能是無法連接服務器也可能有其他的問題
在這種情況下
watchOS 3提供了一個全新的用戶通知框架
它讓你能夠在手錶上直接計劃本地通知
這是個很好的方法能在後臺的時候
就把用戶的注意力拉回來
讓他們知道這裏出了點問題
並讓他們能簡單地修復問題
在這個例子裏假設 很不幸
我要點的雞肉沒有了
那麼我就彈出一個通知讓用戶知道發生了什麼
當然通知裏也可以包含操作
我可以設置幾個按鍵在這兒提供解決問題的選項
或者我可以讓用戶快速回到應用裏
這樣就可以在應用的全屏視圖裏自己解決
用戶通知框架是很好的解決方法
但是它也只是把問題告訴用戶
而本地通知就更強大
是對很多不同應用的巨大改進
watchOS 3中用戶通知框架很棒的特性
就在於它可以在手錶完全獨立的情況下運行
因爲它是在手錶上直接安排通知
但是現在你可以選擇如何製作通知
因爲既可以選擇使用通知框架
直接在手錶上安排通知時間
也可以繼續使用watchOS 2同樣的操作
就是返回信息給你的手機應用通過Watch Connectivity
在手機上定製通知
這兩種其實都是行之有效的方法
取決於你想要達到什麼目的
他們之間最重要的區別在於通知顯示的地方
如果你通過Watch Connectivity發送信息給手機應用
並且在手機上定製通知
那麼通知會同時出現在手機和手錶上
這樣不管你用哪個設備都可以收到通知
如果你在使用手機它會出現在手機上
如果你使用手錶
就顯示手錶裏
如果你用在手錶上的用戶通知框架
那麼通知只會在手錶上出現
不會返回到手機
而這可能正好就是你希望的
有些情況下你確實要使通知
只出現在手錶上
這個現在很容易實現只要使用新的用戶通知框架
但更好的是你——
謝謝
但還有更好的情況就是你根本不需要做選擇
如果你的目標是讓通知出現在
正確的地方 不管怎樣
即便用戶把手機落在了別處
那麼你可以選擇同時在兩個設備上設置通知
使用Watch Connectivity發送信息
給手機應用然後在手機上設置
或者只是用雲服務中的數據
只要按照默認在雲服務中設置
但這個設置也是要
在手錶上使用新的用戶通知框架
如果你這麼做只要你用的是同一個通知識別符
在兩次設置通知的時候
watchOS可以消除這些通知的重複
因此它們只會在手錶上出現一次 而不是兩次
下面看一些用戶通知框架裏很棒的新內容
由於個人互動在手錶上的時間很短
對於某些應用你可能想
在長期內多次使用
比如 我這裏有雞肉菜餅的菜譜
那我要去商店買些我所需要的食材
現在在watchOS 3裏每當我擡起手腕
手錶就會顯示我最後一次使用的應用
這樣我就能很快的看到我還有哪些東西要買
並勾掉已經買了的東西
我被帶回到上一次使用的應用
使用時間距離現在不能超過8分鐘
這很好用因爲它能讓你設計的應用
具備這種互動模式類型
它用於短時互動
但是可以長時間運行
對所有watchOS 3的用戶來說它是新用戶默認設定
所以它設置起來很簡單並能讓你根據它來創建和設計應用
這裏只是幾種方法
是我們一直想用來改進watchOS 3系統下的應用互動
但是還有很多其他的方法
我會推薦大家去聽聽
“快速互動技巧”watchOS演講之一
在那裏你能更詳細地瞭解這些多種多樣的想法
獲得更多啓發
以上就是導航
下面我們來詳細講講
改進後的API可用性在watchOS 3系統下
就像我之前說的
我們帶來了很多很棒的框架來自我們其他的平臺
我們有了一些特別好的新框架
比如用戶通知框架
我們還新添了很多API給許多不同的框架
都是Apple Watch已經安裝的
那麼我們就從已講過的一個開始吧
後臺應用刷新
我又把它拿來講是爲了強調它在我看來有多重要
它能帶給你的三個最重要的影響
就是設置更新的能力
運行多功能推送更新
並保證每天50個
還有保證快照和文檔的更新
並且同步你的通知和complications
再說一次 強烈推薦
“讓手錶應用保持更新”演講
裏面有超多相關的信息
健美應用是特別需要保持更新的
因爲在鍛鍊中最重要的就是
要顯示當前的信息
而且在整個鍛鍊過程中都要不斷更新
那麼今年對鍛鍊應用的一大改進
就是watchOS 3系統下它們將繼續在後臺運行
並持續整個運動時間
這讓你能夠監測鍛鍊的進度
觀察——使用所有的傳感器API
來跟上進度
並且提醒用戶通過通知 觸動或者聲音
當然我們也改進了
對心率和加速計的訪問
現在他們可以在整個鍛鍊過程中提供連續值
而不用把這些值在增量中進行批處理
然後大段大段的傳送
這樣一來就能方便追蹤
當前鍛鍊的情況並在整個過程中保持更新
由於他們在運行中你可以同時更新你的UI
它可以保證每當用戶擡起手腕
他們很快就能看到
當前準確的鍛鍊狀態而不會有額外的延遲
今年是很重要的一年真的 對運動應用來說
我們有關於這個主題的一整場演講
並且講解了很多對這類應用的其他改進
所以一定要關注“構建完美的鍛鍊應用”
去了解如何製作你的運動應用
讓其在watchOS 3下大放異彩
但是這裏有一點我要先重點講一下
就是後臺運行時間
因爲這裏需要做一點平衡
你肯定是想要應用在運動中時刻更新
但是同時你又想保證最佳的用戶體驗
在其他的時間裏
這就要注意節省用電量
其中很重要的一點
就是一定要關注CPU
在運動時間中佔用了多少
Xcode現在有個很棒的界面可以讓你監測這個
不僅是在某刻的佔用量
還有在某段時間內佔用的總量
在第一部分這裏有個清晰的視圖
就在頂部
這裏告訴你你現在的CPU佔用量
下面靠中間
是一個漂亮的圖表顯示過去時間內
CPU的歷史使用量
現在 你可以清楚地看到這裏的峯值就是我們工作量很大的地方
但是在黃色部分在中間
你能看到我們提供了一個滾動的CPU平均使用量
這是後臺應用所使用的量
在某一段時間內
這一部分是我要重點關注的
也是最重要的
因爲當你的運動應用在後臺運行的時候
它會限制
某段時間內
普通CPU使用總量
你要始終低於這個限制以保證
你的應用可以持續在後臺運行
併爲用戶節省電量以便在其他時間使用
這個限制在Xcode裏明確標明
用紅色的虛線
這樣你能觀察到平均用量什麼時候接近它
並且一定要控制在這個值之內
同樣 還有很多信息
關於後臺運動鍛鍊的體驗和改進
請一定要去查閱更多資料
但是有一件事你要記得
就是CPU用量在你開發這些應用的時候
除了傳感器的改進針對這些類型的應用
通過讓心率和加速計持續可用
我們還有很多新的硬件訪問API
錶冠中的時間讓你可以用數碼錶冠原始訪問轉換事件
在watchOS 2你的應用可以使用錶冠
在界面中滑動
或者選擇列表中的項目使用選擇控件
當然 我們也看到許多選擇控件的創新用法
在其他有趣的事上
我們發現所有人
都想對數碼錶冠的事件進行原始訪問
現在這個已經可以用在
所有應用的其他類型的互動中
現在——
手勢識別方便了在應用上添加接觸互動
這裏有特別多的單指互動手勢
比如按 滑 搖和長按這些都能很簡單地添加到
你所有不同的WatchKit界面元素
這樣你的應用在屏幕的不同地方
就會有不同的反應方式
我們還做了一個陀螺儀
現在可以輔助加速計
那麼你已經知道了這麼多設備的手勢信息
可用於各種有趣的實際操作
然後 快速——唔
來吧
再說一下“快速互動技巧”演講
提供了很多信息關於互動和其他實用示例
我想給你們看幾個例子
就是它能實現的是很酷的東西
首先 你看到這裏Acorns藉助了crown
讓你能快速滑動瀏覽一個圖表的信息
它展示的是你的賬戶的歷史信息
所以在一個單一簡單的界面
你可以快速移動瀏覽很多信息
屏幕都能顯示
這個是Sweat with Kayla
它利用了滑動手勢
在不同的鍛鍊中快速瀏覽
然後選擇自己想要的一個
當然 你還可以使用數碼錶冠來移動
只要輕輕一點就可以啓動你感興趣的內容
你會發現這裏有些有趣的視覺效果
給這個界面增添了些許生機
爲了讓這個可以用在你的所有應用上
我們提供很多漂亮圖表/b&gt;
和媒體框架Apple Watch而設計的
SpriteKit和SceneKit然你可以輕鬆添加
2D和3D的圖表還有動畫
來提升應用的各個部分
當然你也可以把它們
用於顯示長通知界面
來讓你的通知更加有趣生動
關於簡化導航我們講了很多
我們也想能夠播放視頻
就在應用的界面上
我們爲 watchOS 2應用添加了視頻播放器
但是要在這裏使用
就會進入一個單獨的全屏界面
你在這裏觀看視頻看完了要退出
有了在線視頻回放
你就再也不用離開應用的主界面
你可以直接在那裏播放
更好的是它支持自動播放
一旦視頻在屏幕上出現
它就會自動播放消失的時候就會暫停
如果你有很多個短視頻在一個滑動列表上
任何時候出現在當前屏幕上的視頻
都會自動播放而其他的就會暫停
它提供了很好的方法
讓你在應用裏添加短視頻
由於停靠欄裏的應用是活動的
自動播放功能甚至可以在停靠欄使用
所以如果你有一個短視頻
需要在滑動停靠欄的時候顯示出來
當用戶進入你的應用這個視頻就可以直接開始播放
甚至都不用讓應用全屏
這真的是watchOS 3中很棒的的視頻改進
SpriteKit和SceneKit可以用在任何地方
這裏你看到的是七分鐘鍛鍊
它很好的利用了SceneKit來實現很多視覺效果
這個可以用在iPhone應用裏也能用在Apple Watch上
你能看到的運動正是你想要去做的
並且很清楚顯示了你要怎麼做
那麼除了在應用裏添加很多有趣的視覺效果
SpriteKit和SceneKit也是短時互動遊戲的好平臺
我們也把GameKit帶入了Apple Watch和watchOS 3系統
它能讓你很方便地
添加回合制遊戲在你的手錶應用裏
由於GameKit的回合制遊戲API建立在NSURLSession之上
他們在沒手機的情況下甚至也能運行
只要你的手錶能連上已知的無線網絡
GameKit成就API也可以用於
獲得Apple Watch的成就它們以後可以
在安裝了這個遊戲的iPhoneiPad或者其他平臺上看到
當然 有AV foundation
就能很簡單的用手錶揚聲器播放聲音
Apple Watch上的遊戲只是剛剛起步
但是現在有了這麼多新框架我真的很期待
想看看你們可以創造出什麼樣的
手錶短時互動遊戲
下面給你們一個理念
關於如何成功製造一個有趣的遊戲
我這裏來展示一個簡短的視頻
這是WoGa正在開發的一個新遊戲
叫做垂釣時光
就是讓我們在手錶上在短時間內釣魚
劃一下就投出魚線
然後用數碼錶冠放下魚餌
到我想要的深度
現在 我可以放一會兒等一等
或者點一下立刻開始釣魚
魚貌似上鉤了
現在再次用這個錶冠收線
但是我實際上沒釣到
這條魚估計很開心
雖然我們的漁夫可不怎麼高興
所以這真的很酷因爲你能添加這麼有趣的圖表
看到這麼漂亮的動畫通過使用Apple Watch的SpriteKit
我真的很期待
能看到你們創造的東西
下一部分我要講到CloudKit
我們已經把CloudKit帶入了watchOS SDK
引進了新的CK Share API極大地方便了
在不同的用戶之間分享數據
它也建在NSURLSession之上
所以運行起來很簡單即使手機不在身邊
這有一整場關於CloudKit的演講“CloudKit的新特性”
我強烈推薦你們去看
最後講講Apple Pay
Apple Watch爲買東西提供了很好的支付方式
當然 當Apple Watch開了Apple Pay功能
你就可以在應用裏購買實物商品
只要按兩下邊鍵
你有很多種可以使用的方法
比如你可以選擇
提供最常見的商品
就像我每天的午餐
這樣我每天吃午飯的時候就可以很簡單的訂購
直接從手錶上下單
你可以用很多種方法售賣實物商品
通過在手錶裏使用Apple Pay
這就只是一些API它們是watchOS 3 SDK的一部分
這裏有很多新東西一定要去看看
演講的最後我們講一下發現性和配置
因爲 還是那樣創建一個好的手錶應用只是第一步
你還要保證用戶能輕鬆地
發現它並安裝它
那麼第一個改進就是iOS 10 Apple Watch應用
這是一個全新的錶盤畫廊
顯示了用戶可以添加到手錶裏的所有可用的錶盤樣式
更好的是就在屏幕的正上方
有一整個部分是專門爲你的應用設計的
打開十分簡單只要幾步就可以
那麼首先你要使用一些新的ClockKit API
你已在watchOS 2裏有了一個API
來定義complication模板視圖
這個API在watchOS 3裏被改進了
它不僅返回一個字符串給你的complication數據
而且返回本地化的key
讓你能獲得適用於所有語言的本地化的字符串
這很重要因爲第二步
就是創建一個complication bundle
你要用——你要使用模擬器
運行應用創建一個complication bundle
這就會生成一個靜態表達式給complication模板
之後可以放到iPhone應用裏
這很簡單而且通過它
你你就可以進入畫廊並顯示出來
靜態表達是必須的因爲只有這樣我們才能讓
complication的顯示能適應這個表面
即使你的應用還沒有安裝到手錶上
就這幾步卻能達到不可思議的成果
你的應用就直接顯示在畫廊裏了
gallery是第一個
新手錶用戶在匹配好手錶後看到的東西
所以你必須要出現在這裏
除了gallery我們還簡化了
自定義表面和把應用裝到上面的流程
你隨時都可以在Apple Watch配置表面
在iOS 10裏iPhone上的Apple Watch應用
現在也引入了整個表面配置UI
顯然 它們是同步的
所以你在一個設備上的更改也會出現在另一個設備上
現在你在手機上能很輕鬆地選擇所有你想要的complications
顯示在Apple Watch表面上
有了快速表面轉換
就有了更多理由去做complication
因爲越來越多的用戶會使用不同的表面
而你的應用就可以在其中顯現
配置的最後一部分就是停靠欄
很明顯你可以配置停靠欄
在iPhone中的Apple Watch應用裏
在停靠欄添加或刪除應用很簡單
也可以重新排列
更重要的是這都可以在手錶上完成
而且這裏有一個特色讓你能輕鬆發現
你可以在停靠欄添加應用
你最後運行的應用會始終顯示在停靠欄裏
即便你沒有特意把它放在裏面
如果用戶安裝了你的應用但卻不知道
他們可以直接在停靠欄里加東西
他們回到主屏幕就會發現這個圖標並打開它
下一次他們再回到停靠欄就會看到你應用出現在那
下面有一個大大的按鍵寫着“存入停靠欄”
只要輕輕一點
它就會被永久加入停靠欄裏了
因此發現添加真的很容易
而且可以直接從手錶裏添加
再說一次 你會聽到很多關於
創建一目瞭然的可操作性強的和反應靈敏的應用的信息
而且我特別建議你一直把這點記在腦子裏
這裏還有一場設計演講主講人是Michael
你可以去聽一聽設計奇妙Apple Watch體驗
他會講解更多跟這些主題有關的東西
所以 一定去聽聽
反應性也是很重要的一部分
這裏也有兩場演講是圍繞這個主題
一場是“架構watchOS 3的性能”
另一場“保持手錶應用更新”
這兩場是你一定想去聽的演講
它能讓你瞭解後臺應用刷新的所有好處
並且保證你的應用
時時更新對watchOS 3系統反應靈敏
這一週還有很多其他演講
裏面有大量關於Apple Watch的信息
還有很多演講是專門針對Apple Watch的
謝謝大家的到來
我已迫不及待想看你們在Apple Watch上的精彩設計了
祝你們本週其餘會議中過得愉快