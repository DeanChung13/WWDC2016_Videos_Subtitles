tvOS有什麼新內容
歡迎來到tvOS有何新內容這一會話
我是Hans我是tvOS團隊中的一名工程師
今年我們非常高興歡迎你
參加tvOS第一次的全球開發者大會
那麼我想通過對tvOS簡要概述來作爲今天下午的開始
我們會引導大家認識tvOS 10的一些新功能
然後我們將就其中的幾個深入討論更多細節
我們甚至有一個很好的案例示範
現在開始
僅僅九個月前我們發佈了新的Apple TV
伴隨它還發布了tvOS
tvOS是一個現代操作系統專爲現代硬件所設計
而其僅是64位的沒有32位的運行時間
因此它會爲你節省很多的時間
來測試32位兼容性或爲32位片段進行配置
與你的iPhone
iPad甚至Mac都不同
Apple TV一直連接到高速網絡
這使得tvOS成爲這樣一個理想平臺
在那裏你可以卸載一些任務比如管理你的應用的資源
用戶數據
甚至是你的應用內容將其放到某些技術中去 如CloudKit等
以及按需資源
CloudKit是你
在icloud中通往幾乎無限的存儲空間的界面
它爲你的資源提供了一個結構存儲
它也爲用戶數據提供了一個公共的和私人的數據庫
正如你在前一會話中所聽到的
可以跨iOS Mac OS和tvOS平臺來將其使用
並且也可以被分享
並且由於到iCloud認證
你再也不必問你的客戶
要一個單獨的登錄賬號了
即使你的應用碰巧在其他沒有CloudKit的平臺上運行
這也依然成立
而通過使用CloudKit JS以及其網絡服務API
你就不必去推出自己的解決方案了
而仍然可利用安全性和效率方面的優勢
目前 如果按照傳統做法客戶不得不下載整個應用
這樣才能將其發佈並開始使用
而只要應用體積增大這就成爲一個痛點
因爲我們等着下800兆的文件不是要爲了找樂子的
這不僅令用戶沮喪
同時對我們開發者來說也是一個挑戰
因爲客戶
甚至可能在他們能夠嘗試之前就對我們的應用失去興趣
按需資源……
利用Apple TV的一直在線的優勢
並提供一種機制據此你的應用甚至可以
在其所有內容被下載之前就作出發佈
這意味着你的客戶他們可以更快的用上此應用
而當應用被下載時
該系統可以繼續下載更多內容
所以在需要它們的時候它們就已經準備好了
進一步減少等待時間
而且應用的尺寸可以非常大
事實上比傳統上所能同意的大得多
讓我們來看看這個
每個應用都有一個可執行資源和基礎資源的主應用包
使用ODR時
你的主應用包的尺寸可高達200兆字節
你可以向此應用包添加第一組待下載內容
這樣當應用安裝時它們就已經準備好了
例如這可能是你的遊戲的前三關
第一組被稱爲初始安裝標籤
而這可以最多高達兩個千兆字節
如果你有更多的內容呢？
那麼你可以指定安裝之後
需要立即下載的額外的資源包
而這就被稱作預取標籤
預取標籤用於你知道你會盡快需要的內容
但不夠快到足以解釋對你應用的首次發佈的阻止
從而防止你的用戶使用此應用
因此 例如
如果你的用戶正在玩
你的遊戲的第一關
該系統將開始下載第四、五、六關
而當用戶過了第三關時下一關
已經下載好就等着用戶去玩了
所以這樣的等待就已經從用戶被轉移到該系統了
而系統不介意等待但用戶介意
預取標籤使用其剩餘允許量時
其尺寸可以高達四個千兆字節
所以如果你爲初始安裝標籤用了500兆字節
那麼你爲預取標籤就有3.5千兆字節
如果你已經用了你的初始安裝標籤的兩千兆字節
則你自然就爲你的預取標籤有兩千兆字節
如果你沒有初始安裝標籤呢？
從數學上來講你的預取標籤有四千兆字節 但是
你可能希望將一些內容移入初始安裝標籤
這樣它們就可被早點使用了
類似的
在應用被進一步使用時更多的資源包可以被下載
總下載內容可高達20千兆字節
使應用包和可下載內容的總尺寸
達到令人驚歎的20.2千兆字節
而這不僅只是一個大數字
它還是一個客戶感受不到其沉重和繁瑣的大數字
因爲他們可以更早開始
而且他們可以繼續使用應用而沒有多少中斷
晶體管是一個很棒的遊戲也是使用ODR的好例子
它的應用包有160兆字節
初始安裝標籤有500兆字節
所以它能快速下載並安裝
但由於900兆字節的預取標籤
玩家就可以不斷被新而華麗的遊戲關卡所挑戰
而幾乎沒有任何中斷
但是ODR不只用於遊戲
我最喜歡的應用之一是Earthlapse TV
Earthlapse TV
推出從國際空間站得到的時間推移視頻
並在你的客廳創建一個虛擬窗口
它擁有超過一千兆字節的超高品質的內容
然而它下載和啓動都很迅速
並且在內容之間跳躍時幾乎沒有任何等待
所以這就是ODR
順便提一下那是從Cupola模塊看到的加拿大
現在讓我們來看看我們如何與電視進行交互
我們每天都使用電話而且我們已經很習慣了
但獨特的是我們的關注和行動都
就在我們面前在觸摸表面上
然而當你看電視時
我們的注意力在10英尺之外在房間的另一側
而我們的行動在遙控器上就在我們手中
兩者之間沒有直接的聯繫
tvOS提供了一個獨特的機會
來使這方面的體驗更爲直接和相關
首先是Siri Remote
通過其觸摸表面
Siri Remote實現了一種新的基於集中的交互
而其是專爲這樣的環境所設計的
通過在觸摸表面上按下按鈕和使用手勢
用戶可以將焦點從一個元素移到另一個上
停留在特定的一個上然後點擊來觸發操作
爲了配合這一集中交互
tvOS也引入了一種新的視差效果
這種視差效果使你感覺到你的焦點在哪裏
也讓你覺得你和屏幕相連在一起
而利用視差效果的最好的方式
是使用分層圖像
分層圖像是爲tvOS所設計的一種圖像類型
當元素處於對焦狀態時
它會增強深度和活力
它最多可以有五層
實際上它也是應用圖標所需要的
爲了創建新的分層圖像你可使用Xcode的資源目錄
Mac OS的ParallaxPreviewer應用
以及Photoshop的Parallax Exporter插件
當然所有這些都可從developer.apple.com下載
現在讓我們退一步看一看主屏幕
主屏幕這裏這個10英尺的體驗被最佳示出
第一行應用圖標上面是所謂的Top Shelf區域
而放在第一行的應用能夠參與其中
你的應用可呈現最相關的特性或內容
因爲內容的快捷方式深藏在你的應用的內部
所以你的客戶可以直接跳到它
而這可能是例如你的電影的一張海報
音樂專輯封面橫幅廣告
或可讓應用有意義的任何東西
Top Shelf是一個把客戶帶回你的應用的偉大的管道
因此我們強烈建議你利用它
而不是僅僅讓它提供一個佔位符圖像
現在讓我們再回到主屏幕
主屏幕上是你關心的應用的集合
如你在keynote中聽到的
我們相信電視的未來是應用
這一切都被App Store所實現
App Store正如在iOS上一樣 是你去瀏覽
發現和下載應用的地方
而且由於它在iOS和tvOS上都存在
所以它支持通用購買
所以如果你的客戶已在iOS上下載了此應用
他們就可免費在tvOS上享用此應用只需按下一個按鈕
由於Apple TV的持續連接
在tvOS 10中我們要介紹的是自動下載
所以在iOS上被下載的應用
將被自動下載到電視裏
就那麼簡單
這樣會更容易讓你的客戶來獲取你的應用
但是你打算怎麼將其建立呢？
tvOS 提供與iOS、Mac OS和watchOS相同的
開發工具和語言
還有許多你已經知道的相同的框架 例如
UIKit、Foundation、Core Animation
AVFoundation、Core Audio
等等等等 在tvOS上都可用
另外在tvOS 9.2中我們也把MapKit帶到了電視之中
但是這仍然只是整個列表中的一個部分
可供你挑選的還有很多
例如 如果你正在開發一個遊戲
你會很高興知道
你所喜愛的所有遊戲技術
在tvOS上都是可用的：
Game Center、GameController、GameplayKit
Model I/O、MetalKitPerformance Traders
SpriteKitSceneKit還有很多很多
要什麼有什麼
最後tvOS還引入了一個全新的高級框架
叫做TVMLKit
TVMLKit通過爲你處理
諸如佈局和焦點管理之類的重活累活
來使你可以相當方便的打造
以內容爲中心的應用
而它通過爲佈局使用預定義模板
應用邏輯使用JavaScript來操作
它用於快速迭代和部署 真的很棒
而且當然它也被調整過來得到強大的性能
事實上Apple自己的一些應用也是用TVML
那個電影應用所打造的
的確App Store本身就是用TVMLKit打造的
而所有在iOS上幫你微調和優化你的應用
的開發工具
例如Unit TestingApp Analytics和TestFlight
在tvOS上也都是可用的
今年tvOS繼續提供令人興奮的新功能
如同你在主題演講中聽到一樣
我們正在把HomeKit引入電視
這樣就能從電視上控制與HomeKit相兼容的
配件了
我們也正在引入PhotoKit
這樣你的應用就可以利用你客戶的iCloud照片庫了
使用SpriteKit甚至變得更簡單了
多虧了來自焦點引擎的本地支持
你的運動和導航會感覺更自然
並與OS其他部分完全集成而這是免費的
說起運動和導航
玩遊戲的一個組成部分是你如何控制它們
你可以把Siri Remote當做一個輕量級的遊戲控制器
豎着拿並使用像刷卡之類的手勢
以及例如 點擊跳躍
來控制遊戲
如果你的標題要求稍微複雜的輸入
你可以把它作爲僅有基本的D-pads
和兩按鈕控制的小型遊戲平板電腦橫着拿
如果你的遊戲標題要求甚至更爲複雜的輸入
你可以使用擴展遊戲控制器
和你在國情諮文演說中所聽到的一樣
最多可以用4個
你現在有一個選項
來要求使用基於MFI的遊戲控制器
而app store將會在必要時根據情況
向用戶彈出提示
我們也在將ReplayKit移入電視
使用ReplayKit
玩家可以在本地設備上錄製自己的gameplay
並通過AirDrop與朋友們分享
但是這還不是全部
遊戲玩家現可在諸如Mobcrush的服務上
實時廣播其gameplay
在tvOS 10中我們也將和iOS 10一道引入
一個全新的UserNotification.framework
還有
ExternalAccessory.framework這個用於
來自iOS的藍牙配件
我們也在推出一個全新的Apple TV遙控應用
最後用戶可以設置其系統外觀
的明暗程度
而當你實際打造應用時
你會有很多選擇
你可能需要把UIKit用作你的基準
並利用所有可用的框架
如果你已經習慣全天然框架
或若你有一個現有的iOS應用
我們本週會有一些偉大的會話請你不要錯過
包括在tvOS上掌握UIKit
在那裏你可以把你的UIKit應用提升一個層次
而就在tvOS上的焦點交互
我們將回顧焦點系統
討論一些tvOS 10上的新功能
還要討論SpriteKit
我們還建議你看看TVMLKit
TVMLKit是一個令人難以置信的豐富的框架
若你的技能已經包括JavaScript和XML
那麼就真的很容易使用TVMLKit
來迅速開發和部署以內容爲中心的應用
而由於TVMLKit是打造於UIKit之上的
你甚至可以混合進UIKit中來做進一步的定製
而這些會話側重從TVMLKit取得最大獲益
所以我們強烈建議你來看看
如果你是一個遊戲開發者那麼當然
所有打包成GameKit的遊戲技術
很可能也是你的選擇
下面我要加速了
我們要深入研究tvOS 10中的一些新特性
爲此 現在有請我的同事Marshall Huss
下午好我是Marshall我是一名tvOS工程師
今天我們要深入研究如何應用
tvOS 10中的某些新特性
在主題演講中聽到新的Apple TV Remote應用
我們來看看如何使用通知
當你有新內容時如何通知用戶
最後我們要看看如何在你的應用中
實現明/暗外觀調整
因此新的Apple TV Remote應用和Siri Remote的工作模式一模一樣
所以不需要做任何更改就能讓你的應用運行起來
它還包括一個新的遊戲控制器佈局
這樣用戶可以用它來打遊戲
現在如果用戶正在使用此應用
你的應用針對遊戲控制器框架做了連接
則他們會在導航欄得到一個新圖標
看起來是這樣的
當該用戶點擊該圖標時他們面前會呈現
一個遊戲控制器佈局可通過旋轉電話來使用
要了解如何最大限度利用遊戲控制器框架
我們本週晚些時候會有一個會話
種子今天就可用請去下載和嘗試
接下來我們要看看通知
以及當你有新的內容可用時
如何使用它們來通知用戶
你可能會習慣的一個操作此事的好方法
是把你的應用圖標做成徽章
我們已經在tvOS 10中增加了這種支持
現在就iOS你得向用戶要求權限
來把應用圖標做成徽章
但在tvOS上這看起來有點不同
他們會得到全屏模式警報
所以一定要確保
你在適當的時間申請許可
否則這可能是用戶使用應用的第一次體驗
我們還添加了對於遠程通知的支持
這樣你就可以使用Apple的推送通知服務
來發送遠程通知了
我們支持兩種通知類型
那些都是我們剛纔看到的徽章而且也會有內容提供
現在如果你的應用在後臺
那麼這些有內容可用的應用將不會叫醒你的應用
就像你可能在iOS中所習慣的那樣
讓我們來看看這是什麼意思
比方說你的用戶有新的內容可用
好的通知方式是發送一個
有內容的推送通知以及一個數值爲1的徽章
如果應用未打開tvOS將保留此通知
並更新用戶的徽章
現在用戶獲得更多的可用內容
所以你可以發送另一個推送通知其將更新徽章圖標
tvOS將保留最新的通知
並等待應用回來
最後你會得到更多的可用內容
而你也可以再次更新徽章
當用戶準備好之後
回到應用並看看他們有什麼新內容時
他們可以打開應用
而我們提供上次通知這樣你就可以到你的服務器
並也許獲得任何可用的新內容
爲了支持這一點
你必須使用新用戶通知框架
如果你之前已經在iOS中應用過通知
你可能習慣了使用UIKit API
到現在爲止那些在tvOS中是被禁止的
而它們將被保持禁止
所以爲了全力支持本地通知和[聽不清]的通知
你將需要使用新用戶通知框架
我們本週會有關於你可以如何學習
在你的應用中完全將其應用的會話
而終於在今天我們要去看一看
tvOS上的新的明暗外觀
我們看到這是給用戶的一個全系統的設置
用戶將確定其何時想在明暗之間
做出改變
現在要考慮的事情
是用戶可能在不同的環境有一定的空間
它可以是在一個電影廳中那裏很暗
它可能是在起居室中裏面有很多窗戶
或者用戶可以根據一天中的時間改變它
所以爲了尊重用戶的選擇爲其提供最好的
用戶體驗非常重要
爲了充分支持這一點我們已經
在UITraitCollection上添加了新的API
你必須真正選擇加入黑暗的外觀
如果你不選擇加入
你的應用將繼續留在亮處就像在tvOS 9中所做的一樣
讓我們一起來看看如何才能讓你的應用
採用新的明暗系統的外觀
第一步是添加一把新鑰匙到你的Info.plist
我們添加了一個叫做UIUserInterfaceStyle
如果設置了明值它就總是解析爲明
如果設置了暗值你的應用就總是解析爲暗
或者如果你使用我們所推薦的 自動的
它尊重用戶和系統設定
並通過你的應用進行傳播
如果你用Xcode 8爲tvOS製作新項目
這實際上將默認爲自動
有新API和TraitCollection
我們增加了一個新屬性稱爲UserInterfaceStyle
這可能有不確定的值可能是
如果你的視圖尚未被插入視圖層次結構
或者它可以或明或暗
具體取決於系統設置和你的應用支持什麼
爲了支持開發者將其採用
我們增加了開發工具支持
到界面生成器和模擬器
如果你使用標準的UIKit控制
這些實際上會爲你自動改變
如果你習慣使用外觀代理
那麼重構一點點然後你就可以指定顏色了
這取決於TraitCollection
如果你想要最大程度的控制
你可以應用TraitCollectionDidChange
在你的視圖或視圖控制裏
現在在界面生成器你可以指定顏色
就在檢查者中規定明暗
我們向Storyboard增加了一個明暗預覽
這樣你就可以迅速開發和設計你的應用了
我們還向模擬器增加了一個快捷方式從而能
這些系統外觀之間快速切換
我提過UIKit控制會將其自動更新
而我們在自己的系統應用中對其大量應用
我們看到某些視圖
比如這個鍵盤或文本字段或分段控制
會自動更新風格以在電視壁紙上顯示最好的效果
若你使用表格視圖像我們在設置應用中一樣
它會自動調整其背景顏色
文本顏色以及所有的參數來使其看起來好看
如果你正在使用系統內置鍵盤
那麼那些也會自行調整
如果你正在嘗試自定義你的文字
我們已添加支持到UILabel和UITextView
這樣它們也就會自動改變其顏色
爲輕巧美觀文字顏色設置爲黑色
外觀爲暗時它將被設定爲白色
但有需要注意的是如果你設置過文本顏色
則你將自行負責爲此兩種模式
更新該顏色
我們還添加了兩個新的模糊樣式到API
你現在可以使用UIBlurEffectStyleRegular
或UIBlurEffectStyleProminent了
我們稱這些爲自動樣式
他們實際上將基於系統設置內容來調整
有效的模糊效果的風格
所以如果你使用UIBlurEffectStyleRegular
而系統是淺色 則其將使用UIBlurEffectStyle.light
如果使用常規和深色你將使用深色
如果你使用突出 其將使用.extraLight和.extraDark
.extraDark被放在稍後種子中
現在你可以用外觀代理定製你的應用了
所以你可能有這樣的代碼
它設置一個按鈕的標題顏色爲紅色
重新調整一點點
就可爲明暗兩色都提供TraitCollection
而使用外觀代理API
我們可以爲那些具體的TraitCollections 設置一種顏色
現在這種情況下我們的按鈕將在淺色外觀下使用紅色
將在深色外觀下使用藍色
最後如果你想要在這些變化中有最多的控制
你可以直接回復他們
使用TraitCollectionDidChange你就能在
在你的視圖或視圖控制器中做到
讓我們來看一個對此應用會是什麼樣子
首先我們在視圖控制器中覆寫了TraitCollectionDidChange
然後我們檢查以確保UITraitCollection
對新的用戶界面的樣式屬性
這使我們能夠在tvOS上爲我們的用戶建立這個功能
但依然支持可能在使用tvOS 9的用戶
下一個
我們檢查用戶界面風格實際改變了
否則我們可能會做比我們所需要的更多的工作
最後我們可以檢查用戶界面風格
並相應地更新我們的控制
現在對此的一項高級用途是
你是否想覆寫TraitCollections
可能是這種情況如果你希望你的應用
支持自動風格但也可以在你的應用中
有某些視圖或視圖控制器
而你想要指定樣式本身
我們將此用於我們的系統應用
我們的產品頁面和電影而電視節目實際使用
其藝術作品所基於各種元素的樣子
在這種情況下我們有淺色藝術作品
所以我們就按鈕樣式使用黑色文本
使顏色鮮活
我們也有深色網頁我們在深色風格上
用白色文本 而按鈕也被相應更新
爲了覆寫這些TraitCollections
我們使用API其已經被添加進iOS 8
而這是用於ChildViewController的setOverrideTraitCollection
爲了將其使用我們可以用小包裝
讓我們看這樣一個例子可能可能看起來像
首先我們創建...
一個新的類AppearanceViewController
然後我們從UIViewController處繼承
我們可添加一個屬性它有這樣的一種風格
即我們可能會想設置ChildViewControllers
然後我們可以添加另一個屬性在這裏我們
實際設置視圖控制器
然後我們爲ChildViewController設置了OverrideTraitCollection
用我們指定的樣式
最後我們使用標準ChildViewController包含
現在如果你想使用這個類
我們可以提供AppearanceViewController
指定我們想要的風格無論基於我們希望的何種屬性
我們可以設置ViewController
然後我們將其轉讓給用戶
接下來有請Brandon
來向你展示怎麼樣來爲tvOS 10而更新你的應用
謝謝 Marshall
大家好 我是Brandon
非常激動向你們展示我們一直在努力做的tvOS應用
它被稱爲世界壁爐
壁爐愛好者們到目前爲止很喜愛它
讓我們來看看
這個應用允許你把來自世界各地的壁爐樣式
直接帶到你的客廳
讓我們來看看佛蒙特州的壁爐是什麼模樣
啊 這裏感覺很舒適 不是嗎？
我認爲這很棒
現在儘管模擬器外觀將被設置爲深色
我們的應用使用的是默認的淺色外觀
因爲我們沒有指定偏好
我很高興能採用新的深色外觀
讓我們現在就去更新應用
我們需要做的第一件事情
是將此新用戶界面風格密鑰添加到我們的Info.plist
我們會把它的值設爲自動並重新運行我們的應用
我們選擇自動因爲我們希望讓我們應用的外觀
匹配用戶的外觀設置
好的目前爲止看起來很不錯
所以我們所有的標準UIKit視圖都已被自動更新
因此在這種情況下標籤欄和壁紙
現在就有了一個深色的外觀
對於你們某些來說
這可能就是你更新你的應用所需要做的一切
但是我們的設計師已經決定
他們希望深色外觀有一個不同的標誌顏色
而在集合視圖樣式中的背景顏色
有那麼一點點突兀
那麼就讓我們來做這些更改
讓我們去我們的main.storyboard
而我們需要做的第一件事
因爲這是一個現有項目
我們需要在Xcode 8中啓動性狀變體功能
因此要做到這一點我們會去文件檢查器中
點擊Use TraitVariations 複選框
當我們這樣做時會得到警告即性狀變化僅僅兼容
Xcode 8或更高版本
這很好 所以我們將繼續
現在我們要點擊我們的標誌去Attributes Inspector
在一些屬性旁邊有這些新的加號按鈕
所以我們會將其點擊
併爲我們的標誌圖像添加一個深色接口
我們會將其指定爲黃色
現在Xcode 8一很酷功能
可在InterfaceBuilder的外觀間
直接切換
要做到這一點我們就下到我們的故事板的底部
並點擊View As:Apple TV（淺色風格）.
我們在這裏有兩個選擇
淺色和深色
當我們點擊深色時一切都將自動更新
我們的標誌變了顏色
而且標籤欄和牆紙也都已經改變了顏色
看起來很不錯現在來更新我們的背景顏色
在AppDelegate中
我們使用外觀代理來設置我們CollectionViewCell的
背景顏色
現在我們要背景顏色根據具體特性變化
因此我們需要使用具體特性的外觀代理
所以首先我們要通過創建一個UITraitCollection來開始
因此用淺色的UserInterfaceStyle
來讓淺色等於UITraitCollection
然後我們將更換我們的通用外觀代理
用的是具體特性的外觀代理
因此對於TraitCollection我們會用剛剛創建的TraitCollection
就深色我們會同樣操作並指定一個不同的背景顏色
現在我們無法在Interface Builder中查看
我們重新運行應用
我們增加了一個鍵盤快捷鍵這樣你就可以切換
在模擬器中的淺色與深色外觀之間快速切換
要做到這一點點擊Command Shift D
來切換淺色外觀
然後Command Shift D來切換回深色外觀
到目前爲止看起來都相當不錯
但我注意到 現在我們已經改變了
我們的背景顏色卻很難再看到圖標了
所以讓我們把這個也更新一下
我們會去我們定製的收藏ViewCell子類別
而之前我們在awakeFromNib功能中設置着色顏色
既然我們要在我們的TraitCollection改變時讓着色顏色改變
我們將覆寫TraitCollectionDidChange功能
我們將使用與我們的淺色界面風格相同的的顏色
而爲我們的深色我們將實際使用淺灰色
現在TraitCollectionDidChange將在每次
你的視圖被添加到一個視圖層次時被調用
我們在這裏刪除我們的初始化代碼
但爲了向下兼容我們只是把它留在那裏
讓我們運行應用看看現在效果如何
好的 看起來好多了
讓我們切換到淺色外觀確保一切都沒有改變
看起來仍然不錯
現在回到深色外觀看起來真棒
我們剛剛更新了我們的應用來採用新的深色外觀
我們已經爲tvOS 10做好準備了
現在有請Hans回到舞臺
謝謝你Brandon
非常棒的案例示範
所以和你所見的一樣
採用淺色和深色外觀是相當容易的
我們希望大家都可以在你的應用中很快採用它
今天下午我們已經看到了tvOS中的許多功能的一小部分
tvOS提供你已知的相同的工具服務和框架
所以它真的很容易上手
而基於焦點的交互
結合了視差效果的分層圖像和Top Shelf
它們一起共同創造了
一個直接和相連的10英尺體驗
而有了Universal Purchase和Auto Download
你的客戶將能夠從未如此密切的享受使用你的應用
我們也推出了一個全新的Apple TV Remote應用
而且它已經被做成了一個種子就請下載
並用它測試你的應用
而有了ReplayKit和SpriteKit支持
且直接來自聚焦引擎
遊戲體驗更棒了
最後用戶可以根據其喜好來設置自己的系統外觀
我們希望你會就所見所聞而高興
通過本週許多很棒的會話
你還可以學到更多
今年早些時候的 AppleTV Tech Talk視頻
就指導你完成基礎知識學習非常有用
也可從developer.apple.com下載
當然所有這些信息都被放在會話鏈接
最後
等不及要看到你們爲電視的未來所創作的產品了
非常感謝大家的光臨請享受其餘會議