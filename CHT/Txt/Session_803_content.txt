字體排版和字體
早上好
大家早上好
我叫Antonio Cavedoni
我來到這裏給大家講講字體排版和字體
我是Apple的字體設計師
所以在今天的日程上將來看看San Francisco
以及系統字體的升級
我們會看到關於字體排版的一些術語
我們會看看一些字體排版的概念
以及在進行字體排版時你可以使用的工具
最後 我們會看看一些你可能想要採用的細節
當你在做應用的時候
好了 San Francisco
是我們系統字體的族類
我們去年推出的
你在這裏看到的就是SF
而且它是macOSiOS和tvOS的系統字體
我們在去年 WWDC 上推出了這一族類
這裏有一個視頻講的就是關於SF的理念和應用
我們將SF應用到我們的所有平臺上
有Apple TV 我們將SanFrancisco應用到Mac
不過我們還將它應用到重新設計的音樂應用上
若在Moscone Center裏你還沒有看完所有字體
SF族類確實新添加了一位成員 叫做SF Mono
SF Mono是一種用於編碼的新設計 而且有多種樣式
我們從細體開始
升到正常
中等
半粗體
然後我們有表現力更強的樣式 像是粗體和特粗
所有這些都有斜體版本
它們涵蓋拉丁文SL和拉丁字母
不過還有西裏爾字母和希臘字母
在所有樣式和所有帶斜體的粗細中
當然SF Mono是等寬設計
而且在所有粗細中也是等寬的
這意味着如果你改變字體粗細文本是不會迴流的
當然 這有點困難
當我們在設計這個更粗的字體
我們必須要將所有這些字形擠壓進來
不過我們先設計出用於編碼的小號SF Mono
我們微調了其中一些字形
像是標點符號或者括號 花括號
一些用於編碼的數字
當然SF Mono是SwiftPlaygrounds的新默認字體選擇
在Xcode中也是默認字體
看看這個新的主題
好了 我簡短介紹了San Francisco和新SF Mono族類
接下來 我想給大家講講一些關於字體的術語
讓我們在這些偶爾會混淆的字體術語上達成一致
在我開始之前我想提前說一下
這就是今天我們將看看拉丁字母和希臘字母
不過如果你對多語種字體排版感興趣 你也應該感興趣
昨天有兩場演講你可以在視頻上補看
談論的正是這個話題
所以我們開始吧
什麼是文本？
文本給語言編碼而且與含義有關
文本就是打字的東西
文本會得到自動校正和分析
併發送給你的朋友
文本是由什麼構成的？
它是由字符構成
字符是文本的抽象單位可以說是由一個代碼所代表
在你看到這些字符之前你需要有東西將它表達出來
這叫做字形
字形在你的設備上以輪廓一連串的點而存儲着
並且存在於字體文件中
在字體文件中字符和字形之間
通常是1對1的映射
然而 事情並非總是如此簡單
這裏可能會出現叫做字體排版功能的東西
這一種機制會改變這種1對1的映射
並讓事情變得更復雜一點
例如 你可以有字體
當你按下F或I的按鍵這個字符就會生成
你得到了一個字形而並非兩個
因爲它們組合到一起了這叫做連字
這個連字是通過字體排版功能實現的
這是自動的並且取決於字體
不是所有字體都這樣
一些字體有可選的功能可以改變數字的形狀
例如San Francisco有數字6的替換形狀
當我們想讓它更加易讀時就會使用
字體有多種樣式
當然 都看起來不同
一些字體只有兩種樣式
另一些字體則有非常多
你可能聽說過它們的名稱像是粗體 斜體 粗斜體 緊縮
這些都是樣式名稱
將它們維繫在一起的是這個名叫設計DNA的東西
其想法就是一組形狀
那就是字型
字型有很多種
你可能見過或是認得這些
你用字型做的事是字體排版
字體排版是使用字型來設置文本並給語言編碼
字體排版是圖形設計和UI設計的根基
我們剛看了一些術語
看過了文本
文本是由字符構成
字符是由字形所編碼或表示
在字符和字形之間
是字體排版功能這可以改變兩者的映射
它們存儲於字體文件中
這可以有常見的多種樣式
它們都歸於同樣的字型組羣中
這是所有這些樣式背後的設計理念
然後字體排版使用所有這些東西來傳遞文本
作家和編輯 那些書寫文本的人
他們的工作就是文本
字符是由統一碼聯盟所定義的
所以你不必考慮它們
字體設計師和字體製造商
是想出設計靈感的人羣
並設計字形 然後將其放入字體中
之後創建字體排版功能供你進行更改
字體排版者是那些進行字體排版的人
我告訴大家一些好消息那就是你們就是字體排版者
事實上我們都是字體排版者
無論我們什麼時候更改字體 使其加粗
我們改變磅值
這都是字體排版的工作
當然 作爲字體排版者你會給字體排版
不過 當然你還可以改變文本以及選取字體
選擇它們 組合樣式並改變字體排版的功能
將可選的打開
好了 我快說完了
不過我還有幾個術語
它們實際上與某種東西的缺失有關
內容周圍的負空間
我剛給你展示了什麼是字形
它是代表字符的輪廓
而且在字體中 它作爲輪廓存儲着
但它還有寬度 這基本上是間距屬性
如果我挑選出這樣的間距然後將它排版到字行上
我會得到這樣的節奏 這非常不均勻
所以字體設計師會改變它讓字形之間的節奏變得平均
間距是內置在字體中的而且你無法去改變它
不過 你可以改變字間距
字間距可以對負間距進行調整
它可以是零值
或是負值
或是正值
這對字體中的所有字形通用
要麼將它們遠離 要麼讓它們更近
當你在進行小號字體排版時這會非常有用
你可能想將字母更加遠離
然後在大的時候靠在一起
字間距可能會和字偶距相混淆
字偶距就是一種用於單個字形對的異常機制
在這個案例中A和V太遠了
所以字體中的字偶距表格
說將它們拉近一些
字偶距表格也由有字體設計師製作完成並放入字體內部
而且你無法控制 這是自動發生的
然而 行距
行之間的間距 這是你可以控制的
行距這個名稱 源自與金屬字體排印學
將字行進一步分離開 抱歉
你要在行之間插入金屬片
所以我們剛看了
間距 字間距 字偶距和行距
嵌入於字體中
間距和字偶距是內置於字體中
不過 字間距和行距是可以調整的
在字體術語上 我就只說這些
現在大家都清楚 這些字體排版術語了
我們來看看一些字體排版的概念
我們從易讀性開始
易讀性指的是識別形狀
並將它們與彼此區分開
你可能熟悉這個想法
一些字型本身就易於閱讀
然而 在一種大小上難以看清的
而在另一種大小上看得清清楚楚
易讀性與尺寸有關
當你改變一段文本的尺寸
之前看不見的細節就會顯現出來
所以受到影響的是所看內容的大小
在這些情況下 UI字體排版
會更像是路標
你在馬路上行駛
你看到的標誌很大 字體很大
但離你很遠
尺寸不僅與磅值有關
還與讀者離閱讀面的距離有關
在這些情況下 在小尺寸字體排版上應用的東西也是能適用的
例如 將字母分離開
或者讓字體更粗可能會提高易讀性
但是易讀性 不僅適用於文本
它也適用於佈局
很明顯的是 在一種尺寸上的佈局
層級清晰 易於閱讀而在另一種尺寸上會難以看清
這裏的問題是密集度會被破壞掉
實際上增加了非常多
所以解決密集度的方法是
你可以將元素進一步分離
不過常常更好的方法是
重新考慮你的層級和內容位置 你的佈局
用於不同尺寸
如果你想知道更多關於佈局的內容
在週五有一場演講內容關於迭代UI設計
那是獲得想法的方法論
而且他們還會有關於如何評估那些想法的祕訣
這是重要的部分
尺寸和密集度也不是只適用於文本和佈局
還可以是字形設計
我們給大家一個例子
這是什麼字形？
它叫什麼？
當然 這是at標誌
但在意大利 它的名字很奇怪
我們叫它“chiocciola”指的是蝸牛
當我們在San Francisco中抱歉 在SF Mono中設計這個蝸牛時
我們從San Francisco中的那個開始
當然 我們是這樣做的 讓它變得等寬
然而 當我們在合適的背景和尺寸下驗證這個形狀時
我們意識到密集度太高了
變得模糊 很難看清
所以我們想出了這樣的解決方案
我把它放大
在這個例子中
我們極大地改變了字形的密集度
我們的做法是增加負空間
這對易讀性至關重要
再考慮一下SF Mono粗體中的H M和N字形
如果我們把它們放得非常大
你可能會看出筆畫的厚度並不是相同的
這是因爲在它們大的時候能看出來
但小的時候 你看不出
所以我們稍微誤導你讓你認爲它們的密集度相同
想象一下 你現進入到這個圖片裏了
你要弄清身在何處以及你要去往哪裏
你可能要坐地鐵去某個地方可能是去教堂大道
但你在哪裏？
我知道你在哪裏
你在紐約 我是通過字體得知的
我還恰巧知道 我知道 不好意思
我還恰巧知道他們使用的不完全是Helvetica
所以我用Helvetica Neue Bold再現了那個標誌
不過我想表達的是對於字體排版質感的認識
如果你將字型變成另一種不同樣式
即使是同一族類之中
不僅那個標誌的效果會不同
給人的感覺也會不同
對吧
所以字型有這種質感品質
這個完全不像是紐約的感覺
這個也不是
這個質感屬性不是次要的實際上這有助於營造一種氛圍
例如 我在用SF字體閱讀郵件然後現在我在玩遊戲
可能在遊戲不適合用SF字體
字型真的能幫助你營造氛圍
並幫助你的用戶清楚他們所在的位置
好了 這是我們剛纔看過的概念
我們看了易讀性 尺寸 密集度和質感
現在我想給大家談談一些工具
當我們在平臺上進行字體排版時
有三種基本工具供你使用
第一個是系統字體
第二個是動態類型
然後第三個是我們的定製字體
你看的那個系統字體是在平臺上原生的
而且作爲字型 在平臺上有原生的感覺
獲取系統字體API在
iOS watchOStvOS和macOS之間都相同
所以NSFont和UIFont基本上有相同的API
它們有很多的好處
它們能讓你獲取全部9種San Francisco的粗細
還有特定大小的字間距
基本上字母自動地靠近或者遠離
取決於你設定的系統字體磅值
你還會自動得到特定大小的輪廓
然後你會獲得粗體字轉換
這是在iOS的設置中
人們可以開啓它 這讓他們所有設備上的文本都粗體顯示
第二個可用工具是動態類型
這個工具極好
在iOS和watchOS上提供
動態類型就是指兩件事
第一個是文本樣式APIpreferredFont (forTextStyle)
這會讓你獲得語義標識符
會給你特定用於那個用途的字體
你可請求用於大標題或正文等等的字體
你會得和系統字體相似的字體
但它們是專門爲那個用途而調整的
不過動態類型也是內容大小類別
它就是這個滑動器上你所熟悉的刻痕
人們可進入到設置中將滑動器上下移動
他們可以改變設備的全局磅值
這是一項非常棒的無障礙功能
如果你使用動態類型還使用文本樣式API
這上面的動態類型支持是自動的
然而 如果你使用定製字體或者直接調用系統字體
那你必須要做一些工作來應用動態類型
不過這很簡單 我給大家展示如何去做
首先你要選取或捆綁一種字體
之後你可以有一個查找表上面有內容大小類別
然後你必須要覆蓋traitCollectionDidChange
這是UIView和UI的方法
你控制子類
之後你更新你的字體以及段落樣式
然後你重新佈局 這就完成了
所以我們稍微深入地看看這些步驟
到底如何將字體捆綁到應用中？
這很簡單
只需把它拖到Xcode中
然後你在info.plist列表中聲明字體的名稱
上面專門的鍵
對於內容大小類別
當然 你要有一個查找表將它們映射到磅值中
可能是粗細 字間距值或甚至是行距中
取決於你選擇的字型
我有一個查找表 像這個樣
我有工具池 磅值樣式名稱 行距和字間距
你在這裏看到的符號是內容大小類別
你會發現這實際上比滑動器上的刻痕要更多
因爲這裏面有五個無障礙類別
人們可以在無障礙設置中打開
所以當你使用查找表時你也要記住這幾點
一旦你做好了 你就覆蓋traitCollectionDidChange方法
在內部你可以做什麼都行
你可以寫上基於視圖和顯示效果的代碼
能夠調整字體並重新佈局
所以
當你在那個方法內部
你應該詢問當前對象的特徵集合
並查詢優選的內容大小類別
然後將其作爲查找表的鍵 這就完成了
第五步是重新佈局
但如果你用自動佈局這就不會有第五步了
如果你感興趣瞭解自動佈局
明天和週五有關於這些專題的演講
好了 我們剛剛看了如何將動態類型用於定製字體
不過假如你想開始着手去做
到底應該如何下手？
如果你一開始嘗試使用定製字體
我推薦一次從一個字型開始
這樣的話會更簡單
但重要的是一旦你用上了你所考慮的字型
試着去理解其設計意圖
因爲在使用上會有很大幫助
字型是工具
它們是由人們設計而成用於特定用途的
理解其用途
會極大幫助到字體使用者和字體排版者
你還要考慮可以調整的設置 對吧
你無法在應用環境中輕易更改字偶距
如果字體調不了字偶距
你可能要考慮其它選擇了
然而如果字體行距太緊你是可以改變的
不要擔心
好了 我們剛看了系統字體動態類型和定製字體
接下來我想展示一些小細節
你可能會考慮在自己的應用中使用
我想展示的第一個是箭頭
箭頭很了不起
它們可以用於指向內容
不過 它們也能用在complications上
那裏信息的密集度十分高
然後你想得到更多一點的信息
箭頭在SF中 實際上是作爲字符保存在字體中
你可以將它們複製粘貼到你的字符串中
例如在Xcode中然後它們就會出現
不過 更重要的是因爲它們在字體之內
它們與系統字體的粗細相匹配
如果人們改變粗體字轉換或用動態類型
箭頭會相應地改變大小
我想說的第二點是高易讀性替換
我講了在字體排版功能中的替換
我們在San Francisco中有一個新替換 有助於這種情況
如果你給字符串排版
沒足夠的語境來分辨出這都是哪些字形
人們可能要將其傳到別處或者在其他地方輸入
人們必須要能讀它而且必須要完全分清
都有哪些字形
這裏有新的統計集
這會將這些字形改變成完全無歧義的形狀
I有了襯線0有了一撇
L有一個小尾巴然後6不那麼容易和8混淆
我們不推薦一直啓用這些形狀
因爲如你所見 這是非常巨大的改變
而且極大擾亂了文本整體的質地和外觀
以及文本的感覺
所以儘可能謹慎使用
不過 這是啓用它們的代碼
順便一提 這個代碼在UIFont和NSFont效果一樣
是完全相同
你從UIFont或別的東西開始你從中衍生出一個字體描述符
然後你修改它 給它添加功能
然後從中衍生出另一個字體
接下來 小型大寫字母
我肯定大家都熟悉大寫字母和小寫字母
不過這個組中還有第三個成員那就是小型大寫字母
小型大寫字母是大寫字母的縮小版
與小寫字母對齊
當我說對齊時 我指的是幾乎對齊
它們實際上應該稍大一點
什麼時候用上它們？
例如 當你給首字母縮略詞排版時
首字母縮略詞或者當你想創建精妙的信息層級
例如有數字
然後你想弱化它邊下的另一條信息
讓我展示一個案例研究 關於如何在Apple TV上使用小型大寫字母
上面有這個段落
還有層級 列表是在左邊
然後段落在右邊
你想讓左上角的文本成爲標頭 並且稍微突出一點
如果你將它看成線框圖
你差不多可以看出
那全是大寫的字符串在高度上碾壓四方
看起來有點太大了
你可以修正它的一種方法是
你可以改變磅值將它降下來
不過如果你那樣做這還會使字母變得更細更緊湊
所以密集度會與其他的文本不相配
你怎麼辦 小型大寫字母
小型大寫會保留全大寫的設置
且還保留你想要的密集度以及筆畫厚度
這裏有兩種基本方式 兩種API
將小型大寫字母帶到系統中
而且它們與字體排版功能
和基本文本之間的互動有關
所以假想你有一段都是大寫的文本
你啓用大寫中的小型大寫字母功能
你會得到一段都是小型大寫字母的文本
看起來很好
如果你的字符串混有大小寫字母
然後你啓用大寫中的小型大寫字母功能 結果是這樣
這看起來很糟
這個的問題是這裏的大寫字母
沒有在強調任何內容而且幾乎像是錯誤
所以請你儘量不要這樣做
如果你有一個全是小寫字母的字符串
然後你啓用大寫中的小型大寫字母功能
你得到的全都是小寫這不是你所預料的
但起碼看起來還行
所以沒問題
這個大寫中的小型大寫字母功能
這個代碼與我之前展示的特性碼是完全一樣的
用於高易讀性替換
你只需要更改功能標識符和選擇符
這裏有另一種啓用小型大寫字母的方法
是從一段小寫文本開始
抱歉
如果你有全部都是大寫的字符串
然後你從小寫啓用小型大寫字母 得到全是大寫
這不是你所預料的
但起碼看起來還行
當你在混有大小寫的字符串上從小寫啓用小型大寫字母
你會得到這個
你會得到混有大寫和小型大寫的字符串 這是可以的
我們的確在地圖中使用 比如在
某些縮放級別上
小型大寫的重點在於精妙
而且這是一種創建精妙層級的方法實例
所以沒問題
如果你的字符串都是小寫的
然後你從小寫啓用小型大寫字母
你得到的都是小型大寫 這沒問題的
這個的代碼是完全一樣的
我只改了那一段代碼
你可以用功能做的一件事是你可以同時啓用多個
所以這取決於你獲取那段文本的位置
如果是你控制 如果用戶可以編輯
比如 你可能想要同時將它們啓用
關於小型大寫字母有一個精妙之處
這就是它們的重點就是精妙
不過還有一點精妙之處
這就是它們不僅適用於大寫字母
在數字和標點符號上也行
你可能會想這是爲什麼
原因是你可能會有像這樣的字符串
你想將它們全都變成小型大寫
所以我們支持小型大寫數字小型大寫標點符號
在所有這些在系統字體中
好了 我們剛剛看了一些字體排版的細節 例如箭頭
高易讀性替換和小型大寫字母
我們今天要講的就是這些
我們剛纔看了San Francisco字體
以及用於編碼的新SF Mono族類更新
希望大家喜歡
我們看了一些術語
我們看了一些字體排版概念設計方面的 沒錯 是設計理念
然後我們看了些工具
最後我們看了一些細節
一些新的小功能你可能會採用到你應用中
欲瞭解更多信息 你可以在這個URL上找到本次演講的視頻
不過你還會找到一本文獻和一些可供參考的
網站 讓你以字體排版者的身份踏上的新路程
這裏還有相關演講
這些還沒有開始整個周都有
第一場演講實際上是介紹一個工具
這在動態類型上面給你極大幫助
不過我就不劇透了
其他兩場演講與打造適應性應用有關
自動佈局的話題
迭代設計會給你一些設計元素
以及相應評估方法
然後 “自動佈局的新特性”的演講是在週五
也會非常精彩
就是這些了 非常感謝大家