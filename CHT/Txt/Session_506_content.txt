tvOS平臺上的AVKit框架
早上好
有多少人在App Store上有應用或在開發播放視頻的應用？
有不少人 不錯
不管是爲運動、新聞、娛樂、還是教育
視頻播放系統中最重要的部分是什麼？
是播放 暫停控制？快移？
也許是音頻 字幕設置？
不 當然不是當然是視頻呈現
所以重要的是
當用戶在用你的應用看視頻時
他們完全關注在視頻表現上
不會爲了搞清用戶界面而分心
所以很重要的是 視頻播放系統
對觀衆來說要是簡單 一致 可預計的
當他們在Apple TV上往返於不同應用時
視頻播放在Apple TV上看似簡單
卻不是什麼簡單的任務
市面上有很多不同的用戶交互工具
包括Siri remote上的按鈕和觸控表面
Siri聲控前幾代的Apple TV remote
iOS Remote應用
藍牙鍵盤 遊戲遙控器
當然還有紅外線通用遙控器
如果你不需要對付這些不同的控制方式不會很棒麼？
我是Dan Wright今天我要講講
怎樣用AVKit框架輕易達到這個目的
AVKit提供先進的回放控制和一致的用戶界面
讓我們快速看一下AVKit提供的一些功能
這是用AVKit播放視頻
可見一條透明的運輸條顯示播放時間
在視頻中的位置以及所剩時間
觸摸遙控器上的觸控表面顯示提示
點擊邊緣會往前或往後跳
或者向下按住觸摸面觀衆可以快進或快退
暫停時 在遙控器上從一邊刷到另一邊
可以迅速快進快退整個視頻
向下劃會顯示信息面板 包括
關於該視頻和導航標記的信息
還可以進入音頻和字幕的設置
最後AVKit自動支持Siri聲控
像“回到開頭” “她說了什麼？”
“向前跳30秒”
暫時開着字幕重播
AVKit使用先進的媒體棧iOS macOS也有該框架
AVKit負責提供用戶體驗
AVFoundation和CoreMedia提供核心播放工具
UIKit或者在macOS上是AppKit
提供界面元素
今天我們要講三點
第一 我們要展示用AVKit如何簡單開始
第二 我們看看幾種方式
用tvOS的特點擴展播放體驗
第三 我們要講怎樣最好地實踐
好了開始吧
讓我們講講AVPlayerViewController
AVPlayerViewController用AVPlayer AVPlayerItem
和AVAsset 由你的應用提供
AVAsset代表音頻視頻媒體
AVPlayerItem代表媒體資源狀態
AVPlayer控制播放
AVPlayerViewController在最頂端 負責UI
讓我們看看怎樣把媒體提供給AVKit
有四個步驟
第一 從URL創建媒體資源
第二 創建一個該資源的播放項
第三 用播放項創建播放器
第四 把播放器視圖控制器和創建的播放器相關聯
現在 你可以簡化所有步驟到一行
只要直接用URL創建播放器
並指定它爲播放器視圖控制器的播放器屬性就行
接下來讓我們看看你怎樣嵌入內聯播放器視圖
首先 構建播放器視圖控制器
然後 設置畫面爲內聯視圖
這兒我們直接設置畫面了但你應當用約束
第三 把播放視圖控制器的視圖加入你的視圖
把播放視圖控制器自己加到
你視圖控制器的子視圖控制器
現在 一旦你做好交互全屏展示的準備
就可以呈現這個視圖控制器它會自動實現動畫效果
從內聯播放器到全屏
好 讓我們談談延伸播放體驗
去年秋天tvOS 9引入AVKit附帶一些增強功能
也就是 可以添加無交互覆蓋
限制播放時的交互
提供元數據
導航標記
識別插播廣告內容
tvOS 10中我們將引入一些新的增強功能
可以修改如何跳着播放
可以展示播放內容建議
現在我們依個說說
覆蓋層用來放圖標和其他覆蓋着的圖形
播放覆蓋視圖在視頻本身的上面
但在控制層的下面
視圖可能是靜止的 或活動的
但是視圖接收不到聚焦或事件
現在繼續討論限制播放控制
播放器視圖控制器的requiresLinearPlayback屬性
限制用戶交互到僅剩播放和暫停
功能如快進 快移 跳播
章節導航等都在設定這個屬性時被禁止
一般來說 你會把它設爲真當你想強製播放
一段視頻比如廣告 或法律注意事項時
外部元數據屬性
補充替代了你媒體資源內置信息
像標題 描述 流派 媒體內容評級
PG-13還是R級這些或者海報封面
現在讓我們回到之前看到的顯示信息面板的截屏
我想讓你們注意這裏頂部的部分
這是tvOS中信息元數據顯示的地方
現在 不僅如此還顯示在iOS Remote應用上
這兒我們看到這個封面
看上去像是從視頻中一幀靜止畫面
看到標題
還能直接從資源信息上看到時長
媒體內容評級和描述
現在看看如何創建外部元數據條目
我們將創建一些輔助函數
來讓它變得簡單
第一個函數 叫做元數據條目需要一個標識符和一個值
將返回AVMetadataItem
那麼元數據條目有很多屬性
你需要設置這三個屬性：值 識別符
和經常被忽略的擴展性語言標籤
現在你們看到的我把它設爲字符串“und”
作爲“未定義的”簡稱所以它有通配符的作用
如果你沒有非常特別的語言版本的話
這就是AVKit會展現的
如果你沒有任何語言翻譯
如果所有內容都是比如說 英語的 或者法語的
那就用“未定義的”這樣用戶
不管他們用什麼語言都可以看到些什麼
封面就有點不一樣了
封面的元數據項的值屬性是圖像
它是原始數據你可以用PNG或者JPEG格式的
你還需要設置數據類型字段
來確定你提供的是什麼類型的數據
還有一樣的 你要設置識別符和擴展性語言標籤
我們要把這些放到一起
創建幾個外部元數據條目
創建一個數組
用輔助函數添加標題
描述 和海報封面到這個數組
抱歉 還有流派
最後把數組指定爲
當前播放項的外部元數據屬性
好了 回到信息面板
向下看看底部
這是導航部分
這裏展示一組導航標識
導航標記常用來標記章節
但也用來方便進入視頻中不同部分
導航標識組標記章節或事件
舉例說 事件會是在一個運動視頻中
你會想標記的比賽精彩部分
一組導航標識被定義爲
AVNavigationMarkersGroup類的一個對象
它包含一個數組的導航標記這裏是章節標記
每個標記有一個標題
大部分情況下還有
一個圖像 往往是視頻縮略圖
但那是可選的
一個事件組本身也有標題
章節組則沒有
好 還有一個小小的輔助函數用來創建導航標記
它需要標題 描述 和時間範圍
定時範圍是你要定位到的視頻片段的時間
然而持續時間是隨意的
如果你不是非要設置 可以隨它設爲0
這裏又一次 我們要爲標題和描述創建元數據條目
最後創建定時的元數據組
用元數據和定時範圍
好 講講插播內容
這裏我們看到有幾個插播內容的視頻
以運輸條上的點來指明
用戶在看一條插播內容
運輸條上方的時間在倒數剩餘時間
下方時間表示已播放時間
插播內容是與正播放視頻無關的內容
所以是像廣告 法律聲明 之類的
插播時間範圍僅表示
在含有插播內容的資源中的一個部分
插播時間範圍會摺疊起來
運輸條上的點像缺口
如前一頁幻燈片上看到的
最後 在快移時 插播內容是隱藏的
所以用戶在從這個視頻定位
用快移時 不會被彈出的廣告幹擾
這裏有一張簡圖
比較上面的視頻文件時間線
和底部用戶看到的運輸條
九分鐘的視頻中有幾個插播內容
都被摺疊成點
注意到運輸條上的插播內容持續時間
長度減少了
或者說這些插播內容的持續長度看上去減少了
現在看看如何創建並聲明插播內容
首先在你的服務器上應該鏈接插播內容
直接到HLS流媒體庫
接下來 在用戶應用上
聲明插播內容時間範圍
實現一些委託代理方法來執行播放規則
這裏一小段代碼
表現如何聲明插播內容時間範圍
每個插播內容 創建一個AVInterstitialTimeRange
然後設置插播內容時間範圍屬性爲
播放項的該屬性
這裏我們之創建了單個插播內容時間範圍
接下來 委託代理方法
講三個重要的方法
第一是willPresentwillPresent被調用
當其中一個插播內容開始播放
一般這時你需要修改requiresLinearPlayback屬性
來限制導航
比如這是一則廣告
也許你有合同上的原因
要求用戶一旦開始必須看完整廣告
你把它設爲真
那麼用戶不能跳過但他們還是可以暫停
去廚房什麼的再回來
但他們不能導航
在插播內容裏就不能跳過
didPresent方法在插播結束時被調用
你常常需要把requiresLinearPlayback設回到假
這樣用戶又能導航了
最後
timeToSeekAfterUserNavigatedFrom從一個時間到某個目標時間點
這個方法被調用 當用戶導航時
或表示他們想要移動到視頻別的部分
比如快進或快退
快移 點擊播放
或者用導航標記跳到視頻的另一部分
oldTime表示播放時間點
在快進之前
targetTime表示接下來開始播放的時間
代理方法返回的時間是你想播放器恢復播放的時間點
所以默認下 如果不實現這個方法
它恢復在targetTime目標時間
AVKit會找到目標時間點開始播放
不然 如果你提供插播開始時間
AVKit會自動重定向到插播開始時間
那麼如果你重定向了插播開始時間
不像這裏的簡單示例
你就會需要記錄目標時間
當插播完畢後 找到目標時間
那麼用戶可以再開始看
他們想看的時間點
現在看看跳過播放
這是跳過的指示符
tvOS 10新的跳過指示符
逐條跳過指示符
取代之前 跳過指示符是
10秒向前向後跳躍播放的
tvOS 10系統中你可以選擇這兩種跳過方式
如果你的應用展示的是電影或電視節目
用戶就可以用來
定位向前或向後10秒
每次 更方便的找到他們想看的場面
如果放的是一系列短視頻比如鍛鍊視頻
用戶更可能使用 可以輕鬆跳到
下一個視頻 下一項鍛鍊或者前一個視頻 前一項鍛鍊的功能
而不是在一個鍛鍊視頻裏前後跳一點
所以爲了適應這些情景你可以改變跳躍播放方式
今天定義了兩種：
默認方式是加減10秒還有逐條跳躍的方式
播放器視圖控制器有三個屬性
與此相關：跳躍方式屬性
和其他屬性來啓用或禁用
跳躍指示符
那麼來看看逐條跳躍播放而不是跳幾秒的
第一件事要做的是
選擇新的跳躍播放方式
這裏就一路設置啓用
向前向後跳躍我有點兒偷懶
然後實現兩個代理方法
跳到下一項的方法中
我們要做的是替代當前項爲新的視頻
然後跳到前一項方法也一樣只不過是向後退一個視頻
好作爲所有這些功能的演示
我要歡迎Jonathan Long上臺
Jonathan
早上好
我是Jonathan Long和Dan一起從事tvOS的AVKit框架
今天 我們要演示一個應用叫做AVKit Player
在Xcode打開這個項目
這是主視圖控制器
是UIViewController的子類
其中有一個變量引用AVPlayerViewController
我們在prepare函數中獲取該引用爲了回調轉場
並且 我們創建AVAsset
AVPlayerItem和AVPlayer 指定爲
播放器視圖控制器的播放器屬性
接下來打包運行這個項目看它怎麼樣
這是我們全屏下的播放器視圖控制器
附帶所有常見的用戶交互功能
如果我向下劃會顯示信息面板
你可以看到這兒並沒有很多有趣的信息
最明顯的是這兒缺了信息標籤
所以第一件事要做的是加入
一些外部元數據和導航標記
這樣信息標籤頁就會出現了
回到Xcode 第一件事要做的是
加入外部元數據
那麼創建一些AVMetadataItems
把它們加入一個數組 然後指定該數組
爲播放項外部元數據的屬性
這裏我直接加入了一些輔助函數
它們可能非常眼熟 因爲與
Dan在幻燈片上演示給你們的相同
第一個函數創建封面的AVMetadataItem
設置數據類型爲JPEG
第二個函數爲其他值類型創建AVMetadataItem
設置擴展性語言標籤爲“未定義的”
現在 這裏還有一個輔助函數拿字典爲參數
映射字典的鍵值對
來創建AVMetadataItems返回一個數組的AVMetadataItems
現在用輔助函數
我們可以設置播放項的外部元數據屬性
爲剛纔得到的AVMetadataItems數組
好 我們創建了AVMetadataItems
把它們加到數組中 並指定該數組
到播放項的外部元數據屬性
現在繼續加入一些導航標記
這兒有一些輔助函數來幫助實現
第一個函數創建一個AVTimedMetadataGroup
用標題 描述 和時間範圍作參數
第二個用名字創建AVNavigationMarkersGroup
和四個時間元數據組
代表視頻內容中不同時間範圍
現在用這些函數
我們可以設置導航標記組屬性
在播放項上
設爲一個AVNavigationMarkerGroups的數組
命名爲“附加組”
好 所以我們創建了AVNavigationMarkersGroup
用一些時間元數據組和名字
把它加入一個數組指定該數組
爲播放項的導航標記組屬性
讓我們打包運行一下看會發生什麼
這還是我們的播放器視圖控制器
下劃看信息標籤
現在我們看到在元數據區域所有的元數據
我們指定了封面和標題
現在如果我在底部選擇
其中一個我們加入的導航標記
就可以跳到視頻內容中的那個點了
所以只需要一點點代碼
非常容易的就能加入外部元數據和導航標記
爲信息面板提供豐富的用戶體驗
現在我要請Dan回來講講tvOS中AVKit框架的新API了
Dan
謝謝你 Jonathan
好 播放內容建議
播放內容建議就是對接下來看什麼的建議
你也許在最喜歡的應用裏看到過接下來的提示
比如Netflix、Hulu、HBO
當你看到每集最後時 比如白宮風雲
你會看到一個提示跳出來說看下一集
然後一直看一直看直到凌晨三點
許多應用在它們tvOS 9版本實現了這個功能
這有點難搞 沒別的
在tvOS 10AVKit提供一種標準方法
來呈現可定製的 接下來 體驗
我們稱之爲播放內容建議
這裏有個例子
謝謝
現在你有一整個屏幕工作
你不受限於任何
這只是一個示例
在右下方 有一些元數據
和一些可以點擊的大按鈕
上面正播放着視頻
這裏是提議視頻的縮略圖
現在 一個播放內容建議出現了
通過AVContentProposal類的一個對象
這基本上是個模範對象
這裏有一些屬性
我不會花很多時間在所有這些屬性上
但我想重點講一些重要的
第一個是contentTimeForTransition
這是在當前播放視頻的時間中
你想讓播放建議呈現給用戶的時間點
所以如果你指定視頻持續時間
或者0作爲捷徑
這就意味着你想讓建議出現在視頻的最後
然而 如果你想呈現一個電視節目或者電影之類的
有很長的片尾攝製人員名單用戶不想坐着看完
也許你會想要在片尾致謝名單開頭呈現播放建議
可以對應這種情況 設置屬性
接下來 automaticAcceptanceInterval屬性
允許你設定建議超時時間
你可以設置比如30秒
這表示 如果用戶什麼都沒做
不採取行爲30秒 那麼建議
就會自動被接受執行
如果不設置這個屬性
那麼建議會留在屏幕上直到用戶採取某種行動
標題和預覽圖像會成爲僅有的一些信息
你可以提供給用戶的你可以 當然 也提供
一些多餘的信息 比如：描述
也許是一個小工具可以設置用戶評分的
也許是一些其他視頻的建議
最後 用來指定建議內容的
是設置下條建議屬性
在當前播放項上
讓我們看看創建一個播放內容建議
好吧 這挺簡單
先創建一個AVContentProposal的實例
我們要指定過渡時間屬性爲0
這意味着我們想要它在視頻最後出現
這是個捷徑 如果不知道視頻時長的話
比如 播放項還沒有載入
我們要設置標題和預覽圖
這個情況下 播放建議第九季第二集
的一部虛構電視劇集叫做"狂歡萬歲"
這個情況下我們要設置一個可選屬性
播放建議的URL屬性
設爲這個劇集的URL
爲我們之後所用
現在把建議指派給播放項
就會顯示這個建議了
當然當前播放項是第九季第一集的
那麼 再一次 我們有三個有趣的代理方法
ShouldPresent被調用
在建議馬上呈現給用戶之前
現在你可以有機會返回假
來禁止呈現建議
但你也可以把它用作最後一次機會
再重新設置 準備呈現
我們馬上會舉個例子
當用戶接受建議就會調用didAccept方法
這意味着他們想要看你提議的視頻
當超時發生時也會調用這個方法
didReject方法會被調用當用戶表示
他們不想看你的提議 不想看視頻
他們想回到菜單
最後 你要實現展示就要
通過創建自定義的AVContentProposalViewController子類
這個子類中有一些有趣的東西
讓我們看看...兩樣
preferredPlayerViewFrame是屏幕上的畫面
你想要建議視頻出現的畫面位置
現在 基類僅返回整個屏幕的畫面
這種情況下視頻會繼續填滿屏幕
而你的建議會覆蓋在那上面
不然你可以指定一個小點的長方形
也許偏移在角落之類的
來空出很多空間
控制屏幕其餘部分
還有dismissContentProposal函數指定如何打發播放內容建議
你可以指定三個中的一個動作：
接受 拒絕 和推遲
推遲是指用戶想要隱藏建議
繼續看片尾致謝名單這樣他們能
我不知道也許想看到自己名字
在名單上若他們爲攝製那視頻工作了
然後正如其名 推遲 會重新出現在視頻結尾
現在讓我們看看如何迴應代理提醒
shouldPresent方法
在這裏 我們要創建一個實例屬於
播放建議視圖控制器的自定義子類
且指定它爲播放建議視圖控制器下的屬性
在播放器視圖控制器函數中並且最後返回真
這讓我們最後設置了一下
當我們知道確實需要它的時候
這麼做也沒有分配一堆用戶用不到的記憶容量
didAccept方法
這裏我們要做的是替代當前播放項
以一個建議內容的播放項
非常直觀我們已經見過這段代碼幾次了
你會注意到這裏我用了URL屬性
當我創建播放建議時設置的
現在 不誇張的說
你不需要實現這些
因爲AVKit若你在創建播放建議時提供了URL
AVKit會自動做完剩下的
如果你不實現這個代理方法
好 現在演示播放內容建議
Jonathan
大家好
好
我們繼續講講AVKitPlayer
加入“接下來”體驗
通過添加AVContentProposalViewController 的子類
所以我們要做的第一件事
是創建AVContentProposalViewController 的自定義子類
我這裏已經有一個了那麼我直接加到項目中
這是UpNextContentViewController
AVContentProposalViewController的子類
這兒有一些UI屬性
比如UIImageViewUILabel以及其他
我們覆蓋了父類中preferredPlayerViewFrame 來返回所需的CGRect
讓播放視圖控制器的視圖
活動起來的 當呈現播放建議時
現在 其他視圖控制器僅處理
視圖和子視圖的佈局
所以我們回到主視圖控制器
還有兩件事需要做
第一 創建AVContentProposal的實例
並指定它爲播放項的下一個播放建議屬性值
所以 這裏創建AVContentProposal的實例
這兒有過渡時間 標題和預覽圖
我們還設置了自動接收超時時間
爲15秒
另外 還設置了URL和播放建議的元數據
和下一個播放內容的信息相吻合
如果用戶選擇接受建議的話
最後 我們把剛剛創建的播放建議設置爲
AVPlayerItem上的下一個播放內容屬性
這樣接下來要做的也是最後要做的
就是實現兩個playerViewController的代理方法
你可以看到這裏我們把播放視圖控制器代理設爲自己
我們要實現的兩個方法爲
shouldPresentProposal和didAccept
所以在shouldPresentProposal中我們創建了一個實例
AVContentProposalViewController的子類的實例
並指定該實例爲
playerViewController下的contentProposalViewController
另外 我們返回真
來表明是否要呈現播放建議
最後 在didAccept中
我們需要處理從當前播放項到下一個的過渡
爲了完成這個
我們從播放建議中獲取URL
從URL創建AVPlayerItem
然後僅僅用我們的播放項替代當前項
就完成了
讓我們打包運行看看怎麼樣
那麼我直接跳到接近結尾的地方
這是我們的播放建議
正如你看到的元數據正如我們規定的
有預覽圖還有標題
如果這裏我選擇播放下一個
就會過渡到下個播放項
所以我認爲 如果你在tvOS 9上實現了這些功能
你會很高興使用這個API
你會發現這個很好用
我要邀請Dan回來上臺
講講AVKit怎樣最好地實踐
好 最好的實踐
我要講一些事：該做的 和該避免的事
第一 我們推薦你做的一些事
再說一次表現方法或者表現播放控制器
可以處理從內聯視圖自動放大的動畫
所以沒有理由實現你自己的動畫
第二 記得播放控制只有在全屏時纔可交互
第三 用新的播放建議API
你們中的一些人之前編寫過更難的方式
我們鼓勵你換到新的方式
我認爲你會發現代碼簡單很多
很容易理解代碼思路
而且你可以避免一些故障或者其他碰到的問題
當你們之前試圖讓它完美運作時
還有注意到playerItem中播放器的error屬性
這就是你怎樣在播放控制中發現錯誤的
我馬上要講一個特別的錯誤
需要處理但你們應該還要注意任何錯誤
發生以及用戶反饋的
好 現在有一些要避免的
避免開關showsPlaybackControls
這個屬性不是用來暫時顯示或隱藏播放控制的
這是用來表示你永久的意願
如果把它設爲假 就是在說
我們一點兒都不需要播放控制
所以如果你來回開關這個屬性就是在告訴AVKit
來毀滅所有控制 重新創造它們
毀滅它們 再造它們
你可以想象這不太有效率
第二 有些人討厭這點
但避免加入補充手勢來操控
因爲這會混淆用戶人們不會發現這些手勢的
同樣的
不要過份超載選擇鍵和觸摸服務手勢
不僅因爲這會混淆用戶也有可能會在未來弄壞它
現在講些一般的建議
替換資源如果你看到這個錯誤：
AVErrorMediaServicesWereReset
如果你沒有作出迴應
媒體服務會在播放時重置
視頻播放會失敗
用戶也做不了任何事除了希望是 退出
所以他們必須做的是退出回到菜單再點進視頻
如果你捕獲這個錯誤自動替換資源
播放項和播放器基本上是你AVFoundation的所有對象
然後你就能更天衣無縫的處理這個情況
用戶根本不會發現發生了什麼
現在 其他一些演講講的播放控制最好的實踐
包括今年的AVFoundation播放系統的發展
那個演講在這周早些時候你們可在 WWDC 應用裏看到視頻
兩年前曾有一個傑出的演講
精通現代媒體播放
演講包括了AVKit和AVFoundation的竅門
讓它們很好地合作
所以總的來說AVKit提供優秀的播放控制
來支持遙控器 遊戲控制器和Siri
能完全控制媒體棧強大的API
而且非常容易上手
確保查看示例代碼看一些更深入的例子
我們期待看到你們的應用
要看更多信息 可以去屏幕上的URL
我們會有指向示例代碼和其他資源的鏈接
還有看看其他相關的演講
我們還有HTTP流媒體傳輸的會話
在這周早些時候
還有兩個演講關於使用TVMLKit
這也是一種直接使用AVKit的替代方法
那麼 謝謝各位