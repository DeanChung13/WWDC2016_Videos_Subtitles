最大限度利用Search APIS
新特性和更新擴展搜索能力演講223
歡迎各位 我是Vipul Ved Prakash
我在Apple從事Siri和Search的開發
今天 我將和同事John Hornkvist
展示Search APIs的新特性
以及該如何最大限度地利用
衆所周知 Spotlight逐漸成爲了一個更強大的搜索工具
在最近發行的一些iOS版本里
在iOS 8裏我們加入了查詢網絡資源的功能
例如App StoreMaps和Wikipedia
之後 在iOS 9裏我們大幅擴大了範圍
加入了資源 像音樂 貨幣換算實時體育賽事得分
網頁 還有很多很多
或許 最主要的是我們加入了簡單且強大的方式
能讓我們使你們應用的內容在Spotlight被搜索
在iOS 10裏 今天我們要宣佈這些Search APIs的擴展
這將能讓你們對應用的內容進行更深層次的搜索
我們也簡化了Spotlight使用也讓它更容易被找到
那讓我們從看一些例子開始
關於我們對Spotlight的改動
Spotlight現可在Notification Center裏找到
這使它可以被更快捷地打開
讓我們在這裏看個例子
用戶收到了一條包含問題的信息
這是經常有的事
那他們想要查詢並回復
不用退出messages 來到主屏幕 下拉出Spotlight
他們只需下拉出Spotlight蓋過messages
進行查詢 然後找到答案
十分好用
我們也在鎖定屏幕添加了Spotlight
也添加了對快速預覽結果的支持
通過使用3D Touch
讓我們來看一下操作
假設你們在和朋友爭論
Steph Curry在哪出生
你們可以來到鎖定屏幕
進行搜索
找到結果 你們現在可用3D Touch預覽這些結果
找到你們想要的那個在這裏是Wikipedia
真的很好用
當然 當你們在鎖屏狀態時
我們只顯示從網上獲取的公開信息
另外一個我們添加的很酷的功能是Spotlight查詢建議
它在輸入問題關鍵詞的上方“快速輸入”那裏
讓我們看個例子
這裏用戶查詢班桌琴通過以往的查詢 我們知道
兩個常見完整輸入是班卓琴絃和班卓琴調音器
所以 如果他們所要的結果不在屏幕上
他們能從中選一個 找到答案
這可讓許多查詢更快被Spotlight處理
我們做了許多的改進
我們改進了自動拼寫更正
爲應用開啓用例
我們改進了對中文和日文腳本的支持
在設備上
總體來說 我們也提高了相關度
所有的這些改動
當然也適用被插入的內容當使用Search APIs
現在 讓我們將注意轉移到Search APIs
也許你們記得我們在iOS 9裏加入了三個Search APIs
有CoreSpotlight它能讓你們添加用戶指定的
或用戶創建的Spotlight設備索引
我們還加入了NSUserActivity一個可搜索版本
它能提供一個簡便的途徑索引一切用戶
在你們應用裏看過的內容這樣他們就能被快速搜索和找回
最後 我們加入了通用鏈接索引
這是一個服務器端的索引有鏈接組成
這些鏈接是我們通過爬應用網站找到的
我們的設計讓APIs和諧工作
所以 無論結果來自設備或服務器
它們看起來都一樣讓你們應用的搜索成爲無縫體驗
我興奮地宣佈...
App Store有超過50,000應用使用Search APIs
這是十分驚人的
我想那會是多麼酷看見Search APIs用戶
改善了日常的互動
在我們的客戶和你們應用還有iOS之間
我想向你們介紹一些我最喜歡的案例
這是一個近期的例子
我在計劃一個這週末去夏威夷的毛伊島旅行
我在過去的一個月裏間歇地計劃着這個旅行
有許多信息像酒店預訂和票務
那些都可以通過我的設備找到我通常
使用應用或網站或翻閱郵件來尋找它們
但有了Search APIs
我的經歷是這樣的
那個我用來做這些預定的應用
用CoreSpotlight將主要信息添到Spotlight的索引
以至於 我能看見我的機票
我能看見通過HotelTonight預定的酒店
和一些通過Open Table預定的晚餐
我可以通過觸點這些結果找到更多的信息
像我簽到的時間...
或是這些餐館的地址
你會留意到
我有些從Pinterest上搜來的結果
我有使用Pinterest應用
來探尋在毛伊島能做些什麼
Pinterest使用NSUserActivity
來爲我所在應用裏瀏覽過的東西建立索引
我能觸點其中一條結果然後 繼續我的探索
這是一個極好的行程搜索經歷
通過我的設備找到所有我知道能找到的信息
以我們的經驗 一般來說
爲用戶想返回去看的內容建立索引會是一個明智的選擇
另一個 我想分享的例子是關於聯繫方式
聯繫方式是最普遍的Spotlight查詢用例之一
這裏 我想搜索好兄弟Allen
我看見了他的聯繫方式是一個iPhone的方式
我也看到了他的Skype資料和一些對話
在我們之間通過YahooMail和WhatsApp
我能方便地返回到這些對話裏
這是很有用的 因爲這能提供給我
對我的聯繫人有一個全方位的視角
也能讓我通過他們選擇的途徑交流
現在我們看過了用戶能自然地應用Spotlight於
Spotlight能本地支持的所有事情
如果你們有上述類型的內容
利用它會是一個很棒的擴大搜索範圍的方式
也能讓你們的用戶對應用更感興趣
那現在讓我們來看一個通用鏈接索引的例子
wikiHow是一個高質量關於怎麼做的資源
它有成千上萬的關於各種主題的文章
在這我查詢一個重要的急救問題怎樣做心肺復甦
Spotlight顯示了一堆結果有網頁 YouTube
還有wikiHow上的部分
wikiHow使用通用鏈接並且他們是一款熱門應用
所以我們在服務器上對他們的文章建立了索引
我們利用這些索引對應適當的詢問
這些結果還是十分完整的點擊其中的一條
我來到了這篇描述清晰的文章
對wikiHow建立索引賦予了Spotlight一個全新的功能
這凸顯出了Search APIs的強大之處
看過上面的例子 讓我們來看下
Search APIs在iOS 10上有哪些新特性
我們加入的第一個功能是Continue Search in App
有許多的查詢
用戶想見到更多的結果或你們也許無法添加
正確的結果至Spotlight由於各種原因
那現在應用有了一個選擇
在App Punch Out裏查詢
如你們所見 在右上方的角落
觸點這裏會將用戶與問題一起帶入你們的應用
這樣就可以在應用裏繼續搜索很酷
我們加入的第二個特性是CoreSpotlight Search API
這個名字有點冗長 但是
事實上就是你們能將所有的東西添加至
Spotlight的搜索索引通過CoreSpotlight API
是不是很棒如果可以通過這個索引
支持應用內的搜索？我認爲一定是
然而這是CoreSpotlightSearch API能讓你做到的
我們加入的第三個功能是
估計深層鏈接受歡迎度的一個方式
通過使用差分隱私一個在keynote裏提過的技術
我們會對此做更多的討論在下面關於排序的討論裏
最後 在衆多的要求下
我們在web markup預覽工具里加入了一個新特性
它能讓你們看到和檢驗架構的結果
在你們將其加入到通用鏈接索引之前
除此之外 我們還做了許多改進
對Search APIs基於你們反饋
我將邀請John介紹這些APIs
並更深層地講述這些新功能
讓我們來探討一下如何利用Search APIs
在下面的半小時裏
我將講解一些你們要爲應用做的事
爲它能與Spotlight一起工作
一些爲了讓你們的用戶有個很棒的體驗而應該要做的
和一些我們加入的新APIs
爲了讓你們能更便捷地達到你們想要的結果
那大概以你們實現這個的順序
我來講一下關於如何把你們的內容加入到
Spotlight的索引並保持最新
展示方式和用戶體驗
在你們的應用裏運行無論是恢復內容
或是繼續搜索
之後 我將會聊一下新的Search API
在Vipul回到臺上給你們一個關於排序的簡介之前
我們使用了三種技術它們能支持大部分的用例
你們設備上的核心支持CoreSpotlight
用於應用歷史記錄的NSUserActivity
及web markup公開在線內容的通用鏈接
當然 你們可以將這三者一起使用
舉個例子 設想一個食譜的應用
它提供一個能訪問大量食譜的接口
由於網站上有許多宿主深層鏈接會是一個好的選擇
這個應用也許會有收藏功能通過CoreSpotlight實現
你們的用戶會想返回至之前看過的內容
那爲了最好的體驗你們也可以使用應用歷史
通過NSUserActivity
好的 在座沒離開去午餐的各位
我們跳過Search APIs簡介
直接來聊下怎樣對內容建立索引
從CoreSpotlight開始
CoreSpotlight是在iOS上用於建立索引的API
在設備上並支持文件保護
這樣你們可以對用戶的私人內容建立索引
你們的應用擁有掌控權你們決定對什麼添加索引
你們可以對應用的所有內容建立索引可以是收藏
和書籤 信息和郵件
文檔 圖片 音樂視頻 遊戲關卡
你們應用的進入點 等等
有兩個基本的操作
第一 你們要將那些東西添加至索引
通過創建一個CSSearchableItemAttributeSet來實現
它包含了元數據和其它的相關內容
然後
你們要設置至少一個屬性
這裏 我們設定了display name
你們可使用AttributeSet創建可搜索內容
可使用uniqueIdentifierSpotlight將會用它
在下面的操作裏來識別項目內容
當我們開啓你們應用的時候它也會被用到
那domainIdentifier
它讓你們能設定共享的屬性
在各種的項目之間之後的刪除裏可以用得到
你們指示CoreSpotlight添加項目至索引
當回調方法被調用時
項目會被安全地提交至儲存
或 一個錯誤信息會被傳遞至回調日誌
對刪除項目 我們有三個APIs
你們可以通過識別符來刪除一個特定的項目
舉例 如要刪除一個文檔
也能刪除一組項目
通過使用之前提過的domainIdentifier
這會很有用如果用戶從一個賬戶註銷
終止訂閱或是類似的
最後 你們可以從應用裏刪除所有的項目
這會很有用如果你們遇到像版本不匹配
然後你們要清楚索引 重新建立
這也會在應用被卸載時被系統調用
那現在讓我們來看一些最佳的實踐和一些進階的使用
我們將會講一下如何註冊索引代理使用CoreSpotlight
客戶狀態操控漸進的索引建立
一些性能問題
和如何創建CoreSpotlight擴展
你們需要註冊一個索引代理
因爲這讓Spotlight初始索引
當你們的應用第一次在系統上運行時
或在恢復備份之後
當用戶安裝你們的應用時,或在災難恢復時
這也能讓Spotlight發出
請求讓你們重新對某項目建立索引
這通常是由於你們設定了一個過期日期
Spotlight想檢測項目是否已真的過期
那作爲索引代理需要實現
CSSearchableIndexDelegate協議
它有兩個必要的方法
ReindexAllSearchableItems
當要添加任何東西至索引時它就會被調用
如果你們在自己的數據庫裏跟蹤個別項目的索引
當接收到這個方法時你們要清除索引的狀態
除非你們用客戶狀態我們等下細說
第二個被調用的方法是使用識別符重新建立索引
當它被調用時 你們查看Spotlight正請求的項目
然後 將它們添加至索引或刪除視情況而定
對於這兩個方法 你們要調用acknowledgmentHandler
僅當你們完成了或收到了最後的回調對任何任務
你們派給CoreSpotlight
這樣就能確保項目的索引被完整建立
並在下面的流程不再被調用
若你們不調用acknowledgmentHandler那兩個方法或許會被再次調用 若過早地調用
你們也許還未來得及完成對索引的建立
對某些應用來說我們發現會更便捷
通過使用客戶狀態相比較於嘗試着管理
索引建立的回調與數據庫的事務
客戶狀態提供了一個異步的方式
讓你的項目能與Spotlight裏的同步
因爲是異步 你們其實是在應用一個一致性模型
但你們保持對Spotlight與你們數據庫之間的同步
沒有任何多餘步驟
客戶狀態是個opaque token它被儲存在Spotlight索引裏
在索引建立的同時被更新
然後當應用被再次開啓時被取回
一般來說 最簡單的實現方式是
在你們的數據庫裏添加註釋
舉例 次序號
你們在Spotlight裏將它作爲客戶狀態使用
再次開啓後你們要檢測客戶狀態
如果它與你們所期望的不符
那你們要爲數據庫裏所有的項目建立索引
使用比你們回傳至Spotlight的更高次序號
另一個方式是 通過次序號取得
journal playback的起始位置
這會是很有用的
讓你們的內容異步保持最新
也能確保不消耗過多的能源
爲能使用客戶狀態你們要創建一個命名的索引實例
這名字讓我們知道你們想要的客戶狀態
只能獲取應用的客戶狀態
但你們可以對多個數據庫建立索引
這樣的話 你們要給每個數據庫一個特有的名字
有了索引後你們要初始一個索引批處理
你們像往常一樣添加可查詢項目
completionHandler在這裏並不重要
因爲當批處理完成時你們會得到一個完成信號
你們要通過運算得到所選狀態
再將它遞入Spotlight
當你們完成了批處理後
這裏你們需要留意completionHandler
你們應用下次開啓時你們獲取客戶狀態
你們要決定需要執行哪些操作
讓Spotlight才能和你們當前狀態同步
由於客戶狀態是與批處理一起儲存於索引
因此確保了完整性
你們可以重演每一個需要的操作
使兩者同步
當你們的應用下次被開啓時
你們會使用同一個名字創建一個索引實例
你們會取得客戶狀態這就是一個異步的調用
你們要在回調裏處理所有的錯誤
還要檢查你們取回的狀態是否是你們想要的
如果不是 你們調用這方法 使其同步
現在讓我們來看下性能問題
Spotlight處理速度很快
所以要在你們那端將開銷最小化
來確保應用能跟得上
你們要優化任何對文件或數據庫的訪問
並留意內存使用情況
注意對CoreSpotlight每次調用都有一定成本
所以 可能時 儘量成批傳遞避免單個傳遞
只是十個一小批
也會減少一個數量級的IPC開銷
由於你們的應用會在用戶使用的同時建立索引
確保你們不會阻塞主線程
最後 避免幹擾在使用後臺線程的UI
好 讓我們看下CoreSpotlight擴展
擴展能在你們的應用不運行的情況下建立索引
這能讓你們趕上進度
在使用備份進行災難恢復之後
或你們的圖標過期時
Spotlight能使用你們的擴展
不用使用你們的應用
這很好 因爲那時你們的應用可能沒在運行
擴展的接口與索引代理相同
若你們能構建你們的代碼讓索引代理成爲獨立的部分
那實現擴展也是十分容易的
讓項目能被你們的擴展訪問
你們可使用share.groups
要獲得更多相關信息
看一下去年“應用擴展最佳實踐”的演講
下面讓我們來看下如何保持項目爲最新
如我之前所提到的你們能用過期日期
來預防舊內容堆積在索引裏
CoreSpotlight會在將近過期日期時調出你們的應用
你們可以更新過期日期或更新項目的數據
如果有需要
若你們要將新內容加至Spotlight
你們可以使用後臺獲取
這能讓你們的應用在後臺打開
讓你們添加內容並建立索引
最後
若你們採用非常規或非高頻率的更新推送模型
你們可以使用靜默推送
讓你們的服務器來告訴你們必要的更新
想了解跟多關於後臺獲取
和靜默推送
可以看下“多任務的新特性”演講
2013年的 WWDC
這就是CoreSpotlight索引的所有內容
下面我們聊下應用歷史與NSUserActivity
NSUserActivity在iOS 8裏爲Handoff添加
他讓你們能創建應用當前狀態的一個代表
可以被遞入另一個設備
iOS 9後存於Spotlight索引裏支持應用歷史
當用戶瀏覽你們的應用時你們提交活動
爲了用戶可能會記得並想返回去的內容
那你們應該問自己什麼時候用戶活動
應該有索引 簡單的說就是用戶是否會返回到這
若相同項目通過CoreSpotlight有索引
那答案基本上時肯定的
2014年的“採用切換”演講有許多相關的信息
關於如何使用NSUserActivity
爲了讓搜索能使用NSUserActivity
你要標記它爲可查詢併爲元數據添加索引
通過使用CSSearchableItemAttributeSet
你們標記它爲可查詢
通過設定eligibleForSearch屬性爲真
你們也可標記NSUserActivity讓它能建立公開索引
讓它成爲網上索引的候選
Vipul會等一下來細談
完成後 它將作爲搜索結果顯示在Spotlight Search裏
你們的應用可以返回到用戶的活動
當用戶在Spotlight裏選擇它
你們的用戶只需記得一個關鍵詞
從他們之前所見的這就能將他們帶回到
你們應用裏的內容
好的 就如我所說的 你們可使用CoreSpotlight和NSUserActivity
對一樣的內容
區別在於NSUserActivity顯示
用戶在你們的應用裏做了些什麼
CoreSpotlight是指你的應用有些什麼
所以若你們同時使用兩者可關聯NSUserActivity
與CSSearchableItem對相同的內容
爲排序提供幫助並防止重複的結果
這能通過設定relatedUniqueIdentifier屬性來達成
它在AttributeSet裏將它設定成uniqueIdentifier
對應你想關聯的CSSearchableItem
這會把NSUserActivity的生存週期
與CSSearchableItem聯繫在一起
爲保護你們防止數據被遺留在設備上
在用戶刪除了私人的內容之後
不過 不是所有數據都是私人的都由用戶所管理
舉例 我們之前提到的食譜應用裏
你們或許想關聯NSUserActivity
與一個可能CSSearchableItem一個當前不存在的項目
用戶可能在將來把其作爲收藏
如果你們用了relatedUniqueIdentifier
CoreSpotlight會在你們添加NSUserActivity時立即將其刪除
因爲 它所關聯的項目當前不存在
爲了解決這個問題我們加入了一個新的屬性
weakRelatedUniqueIdentifier它讓你們能弱綁定CSSearchableItem
它能在CSSearchableItem之前存在
並會一直存在直至CSSearchableItem被刪除
至於relatedUniqueIdentifier
你們只要在AttributeSet設定這個屬性
給NSUserActivity
缺點是當CSSearchableItem被刪除後
NSUserActivity會繼續存在
所以 如果你們擔心可查詢項目的生存期
或NSUserActivity
那你們要自己刪除NSUserActivity
有幸的是 在iOS 10裏
我們讓這成爲了可能
我們添加了domainIdentifiers至NSUserActivities
這是CSSearchableItemAttributeSet的一部分
它能讓你們通過domainIdentifier刪除NSUserActivities
就像對CSSearchableItem一樣
如果你們同時使用CSSearchableItems和NSUserActivities
使用相同的domainIdentifier會是一個明智的選擇
這就是如何在iOS 10裏通過NSUserActivity建立索引
下面 讓我們來聊下通用鏈接與web markup
驅動你們應用的內容也許是在網上的而不是在本地應用的內部
如這些是公開內容你們可使用web markup
讓它們通過通用鏈接索引在Spotlight裏成爲可查詢的
這很適合網站上的內容
和應用內部的
也是一個好的解決方法當項目內容太大 無法儲存在設備上時
由於 你們的內容在網上
沒有應用的用戶也可以看到結果
這能讓你們招攬更多的用戶增進應用的安裝
結果可同時在Spotlight和Safari裏顯示
讓你們的內容可以讓更多的用戶看到
那要實現通用鏈接索引
你們要允許索引
要讓Applebot能調用你們網站的文本
還要讓Apple Note能進入網站
在提交應用至App Store時指定調用的URL
對於深層鏈接 強烈建議用通用鏈接
這裏你們需要實現雙重身份驗證
在網站端和在應用端
在你們的應用代理裏實現continueUserActivity方法
爲確保當用戶選擇了結果時你們的應用會處理深層鏈接
使用schema.org和Open Graph標記你們的內容
這能讓你們的內容被豐富多樣地展現
利用Search API驗證工具
來檢查深層鏈接、標記標題、描述 等等
去看下2015年的“引入Search APIs”演講
和關於通用鏈接的開發者文檔
這些就是我們當前支持的構架
我們打算在將來加入更多
留意交互計算和總體評級
這些對應用的搜索結果排序會是十分有用的
Apple提供了一個測試工具
在search.developer.apple.com
如果你們的應用使用深層鏈接應該去看一下
它現在可以將你們的結果可視化地顯示
包括對schema.org標記的支持
從驗證工具裏所得的內容
能幫助你們可視化那些通過Applebot爬網程序
建立過索引的內容包括標題、描述、標記和URL
現在你們看過如何通過這三個APIs對內容建立索引
很有可能你們會想將它們一起使用
即使是對相同的內容
那當使用多個APIs時 要牢記的是
在所有APIs裏關聯代表同一內容的項目
通過設定與NSUserActivity相關的uniqueIdentifier
爲CoreSpotlight的uniqueIdentifier
CoreSpotlight內容的URL和NSUserActivity的網頁URL
爲網頁URL
你們告訴Spotlight所有索引裏的紀錄代表同一個項目
這能讓你們的查詢不會重複
這也幫助了項目的排序
好的  現在我們看了如何將內容添加至索引的三個方法
CoreSpotlight對應內容
NSUserActivity對應用歷史
通用鏈接與web markup
對應網上公開的內容
下面讓我們聊下怎樣向用戶展示這些信息
要在Spotlight裏有好的展現你需要一組好的縮略圖
默認下Spotlight會使用你們應用圖標
這會讓結果乍一看很難區分
這不礙事 如果你們只有一個結果
但如果有多個結果那感覺會是十分不同的
與縮略圖一樣重要或許更重要的是標題
一個好的標題不只是看起來舒服
它也是經常被用戶用來搜索的
在縮略圖和標題之後
你們要設置其它的適合你們內容的字段
提供描述信息會是一個好主意像評分 評價
日期相關項目的日期屬性
比如 旅程預定 日期 提醒 事件還有很多
對於文檔 一般的元數據
比如 文檔大小和頁數都是很有幫助的
如果你們設定了適合內容的類型
Spotlight可以更好的工作
讓我們來看些例子
Hotel Tonight應用很好地利用了縮略圖
顯示了容易識別的地標
同時還有標題和有用的描述
你們可以使用web markup取得相同的效果
通過設定og:image og:title和og:description
Open Table使用標題描述 評級
與評價相關的屬性用戶能得到很有用的信息
讓他們在進入應用前有適合的選擇
通過讓屬性能在web markup裏獲取
你們確保了用戶會得到一個一致的體驗
無論他們的結果是從爬網程序
或本地設備的索引得到的
一個好的用戶體驗不僅是關於外在的展現
也與可搜索的數據有關
設定讓用戶能看懂和記住的屬性
讓你們的內容能很快地被找到
相反 在元數據裏設定了誤導性的屬性
或太多的內容和關鍵詞
字典裏的詞會導致你們的結果頻繁的呈現
但極少會被選中這會讓你的用戶不爽
這對排序會有強烈的負面影響
另一個好的用戶體驗的方面
是能獲取結果重要的部分
利用最少的步驟
允許快速方式
像路線和通話是能讓你們的用戶受益的
最後
當用戶選擇了一個項目
你們要儘可能快地開啓
不能有間隙感或多步加載阻礙用戶
讓我們來看些例子
Redfin應用提供了一些吸引人的結果
通過設定經緯度和允許導航
應用讓用戶能直接到Maps查看地產
相似的 這還有個很好的callaction result的用例
你們可以通過設定電話號碼屬性取得相同的結果
同樣也支持Spotlight的phone call屬性
看着這些結果
已經對地點熟悉了的用戶
可以立刻打電話預約
你們可以通過web markup取得相同的結果
通過利用郵寄地址和電話號碼
下面讓我們來聊下開啓你們的應用
對於CoreSpotlight和應用歷史
我們使用NSUserActivity來恢復狀態
你們的應用代理會與continueUserActivity一起被調用
你們檢測NSUserActivity的活動類型
和用戶信息字典 如果必要
如果你們的應用是由於用戶在Spotlight裏選擇了CSSearchableItem而啓動
那活動類型會是CSSearchableItemActionType
然後你們從用戶信息字典裏取得識別符
通過使用CSSearchableItemActivityIdentifier
2014年“引入切換”的演講
更深層講解了如何開啓NSUserActivity審閱和活動類型
對通用鏈接同樣我們使用NSUserActivity
那樣你們的應用代理可和continueUserActivity一起被調用
同樣 你們檢測NSUserActivity的活動類型
它會是NSUserActivityTypeBrowsingWeb
你們解析URL然後 將用戶帶到URL所指的地方
這就是開啓
現在讓我們來看個新特性
在iOS 10裏我們添加了一個功能
能讓用戶直接在你們的應用裏繼續搜索
讓Spotlight顯示人性化結果
是一種直觀的體現 你們應選擇使用Spotlight Search continuation
那樣用戶就可以直接打開你們的應用
如果你們已經支持了搜索那對它的採用就更簡單了
它能讓你們使用定製的搜索接口
它已經廣泛被我們內部的應用採用了
這是另一個增加互動性的方式
與你們的應用
用戶直接被從Spotlight
帶入了你們已有的搜索體驗
現在——
謝謝
爲這能在你們的應用裏被支持
你們要在info.plist裏添加一個關鍵值
聲明你們支持這個功能
你們應用的代理將被調用有一個新活動類型
CSQueryContinuationActionType
然後新的查詢字符串被遞入用戶信息
與CSSearchQueryString關鍵值一起
至此 你們可以執行你們自己的搜索UI
利用相同的查詢字符串讓用戶在你們應用裏繼續搜索
爲避免困惑通常是一個好主意
確保你們的搜索結果與Spotlight的大概一致
由於Spotlight是基於前綴搜索
我們建議你們使用相似的規則
如果你們無法支持前綴搜索
考慮將用戶帶至一個完成接口
另一個確保與Spotlight一致的方式
是利用CoreSpotlight的Search API
我們有許多內部應用使用這個方式
CoreSpotlight Search API讓你們能便捷地實現對你們數據的搜索
它利用你們已經提供給
CoreSpotlight的數據支持Spotlight Search
全美一致
它已經被我們許多內部的應用使用
包括MailMessages和Notes
它避免了開銷你們不用管理一個額外的索引
因爲它與Spotlight使用同一個索引
這個索引提供了全套的對元數據和內容的搜索
如果你們所有的內容都在設備上
CoreSpotlight是對於搜索的完全解決方案
如果你們有設備上和網上內容的混合
你們可以合併查詢和合並單元
通過設備上CoreSpotlight獲響應
通過網上的索引獲得完整性
Mail不僅將CoreSpotlight用於搜索
還用它創建搜索建議建立複雜的查詢
這是個很好利用CoreSpotlight Search的方式
同時還能保持簡潔的UI
CoreSpotlight Search API創建了你們提供給Spotlight的數據
但你們的數據是受保護的不會被其它的應用訪問
查詢引擎很快並可以被擴展
所以你們能在應用裏得到很好響應
查詢語法允許複雜完整的提問
也支持範圍查詢數字和時間日期
還有一組強大的短消息的功能
對於你們熟悉Mac OS上元數據框架的人
會對這個語法感到很熟悉
簡單介紹一些常見的搜索操作
如所見 CoreSpotlight支持全套搜索比較運算符
也支持布爾運算符ANDOR和NOT
此外 CoreSpotlight能讓你定製
適合你們需要的字符串匹配
如果你們要補區分大小寫你們可以添加標誌c
如果你們想忽略註音符號像註音符
如果它們在當前的語言裏不重要你們可以用標誌d
如果你們想匹配一個字段裏的單詞
你們不用在字段的開始定位標記查詢
你們只需使用標誌w
這些也適用於信息內容
如果你們想要讓多個詞被分開一一處理
那你們可以遞入標誌t那樣查詢字符串就會被標記
讓我們來看個例子
我們來實現一個搜索函數它接收一個用戶查詢作爲輸入
我們確保取消所有正在運行的查詢
那樣我們就不會有多個查詢在同時運行
這會降低查詢速度
因爲我們在處理用戶輸入我們確保將查詢字符串轉義
我們使用雙星語法來創建一個查詢它會匹配
內容或元數據
轉義的輸入作爲搜索字符串
我們有cdw和t運算符
這表示創建一個不區分大小寫 能本土識別的
不區分註音符的匹配單詞 標記字段的搜索
有了查詢字符串我們來創建一個查詢對象
我們請求一個display name
這將會在
返回的可查詢項目的AttributeSet裏
我們設定foundItemsHandler
它會接收到多批的可查詢項目
如果你們的查詢無結果
一個completionHandler會被調用一次
當有錯誤時或查詢成功
在我們的completionHandler裏
我們可以選擇讓它顯示完成處理或其它的
然後就是開始查詢
CoreSpotlight有了結果然後調用解決
然後調用completionHandler
讓我們來實踐一下我們創建了一個應用
有一個簡單的圖片收集功能
它已支持用CoreSpotlight建立索引
也已支持搜索
那我們要做的第一件事是添加支持
Continue Search in App這很簡單
我們來到應用的info.plist我們準許CoreSpotlightContinuation
完成後我們來到應用的代理...
在我們的用戶活動continuationHandler裏
我們添加支持...
Continue Search in App
如你們所見 活動類型
是一個CSQueryContinuationActionType
我們取得搜索的查詢...
通過查看CSSearchQueryString對應的用戶信息
我們使用搜索詢問激活視圖控制器
我們來看下實踐
好的這裏有我們的圖片收集
我們下拉出Spotlight
搜索單詞“雪”
湊巧在這個相冊裏很普遍
我們獲取兩個結果和一個在應用裏繼續搜索
點擊在應用裏搜索我被帶入了我的應用
現在你們或許會觀察到我在Spotlight裏有兩個結果
而在我的應用裏只有一個
這是因爲我沒使用CoreSpotlight Search
這個搜索只是一個簡單的前綴搜索
那讓我們來修復它
在我們的視圖控制器裏
我們有一個搜索方法
我將刪除這個簡單對搜索的實現
我們現有的
然後開始實現CoreSpotlight
首先 我們想要添加一個變量
一個能儲存現有搜索查詢的查詢對象
我們要取消正在運行的查詢
將查詢字符串轉義
然後創建——
一個查詢對象 當然是創建一個查詢字符串  失誤
好的  那現在我們有了一個查詢字符串 一個查詢對象
然後我們要設定foundItemsHandler
foundItemsHandler創建displayables
然後添加它們至我們的結果列表
現在 由於查詢取回了CSSearchableItems
我要實現一個能接收CSSearchableItems的一個配適器
創建一些能被顯示的東西
讓我們來看下
我稱之爲懶圖的對象
它能獲取數據
那些通過我們的查詢得到的並適當的時候能使用它們
當不充足時它回到數據庫
獲取對應識別符的圖片對象
儲存起來爲將來使用然後返回它
那讓它能連同返回所有其它的屬性
那些無法從數據庫裏獲得的
通過使用懶圖對象我們確保可以顯示我們的結果
省去要回到數據庫的步驟
這樣對性能有利
讓我們來實現completionHandler
completionHandler裏 我們對結果進行排序
進入主隊列
使結果變爲可顯示的然後調用我們的表視圖更新
之後 剩下的就是調用start
讓我們來看下
好的
現在因爲這是在使用CoreSpotlight Search
而且我的查詢的條件很寬鬆
我應該能輸入任何在這裏看見的詞比如 河
我找到了所有在元數據或在內容裏包含河的
好 通過CoreSpotlight實現搜索 就這麼簡單
下面 我想請Vipul回到臺上來聊一下排序
謝謝John 剛纔是一個對Search APIs很精彩的簡介
在你們思考如何在應用裏實現這些APIs時
瞭解Spotlight如何對結果排序的會很有幫助
還有你們怎樣正面影響排序
那讓我麼來看下Spotlight裏的排序
Spotlight的主要目的守則
是依次顯示你們查詢的最佳結果
這個順序由一組因素決定
兩個主要因素engagement ratio和content popularity
然我先來聊下engagement ratio
Engagement ratio其實是對頻率的衡量結果通過你們的應用
被用戶選擇的次數 當它們被展現時
Spotlight裏有三類engagement ratios
一個在設備上 兩個在服務器上
在設備上engagement ratio測量
用戶個人與你們應用的互動
服務器對每個查詢都有一個engagement ratio
這是基於每一個查詢
對曾經顯示過的結果
通過使用Spotlight可讓結果提升或降低排序 對應某個查詢
最後 還有一個globalengagement ratio
它是基於所有用戶的所有互動
曾經與你們應用發生過的
沒可用查詢級別engagementratio時 它會被調用
一些要緊的事
第一 你們不會得到處罰如果某個查詢結果
沒有顯示給用戶
它們可以說是在分割線以下鍵盤的下面
這裏最佳的實踐其實是使用關鍵詞 標題和描述
那些能清楚地形容你們建立索引的內容
也能將用戶帶至相同的內容
第二個重要的事是
content popularity一般來說 更受歡迎的內容
趨向於被排得更高
Spotlight能通過三個方式來瞭解受歡迎度
如果你們使用通用鏈接
它們會自動地去查看網站結構
然後得到你們網站的聲譽
這裏 你們不用做任何事
你們只要實現通用鏈接
如果一個項目有關聯的NSUserActivity
Spotlight能跟蹤用戶在設備上查閱此項目的頻率
然後在排序裏使用
若你們同時使用通用鏈接和公開的NSUserActivities
那些被允許公進行開索引的iOS 10現在能估計
整個iOS用戶羣
在你們的應用裏查看一個鏈接的頻率這會被用於排序
這是爲了新的差分隱私條款所建立的
讓我向你們展示下
這個例子裏 Yelp採用了NSUserActivities
被允許進行公開索引和使用通用鏈接
當用戶在Yelp裏遇到一個深層鏈接
iOS計算機哈希添加一些幹擾
之後獲取一個碎片傳送至Apple的服務器
單獨的碎片是沒用處的它不包含任何的信息
可一旦成千的用戶報告了很多的碎片
Apple的服務器能找回被看了成千次的哈希
不用知道哪些用戶報告了哪些碎片
這提供了一個方式用於決定如用戶的總體行爲
不用對任何用戶的獨立行爲作任何的的分析
當受歡迎的深層鏈接被這樣的方式發現後
它們在Spotlight裏的排名會上升 這很酷
那讓我們很快地看一下排序的最佳實踐
John展示了許多最佳實踐
對通過CoreSpotlight給你們應用內容建立索引
你們應該遵循這些 因爲它們會提供一個一致的搜索體驗
爲你們應用的內容之後用戶會去到Spotlight
搜索你們應用裏的東西這將會影響到engagement ratios
如果你們有應用的內容 允許Apple對它們通過通用鏈接建立索引
這樣能暴露你們的應用給潛在的用戶
你們現知道contentpopularity很重要 那就關聯
通用鏈接和CoreSpotlight的項目至NSUserActivities
我們今年添加了weakRelatedUniqueIdentifier來幫助你們更容易地達成這個
我重複這個 因爲很重要
你們所建立索引的項目的標題、描述和關鍵詞
是與深層鏈接相關的
留意你們的表現方式
我們知道表現合理的鏈接會有更高的engagement rates
最後 在適當的時候實現Continue Search in App
它讓用戶能在你們的應用裏完成搜索任務
結論 關鍵的幾點
Spotlight是iOS裏一個全新的萬能搜索工具
在iOS 10裏我們讓它變得更實用 更方便被使用
越來越多的用戶期望一個優質的應用
能通過Spotlight進行搜索
所以 如果你們還沒採用這些APIs
我們建議你們考慮採用
爲配合iOS 10的大衆發行
若你們已實現了Search APIs
我們建議採用新的規則
那些我們今天所介紹的
一些相關的講座優秀的講座
明天“前攝的建議”的演講
在座的你們都應該去因爲你們在搜索裏所做的
能直接被應用到“前攝的建議”裏
我們昨天也有個SiriKit APIs的精彩演講
你們可以在會議的網站上找到它
我們也推薦星期三關於隱私的演講
那會對差分隱私進行更細緻的討論
像其它的講座一樣 這個講座會被上傳 參見第一個URL
我們也會上傳所有Search API的相關文檔
至search.developer.apple.com
這就是我們的所有內容
祝大家在餘下的WWDC 中過得愉快