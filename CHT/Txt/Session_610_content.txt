SpriteKit的新特性
各位大家好
歡迎來到“SpriteKit的新特性”
我叫Ross我是Apple遊戲技術組的工程師
我非常激動能向你們展示
去年我們工作的進展
在開始講
引進的新功能之前
我想先快速回顧一下SpriteKit是什麼
對於不太熟悉它的人
那麼 SpriteKit是給2D遊戲的圖像框架
它設計爲高度靈活和易用
同時提供優良性能
所以 有極少的技術屏障
置於你和你想製作的偉大遊戲之間
它爲我們所有平臺支持包括iOS、macOS、tvOS
而且今年我們可以自豪的說它也能在watchOS上運行了
任何應用 我知道 是不是很棒？
任何用SpriteKit的應用相當於自動用了
現有的最新框架
不需要任何重構和重新部署
你們就可一直與時俱進了
它和Swift自然集合所以你能使用
所有這個新語言的好功能
但框架僅是整個SpriteKit的一半
另一半是Xcode集成即時編輯器
可以讓你直接在編輯器裏預覽場景
視覺上展示出來
它提供基於時間線的動畫
讓你給遊戲注入生命
通過我們強健的粒子編輯器
它完全集成於資源目錄
所以你可以利用功能如應用瘦身和
按需加載資源 不用飽受折磨
今年我們要引進圖塊地圖編輯
和GameplayKit集成
這兩功能我們過會兒都會講一些
最後 SpriteKit完全由Metal框架支持
在所有支持其的設備上
所以你們能夠自動得到它高性能福利
不需要額外做什麼
今年我們繼續引進新功能
讓在Apple平臺上開發好遊戲比何時都簡單
所以不用多說什麼讓我們直接開始講新進展
一般像這種演講呢
我們會把工具之類的東西放在最後
但是今天我們會把這些提前一些
因爲編輯器至關重要
對應用SpriteKit來說
而且今年有些非常令人激動的新內容
從場景大綱視圖開始
知道場景裏有什麼對象之間的關係
對有效場景管理極爲重要
Xcode 7中完全通過Jump Bar完成
Jump Bar設計了用來定位文件
從工作空間更簡單但是當你在SpriteKit
層級裏包含所有節點
幫助定位所有這些節點
如果這樣就好了 能看到整個層級
同時看到
所以現在在Xcode 8你可以用新的場景大綱視圖
這是一個新面板允許你看到場景中所有節點
和節點間親子關係同時看到
還能選擇節點
重命名、刪除場景中的節點
你還能改變節點間親子關係
通過拖拽它們
很像重新整理keynote幻燈片
把一個子節點放在另一個節點下成爲子節點
把節點放在另一個節點下成爲那個節點的子節點
或者把一個子節點拖出父節點脫離親子關係
還能鎖定 隱藏節點
鎖定節點就不能在場景視圖中更改、選擇
這讓你在場景中定位簡單
當你有很多筆記場景可能變得雜亂糾結
隱藏也一樣
有很多大的對象時很方便
有時你會想能控制一些大的對象後面的節點
所以所有功能讓場景大綱視圖很有用
管理場景很方便
所以接下來我想講講我們怎樣整合
GameplayKit進SpriteKit編輯器
去年我們引入GameplayKit
一個全新的框架提供即用解決方案
給創造遊戲時常見問題
去年包含的新功能之一
是實體和組件這是一個設計模式 重點在
模塊化和可重用性
組件封裝行爲
指定組件到對象或者指定實體到對象來改變對象行爲
你可以這樣做不寫任何代碼
給每個場景中的對象
我們不打算講太多細節
這些如何工作但這麼想很有用 把組件
看成代碼積木你可以用不同方式組裝
來創造有不同行爲的對象
常見有一個組件代表體力值
給可以被傷害的對象
或者一個有物理數據的組件
給可以互相撞擊的對象
一個組件允許對象由玩家輸入操控
組件非常強大
允許你操控對象行爲
現在把實體和組件帶進
SpriteKit編輯器中
你可以指定創建的組件直接到節點
在場景中的節點
從調試器中新出的實體與組件面板
另外 可以選擇顯示屬性
在自定義組件中
於是屬性會出現在編輯器上你便可以微調每個節點
最好的部分是若你已在用GameplayKit
實體與組件了我們會爲您完成所有那些繁重工作
你只要從編輯器直接構成對象
另一個GameplayKit引進的強大的功能是路徑尋找
路徑尋找是從A點到B點尋找最佳路徑
通過操控所謂的導航圖像
導航圖像是通過鏈接結合起來的節點組合
它們描述了對象如何在場景中移動
不會撞到任何障礙物
現在加入導航圖像進SpriteKit編輯器
那麼你可在場景中創建並直接編輯它們
你可以加入 刪除導航圖像中的節點
或在編輯器中點擊來建立連接
利用圖像創造相應代碼
這種創建圖像的方式能更快速 簡單
地定義實體在場景中移動
讓路徑尋找輕而易舉
那麼現在講講一個特性 幫助你
我知道 是不是特別棒
那麼現在講講一個特性
幫助你最大化提高遊戲性能
每秒顯示幀數性能表
也許你用過Xcode 7的每秒顯示幀數報告
當你運行應用
會提供一個實時性能數據
包括幀速率圖形處理器利用率
和CPU/GPU幀時
這對分析性能很有用
但有更高粒度會更好
現在在Xcode 8你還能看到時間線歷史
有SpriteKit應用時間CPU和GPU幀時
另外它和CPU時間脫離 所以你能
看到花了多久 渲染
運行刷新循環評估物理時間和閒置時間
這個信息極有用 用來決定
你需要關注提高哪方面
每秒顯示幀數性能表是設計來提高
遊戲在移動平臺上的表現
它在iOS和watchOS應用上都有
那麼我們講了一些編輯器的新增功能
現在換擋 來講講
一項新功能 出現在編輯器和
框架中 圖塊地圖
對不熟悉圖塊地圖講一下
這是網格平均分佈的圖像
用來拼構場景
從一個叫做圖塊的 小而重複的圖像的集合
把圖塊看做是圖塊地圖看作是拼圖
圖塊看做每片拼圖
每片看上去沒什麼但放在一塊兒
可以創造豐富細節的大場景
那麼在細細討論功能之前
先講如何使用
從小的重複圖片建造場景
在創造遊戲時很常見
沒有圖塊地圖如果你想辦到
就要手動放每一個圖像
也完全可以
用小圖像集合能保持記憶負擔低
也能重新整理來修改
場景外形
可是 複製粘貼
和手動排列每一個圖像
非常費時乏味
常常導致場景被凌亂地放滿節點
馬上變得很難管理
所以相反你能用大
有很多細節的圖像
去年發佈的示例遊戲DemoBots用了這個方法
所以場景中用大圖像很快捷
也能讓場景不再雜亂
如果你想改變外形
就需要修改資源目錄
另外 大圖像耗費更多容量
如果你想在遊戲中有更多變化
需要更多大容量資源
就會更加劇容量過載
所以圖塊地圖同時給你兩個問題的解決方案
它們易管理
而且因爲每個圖塊地圖只是場景中一個節點
可以快速修改
比如想改這裏的沙圖塊爲水
我只要告訴圖塊地圖改類型就好了
用小圖塊集合圖塊地圖可以構造大的、
有細節的場景最低限度的容量負擔
圖塊地圖對很多不同遊戲和藝術風格也很有利
你可以用來做自頂向下的RPG
橫向卷軸遊戲等距城市建造遊戲
六角形桌上游戲
圖塊地圖非常靈活
所以你會發現圖塊地圖非常可視化
不用告訴你它們怎麼工作
我們直接進入演示部分給你看
現在我們在SpriteKit編輯器
場景中已經有了圖塊地圖
先選擇它
最快編輯圖塊地圖的方式
只是雙擊它
顯示新的圖塊編輯欄
在這兒屏幕上方
默認選擇筆刷工具
可以在圖塊地圖上塗色
塗色 只要點擊
就開始放置圖塊在地圖上了
如果你想改放置了的圖塊的類型
只要點擊這裏的 選擇圖塊 按鈕
就會顯示所有可以放置的圖塊類型
在這兒放邊圖塊和角圖塊
在放一些邊圖塊
你會發現很簡單 放圖塊
這樣拼湊場景
但是一個個放圖像
還是有點重複乏味
那麼展示一個更好的辦法
先放一片新圖塊地圖在場景中
默認下圖塊地圖有個功能
在調試器可用叫 允許自動繪製地圖
這個功能做的是開始編輯地圖時
選擇圖塊
可以看到不是放置單個圖塊
而是一組組圖塊
整理成不同地貌類型 草 土 石 水
選擇一個
現在放一塊圖塊地圖時
點擊放置中心圖塊
同時自動放下所有邊圖塊
對快速簡單創建場景很棒
不用放每個邊圖塊角圖塊
只要畫 它會自動生成
每個我們需要的圖塊 不用我們
費多餘的時間
這讓畫圖塊特別快
現在看看圖塊集合怎麼被放在一塊
圖塊集合到達各自的SKS文件
你可以在這兒看到遊戲帶有的不同類型
比如草 泥土 石頭 水
你可以看到它們排列好了
能讓你看到圖塊應該怎樣放在一塊兒
這裏放個新的圖塊組
我們只要構建對自動繪製地圖有用的新圖塊組
通過拖拽想用的符合相應位置的圖塊
這裏有顯示輪廓表示
大概圖塊長什麼樣
只要把圖塊從現用的瀏覽器拖到這兒
只要拖放進去
就能快速簡單設立新圖塊組
讓我們命名它
叫它花園
就好了
現在進入場景
創建一個圖塊地圖
開始編輯它
看到花園圖塊組已經在這兒了
只要抓住它放進去
所以你會發現設立新圖塊組多麼簡單
而且已經可以自動繪製地圖.
不用做任何其他的
但是還有一些可以對圖塊組做的
那麼回到圖塊到另一個圖塊集合
這個我之前做好的
乍一眼看上去一樣
但當我點擊其中一塊單一圖塊
會看到這裏有每個圖塊的很多可用變種
每個不同位置的圖塊都一樣
所以當我們畫圖塊來組成圖塊地圖時
它會隨機選擇圖塊其中一個變種
所以圖塊地圖可以有很多變化
另外可以指定樣式中不同重量一些變量
這裏 紅花放置重量爲3
白花放置重量爲2
藍花放置重量爲1
所以紅花非常常見
相比白花 更比藍花常見
現在回到場景.
創建另一個圖塊地圖
指定剛剛設好的先進圖塊組到這裏
現在刷這些圖塊
可以看到變種出現
所以你們可以看到圖塊組非常靈活
可以畫出不同的樣子
不用費很多力 很有用
還可以做的關於圖塊地圖的是圖層
在左邊的圖塊地圖裏
看上去只有一個圖塊地圖
但當我抓起它的時候
你會看到實際上有2層在各自上面
我們可以把一個圖層放在另一個上
來讓它看上去好像
有很多多樣的圖塊圖塊資源
看上去這些資源設計用來
過渡成草圖塊
所以有草在邊緣
把這個圖層移過來
它們自然過渡到草
移到土上也是一樣效果
像是過渡到土
這讓你從圖像庫中獲得很多額外用處
如果讓它們在邊緣過渡成透明
可以堆疊在一起 然後
不管怎麼樣你可以僞裝 讓你
從已有資源多出很多用處
另外圖塊集合能做的是可以做動畫
這是一個有些草和水的不錯的圖塊集合
點擊 動畫按鈕
如果仔細看會看到岸線
在水圖塊上在起伏波動
看看這組地圖的圖塊集合
設置水圖塊
直接從圖塊集合編輯器中預覽動畫
選擇其中一個變體會看到
一列所有動畫中的幀
給動畫設個每幀時間
基本跟如何添加動畫效果給
材質應用一樣
設置動畫效果就這麼簡單
給場景注入生機的好辦法
除了在圖塊上逐幀展示動畫效果外
還能給圖塊地圖本身添加
圖塊地圖就是SK節點
所以SK節點能做的它都能
當然可以拖來拖去
縮放它們
旋轉它們
注意可以編輯圖塊地圖
當它們看上去這樣時儘管有點奇怪
當它們呈這樣奇怪角度的時候還是可以
因爲SK節點圖塊地圖也只是節點
可以在上面加事件
這裏我已經在圖塊地圖加了很多事件
通過縮放和旋轉
把它動起來
可以看到能 移動 縮放 旋轉
然後把它放回去
所以有很多方式給圖塊地圖加動畫
非常有用
事實上 可以利用圖層化和動畫
來創造些有趣的效果
在這個場景
這裏圖塊地圖中有三個不同的圖層
還不想做這個
如果把照相機放這兒點擊動畫
僅僅在以不同速率移動圖塊地圖的圖層
呈現深度的效果
這個效果叫做視差滾動
我在做的只是移動前景圖層
以一種速度中景一半速度
背景又一半速度
這完成了我們想要的效果非常驚人
圖塊地圖不僅支持簡單的正方形圖塊
還支持六角形圖塊
等距立體圖塊
所以外貌有很大彈性
來幫助你做成你的遊戲
說到這兒 馬上看看遊戲示例
這是一個我做的小平臺
一個跑來跑去的小人
你會發現有視差滾動
在背景
你會注意到這裏我在撞擊圖塊
我做到這個效果
通過利用自定義用戶數據
放在每個圖塊
向你們展示 在圖塊集合中
選擇一個變體
這裏有一些用戶數據
一個值叫邊圖塊是個布爾值 我設爲1
在代碼中 我檢查圖塊地圖
在這個平臺示例中找尋所有這些邊圖塊
找到一個 建一些物理數據
讓玩家能和它撞擊
因爲只是在圖塊地圖中
比如想跳過這面大牆
一旦運行遊戲 會發現
我這個小人跳的不夠高來翻過它
他非常想做到因爲那兒的紅按鈕看上去非常誘人
我很想按那個按鈕
因爲我們只能從圖塊中生成物理數據
和用戶數據可以做的是到這裏
擦除這些圖塊...
再打包運行遊戲
圖塊不見了 可以移動過去了
不用改變代碼之類的
只要用數據 來源於
圖塊地圖來設置圖塊就行
是的 非常簡單
作爲獎勵 我可以跳到按鈕上
耶
那麼這就是圖塊地圖如何在編輯器中工作了
展示瞭如何在編輯器中工作
看看框架這邊
在編輯器中創建圖塊地圖時
你不必被這些東西困擾
但大概瞭解它怎樣工作挺好的
那麼圖塊地圖由SKTileMapNode類實現
像在演示裏提到的是SK節點
它包含所有放置了的圖塊的信息
但要能放置圖塊 首先需要圖塊集合
圖塊集合由SKTileSet類定義
包含所有可用圖塊集合
另外定義可以包含的那類圖塊信息
可以是一般方形網格圖塊
等邊立體圖塊或者六角形圖塊
圖塊組由SKTileGroup類定義
像我們在演示裏看到的圖塊組是一組相關圖塊
常見的是地形類別如草或水
圖塊組還規定組內單個圖塊
在地圖如何放置
規定由SKTileGroupRule類定義
它還包含圖塊變體怎樣工作
通過描述的圖案
最後每個圖塊由SKTileDefinition描述
定義了圖塊外形
每個至少有一個圖像如你在演示中所見
圖塊可以由多幅圖像做成動畫爲圖塊地圖帶來活力
另外 圖塊可被翻轉和/或旋轉
讓你從已有資源中獲得更多
快速看一下代碼
可以看到怎樣通過API創建、修改圖塊地圖
第一步先要得到想用的圖塊集合
你可以用編程的方式創建
但過程非常複雜所以我們高度推薦
用圖塊集合編輯器創建
要拿一個你已經做好的很簡單
只要調用這個方便的初始化方式
用你想命名的圖塊集合名字
然後 創建新的圖塊地圖
只要提供要用的圖塊集合
地圖中排和列的數量
和每個圖塊的大小
如果要開始放圖塊在地圖中
需要一個圖塊組
就拿第一個在圖塊集合中定義的圖塊
有了要放的圖塊地圖圖塊組
可以開始放單個圖塊了
這裏把圖塊組放到第4列第7排的圖塊上
也可以一下操控整個地圖
這裏用圖塊組填充地圖上每個圖塊
若你用SpriteKit編輯器創造修改圖塊地圖
你也許不會用到任何剛剛講的API
但除非你的圖塊地圖是全靜止的背景
否則你也許想詢問它們
有很多你可以做
比如說 當玩家移動過某個特定圖塊時 你想檢測到
並且引入一些自定義用戶數據到圖塊定義上
你可以做到這些首先轉換玩家位置
成參考於圖塊地圖畫面的位置
然後 可以用我這裏劃出的方法
來得到有該位置圖塊的排數和列數
接下來 問那個排數列數存在的圖塊的定義
最後 既然已經得到了圖塊的定義
你可以把用戶數據加入那個自定義值
你感興趣的
然後在那則數據信息上加入你想要的行爲
剛剛做的演示中
我們做的非常相似 那就是檢測當玩家
跳到大紅按鈕上
當他們跳過一個帶有按鈕自定義用戶數據屬性 的圖塊時
我們點燃了煙花
這些有很多需要理解
所以快速回顧一下圖塊地圖提供的新功能
通過從一個小 重複的圖像集合創建場景
圖塊地圖讓你從藝術資源中獲得更多
總的來說 你會需要更少的資源
還會有好處能減少容量負擔
它們支持動畫以動態圖塊圖像的形式
和節點上事件的形式
圖塊地圖設計用來堆疊在彼此上
更增加了圖像資源的多功能性
使效果如視差滾動成爲可能
它們還非常靈活很好針對不同
美術風格和遊戲類型
大的圖塊地圖自動分爲
小塊 而且只有當前可見的部分會畫出來
這提供了巨大性能提升
另外 如果所有圖塊地圖用的圖像
在同一個資源目錄Sprite Atlas
每塊會收集所有的圖塊在一起
用一個畫畫命令渲染出來
圖塊地圖還有不同口味
標準正方形網格 等邊立體圖塊和六角形圖塊
工具這邊 編輯圖塊地圖方便簡單
只要點擊來放置圖塊在地圖上
自動繪製地圖爲您完成所有那些繁重工作
你不需要單個放置每個邊和角圖塊
當然你可以關掉這個功能來手動做這些細節部分
最後 創建新圖塊集合非常快
只要拖放想用的圖像
進相應的圖塊集合編輯器裏的位置
就可以了
所以這些是圖塊集合的部分
我要邀請同事Clement來跟你們講
今年其他特別棒的新特性
謝謝 Ross
好的 這是些好東西是不是
你們好 我是Clement
我是Apple遊戲技術組的軟件工程師
你猜怎麼着？
我們其實還有很多可說
看看SpriteKit還有何新特性
第一個是彎曲變形
現在在Sprite有很多變形方式
可以縮放來讓東西變大變小
旋轉來沿着軸轉動
如果像親歷親爲還可以寫個自定義着色器
比如這裏看到的這個低分辨率着色器
今年很高興宣佈一種新的變形
叫做彎曲變形
彎曲變形讓你定義
自定製的扭曲度 用點的度數
比如拿一個2x2的網格
有8個點你看到的綠色的
是源位置也叫參考位置
然後得到這裏第二個網格但它意味着一次變形
所以 這是我定義的位置
我移動了點來創建一次變形
如果我把這個方法用到之前展示的宇宙飛船上
就得到這個
得到一個不錯 平滑的宇宙飛船變形
這個變形根據位移
於源位置和終點位置
讓我展示一些例子
用彎曲變形
第一個例子是擠壓效果
現在我做的是把點向中間移動
來創建一個不錯的擠壓效果
接下來 拉伸效果
拉飛船的突出的尖端讓它從右到左擺動
它看上去有點好笑
接下來重要的東西是關鍵幀動畫
在2D遊戲中 往往如果藝術家
爲動畫要做靜止幀
會花很長過程
尤其如果你要好幾次反覆做新設計
彎曲變形
讓做動畫跟到處移動點那麼簡單
如果有複雜的情況像關鍵幀動畫
你可以提供幾個度數
所有一下子就做好了
不再需要靜止幀了
現在讓我給你們解釋基本概念
彎曲變形的背後
又來了 假設這裏有個2x2網格
在網格分佈中一組有標號的點從0到8
這個點 這個點 抱歉 這個網格
和其中的單元格是有很多三角形的四方格
從電腦圖像角度來說
這裏有一列頂點要變
材質座標也一樣
然後只要設置GPU插值
這就好了我們可以先停在這兒
但一開始如果我用3D emoji貓emoji會怎樣
我限制它爲1個四方格也就是1x1網格
那麼來吧 給我看看變形
好 做吧
恩 這看上去不太對
原因是我們只是在移動一個點
所以只有一個三角形在扭曲
那麼 我們能怎麼辦呢
我們把網格更密實上載更多四方格
但是這就有點乏味了
因爲有更多點要操控
尤其因爲Sprite很大
幾乎就像是必須 你知道的到處移動像素是不是
所以不是的 正如你猜到的我們有個小技巧
SpriteKit中要這麼做
再一次 2x2網格
你只要操作8點
當你在移動點來變形時
發生了這些
那麼好了
所以我們幫你做了自動四方格細分
這很棒因爲給了你權衡
在高強度細節
和儘量少的四方格之間使用變形
再說一次 你只要操控8個點
這裏 當我移動左上角的點時
會看到我拖得有點遠所以變形程度有點高
那麼做細分
在右下角有點微變形
所以我們只細分了兩次
因爲想給你更多控制
事實上我們允許你指定最大數目的細分
如果我拿之前的宇宙飛船
像那樣扭曲一點兒
你會看到一些變形 抱歉
一些走樣出現比如這個在底部的隆起
所以 如果我只細分一次你會看到走樣
如果我設爲4 比如說
就明顯看不到那些走樣了
宇宙飛船底部呈現平滑的線
所以這對你來說很棒
如果你想細調視覺效果和/或表現
因爲當然 四方格越少
表現越好
好了 這個不錯但怎樣在Swift裏做到
好 第一件事
記住我們這是網格分佈
所以 8個點從0標到8
我要提供一列源位置
一列目標位置都是2位浮點數
我可以創建我的彎曲幾何網格
通過提供排數、列數、目標位置
源位置然後保存進Sprite
然後就扭曲變形了
可選的你可以設置細分度
設爲任何你要的默認爲2
因爲這是SpriteKit我有一堆新SKAction可用
所以 變形簡單到
只要說SKActionWarp到然後提供網格和時間
或者 如果你想要複雜點比如關鍵幀動畫
可以提供一列網格和一列時間
好的
那麼好 讓我給你快速演示彎曲變形如何運作
好的
我要用跟Ross一樣的演示項目了
但這次
我要用左邊因爲那兒纔是好東西
好的 小人在這兒去稍微探索一點
哇 看那兒
好的 這裏有2組動畫
一個讓樹從左到右擺動
另一個讓蘑菇擠壓 你懂的
從大到小
我們還加入一些隨機性讓東西在不同時間旋轉
這就讓你的場景非常生動有趣
好讓我們繼續探索
好看看這個這兒有個人
好 在橫版遊戲中說“你好”的最佳的方式是？
我覺得跳到它們上 是嗎？
就這麼走吧
我做的是 當跳到這個人上時
碰撞身體和物理身體
我就運行SKAction讓它擠壓你知道的
好的 非常棒
讓我們回到幻燈片
所以彎曲變形非常強大
給遊戲中帶來廣闊的可能性
所以我非常希望你能用它們並且喜歡用它們
接下來講講自定義着色的每個節點的特性
着色器很棒我非常喜歡
有個最佳辦法給你的遊戲做精確數碼外形
在SpriteKit我們開始就支持自定義着色器
用SKShader類它基本上是個片段着色器
用在節點上
它自帶一些內置符號 比如時間
材質 材質座標 還有很多
如果有什麼特別需求 你也可以在SKUniform上特定
給你特殊的變量
好 要不我們用着色器打包遊戲怎麼樣
好 我真的很喜歡橫版遊戲
要不來一些橫版遊戲好就這樣 挺好的
好 我想要一些可愛的要不然來一隻...兔子
好的 太棒了我很喜歡這傢伙 它很可愛是不是
你猜怎麼着 我準備給這遊戲取名暗黑兔子
讓我們放些壞蛋和長釘和危險像這樣
好 這樣好些
不幸的是我們的兔子要被撞到好幾次
因爲我不想讓我的遊戲變太難
我要有一個幫助系統和健康條像這樣
猜怎麼着健康條會是着色器
你猜到它會出現了對吧？好的
所以 在SpriteKit怎樣做一個血條呢？
爲血條加一個Sprite
用着色器控制視覺效果比如閃爍的樣式 顏色
和填充度
這裏兔子只有一半生命了所以只填充一半
控制這些視效我有個一致值叫health
它會是個浮動值
從1滿血到0幾乎喪命
好 但因爲遊戲往往更有趣
當你有多個玩家時放些傢伙在這兒
可以有最多三個玩家
這意味着任何時候
可以有一些滿血的 一些半條命的
和一些幾乎沒命的
好 SpriteKit比較簡單
我有Sprite 着色器 一致值
但現在怎樣把它
變成多玩家呢？
好我必須做這個
我必須賦值着色器但這完全沒道理是不是？
爲什麼必須做這個？這太糟了
這很糟因爲這是同一個着色器啊是不是？
這會打破批處理機制的
意味着調用多次
這太複雜了是不是？
好 如果你要用別的辦法做到這個
我只要一個着色器爲Sprite間共用
而且 從今年開始你只要...
使用特性
用自定義特性你只要創建一個特性
把它依附於着色器然後直接設置值
在節點本身上
這裏我有個自定義特性名健康值
我在Sprite上設置健康值
非常簡單
Swift裏看上去是這樣的
用SKAttribute類創建特性
給它名字 這裏是健康值類型 浮點數
依附於着色器
因爲我的着色器只有一個特性
我給它一列的單一特性
最後直接設置Sprite的值
這裏玩家一隻剩下0.2％生命
所以我在給健康值特性設置值
所以這非常簡單方便
若你在處理每個節點的自定義和着色器
好了
現在講講特定於平臺的內容
第一個Apple TV上的焦點交互
對於已經給Apple TV做過應用的人來說
你們已經明白焦點交互是什麼了
但對於沒有做過的讓我回顧去年發生了什麼
去年我們介紹新Apple TV
tvOS和些新的用戶界面
還有Siri Remote和其觸摸板
最主要不同之一在iPhone和
Apple TV之間是交互方式
在iPhone上 用戶可以直接交互
通過在手機上用觸摸屏幕
而在Apple TV上
用戶永遠有遙控器在手介於他和界面之間
我們稱這種交互爲焦點交互模型
讓我展示當我移動光標時會發生什麼
在Apple TV主菜單上集中
像你看到的 一次只能集中一個元素
而且滾動調試成自適應
對指尖反應很好
事實上這非常重要
很重要的是在構建系統
和框架時在腦內用焦點交互
意味着如果正好要用UIKit做應用
不用重建焦點交互模型了
你只要攤開視圖
說哪些是可聚焦的 就好了
很易用
提供了一致的用戶體驗 不管你在
Apple TV主菜單還是在應用內
加分的是我們還支持Siri Remote
遊戲控制器和很多Bluetooth控制器和很多很多其他的
若你想了解更多Apple TV上的焦點交互
這周有個演講
你會在網上發現很多資源
好 那麼大新聞是
SpriteKit支持焦點交互
是 這很棒是的 謝謝
這很棒
對於遊戲中任何用戶界面比如遊戲菜單
或者子建造工具在遊戲中 用聚焦
比如象棋遊戲或者很多其他的
好事是它還簡單了很多
這裏看到的DemoBot
去年一段示例代碼
以前給iOS和macOS用
我們做了個給tvOS感覺好多了
移除那些用作交互和定位的代碼後
感覺乾淨多了 簡單多了
說到DemoBot 看看怎樣
創建這個菜單 用SpriteKit
和焦點交互
第一件事你要知道的是
UIKit引入新協議叫做UIFocusItem
遵照UIFocusEnvironment
它延伸焦點系統到沒有視圖的條目
像你猜到的
現在SKNode也遵照了
第一件事要做的是做一個子類
這裏對於菜單元素 要用一些長方形
我要用SKSpriteNode
第一 做個子類
第二 重寫canBecomeFocused方法
返回真 這樣節點就變成可聚焦了
接下來 獲取節點到聚焦系統
要做這個 只需設置isUserInteractionEnabled爲真
最後一件事
重寫didUpdateFocus（in context:函數
這會給你在焦點更新時給你更新
所以 只需要重寫這些在視圖
場景和任何在應用中說得通該改的節點
所以這裏上下文對象給我下一個焦點條目
前一個焦點條目這個情況下我要找
一個菜單元素如果按這個
就要運行些SKAction
這就是事件看上去怎樣的
如果我玩完遊戲會出現這個菜單
我只要用Siri Remote
滾動下來或者用遊戲遙控器也一樣可以用
我和在Apple TV主菜單時有相同使用感受
再說一次 非常簡單 非常強大
非常推薦你用這個
好的 一件大事
Apple Watch上的SpriteKit
如你所見 給watchOS 3.0
我們爲Apple Watch帶來一些框架
是的 SpriteKit可用
這意味着現在你能做些很多交互的應用
用這個高性能2D圖像平臺
當然我們帶了所有你愛的東西
比如粒子 動畫 物理 事件
所有編輯器都兼容所以你能使用場景編輯器.
你能使用粒子編輯器
有所有的編輯工具 比如新的性能表
Ross剛剛講的
所有這些都能工作
所以一個典型的SpriteKit遊戲看上去這樣
有一個SKView包含SKScene
SKScene自己包含多個節點
比如SKSprite節點SKShapeNode各種
然而Apple Watch上沒有視圖指示
你通過WatchKit界面展示內容
這就是主要區別
替代使用SKView
我將使用WKInterfaceSKScene
大概就這些
好看看我們怎樣從iOS上現存遊戲
到讓它支持watchOS
這裏有些代碼一些iOS上游戲的示例代碼
好 非常典型 有視圖
我要設置場景和各種
好的
我現在要做的是點擊文件 新的 目標
選擇要的模板
這裏我用了遊戲應用模板給我的目標
點擊 下一個
給它最棒的名字 我要命名它爲Apple Watch Game
再點擊 下一個
就完了不 真的 就完了
Xcode會創建所有你需文件
比如Storyboard和界面控制器
若你看storyboard
我們已經接通了一切
所以 這個已經連接到了接口正如你在頂端看到的
你準備好了
有WKInterfaceScene
還有和之前一樣的東西
所以 非常簡單
好了 解決些Apple Watch上的兼容問題
Apple Watch上沒有SKAudioNode
但當然你還可用SKAction中playSoundFileNamed事件播放聲音
沒有SKVideoNode
但可以用WKInterfaceMovie
最後如果要用CI濾鏡做特效
還是可以做 但需用SKShader
我們對你能用SpriteKit在Apple Watch上大伸拳腳很激動
這將讓它變得更交互
在該平臺上更多好玩的應用
好的
謝謝
因爲我們有了更多平臺
讓我講些SpriteKit上的最佳實踐
第一個是資源目錄
用資源目錄它很棒
它和SpriteKit合作無間
給你的遊戲提供了很多酷功能
來讓一切變得簡單快捷
第一個是Sprite Atlas
在資源目錄 你可以做一個材質圖譜
作爲給圖塊地圖優化的基礎
在這裏有多件材質合成一個大的
減少繪製調用到最低
接下來我們支持多種尺寸像
1x 2x 3x對多平臺很有用
像是iPad、iPhone、watchOS
你不需要做什麼限定 比如
是那個平臺還是這個
不 你只要調用這個材質就完了
我們完成其他的
我們支持按需加載資源這是tvOS的基礎
最後我們做應用程序切片意味着如果你有資源
特定於某個平臺我們只會用這個
給這個捆綁 然後編譯它們
爲儘量小的運行時間二進制
這給你很小的資料夾和在App Store上很小下載
所以是的 資源目錄很棒 用它吧
接下來 關於性能和電池生命
所以 今年SpriteKit巨大改變是我們不總渲染
現在 我們只有在場景髒時渲染
也就是如果發生變化會發布繪製調用
但如果沒改變就不會做任何事
如果你在用任何登記工具比如性能表
你會看到指針紋絲不動
這實際上是件好事
因爲這意味着沒有在渲染什麼新的
如果你需要控制畫面權重
有幾個辦法做到
第一個是SKView偏好幀速率屬性
任何時候你只要設置畫面速率到你要的就可
非常方便
如果是菜單 只需要非常低的幀速率
當回到遊戲 可以調回到60
或者30幀率根據性能需求
第二點有點進階
是SKViewDelegate協議
提供你thisShouldRenderAtTime方法
用遊戲的絕對時間
所以這個方法任何時候可被調用
你可以根據時間決定是否
要渲染這個畫面
所以這給你非常細緻的控制
對你的遊戲的渲染
好的 就這些了
SpriteKit有哪些新特性？今年有很多
第一個是場景大綱視圖
讓你從Xcode操控場景圖像
GameplayKit集成
若你已用GameplayKit組件現在只要用Xcode直接設置節點
每秒幀數高性能表給你實時分解
場景的性能非常 非常有用
複雜但高性能的圖塊地圖
彎曲變形給你的遊戲帶來更多樂趣
只要用網格柵格點創建複雜動畫
每個節點特性來自定義着色器
如果你要自定義節點 構建着色器很方便
當然還有Apple TV上焦點交互和Apple Watch上SpriteKit
是今年的重頭戲
如果想了解更多
可以到developer.apple.com 網站
今年有很多關於遊戲的演講
但大部分已經講完了
你還是可以在我早些時候放的網站上看到它們
明天可以去“Game Center新特性”的演講
還有Apple Watch上的遊戲技術
如果你想學到更多關於這些平臺和框架
好了