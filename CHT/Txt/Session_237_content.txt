CareKit開發入門
謝謝 大家下午好
歡迎來到“CareKit開發入門”演講
我叫UmerCareKit團隊工程師
今天的日程包括講述CareKit的故事
以及它的由來
介紹其中一個應用
分析它如何使用CareKit來提升就醫體驗
瞭解CareKit架構並以此創建一個應用
演示一個定製的CareKit應用
最後 Apple和開發者社區
如何同心協力使它更上一個新的臺階
在介紹CareKit之前先看看它的由來
大家可能熟悉ResearchKit
它是我們去年發佈的框架
幫助醫療機構和研究人員
在iPhone上進行大規模的研究
如果有興趣 可以參看今早的演講
ResearchKit新特性
由Bunny Laden和Yuen Xiou主持
以及去年ResearchKit演講
由John Roll主持“使用ResearchKit創建應用”
在ResearchKit發佈後的過去一年裏
我們收到了很多請求希望對患者進行研究
或者查看他們提供的醫學數據
我們開始頭腦風暴以病人爲中心的模塊
隨後我們發現這些模塊的應用範圍
遠高於醫學研究
所以在ResearchKit基礎上進化出了新框架 CareKit
CareKit是一個開源框架協助醫療機構開發應用
來幫助病人恢復治療
CareKit有益於各種慢性和急性病治療
一個很好的慢性病的例子是精神疾病
它的用藥追蹤極其有效
對於抑鬱和焦慮的評估
也能做到及時反饋
還能監督日常活動
它能做到互助小組和入院治療以外的幾乎一切事情
另外一個例子是手術治療
其中最重要的是術後恢復
我們仔細思考這個用例
回想一下現有的就醫體驗
如今 如果你離開醫院或者醫生
可能會收到這樣一張紙
列舉了你的術後恢復活動
它包含了許多詳細的指導說明
隨着時間推移而改變
這方面的監管十分糟糕
患者經常會陷入困惑
由於這些計劃並非動態
因此它們不能根據情況主動調整
最終可能導致患者再次入院
CareKit的推出就是爲了解決這個問題
拿起這一張紙
把它變成Care Card
Care Card允許病人查看完整的治療計劃
互動性強 動態更新
它能實時地反饋病人的康復進展
在開發這個模塊的過程中
我們發現了一個全新的世界
因爲iPhone提供了無限可能性
我們又創建了另外三個模塊來提升病人的護理體驗
症狀與測量追蹤器
記錄了各種主觀和客觀的測量數據
Insights概覽頁顯示了各種應用數據
幫助病人掌握病情恢復進展
以及連接模塊 用來實現
與家庭成員和護理團隊之間的交流溝通
我們來看看它們是如何協作來提高就醫體驗的
德克薩斯醫療中心是CareKit早期合作伙伴
他們運用了這些模塊
打造了一份獨特的就醫體驗
來看看這些模塊的實際運行
首先 你會看到一個歡迎界面
你能創建登錄賬戶
我們的病人John Appleseed已註冊
完成了應用配置
John起牀後收到一條提醒他需要量體重
他使用密碼進入應用
在智能秤上量完體重
體重值被傳入HealthKit
CareKit會自動提取數據
CareKit輕易完成
因爲它與HealthKit無縫銜接
記錄體重後John進入Care Card
查看今天的待辦事項
Care Card和症狀與測量追蹤器
正在自動更新內容
從德克薩斯醫療中心的ERM健康系統裏提取
John不太記得其活動之一 短走的具體要求
他點擊進入那一欄
開始瀏覽這項活動的說明
John完成了第一項運動接下來服用第一份藥物
他點擊進入了評估卡
查看今天需要完成的評估種類
在症狀與測量追蹤器裏
他想記錄下自己的術後疼痛症狀
以及一些感染的跡象
他首先進入疼痛評估 輸入了疼痛指數
接着拍一張感染區域的照片
上傳到應用
這一切直接在症狀與測量追蹤器內完成
數據被傳送到醫院
最後 他要完成一些起立行走
當他四處走動的時候
iPhone的傳感器會記錄步數
當他完成行走後
數據會被直接傳給醫院
John想打開Insights界面
看一看過去幾周的數據
他可以看到本週的信息提示和圖表
這樣視覺化的數據呈現方式更加便於用戶使用
接着他切換到上一週
對比這兩週的表現
同時他依然擔心可能受到感染
儘管已經上報過了
他還是決定給護理人員發一條信息
他開始創建信息
他決定發郵件給Paul Cashman醫生
他不需要再上傳一次照片
因它已被髮送給Cashman醫生了
通過之前的感染評估
當天的晚些時候他收到了回覆郵件
醫療團隊成員Paul Cashman醫生
他重新進入應用
閱讀醫生的信息
德克薩斯醫療中心就是這樣使用CareKit創建出一個應用
打造了閉環的就醫體驗
謝謝我們來看看創建類似應用需要的步驟
這是四種前端模塊 我們已經見過了
再加上兩個後臺的模塊
Care Plan Store和Document Exporter
我們先從Care Plan Store開始介紹
Care Plan Store由活動和事件組成
我們先解釋活動和事件的含義
然後創建一個活動添加到store裏
尋找活動和事件的關係
最後把它們集成到UI裏面
若仔細看這張Care Card
我們可以想象出活動和事件的含義
以ibuprofen爲例
Ibuprofen 200mg是一個活動
下面的圓圈代表事件
活動和事件一起構成了Care Plan Store
這是一次活動
我們創建這個ibuprofen活動
先創建一個標識符
這裏使用的是ibuprofenMedication
它能獨特地標識出這個活動
接着創建羣組標識符來標識不同的活動
方便以後在後臺被調用
標題是Ibuprofen
內容是200 mg
這些屬性直接面向用戶
請確保它們的準確性
tintColor可以是任何UI顏色我們選擇藍色
除了選擇填充色
CareKit還提供其它自定義選項
我們稍後會討論到
我最關心兩個屬性類型和時刻表
類型決定了活動的類型
舉個例子我們有干涉
它屬於Care Card模塊
還有評估它顯示在症狀與測量追蹤器下
因爲我們創建的是一個服藥活動
它屬於Care Card模塊
所以 活動類型是干涉
接下來看一看時刻表
時刻表決定了活動發生的頻率和時間
有三種方法定義時刻表
每天的日程每週的日程
你還可以創建自定義的日程
你可以定義頻率
來指定每天的活動次數
聽起來有點麻煩其實很簡單
我們來簡化它
我們來給活動定義一個日程
這是一個周計劃
我們希望病人在週一 週三 週五服藥
再定義一個頻率
週一服用四次
週三兩次 週五四次
綜合起來就組成了活動的一個日程對象
現在這項完整活動可被添加給Care Plan Store
接下來我們學習如何使用代碼創建Care Plan Store
在把這項活動添加進去之前
我們快速學習一下事件的定義
事件不是由開發者直接初始化的
其實它是由Care Plan Store自動創建的
爲了深入瞭解創建的過程
我們回到剛纔的日程
一個日程對象會根據自定義的頻率生成不同的事件
舉個例子 我們有四次事件在星期一
因此 有四次事件在6月20日
兩次事件在星期三所以兩次事件在6月22日
以此類推
要停止事件的繼續生成
需要定義截止日期
一旦爲活動定義了截止日期
Care Plan Store會停止生成事件
即使開發者沒有直接創建事件
他也提供了很多有用信息
從事件對象你可以得到具體日期
可以看到事件的狀態 比如初始狀態
代表用戶還沒有調用它它可能被完成了 也可能沒有
結果對象包含了完成的狀態
它是什麼時候被完成的
以及其它相關的信息
還有這個指針 它指向了這次事件
在Care Plan Store裏活動生成事件
組合在一起構成Care Plan Store
我們來看看具體的代碼
創建Care Plan Store步驟非常簡單
先定義一個變量
我的變量是myCarePlanStore類型是OCKCarePlanStore
再定義一個永久的URL鏈接
在這裏我使用了應用的文檔目錄
再使用URL進行初始化
就得到了可用的Care Plan Store
現在我們把剛創建的ibuprofen活動添加進去
首先創建一個日程對象
設定開始日期爲今年年初
然後使用一個週日程
我們可以用數組來記錄事件的頻率
也就是每天發生的次數
舉個例子我們的數組從週日開始
週日爲0 週一爲4 週二爲0
以此類推
定義好了日程對象就可以初始化care plan活動
再定義一個標識符一個羣組標識符
以及其它所有的參數
其中兩個參數我們尚未討論instructions和imageURL
它們被用來描述活動的細節
如 當John Appleseed點擊“短走”
他可以看到具體的說明
我們也需額外信息描述ibuprofen及圖片說明
等下在Care Card裏就能看到其具體模樣
要把這個活動添加到Care Plan Store
我們只需調用一個添加函數然後傳遞創建好的活動
最後使用completionHandler處理異常情況
以上即如何創建Care Plan Store及如何向它添加活動
我們來看看如何把它們的數據呈現在Care Card上
創建Care Plan Store和添加活動是最難的部分
呈現在Care Card上相對簡單和直接很多
這就是我們添加的活動注意它的活動類型
它屬於干涉因我們已把它設置成干涉
Care Plan Store自動將它顯示在Care Card上
要創建一個Care Card
需要先初始化CareCardViewController使用carePlanStore對象
把它內嵌到NavigationController
這一步很必要 因爲它能提供barButtonItem
用來操控日曆
以及將信息推送到導航堆棧上
現在可以直接將其顯示
也可以把它內嵌到tabBarController
僅僅三行代碼我們就生成了一個Care Card
這裏你能看到我們擁有ibuprofen活動
和其它建好的一些活動
我們看看這個UI的其它部分
瞭解它們的具體作用
headerView顯示了本週活動的預覽
你可以左右滑動切換到另一週
你可以選擇特定日期查看當天的細節
心型圖案是由程序自動計算和更新的
根據Care Plan Store現有信息
心型圖案和填充顏色都可以定製
你可以選擇更適合的圖片
也可以改變填充色來搭配自定義圖片
等會兒我們將展示一個自定義的Care Card
標頭下面是治療方案
它包含了當天要完成的幹預治療
每次從Care Plan Store裏添加或刪除活動
這個UI也會自動更新
開發者不需要額外的工作
這是我們剛添加的ibuprofen活動
點擊這一欄
你將進入詳細信息頁包括具體的用法說明
以及藥物的圖片
方便用戶把它和其他藥物區分開來
我們看一種不同的幹預治療
這個項目要求病人起立行走
點擊進去用戶就可以自行完成病情報告
也可以通過Apple Watch的傳感器自動更新
這正好引出下一點
我們如何更新這些事件？
有多種方法其中之一 用戶自主報告
比如服藥追蹤
患者可以報告服藥狀態
他們可以在完成任務後將其標註爲完成
如ResearchKit活動任務
還可以通過設備的傳感器自動更新
比如Apple Watch或iPhone的HealthKit
這就是Care Card
它是一個互動的治療計劃
使用Care Plan Store規劃活動和事件
幫助用戶實時監控每日病情進展
就如Care Card一樣
“症狀與測量追蹤器”也使用了Care Plan Store
來記錄主觀和客觀的病情測量數據
添加評估的過程
和添加ibuprofen活動的過程十分相似
如果添加一個後背的痛感調查
它的代碼和創建這個幾乎一樣
假設它已被加入了Care Plan Store
我們來看看如何創建症狀追蹤器
來展示這個評估
像Care Card一樣先初始化symptomTrackerViewController
使用Care Plan Store對象
這裏可以使用代理函數我等下會講到
然後把它內嵌到NavigationController
然後把它展示出來效果就像這樣
如果我們分解這個UI
headerView包含了和Care Card一樣的導航模式
你可以左右滑動來切換至另一週
選擇具體日期 來顯示當日詳細信息
當我們正在完成當天的評估時
這個環形的圖表 可以顯示當前的進展
一旦全部完成 圖表會自動打勾
這表示當天的評估已經全部完成
圖表和勾號的顏色都是可以自定義的
在這下面 是今天待完成的評估列表
評估多種多樣我們來看看其中一些
這是一個痛感調查
要實現它 我們可調用ResearchKit的調查模塊
來呈現出精心設計的調查表
它們也可以是活動任務
你可以進行點擊測驗或者創建自定義活動
使用ResearchKit如“運動範圍”
它也可是自主報告的你可爲客戶展示viewController
就像德克薩斯醫療中心應用所做的一樣
請求用戶拍攝感染圖片並傳回醫院
傳回的也可以是任何類型數據如HealthKit或Bluetooth設備
在德克薩斯醫療中心應用裏
John使用了智能體重計
自動上傳了數據更新CareKit應用
代理函數就在這裏派上了用場
爲了更好地展示評估結果
我們需要實現症狀追蹤器的代理功能
爲開發者提供回調函數
每當用戶點擊評估欄時被調用
這個回調函數會返回一個評估事件
你可決定使用哪個視圖控制器呈現這個事件
如果你想顯示一個痛感調查事件
首先你需要使用它的數據計算疼痛數值
然後創建一個結果對象
記下它的數值和單位
如果你要添加其它額外信息你還必須更新userInfo目錄
在Care Plan Store裏更新這項事件
以及它的結果對象 事件的當前狀態
最後使用completionHandler處理異常情況
彙總所有的信息
你最後看到的就是症狀與測量追蹤器
Insights概覽頁能調用Care Plan Store數據
生成信息和圖表
方便用戶更好地理解數據
爲了讓開發者更容易生成它們
我們推出了insight部件
能導入它們到Insights概覽頁
它們包括各種信息比如提示和警告
它們也可以是圖表
如從CareKit引進的分組條形表
以及各種自定義的圖表
比如 ResearchKit的圖表
能夠輕易地被轉換成我們需要的圖表對象
我們看看這個概覽頁裏包括的insight部件
這是一個用藥追蹤的信息部件
信息部件能鼓勵用戶完成治療任務
通過推送重要信息的方式
這個信息部件使用Care Plan Store數據
計算出上週服用ibuprofen的遵循度
這些信息也能通過遠程服務器生成
傳遞到Insights概覽頁
我們來看看代碼如何向後臺store請求數據
在這裏你可以指定開始日期和截止日期
我使用上個星期天
和之後的星期六分別作爲開始和截止日期
然後調用enumerateEvents函數
在Care Plan Store上
標註我們想要枚舉的活動
以及枚舉的日期
隨後活動的的事件被返回給handler
我們可以枚舉這些事件查看它們的狀態
判定它們是否被完成計算執行度
完成了執行度計算之後如果想要生成一個信息部件
在這裏你需要把計算得出的執行度
變成一條易讀的信息
方便用戶理解
你需要先初始化信息 給它添加標題
信息內容顏色 以及信息類型
比如說 這是一條提示
接下來 我們講講分組條形圖
它能在一張圖表裏顯示多組信息
比如說 這個圖表對比了pain和ibuprofen
用戶可以從這些數據中
瞭解病情恢復進展
我定義一個變量barChartItem
類型是OCKInsightItem
barChartItem包括不同的圖表系列
我們已見過painSeries和ibuprofenSeries
要創建這個圖表
首先需定義painSeries及初始化BarSeries
然後指定標題、數組以及字符串組
和圖表填充色
數組的元素數目是不受限制的
所以你的圖表可以展示每週數據、月度數據
或者任意數量的數據
數值決定了條形圖的長度
字符串會出現在條形圖的右邊
大多數時候它們的含義都不相同
舉個例子在ibuprofenSeries裏
數值決定了條形圖的長度
但它們並不代表數據本身
再舉個例子這些1-5-4之類的數字
會很容易被誤解成藥品劑量1片藥 5片藥 或者4片藥
標籤值幫助用戶知道他們遵循用藥量
10%、50%以及40%
我們已經知道想要顯示哪些系列了
需先初始化一個barChartItem
然後指定它的標題、文字內容、填充顏色
我們有兩組數列分別作爲座標軸標題和副標題
顯示在每組條形圖的左邊
你可以註明需要顯示的系列數目
可能有1組 2組 或10組
還有兩個可選的參數需要定義也就是量程
最小量程和最大量程
如果你不註明它們
它們會被自動生成根據你提供的數據
如果你想要註明那麼請小心
不要讓數據出現偏差
舉個例子 如果數據的範圍從1到10
但註明的量程是從5到10
那麼所有低於5的數字就被隱去
數據就會失真
終於我們建好了信息部件和圖表部件
我們創建一個Insights概覽頁
首先使用這兩種部件的數組來初始化InsightsViewController
指定一個標頭和一個副標題
一個標題和副標題
接下來直接展示它得到這樣的
這是創建Insights模塊方法
下一項是連接模塊
連接允許用戶分享數據
給醫療組成員或者家庭成員
爲了簡化這一操作
我們創建了CareKit聯繫人
它有兩種類型
醫療組聯繫人包括醫生或護士
或者其他醫療組成員
還有私人聯繫人
可能包括密友或者家人
觀察連接模塊時你會發現聯繫人是根據類型分組的
醫療組成員在上面
下面是朋友和家人
我們來看看代碼怎樣創建聯繫人羣組
要創建一個醫療聯繫人首先定義一個變量
類型是OCKContact的PhysicianContact
接着初始化聯繫人對象
然後指定careTeam的類型姓名
他和病人的關係
以及填充色
接着是電話號碼、信息號碼是CNPhoneNumber對象
方便格式統一
郵箱地址是字符串
定義monogram數值
或者指定圖片
來顯示醫生或者醫療成員的頭像
當所有聯繫人都創建完成後 請初始化connectViewController
然後把它展示出來
但是這裏你依然需要編寫一個代理函數
我們等一下會提到
在我們呈現它之前
需要把它內嵌到NavigationController
因爲連接模塊同時包含主頁面和詳請頁面
最後的連接模塊是這樣的包含了ConnectViewController
我們看看剛創建的聯繫人Paul Cashman醫生
如果點擊這一欄
進入詳情頁就能得到他的詳細名片
在名片裏你能看到他所有的聯繫方式
告訴你怎樣打電話發信息
發短信或者郵件
還能在下面發送報告給他
代理在這裏產生作用
連接代理讓聯繫人之間數據共享成爲可能
舉個例子當用戶點擊分享按鈕
這個函數被調用
你會收到一個聯繫人對象
你可以決定生成哪種報告然後分享報告
創建報告和分享報告的過程非常繁瑣
看看我們是如何簡化它的
爲了更方便地使用連接模塊分享數據
我們推出了Document Exporter
它從Care Plan Store抓取信息
甚至從其它來源生成富文本PDF以供分享
就像我們爲CareKit做的所有事一樣
爲了簡化流程我們創建了CareKit文檔元素
包括頁眉和頁腳
文字和段落圖片 圖表 和表格
彙總這些元素創建一個這樣的富文本PDF
在這份PDF中包含了病人的照片
一份易讀的病情進展報告
同Insights概覽頁一樣的圖表
現在醫生也能看到了
他們能看出病人的恢復情況
還有一個表格展示了所有的主觀和客觀的測量數據
關於上一週的
我們來看看創建這個PDF的代碼
首先定義一個DocumentElementParagraph對象 只包含了文本內容
這些文本內容也可以來自Care Plan Store
或者遠程服務器
然後定義一個DocumentElementChart對象
它幾乎使用了Insights概覽頁同樣的圖表元素
所以我們不用編寫任何新代碼或者生成任何新圖表
這個表格包含了許多的標題欄
以及許多的數組
每一個數組都包含了每一行將要顯示的數據
比如 一個星期的疼痛值數據
或者 一個星期的點擊測試結果
當你擁有了創建文檔的全部元素
先初始化一個文檔對象給它添加一個標題
和一個包含所有元素的數組
把這些文檔元素轉換成PDF非常簡單直接
只要調用createPDFData方法
使用返回到completionBlock的NSData
最後輸出到文件URL
現在 當用戶點擊分享按鈕
PDF就被生成了 使用剛創建的Document Exporter
用戶可以預覽PDF他們就能知道被分享的內容
他們可以點擊分享按鈕進入分享頁面
選擇不同的方式來分享PDF
這就是Document Exporter它和連接模塊一同協作
實現了數據分享
所有的模塊放在一起構成了CareKit框架
Patient PAL最近改變他們的就醫體驗
使用CareKit
我將爲大家展示他們如何利用自定義功能
來提升用戶體驗
創建干涉活動和評估
來幫助病人恢復健康
在他們的Care Card中心型圖案被鍛鍊的小人替換
他們應用的主要功能
是幫助病人進行特定的鍛鍊
比如說 如果你專心於髖關節伸展運動
粉色的這一個
需要點擊剩餘的圓圈來完成它
但是在標註它爲完成之前我們必須完成這組鍛鍊
這組鍛鍊任務包含了一則詳細的描述
還有一個視頻
保證用戶使用正確的方式鍛鍊
他們甚至還幫助患者記錄下自己的鍛鍊過程
醫療機構也能看到這些信息
點擊觀看視頻按鈕會顯示出內嵌的視頻
當你懂得這組鍛鍊後點擊開始
這個過程中將會有一個活動任務引領你做完每一組鍛鍊
一旦完成了鍛鍊
你能看到完成進展度自動被更新
這個小圓圈就被標註成完成
在Care Card上我們爲每一組活動提供詳盡的信息
同時你可以編寫代理函數自主提供顯示信息
他們另外一項自定義
當用戶點擊其中一個細節界面時
比如說韌帶拉伸頁面
會喚起一個視圖控制器
讓你設置鍛鍊提醒
我已經完成了兩項
第三項 我想在“晚上8點做”
應用會給我推送提醒
繼續完成我的鍛鍊
CareKit提供了高度的可塑性
你可以定製這些模塊來滿足你的需求
這只是其中一部分
我們來到了最後一個部分CareKit的下一步計劃是什麼
目前 CareKit幫助你編寫以患者爲中心的應用
接下來 我們將專注於
創建應用程序和雲服務器的連接
以及把醫療信息
從雲端傳遞給醫療團隊
這一類架構已經被運用到德克薩斯醫療中心應用
和Patient PAL的應用上了
我們由衷地希望
你們在開發CareKit應用並且連接到雲服務器時
你們能分享自己的經驗
回饋整個社區
讓使用類似雲端解決方案的人也能受益其中
CareKit是開源項目
它的未來取決於你
請貢獻你的力量
你能在GitHub找到該項目
地址是github.com/carekit-apple/carekit
如果你想幫助我們完善CareKit
請瀏覽GitHub上的issues部分
你可建立新的issue或者選擇已經創建的
進行開發
請隨時聯繫我們或者社區成員
如果開發中遇到任何問題
和我們一起審查代碼
這通常需要你、社區和Apple工程師的參與
我們的工作始於這裏
當我們收到開發審查過的功能後
我們將接手這項功能給予它更多的訪問權限
我們將使功能本地化翻譯成CareKit支持的所有語言
在所有平臺上進行QA測試
這個過程可能也會需要你們的幫助
一旦這個功能可以使用我們會把它併入框架
有了CareKit我們非常渴望和大家一起工作
一起打造全新的醫療體驗
更多信息 請瀏覽這個URL
包括我們網站和GitHub的鏈接
以及我們的聯繫信息
如果有任何技術問題
或者有任何CareKit應用的想法要分享
請瀏覽這些相關演講幫你們創建自己的CareKit應用
謝謝大家出席本場演講