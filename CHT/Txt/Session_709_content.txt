爲用戶打造隱私保護
大家好 歡迎來到“爲用戶打造隱私保護”
我是Julien我來自隱私工程組
我非常激動能在今天來到這裏
你是否想過要怎樣瞭解你的用戶
而不讓他們覺得隱私被侵犯？
你是否曾和你的團隊爭論過到底要開放哪些控制選項
要保持多高的透明度才能贏得用戶的信任？
要回答這些問題
今天我們將要介紹我們自己所採用的隱私保護技術
以及你可以如何應用它們
衆所周知Apple非常注重用戶隱私保護
就在去年Tim這樣說過
“用戶願意把最私密的信息託付於我們是因爲信任
我們能回報他們的只有最安全的隱私保護
我們將爲此竭盡全力”
不只是Tim所有在Apple工作的人 從上到下
都相信隱私保護是贏得用戶信任的重要一環
爲了打造一個健康的生態系統來保護你的數據
我們整個隱私工程組和Apple的其他團隊通力合作
把隱私保護根植於我們的產品
年復一年後我們發現
最好的產品和服務是那些尊重用戶隱私
同時還能不犧牲用戶體驗
它們是非凡的服務擁有不可思議的功能
同時尊重用戶隱私
它們鼓勵用戶更放心地使用應用
因爲它們提供 透明度可控性 一致性
數據的安全性最少的數據採集
和數據使用限制
隨着越來越多的敏感信息被存入我們的設備
我們認爲隱私保護功能正在成爲一種價值不斷提升的商品
它值得你的投資
隱私保護不只是簡單的一組規則
它也是一個契機讓你實現更智能的開發設計
考慮不同的設計方案來保證用戶的最大權益
比如說它會鼓勵你不斷地優化產品
把更多智能功能帶給設備
以提高用戶體驗並降低網絡壓力
它會鼓勵你只收集你需要的數據
來提升你的服務
今天我們將會介紹標識符
如何收集與標識符綁定的數據
給用戶提供哪些控制選項給他們多高的透明度
有意義的選項及怎樣讓隱私保護成爲你應用的一部分
我們從標識符開始
我們很多人每天都需要藉助標識符
來瞭解用戶分析他們的行爲模式
這很重要 對用戶的瞭解通常是從標識符開始的
然而...
如果你追蹤用戶所做的每一件事
這會給你的用戶製造不安的使用氣氛
降低他們的熱情他們會開始思考
如果我點擊了這個鏈接我是不是也會被追蹤
一旦你的用戶開始猶豫你就開始失去他們了
標識符能幫助我們打造定製化的服務這些服務能讓我們
更好地瞭解用戶給他們提供有用的預測信息
但是如果你過多地使用它來追蹤所有事情
然後開始提出奇怪的建議這會讓用戶很不自在
標識符能非常有效地打擊詐騙
能儘早地探測和防止數據的惡意使用
但它們並不能分辨你是否從用戶那裏無節制地收集數據
所以你會怎樣做？
這裏有一些最佳做法我們想推薦給大家
首先更多地使用短期的標識符
不要持續地使用長期存在
並且一成不變的標識符
你可以讓標識符隨着時間推移自動變化
或者讓它們很容易被重置
大量使用隨機的標識符
而不是機械性地使用某人的用戶名
郵箱 或是電話號碼
大多數時候你都不需要用到它們
問問自己我是否真的需要對用戶身份進行驗證
還是採用匿名模式
爲用戶提供匿名的體驗就足夠了呢？
遵從這些最佳做法
你將能讓用戶更放心地使用你的應用
不用擔心隱私的泄漏
讓我們來看看一些例子
在我們自己的產品裏全部沿用了這些標準
如在Spotlight和Maps中所有的標識符
都會定期自動更改
所以用戶能放心使用它們
不用擔心隱私的泄漏
我們保持了這些產品的用戶體驗
同時保證了應用的標識符定時改變
我們儘量讓標識符的重置變得簡單易行
舉個例子 每一次開啓和關閉Siri
你都會得到一個新的標識符你的隱私受到保護
同時我們也儘可能地對會話進行標識而不是用戶
因爲大多數時候這就是我們需要用到的全部信息
我們想讓你們更簡單地
使用這些標準
所以我們開放了相應的API能讓你們很方便地
生成標識符
舉個例子生成通用唯一標識符（UUID）的API
在Swift中只是簡單的一行代碼
當你調用它的時候就能生成一個標識符
快速地演示一下
每當你調用這個API的時候會得到一個128位的隨機數
這個數字如此之大足以讓它成爲全局唯一的
隨機數字
如果再調用一次你會得到另一個數字
再調用一次等等
你能自由決定如何使用
這個隨機數字
你可以用它來標識對象 會話 或者用戶
如果想使用固定的標識符應該怎麼辦呢
你不需要生成標識符
而是調用它
Vendor ID能解決這個問題
它解決問題的方法是
每當你調用這個API時
它會給這臺設備提供一個標識符
有了它你就能很容易地爲設備定製服務
不需要再生成一個標識符了
每當你調用這個API時
對於某一個應用以及某一個應用開發商
他們將會得到同樣的字符串即通用唯一標識符（UUID）
比如 你在App Store上下載了兩款應用
並且它們來自於同一個開發商開發商就能識別出同一個UUID
這能讓開發工作變得簡單
更方便地爲用戶定製服務
相應的 不同的應用開發商從你設備上得到的標識符
也各不相同
請注意 用戶擁有最終的控制權
他們可以選擇卸載你的應用
另一個系統層面的固定標識符是Advertising ID
它只是被用來接收廣告
它的工作原理是每當有應用調用這個API
這臺設備對應的UUID就會被生成
從此以後這個UUID會是固定的數值
直到用戶決定重置它或者完全取消它
以上就是我們提供的幾個API
每一個都有不同的功能
有的被用來生成標識符
有的被用來識別系統固定的標識符
除了系統層面的標識符我們還會用到網絡層面的標識符
每當你檢索無線網絡連接到一個Wi-Fi網絡時
你的MAC地址就被開放給所有人
這可能會造成位置隱私的泄漏
所以在iOS 8中我們改變了掃描網絡的工作方式
我們開始使用本地管理員MAC地址
隨着時間推移它會自動改變
這能極大地保證隱私安全
因爲別人很難再追蹤到你了
我們非常開心和驕傲將這項技術
不僅應用於iOS同樣在macOS中
如果你擁有一個Wi-Fi網絡並且擁有網絡測試設備
我們建議你測試你的裝置
用iOS seeds及macOS seeds
你們一定已聽說Messages應用以及它對應用擴展的支持
這是非常酷的新功能兼有強大的隱私保密性
這些應用擴展不能讀取你的信息內容
它們只能看到一個隨機的UUID
對於不同的應用擴展
在每一組對話裏UUID也會各不相同
所以它的保密性非常強
有時 即便你不生成或訪問任何標識符
只是收集一些無序的數據
也會產生問題如果你把這些數據彙總
你就可能得到一個穩定的設備特徵
或者一個隱性的標識符
一旦發生數據外泄時這個漏洞就會被暴露出來
你可能會認爲數據都是匿名的
但是許多研究者指出
通過這個漏洞黑客將很容易識別出數據裏的用戶信息
你肯定不想面臨這樣的情況
所以你應該盡少地收集用戶數據
我們也爲此提供幫助
我們創建了安全強大的沙盒
保護你的應用數據安全不被第三方攻破
同時防止用戶身份泄漏
我們開放了功能強大的API來幫助開發應用功能
實現數據保護同時我們也限制了這些API
對用戶身份信息的採集
舉個例子今年我們重新修訂了一些API
以往它們能被用作身份信息採集
我們把其中有用的API屬性列入了白名單
將其它可能用作身份採集的屬性
列入了黑名單
簡而言之這些對你意味着什麼呢？
標識符非常有用但是我們推薦
儘可能多地使用短期標識符
儘可能多地使用系統提供的API
來生成以及讀取標識符
用戶會更放心地使用你的應用
並且分享他們的數據
談到數據讓我們來看一看數據收集
我們每天都在向用戶收集數據
這對於數據驅動型的產品開發非常有用
這個功能非常棒
但是有一天你可能會面臨一個奇怪的問題
你從用戶那裏得到了太多的信息
你可能比他們更瞭解他們自己
這非常奇怪
所以問問自己...
如果他們知道 你擁有他們的所有數據你會怎麼想？
你會覺得尷尬嗎？
萬一這些數據是關於你的父親？
你的母親 或兄弟姐妹呢？
擁有數據既是一項優勢 也是一種風險
你需要很好地平衡它們
所以我們能做什麼？
我們建議你採用
注重隱私保護的數據收集方法
尤其要避免投機性的數據採集
你可以一次性收集所有能找到的數據因爲將來你可能會使用到
找出應用的關鍵績效指標
根據它們來收集數據
以下是幾個可以採用的小技巧
分級收集 採樣收集 聚合收集
我們來看看分級收集
分級收集的核心思想就是隻採集某一個等級的數據
只要它能滿足你的需要
假如你想知道
用戶打開應用內設置的頻率
我們向某一個用戶提出這個問題
要實現它非常簡單你只要加入一個計數器
然後查看次數
假如這個測試用戶 他在一天內
先後86次打開了應用內設置
這條信息非常有用 對吧？
因爲這預示着你的應用配置可能有問題
你可能需要讓某些設置更可見
但是你真的需要收集精確度如此高的信息嗎？
也許只要知道有人進入應用內設置多過50次
這樣的收集會不會更有效呢？
它能給你提供同樣的信息
也許你需要改進和提升
你的應用配置
如果你想知道
不僅僅是一個用戶
而是很多用戶的使用趨勢
你只需要向每一位用戶提出這個問題
在某一天內我的用戶打開應用設置的次數是多少？
如果你只想知道一個平均值
你根本不需要向所有用戶採集數據
你只要得到統計意義上的平均估計值就足夠了
事實上你只需要從0.1%的用戶設備上收集數據
你就能得到一個非常接近的平均值
事實上如果你只從10%的用戶收集數據
你的估計值就能達到0.1的精準度
所以你並不需要機械地從所有用戶那裏採集數據
這一切只取決於你所關心的性能指標
有時 若你想採集一些非常敏感的數據
而數據本身是不應該被採集的
可是你又非常希望瞭解它們你會怎麼辦？
你可能會需要這樣一種科技
它能讓你從一個整體得到信息同時保護個體的隱私安全
這樣的科技是存在的我們稱之爲差分隱私
差分隱私技術是用戶捐獻數據最安全的方式之一
它能幫助你從整體得到信息
同時保護個體的隱私安全
它提供了強大的數學算法來保證個體的隱私安全
在今年 我們將這項技術集成到了iOS和macOS
在我開始前我想強調兩件事
第一 這項技術是我們的隱私技術工具箱裏的新成員
我們已擁有了許多用以保護隱私的工具
而它將是其中最令人興奮最前景廣闊的一個
第二 這將是一個快速的介紹關於這項令人着迷的技術
我將竭盡全力啓發大家希望你也能爲之興奮
讓我們開始
如我之前所說它提供了強大的數學算法保證
讓我們先看看一些數學定理
不 我想我們可以試着換一個角度來認識它
假如你有一些敏感數據
給它加入一些噪音你就得到了一些私有化數據
然後你可以聚集這些私有化數據
來得到一些信號
讓我舉一個例子我上週花費了多少個小時
來準備這些幻燈片
那是一個忙碌的星期所以假設我工作了128個小時
我給它添加一些噪音也就是說
我把這個數字變成一個完全不同的數字
讓我進步一解釋一下噪音在這裏的含義
先向大家聲明 這是一個簡化版的解釋
但是它能夠描述這項技術的核心要領
使用這個數字 128
我們用它來生成一個投影數值類似於哈希算法
要生成這個數值我需引入一個所有位置全部爲0的矢量
只把第128號位置標註爲1
這樣它就變成了只有一個1其餘全是0的大型矢量
要給它添加噪音也就是切換矢量的
某些位置上的數值
一些0會變成1
一些1會變成0
最關鍵的一點是0保持不變的概率
只稍微大於它變成1的概率
1保持不變的概率
也只稍微大於它變成0的概率
這就是模糊化處理數據的一種方式
在將它分享給Apple之前完成
這裏還有另外一個有趣的發現
如果我對數據進行兩次模糊化處理
即使是相同的數字
每一次處理過後我會得到不同的數字
不同於典型的哈希算法
我無法使用字典攻擊
來破譯它對應的數值
這一切都在設備本地完成
在你的數據被分享給Apple前完成
另一個例子 如果我想知道
Apple員工上週的工作時長
我工作了128小時 Jessie工作了48小時Timmy工作了130小時
這些數據都收集自Apple員工
然後噪音被添加到這些數據上
最後 Apple收集到的是一大堆二進制的噪音矢量
每個單獨的矢量對於我們都毫無意義
但是如果把它們加在一起清除它們的噪音
我們最後會得到一些特徵的統計結果
比如說在這裏
Apple員工上週的平均工作時長爲41個小時
我們先計算矢量和
再使結果標準化
接着觀察矢量的每一列
尋找統計意義上的顯著值
看它是否大於隨機數
爲什麼這項技術很酷？
因爲它爲我們提供了一種途徑
安全地得到整體性的答案
有了它 你可以計算平均值判斷某種特徵屬性是否存在
甚至繪製頻率直方圖
這種方法能夠保證
個體的隱私被充分尊重
即使Apple也不例外
我們只能從聚合的數據中得到結果
可是你也許會問
萬一我是唯一一個貢獻數據的人呢？
有時候可能一個用戶會成爲唯一的聚合者
爲了迴避這個問題我們引入了“隱私預算”概念
它限制了某臺設備
在單位時間內的數據捐獻次數
這些信息也不會綁定任何一個標識符
之後我們也會從服務器上永久刪除這些數據
我們來看一看這個例子
假如我們想了解表情符號的使用情況
我們需要從願意分享“診斷與使用”數據
的用戶那裏收集數據
當用戶開始使用鍵盤輸入表情符號
數據被記錄在本地設備上
接着Julien Jessie和Timmy
分享了各自的數據且在設備本地添加了噪音
在上傳給Apple之前
隨着越來越多的人分享數據
我們可以得到各類信息
比如哪些表情符號是最受歡迎的
我們可以使用這個信息
相應調整它們在用戶界面的順序
也能更準確地預測用戶的使用習慣
今年我們將把這項技術
主要應用到四個用例裏
用它來收集表情符號數據
用它來收集新造詞
我們能學到本地字典裏沒有的新詞 比如俚語
我們還用它來收集深層鏈接數據
查看哪些深層鏈接在應用裏最受歡迎
讓它們在Spotlight以及Lookup Hints中推廣
這讓人非常興奮
並且我們保證在採集數據時不侵犯用戶隱私
數據的收集對象僅限於
開啓了“診斷與使用”選項的用戶
如果你沒有開啓它
我們就不會從你那裏收集數據
你擁有決定權
這項技術對你有何意義呢？
我們認爲差分隱私是一種前景非常廣闊的
注重隱私保護的數據收集技術
我們很高興能在今年把它集成到iOS和macOS上
從整體的角度收集數據同時不侵犯個體隱私
我們不使用任何標識符
我們不收集任何原始數據
這就是我們隱私保護工具箱裏的另外一個成員
我們希望它能被越來越多地使用
來開發新的功能
你們的用戶會看到我們的努力
我們竭盡所能
保護他們隱私的決心
我們希望這能鼓勵你和我們一起
採用這些尊重隱私的開發準則
接下來我們將介紹隱私的透明度和控制權
我想邀請Jessie上臺
謝謝
大家好 我叫Jessie
我也來自隱私工程團隊
我負責以下產品隱私安全如Apple Music
Photos和教育類產品
Julien給我們詳細介紹了
如何識別用戶身份
以及收集必要的數據
來開發強大的功能同時尊重用戶隱私
除此以外 數據收集過程的透明也非常重要
讓用戶瞭解他們被收集的數據
當你這樣做時用戶會更加了解
自己隱私的控制權
只要用戶對他們隱私安全有信心
你就贏得了他們的信任
他們會更放心地使用你的應用
其中一個提高用戶隱私透明度增加控制權的例子
是iOS 10中的廣告推送服務
在News和App Store裏
用戶可以看見這個藍色的廣告按鈕
當用戶點擊它時
他們就能知道這條廣告爲什麼會被推送給自己
所以當任何開發者購買廣告服務時
可以選擇特定的目標用戶羣
來投放廣告
同樣的 用戶現在也能通過廣告信息
清楚地知道自己所在的
廣告用戶組
除此以外 用戶還能進入隱私設置
廣告
查看廣告信息
我們對用戶完全透明
讓用戶知道我們正在收集哪些數據
服務於News和App Store
這個功能將會在接下來推出
在廣告服務中我們爲用戶提供隱私控制權
是通過限制廣告追蹤的方式完成
正如Julien提到的
用戶擁有專門的廣告標識符
你可以使用它來追蹤用戶
在我們平臺上投放廣告
當用戶打開限制廣告追蹤選項
其實是在告訴我們
他們不想被廣告追蹤
因此在iOS 10中我們在此基礎上更進一步
當用戶開啓了限制廣告追蹤
廣告標識符變成一個全部爲0的UUID
我們從代碼等級實現了這一功能
一旦用戶開啓了廣告追蹤限制
他們就再也不能通過廣告標識符被追蹤到
如果用戶取消了廣告追蹤限制
你的應用就能訪問一個新的隨機標識符
你也許會問對於開啓了追蹤限制的用戶
我還能給他們投放廣告嗎？
當然可以
你可以在應用裏顯示文意廣告
根據應用內容的上下文來投放廣告
你只是不能再追蹤廣告用戶
如果他們開啓了廣告追蹤限制
請注意 我們禁止緩存廣告標識符
到用戶的應用的存儲裏
因爲這會給用戶重置標識符帶來麻煩
所以 這一切對你有什麼意義？
我們提升了廣告服務的隱私透明度
讓用戶更放心地使用News和App Store
我們從代碼等級開始支持廣告追蹤限制
當用戶能夠使用這些隱私保護選項
比如廣告追蹤限制
這能幫助他們作出正確的隱私保護選擇
我們還爲用戶提供另外一種方式
來進行隱私保護設置就是同意警報
所以在iOS macOS tvOS以及watchOS裏
用戶有權決定哪些應用可以訪問
某一類受保護的數據
受保護數據包括日曆
聯繫人 照片 HomeKit
當你的應用第一次請求訪問時
需要通過調用API來完成
iOS會顯示這樣的警告
這時用戶有權決定
是否授予應用訪問權限
當時機和情境都正確時
用戶就能做出他們認爲正確的選擇
我們稱這個爲及時警告
我還想給大家介紹一下今年我們推出的新特性
它們也都擁有隱私設置和同意警報功能
首先是媒體庫隱私設置
它可授權開發者讀取Apple Music用戶賬戶狀態
讀取用戶的商店首頁信息
向播放列表添加內容
以及讀取用戶的媒體庫
我們理解用戶的媒體庫數據和
Apple Music賬戶信息
都是非常私人的信息
所以我們希望用戶擁有決定權
哪些應用能夠訪問這些信息哪些不能
現在如果你的應用已可在iOS 9.3裏訪問媒體庫
在iOS 10中你可以繼續訪問
所以如何知道你是否已有訪問權限了？
對於大多數的受保護類數據
我們擁有一個授權狀態API
對於不同類型的數據API的名字可能會有所不同
以媒體庫爲例
你可以調用這個API
然後得到這樣一個enum數值
若是notDetermined
兩個原因會造成這種情況
一 你還沒有請求用戶授權
或者二 你已經請求訪問受保護數據了
隨後用戶重置了隱私設置
如果你看到denied
這表示用戶“不允許”
他們不允許你的應用訪問某類受保護數據
這時你有幾個選擇
你能相應地調整應用的使用方式
讓用戶能夠使用一部分功能
而不需要開放他們的數據
或者 你可以打開應用的隱私設置
也許這一次用戶會做出不同的決定
如果他們願意的話
若你看到restricted
可能是由於這兩個原因
一 這臺設備設有家長控制
限制了應用程序對這類保護數據的訪問
或者 二這個應用被管制了
也許它處於教育模式或者企業模式
設備管理員規定了你的應用程序
不能訪問這類受保護數據
當然若你看到authorized代表你的應用程序已被授權
此外 我們還推出了其他非常棒的新特性
它們也支持隱私設置
另一個例子是語音識別
你可以選擇是否允許錄製的語音被上傳給Apple
然後被轉錄成文字
爲什麼我們讓用戶選擇
哪些應用可以訪問語音識別哪些應用不可以
因爲我們想讓用戶知道
一旦他們授權了訪問
他們的語音文件
會被上傳給Apple並轉錄成文字
確保你使用這個API時提前獲取授權
我們還推出了SiriKit
這非常令人興奮
用戶現在可以直接使用Siri
控制應用程序
但是爲了使Siri懂得用戶具體的操控請求
你的應用必須首先發送使用情境信息給Siri
包括用戶個人信息以及應用程序信息
我們希望給予用戶決定權
哪些應用可發送情境信息給Siri
以及哪些不可以
所以你必須事先向用戶請求這項權限
Siri纔會響應用戶的操作
這項授權可以通過requestSiriAuthorization API完成
你也許已經聽說了全新的TV單點登錄功能
它允許特定的電視應用
訪問用戶的訂閱狀態信息
然後將他們自動登錄進應用程序裏
目前這項功能只開放給特定的電視應用
請諮詢我們的WWDR客戶經理
如果你也想爲應用開通此項功能
你們喜愛的iOS版Photos應用其一切特性現都移植到tvOS上了
同樣的還有HomeKit
它們在tvOS上的應用都擁有隱私設置
除了這些強大的新功能外
我們還更新了你的應用
請求權限的方式
2014年我們開始要求所有應用程序向用戶請求使用位置信息時
必須提前申請
並說明使用位置信息的原因
我們發現這對用戶很有用
他們能做出更加正確的選擇
如果他們理解位置信息被使用的原因
所以在iOS 10中我們把這項服務延伸到了所有類型的受保護數據
當你的應用程序試圖訪問任一保護類數據
你需要在plist裏提前聲明
並附帶明確的使用原因
讓我們看一看這個列表
回想一下我的應用有沒有使用到這裏的任意一類數據？
都有誰的應用使用到了一種數據？
好的 兩類或者三類的呢？
好的 你將需要提前聲明
在應用的info plist裏面
如果你是tvOS開發者這四類受保護數據
可以在tvOS上被申請訪問了
你也需在應用info plist上提前聲明
現在 我將快速介紹目的字符串裏的
關鍵值和關鍵名它們需在應用info plist裏提前聲明
你們不需要現在就把它們記下來
它們會在開發文檔和Xcode上開放給大家
我們來假設你想編寫一個迪斯科燈光的應用
用戶第一次下載後
會瀏覽不同的特性 瞭解其功能
當他們添加第一個迪斯科燈的時候
你的應用會請求HomeKit的訪問權限
當時間和情境都正確的時候
用戶看到同意警報出現在屏幕上
此時此刻 你將需要給用戶展示一條
目的清晰 意義明確的目的字符串在同意警報裏面
我將給你展示 如何簡單地
使用Xcode添加目的字符串
去到應用的target選項
Info部分
自定義iOS目標屬性
添加新鍵
在這個例子中我們選擇
隱私HomeKit使用描述
輸入一條意義明確的目的字符串
讓我們輸入...
這將允許你使用HomeKit來添加迪斯科燈光
時間和情境都正確
用戶知道爲什麼我們需要HomeKit的使用權限
他們更可能做出對於他們而言正確的選擇
如果你不提前聲明
你的應用會怎樣呢？
你的應用程序會崩潰
因此 爲了保護隱私安全
任何爲iOS 10或其以上版本開發的應用
在請求某類數據的訪問權限之前
必須先在info plist裏提前聲明
如果不這樣做應用程序將會自動退出
你的用戶會看到應用程序自動關閉
在Xcode你能看到這樣的報錯
它將指出應用請求訪問數據的具體類型
及你要在info plist裏添加的具體key
我們讓你的應用崩潰的原因
是爲了防止你的應用被攻破時
第三方訪問你沒有請求過權限的保護數據
我們不希望你的應用
訪問任何未授權的保護數據
請記住 你必須爲應用裏的
所有用到的第三方庫負責
當你選擇這些第三方庫時
請保證它不侵犯用戶隱私
所以這一切對你都意味着什麼呢？
在iOS 10和tvOS中有一些強大的新特性
他們都擁有隱私設置
你需要提前聲明
請求讀取受保護數據
在應用的info plist裏
擁有一個清晰並明確的目的字符串 
將會幫助用戶做出更好的決定
除了這些強大的新功能
我們對現有的框架也做了一些更改
來幫助你從頭打造應用的隱私保護
首先 我想介紹一下pasteboard的更改
現你可設定一個過期時限和localOnly變量
給每個pasteboard上的條目
設置過期時限
會讓pasteboard上的信息條目
在超過期限那天被移除
而設定localOnly爲真
將會使相應的信息條目從全局剪切板中被移除
現在來看個例子
這個例子中我們有一個UIImage
將把它放進pasteboard中
和它一起的還有一條字符串“Hello, world.”
我們將會把過期時限設置爲120秒後
並且我們將把localOnly值設置爲真
所以 兩分鐘後這些信息
將不會在pasteboard中被找到
並且這些信息也不能從全局剪切板中被複制
爲什麼要這麼做呢
你需要了解一個事實
當用戶在複製一些十分敏感的信息時
比如說密碼 電話號碼 或者郵箱地址
它們不應該長時間存在於剪切板上
那麼就設定過期時限
如果你覺得這些複製的信息
不應該被用在全局剪切板上
就設定localOnly爲真
我們也對pasteboard做了一些更改
首先 所有已經被命名的剪切板會被默認更改爲非持久的
將剪切板設爲“持久”
將會觸發一個棄用警告
此外
調用Find pasteboard函數
將會得到一個空白對象
我們強烈推薦大家使用
shared containers而非pasteboard
當你想在同一設備的不同應用中
共享信息的時候
這將會是更安全的做法
相對於pasteboard來說
我相信你們的應用程序很多都集成了Core Spotlight框架
所以這裏還有幾點需要大家注意
尤其在集成CoreSpotlight框架過程中
首先需要確保用戶的每一個點擊動作
不會導致NSUserActivity被觸發
你絕不會想讓你的系統呈現出
一系列的用戶並不明白的事件
相反的 只觸發那些真正有意義的並且用戶會回去再看的事件
並且 當用戶數據十分敏感時
不要設定eligibleForPublicIndexing爲真
你肯定還知道 在iOS 10中我們新支持的微件
當用戶開啓一個微件時
它會在主頁面和鎖屏頁面同時顯示
正是因爲這樣 我想推薦一些最佳做法
來提醒你們在創建自己的微件時
謹記它們也在會顯示在鎖屏界面
首先你需要評估
那些將被放入微件的數據敏感性
若你覺得這些數據不適合出現在鎖屏上
那就不要放入微件或者想辦法
不讓它出現在鎖屏上
確保這些數據是連貫的並且可預測的
當我今天開啓你的微件
我明天是不是還能看到類似的內容？
一個月過後呢？
每天呈現不同的數據其實是可行的
不過我需要了解什麼類型的數據適合展示在那裏
並且請記住那些屬性爲FileProtectionType.complete的數據
不能在鎖屏時出現
接下來讓我展示一個實例
一個查看好友位置的微件
在鎖屏的時候 位置信息是不可用的
因爲我們知道你朋友們的位置信息是極其敏感的
它們不應該出在鎖屏界面
因此我們顯示了一條提醒解鎖以查看位置信息
並且位置信息並不在其中
當我用touch ID去解鎖設備時位置信息纔可見
我們推薦這種做法
尤其當你覺得微件的信息很敏感時
今天 Julien和我介紹了很多方面的內容
一開始 我們介紹了標識符
它是進行用戶識別的最根本依據
在應用程序中
並且你應該更多地使用短期標識符
和系統API提供的標識符
然後我們介紹了
當你在收集用戶數據的時候
你應該通過一種更尊重隱私的方式比如分級收集或者採樣收集
或者應用新的技術比如差分隱私
給用戶提供更高的透明度以及更多的控制權
來管理標識符和數據的分享
你將取得他們的信任並鼓勵他們放心使用你的應用
當你讓用戶決定自己的隱私設置的時候
這會促使他們作出對自己更有利的決定
我們還展示了一些特別棒的新特性
及一些非常棒的工具幫助你爲自己應用
從頭打造隱私保護
想要了解更多的詳情請瀏覽這個網址
這裏還有一些本週相關演講你也許會感興趣
謝謝