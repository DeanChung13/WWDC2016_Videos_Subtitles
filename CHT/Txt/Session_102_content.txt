下午好歡迎來到2016全球開發者大會
自我們上次相聚 已有一年時間且發生了不少事情
新出了tvOS然後是四個Apple OS平臺
其中很多擁有其App Store
並且我們的所有平臺都爲其自身的獨特體驗進行了優化
但他們共享了相當多的通用技術和API
令你容易將你的應用帶到所有四個平臺
通過同時衡量個體特性
我們的專家工具鏈對於這四個平臺是相同的
他們共享大部分的框架和庫
還有基本的編程概念和語言
也是相同的
今天我們要宣佈很多新的API和技術
你將可以利用到的
你會找到更多的方式來表達你的觀點
你甚至可以瞄準更多市場中的更多用戶
特別是我們的iOS X對於開發者來說變化巨大
事實上 至少如果你看下我們今早宣佈的 iOS
你會發現我們開放了iOS的整個用戶體驗
給開發者 涵蓋了所有東西從通知
到電話 信息 地圖甚至是Siri
一個重要的概念我們用來實現這個那就是extension
並且你可能記得我們兩年前介紹了extension
其代表了一個日益重要的機制
因爲他們允許你從應用中擴展開來
並參與到我們的系統功能性
它們允許你安全地定製我們的OS
通過運行短生命週期的沙盒服務沙盒服務按需啓動
我們發出的產品已支持很多extension points
並且今年我們會添加更多
允許你更深入的連接到我們的OS和應用
也許最令人興奮的新extension point就是創造iMessage App
我將交給Darin Adler來給你講述它的所有細節
新信息用起來非常好
並且我希望你們都會這樣
iMessage App是你如何變成它的一部分
現在 正如Andreas所提到的iMessage App是extension
意味着它和其他extensions一樣
你將其包含到App Store裏的應用上
但對於iMessage Apps也有另一個選項
你可將它們包含到iMessage App Store
也就是從信息裏直接獲取
看起來像這樣
現在 當你通過iMessageApp發送交互信息
你會在上方角落看到應用的圖標
但甚至更重要的是
如果你發給交互信息的那個人
還沒有這個應用
他們將得到這條鏈接上面寫道獲取應用名稱
如果你點擊該鏈接
這會帶着你獲取或者購買這個應用
因此這是個令人驚異的方式來令你的用戶
傳播你的應用 從一個人到另一個人
現在 如果你想創建一個便籤應用這真的很簡單
根本不需要編寫代碼
你只需爲應用的圖標準備好所有的圖像素材
便籤的圖片素材
把他們放進Xcode建立 然後提交到iTunes Connect
如果你想編寫一個更爲複雜的應用
並利用iMessage Apps裏的所有力量
你用Swift編程並使用UIKit就像其他的extensions一樣
還有一個新的Messagesextension point
這個Messages extension point中的類給你訪問權限
你需要一切都在Messages App裏
因此有一個對象代表你發出的信息
有一個對象代表
此信息作爲其中一部分的整個對話
甚至有一個對象代表一個叫會話的東西
讓你將信息彙集在一起
這是一個很好的方式來創建協作性的iMessage Apps
現在 所有這些已完成都沒有妥協掉私密性
信息就是以此出名的
你的應用沒有除當前對話外的任何訪問權限
應用之外正在發生什麼
它甚至不需知道
誰參與了 你發送給誰
因爲保持了私密性的完好無缺
現在適應性設計對於任何iOS app開發都很重要
這對於iMessage Apps甚至更加重要
那是因爲信息運行在
所有種類尺寸形狀不一的設備和適應性
所以它運行在iPad上它運行在iPhone上
它運行在iPad的slide over裏 豎直和水平
iMessage Apps也需要它
對於iMessage Apps有額外考慮因素
就是當它們運行在Compact Mode
底部鍵盤
並且你能在它們間滑動切換或者你能調用相同的應用
並將其擴展到全尺寸
有時應用會完成這個操作有時用戶完成該操作
適應性設計對於這個體驗也很重要
所有你所需開發iMessagesApp的東西都可用了
因此你現在就能開始了
SDK有我談論的所有東西
所有來自messagesextension point的東西
並且模擬器甚至有一個新的特殊版本的信息
專門給開發者的
來讓你看到對話的雙方
並且試驗你的iMessage Apps
來看它們是如何發送和接收的
現在Adele Peterson將向你展示如何將這些在iOS X中集合起來
謝謝 Darin
正如你今早所見 我們在迪斯尼的朋友已經做了一些很棒的便籤
我將向你展示他們是如何做到的
在Xcode中組合起一個便籤應用
現在 這僅將花一分鐘因此即使我現在開始一個新的項目
其實我幾乎都要完成了
通過選擇便籤包應用模板
我會給它一個好的名字像是《星球大戰》
保存它 且選擇便籤資源類別
現在 我想要便籤有一個好的圖標
當我在信息應用抽屜看他們時
我將從拖拽進我的圖標開始
現在我可以選擇我的便籤包並把便籤拽入
好的 讓我們試一下
信息現在模擬器中
對於你在iMessage Apps中試用你的便籤很容易
好的 讓我們運行便籤包我喜歡這個8-bit的機器人
所以我可以試下發送一個
並且我甚至可以試驗剝離
並且拖拽一個便籤到另一個信息
看起來不錯 如此輕鬆就做出一個便籤應用
現在看看iMessage Apps
我這有個冰淇淋應用
我女兒很喜歡這類的應用
可以讓她設計和創造事物現在我要做iMessage App
爲她和她的朋友們製作冰淇淋便籤
在Compact View中 你有已經完成的冰淇淋便籤
並且當我點擊加號 應用擴展開並顯示冰淇淋創建UI
我將從選擇一個筒身開始
我將會選擇它併發送
現在模擬器顯示
會話的發送方和接收方
所以你甚至不需要使用兩臺iOS設備
來測試你的iMessage App
在這個視圖中 我實際是John Appleseed並且我將會把筒身發送給Kate Bell
讓我們從會話的另一方來看一下
在這裏Kate已經收到了筒身
你可以點擊此信息 啓動app
添加一些冰淇淋球並將其發回給John
然後在會話的另外一邊
你接收到這個
你點擊此信息 加上冰淇淋頂
並將其發回給Kate
現在 就如看起來的一樣美味
我不想要我的整個會話
被這些半成品冰淇淋甜筒所佔據
其實有個更爲簡潔的方法來創建這個協同性的iMessage App
如果我爲每一個信息使用相同的MS會話
那麼早前創建冰淇淋的步驟將被取代
通過緊湊簡潔的描述
並且你將只會看到後者也就是最新的冰淇淋信息
我將在Xcode裏做出變化並向你展示它看起來什麼樣
讓我切換到冰淇淋項目讓我們看看
這裏是我的部分代碼創建了MS message對象
我將會拖拽進
我將會拖拽進此代碼
這段代碼是看會話中有沒有選定的信息
那是你點擊該信息時所得到的
並且它全屏啓動應用
因此如果有一個選定的信息
我們會使用該信息所關聯的會話
我們會傳入一個新的MS會話
讓我們試一下
好的 現在我們再次啓動這個應用
我們點擊加號按鈕 選擇一個筒身將它發送給Kate
加上一些冰淇淋頂 發回給John
然後將它完成 併發回給Kate
所以現在你能看到那些描述
描述此過程先前的步驟
並且你不再有半成品的冰淇淋了
在完成的產品的上面
這就是你能利用iMessageApps所能做的一些小嚐試
接下來 Robby Walker會跟你們談談Siri
謝謝你 Adele
五年前
我們發佈了SiriiPhone的智能助手
從那時起 Siri已經和人們交談幾千億次了
如今 Siri在五類設備上都可用
並且支持36種本地化語言
Siri也有很多新的特性和改進的核心體驗
一個很酷的例子 在iPhone 6s和iPhone 6s Plus上
你可以立即開始和Siri說話當你按Home鍵的時候
以幾乎零毫秒的延遲
多虧了我們硬件和軟件團隊之間令人驚奇的合作
但是當然 直到今天
有些很重要的東西一直缺失那就是應用
所以我們非常興奮地在iOS上啓用初版的SiriKit
我們相信對於人們的最佳體驗就是使用他們喜歡的應用
你們所有人已經創建的應用
有着SiriKit
人們現在將能夠同這些應用進行交互
通過一個嶄新的 談話式的方式
我會談談如何讓你的應用與SiriKit一起工作
來提供一個很棒的 談話式的體驗
Siri所做的第一件事是理解用戶說了什麼
採集音頻並將它轉換成文本
然後 Siri理解用戶是什麼意思
採集文本並將它轉換成我們稱之爲intent的東西
依據intentSiri接下來採取行動
並且提供反饋 同時通過視覺和語音
你的應用將提供三樣東西
第一個是幫助Siri進行理解的詞彙
第二個是應用邏輯你的核心功能
並且當然了 一個很棒的用戶界面
現在 我們設計了SiriKit以便Siri可以處理對話
並且你的應用處理功能
這麼做最棒的是它意味着採用SiriKit會難以置信的容易
並且你的用戶們可以期待一個連續的高質量的體驗 它非常自然
感覺像是一個談話而不是一個命令行
讓我們深入一點
你的應用的一個角色是提供詞彙
有兩種 第一種是應用的詞彙
這是面向你應用的任何用戶都應該知道的術語
像是UberX或Pinboard
另一種是用戶詞彙
這些術語對於你應用的個體用戶來說更詳盡和重要
像是他們的聯絡人姓名或是照片相冊的名字
你的應用的主要角色是提供應用邏輯
它在三個重要時刻伴隨extension而來
第一個是幫助Siri理解用戶意圖的參數
第二個是幫助Siri展示給用戶將會發生什麼
如果當他們確認的時候
第三個 當然了 就是掌控此意圖
來完成用戶想完成的
並且在此會話中Siri展現圖像給用戶
你可以選擇性提供第二個extension來配置這些
以便在使用Siri時 你的應用
仍然像是在其他地方用你的應用一樣
讓我們看一個 叫Hologram的信息應用集成
Hologram是在遙遠的銀河系發送信息類軟件中
排名第一的應用
假設有人跟Siri說
“發一個hologram給Obi-Wan 你是我唯一的希望”
現在 Siri的工作是提取音頻並將其轉化爲文本
但Siri需要你應用的幫助
Siri自己不知道Obi-wan是一個重要的用戶
還是你用戶生活中一個重要的人
所以通過提供這部分的詞彙給Siri
你可以確保Siri理解你的用戶說了什麼
接下來 Siri會進行理解用戶正試圖做什麼
在這個案例中 是發送一個重要的信息
並且Siri也將試圖理解參數
像是收件人和內容
Siri將所有這些信息打包成一個結構化的對象
一個很好 簡潔的對象
你的應用不需要擔心數不勝數的方式
某人可能會表達同樣的觀點給Siri
它是不是不同的短語或者多步驟的交互
那些都被搞定了所有你需要操心的就是
這個相當簡單的對象
然後SiriKit會把這個對象傳遞給
extension來幫助參數的解析
例如 可能你的app知道用戶說“Obi-Wan”
但其通常指Old Ben Kenobi
你可以教SiriKit來更新此intent
然後就是重要的時刻了
現在要實際處理用戶的intent
SiriKit再次將這個對象傳給extension來進行處理
在這個例子中 你會發送信息
你會進入一個逃生艙
翻滾過沙丘 對付一些Jawa
你會爲你的用戶們完成這些
與此同時 Siri會提供
一個默認的用戶界面給這個交互
如果你想 你也可以把你的應用體驗帶進Siri
以便讓你的用戶們感覺更熟悉
就是這樣
這就是你的應用必須得做的三件事
因爲SiriKit會處理會話
處理這個會話實際上意味着很多
Siri行爲不一
取決於某人是如何開始和Siri談話的
所以如果你拿着你的電話按Home鍵
看着你的屏幕
Siri將會提供更多視覺反饋減少大聲說出來的東西
但若你說“Hey Siri”或你在車裏用CarPlay
那麼Siri會展現更多東西
抱歉 是說更多而展現更少
SiriKit由extensions和NSUserActivity所支持
這些相同的技術還支持了正在增加的OS集成
本週你會聽到更多關於它們的消息
今年 SiriKit會在六個領域連接到應用
在每個領域中會有多於一個的intent
來提供一個完整的 會話式的體驗
例如 在Messaging裏你可以發送或者搜索信息
在支付裏你可以請求或者發送支付
並且SiriKit會對所有Siri語言可用
這可是意義重大
當我之前說Siri會處理會話的時候
我實際的意思是Siri會處理會話
用所有36種本地化語言
所以你的應用不需要擔心這些
我們非常興奮想看到你們將會創建什麼其他我們認識的人也是
Siri 跟應用問好
我很快地跟它們成了朋友
籍此有請ChrisLattnert談下Swift
好的
謝謝 Robby
讓我們看看Swift有什麼新特性
很容易忘記我們推出了Swift
並在不到兩年前發佈了它
在這麼短的時間內
你們已建立並提交逾100,000個應用到Apps
包括這些響噹噹的應用
現在 Swift在企業中也同樣流行
舉個簡單的例子
IBM已經開發和部署了數以百計用Swift寫的應用
現在
人們喜歡Swift有很多原因
其中一個就是我們不到六個月前把它開源了
從那開始 它變成
GitHub上下載量第一的語言項目
觀看量排名第一的
最喜愛排名第一的 並且它保持在前列
我想對我而言 比這更棒的是
我們有很多的新人蔘與到這個項目
我們現在有數以百計的新貢獻者通過開源參與
且我們已處理了數以千計的投票請求
這反響真是很大
我們將Swift開源的一個原因是對於我們很重要的是
我們想看到它到處都是
例如我們認爲Swift對於服務器很棒
所以我們把它遷移到Linux社區認可了
在很短的時間內
他們已經開始將它帶到其他流行的平臺像是FreeBSD
Android 甚至Windows
爲了幫助Swift進入所有這些平臺
我們啓用了Swift Package Manager
Package Manager是一個很好的方式來建立 共享和重用
跨平臺的package
它可以生成一個Xcode項目文件
甚至在像是Linux這樣的平臺上本地化編譯項目
另一個關於Swift開源很棒的事
是你能參與到語言的設計本身
Swift的進化一直是個很棒的體驗
有着激烈的興趣
在郵件列表上簡直瘋狂的郵件數
這太叫人吃驚了
現在 我發佈了一個公開的路線圖包含了每次發佈的更新
並且我們徵求意見 討論我們可能走的不同方向
來共同向前推進語言的發展
然後我們像一個社區一樣一起公開討論這些
我們將它們變成正式的提案
目前爲止 我們已經有了超過100個提案 來推進Swift發展
這僅僅是在六個月內
這是個很棒的標誌來說明Swift發展的多快
但是它也說明另一個重要和有趣的點
儘管它使用廣泛
Swift仍然是個相對較新的編程語言
現在 正如你所想的
我們選擇快速發現Swift語言中的問題並修復它們
因爲我們不想永遠被這些問題所困擾
我們正在開發Swift將其作爲下一代很棒的編程語言
所以我們想要它對將到來的十年來說很好用
現在的問題是對於有些開發者
編程語言發生在深層的變化
可能會令你感到擔憂
並且隨着Swift來到新的平臺
和Swift Playgrounds帶來的新類型用戶
這會變成一個甚至更大的擔憂
以此爲背景讓我們看看Swift 3的新特性
我們在12月宣佈了Swift 3
作爲推出Swift開源的一部分
我們一直在完全開源地開發它
Swift 3的第一特性和第一目標就是
克服這些早先成長期的痛處
並且將Swift轉變成一個穩定且成熟的平臺
我們可以保持與語言未來版本的兼容性
不是嗎
因此 我們在關注語言的核心要素
並使工具和開發體驗非常棒
在Swift裏你有很多的方式可以看出來這個
給你舉個簡單的例子對於Swift 2的一個常見抱怨是
一些Cocoa中的API在Swift中感覺不是自然的
Swift喜歡清晰透明 且致力於定義模板文件
在Swift 3中Cocoa APIs有精緻的感覺
你可以說他們完全Swift化了
我們是通過一些不同的初創完成的
首先 我們坐下來努力思考什麼造就一個很棒的Swift API
我們把它寫成文檔並放在Swift.org上
然後我們採用那些規則
並把它們寫到Swift的重編譯器
所以它會自動把這些規則應用到Objective-C API
把它們引入到Swift
但是Swift所做的遠不止命名
命名是個相當困難的問題 不過它做的遠不止命名
舉個簡單的例子若你看foundation
你會發現全新的Swift本地化數據類型
Date就是一個例子如果你比較Date和NSDate
你就會發現它提供了恰當的值語義
它有兩倍快的速度去傳值
由於減少了免於MalCon 的通信擁有40倍快的速度去變化
現在 這些例子到處都是隨着Calendar變爲了Calendar
Global Constant變成了scoped enum
Date Components NSDate Components變成了一個恰當的值類型
所有東西都感覺那麼的快速和敏捷
如果你不看foundation
dispatch是另一個關鍵API我們一直在用的
但是它提供的是低級別 C風格的接口
Swift 3中Dispatch有一個重要的革新
有個漂亮的面向對象的API
並且它遵從所有最好的命名規範
從一個很棒的Swift API期待的
Core Graphics是另一例子
這裏是Swift 3中典型的core graphics代碼
它精緻 漂亮並且就如你所期待的一樣工作
現在Swift 3有很多很棒的特性你能學足一週
Swift 3在Xcode 8中可用
並且Xcode提供了一個很好的遷移助手
來幫助遷移你的代碼從Swift 2到Swift 3
甚至更好的是 Xcode 8也包含Swift 2.3
這意味着能遷移到Swift 3語法
當時機對你恰當的時候
這就是我今天要講的全部
謝謝 我將交回給Andreas談談下一個大事件
iPad上的Swift
謝謝你 Chris
Swift另一個讓我們興奮的方面是它如此簡單和易接近
它不僅對於開發應用和服務器部件很棒
它作爲第一個編程語言來學習也很棒
事實上 我們認爲這超級重要當我們設計Swift時
那也是個我們明確的目標
從Swift推出開始 我們介紹了Xcode Playgrounds
一個交互的環境你可以快速迭代你的代碼
而且有經驗的開發者用我們的Xcode IDE很棒
我想要極度擴展我們的關注點幷包含kits
爲初始學習如何編程的人
所以今天我們要宣佈Swift PlaygroundsiPad的一個新app
你已經看了今早keynote上的一個展示
它與Xcode技術匹配但是它從底向上
爲了學習和教授如何用Swift編程
它對於年輕觀衆既好玩又有參與感
並且它是個有趣的方式來嘗試新的東西對於有經驗的開發者來說
它被設計成利用iPad的觸控界面工作
我們創建了一個新的Smart Keyboard
爲你的代碼帶來快速的鍵入提示
和Xcode中的代碼自動完成類似
你經常能寫完整段代碼
而根本不用調出完全的鍵盤
當你編輯行中的值 比如數字和顏色時
我們彈出這些快速編輯控制允許你輕鬆選擇一個值
再次 不要調出完整的鍵盤
你可以在Playground裏快速修改代碼
簡單地在屏幕上用手指拖拽這些結構化的元素
並且如你所期待的有提前寫好的代碼片段的庫
你可以簡單點擊就可以插入到你的代碼
或者再次用手指拖拽它們
並且當有時候你調出完整鍵盤寫代碼時
我們展現給你一個專用的編程用鍵盤
對於訪問許多特殊符號和數字超級容易
你用來寫Swift代碼的就用一個手指滑動即可
不需要切換鍵盤佈局
應用也帶有很棒的課程內容
我們正在編寫一個完整系列的課程
會一步一步向你介紹Swift編程
並且我們正計劃快速擴展這一內容
對於明年的課程
但你可以提供給學習者一系列的挑戰
他們將頻繁更新的
所以他們會保持回到這個應用並保持參與學習過程
對於這些有深度的主題
但是你不被限於跟從這個入門課程內容
你也有權利和靈活度來探索你自己的編程
利用一系列的簡單模板
我們創建了一個挺容易組成程序的
只帶有文本的輸入和輸出
並且另一個允許你探索和視覺化圖像概念
基於形狀
除此外由於你在指尖擁有整個iOS SDK
自由創建任何你喜歡的Playground
並且使用這個應用來教授許多主題
你甚至能控制機器人像是屏幕上的這個
和其他的配件從你的Playground
所以它將帶來很多歡樂
爲了向你更多展示你能如何操控應用
我會請Ken Orr來給我們另一個演示
好的 謝謝 Andreas
Swift Playgrounds令通過編程進行創新很容易
讓我們看下我早前創造的Playground
我會給你們展示我是什麼意思
現在我從選擇一個形狀模板開始
你們能看到開始我的圖片在右邊
就是圍繞中心旋轉的一些不同尺寸顏色的塊
現在所有右邊的東西是我左邊代碼的產物
我代碼的中心是這個for循環
在這裏我創建了每個塊
然後在頂部 我有個變量定義了
我應該創建多少個塊
好的現在被設成了15個 但是我想要
讓整個右手邊被顏色填充
爲了實現這個讓我試試把這個調成80
然後我點擊運行
好的 我也許不想用褐紅色想用個好看的藍色
這看起來不錯
我真的很喜歡這裏的圖案
螺旋進入畫布中心的方塊
這看起來真的很酷
我打賭我能把這做得更加明顯
如果我隨着時間的推移更戲劇性地改變那些方塊的大小
所以在for循環這裏我計算大小
我要去挖掘這兩個不同的表達式之間加分
而不是僅僅將它們放在一起爲什麼不去我嘗試乘法
運行 這看起來不錯
所以 你就可以開始獲得一個點子
使用touch代碼探索和實踐是多麼容易
所以接下來我想將生活中的點滴帶入圖片
我將用一些動畫
現在 爲了做到這一點 我將使用內置在了形狀模板的API
我想我要的是這個方塊彈出來
並且停靠在流的中間
所以我要點擊這裏在我創建每個方塊以後
然後進入快捷工具條接下來滾動
我要去點擊動畫功能
所以我有一個三秒長的動畫
我會讓它在開始前僅等待一秒
然後該塊有內部的一切東西
它將代替我自動演示動畫效果
所以我會拉動旋轉
然後 我也想方塊大小動畫
所以我想我會在寬度和高度均爲零開始
然後回到動畫塊我將它設置爲之前的參數
所以我說square.size=size
然後 我已經計算上面的尺寸
我就用同一個變量 點擊運行
很酷 它開始生動了
謝謝
我還想在此做一件事
對於觸摸操控 我想補充一點
要做到這一點 我將使用一些內置到了圖形模板的API
底部這裏
我其實已經在畫布上添加了一個拖動處理程序
塊正等待我去填補它而且我也在此寫一個函數
它將使每個方塊圍繞畫布中心
所以我只需要在此塊調用該函數
因此 回到快捷方式欄我說squares.rotateforTouches
然後我就點擊運行
而現在我要用手指點擊並按住右上角
並往下拉
就這樣 我已經添加了觸摸操控
謝謝
順便說一句 到目前爲止你可能已注意到
對於任何這些 其實我還沒用到全鍵盤
我認爲這很酷
今天下午我還有另一個東西向大家展示
我是做UI的傢伙 我喜歡建立自定義的控制和俏皮的UI
我一直在四處擺弄這個自定義顏色選擇器
我很想向大家展示
當你點擊顏色選擇會彈出一個顏色選擇器
從你的手指下面你可以拖動
並選擇您想要的顏色
現在 所有將構建的代碼在左邊
因此 讓我的代碼變大我們可以快速看下
現在 你首先會發現 最頂端
我導入的UIKit我已能獲取iOS的SDK
在這個Playground和我創建的任何Playgrounds
然後一路下行在底部
我告訴Swift Playground獲得我的視圖
並顯示在右側
我想添加最後一樣東西至我的Playground
添加我可以設置顏色的東西
這樣我可以嘗試一下我的顏色選擇器
我認爲要做到這一點我就添加了一個簡單的UI圖片瀏覽
讓我調出編碼鍵盤 我要說
“讓圖像視圖
等於UI圖像視圖”
我會使用採用圖像初始化
然後我就輕按在快捷欄的第三項 即小圖片
這是文字的圖像
所以 當我在點擊源代碼 就可以選擇
從已添加資源到這個Playground
所以我提前加入了Swift的logo（小鳥）元素
所以我會選擇那個
我需在此做的最後一件事我需要將你的
UI圖像試圖放進視圖層次所以我說
viewController.view.addSubview
折騰在圖像視圖
我們將運行 然後我將使視圖全屏顯示
而且知道我們可以看到我的圖像
我已經有了顏色選擇器
其實這一小小的其他功能讓我有些困惑
我希望它有一點點樂趣設置鳥的顏色
想通哎 爲什麼不那樣做
這就是Swift Playgrounds謝謝Andreas
謝謝你 Ken
所以你看到的 不管你創建什麼樣的Playground
你總是通過利用實際的iOS SDK做到這一點
包括讓你訪問該設備的硬件API
並通過編寫真正Swift代碼
這也許是與其他學習應用最大的區別
經常使用用戶數量過快增長的有限方法
在Swift Playgrounds 你將學習如何編寫真正的SWIFT CODE
順便提醒一下
Playgrounds應用本身也是用Swift寫的
Swift Playgrounds爲您提供了許多方法來試驗
教授並學習如何編寫代碼
而我們儘可能讓更多用戶
尤其是孩子 對於利用這一新的機遇充滿激情
而事實上我們希望你能幫助我們
通過創建其他內容而創建整個學習平臺
現在開始
我們正在製作Playground文件格式的文檔
今天在我們的網站已經可以獲得
而在今年晚些時候我們計劃發佈學習資料
包括豐富的3D拼圖
按照許可證 可以讓您複製和重複使用我們的材料
結合自己的想法
並幫助我們覆蓋世界各地的許多觀衆
一旦用戶創造了Playground
有多種方式分享其成果
Playgrounds僅僅是文件所以你可以分享
用你熟悉的常用的方式
而我們並沒有就此止步
對於你的程序輸出 拍照變得更容易
甚至納入重播工具包讓您可以錄製編碼會話
並作爲視頻發佈你的成果
並且對於
對於更高層次的學習者
iPad上的Swift Playgrounds
和Mac上的Xcode相得益彰
你可將Playgrounds來回在兩種環境間切換
最終過渡到在Xcode IDE開發完整的應用
這很好地將我們帶入下一個話題
更深入探討Xcode有請Matthew Furlich
謝謝Andreas
Xcode 8 是一個重大發布可以談的東西很多
讓我們直入主題從源碼編輯器開始
此次發佈 我們將重點放在添加來自大家
最被要求的功能
我們開始添加活動行高亮
你可編輯該顏色
它會與任何編輯器主題完美融洽
變得更棒
我們也做了Swift的色彩文字支持
所以你現在可以在你的源代碼中查看並定義顏色
讓我們進入第三點
我們還添加了Swift圖像文字所以你現可在源代碼查看圖像
作爲代碼完成的結果
並幫助你更好地編寫文檔
編輯器現在有一個命令
爲記錄你的API而生成標記
這些特性和多項可用性改進
真正讓Xcode的編輯體驗變得很棒
但我們並沒有就此止步我們已經增加了一個特性
它原來是你們的頭號要求
應用程序擴展
Xcode 8中 我們正開放IDE我們開始用源編輯
該擴展與活動編輯器一起運作
激活變革 選擇中的改變
文件中導航
這開闢了諸多機會
對於命令 例如重新格式化 評論
本地化 甚至待辦事項
現在 你可在每個extension中實施許多操作
每個操作被列爲編輯菜單的一部分
用戶也可爲這些操作設定按鍵
作爲員工隊伍的一部分讓他們工作
作爲extension的開發者
你可以將它們通過App Store加載或開發者ID部署
而這些Xcode8上的extension
在Sierra和ElCapitan都運作
現在作爲一個標準extension用戶也感到安全了
這些擴展作爲一個單獨進程運行
且自身簽名通過驗證
並進一步加強安全性
現在系統完整性保護保證Xcode的安全
這意味着只有受信任的庫和擴展
可與IDE和你的代碼交互
因此 新源編輯擴展是我們的第一步
致力於使Xcode變成更可擴展的IDE
我們很想聽聽你們就此的反饋以及想看到的其他extension
我們也一直致力於改善您瞭解代碼的方式
藉此 我們有全新API參照體驗
我們已合併了API文檔
將我們四個平臺合併到單一統一的參照
現在 這個基準使導航變得容易通過框架和符號運作
現在 搜索統一參照意味着對於每個API 你看到單一結果
我們已經集成了同樣的模糊匹配
我們用以快速代碼完成和開放
瀏覽參照時
對於每個API該平臺可用性清楚地列出
而在以前的發佈中 我們將這個作爲單獨下載來加載
因爲它的大小
在本發佈中我們已能夠將其縮小爲先前的十分之一
所以我們已默認將其包含在內
你總能獲取你需要的信息
現在我們還在Interface Builder中做了一些重大革新的改進
我想在演示中向你們展示
所以在這裏我們有一個項目我們稱其爲Trailblazer
它是共享你喜愛的健行步道社交應用程序
除了你的界面佈局方式
你會發現 InterfaceBuilder向你展示
它會呈現在設備上的方式
Interface Builder現可向你展示視覺效果
例如畫布上的活力 模糊 陰影
使設計和運行應用程序成爲無縫體驗
你還會注意到我們在設備緯度內
展示接口
並在底部有新配置
普通設備的尺寸
在此我們在iPhone 6sPlus上看
我選擇其他一項就像讓我點擊iPad上的一項
我可以看到界面如何顯示
你看 我們通過iPad上的兩列設計了自適應佈局
要以其他方式查看它我可以改變方向
如果我想橫向進行查看
我還可以在自適應佈局下查看
例如 讓我們以三分之一大小來查看下
這是用於多任務的滑動
這很棒因爲它可以讓我
爲確保我實施了正確的界面
用戶將以多種方式體驗我的應用
我們還改進了經驗
通過使用大小類創建自適應佈局
具體來看一個例子
這個應用程序的設計者希望在圖像頂部放個按鈕
在地圖上覆蓋顯示健行步道
但因爲地圖的大小他們只想在更廣泛的顯示器上做
這真的很容易
在配置欄中我將點擊Vary for Traits按鈕
我將獲得兩個尺寸類選項
寬度和高度
iPhone和iPad上的寬度尺寸類別不同
所以我會檢查該選項
配置欄會變成藍色 提醒我
我正在爲特定尺寸類做自定義
但你也注意到設備的列表已經改變
我能看到那些將利用該定製的設備
在這裏 我看到各種iPad預覽方向和適應
最後一個項目iPhone 6s Plus的橫向預覽
該設備和預覽方向使用常規寬度尺寸類
這是重要的信息 因爲現在我可以確保
我將爲設備設計正確的界面
我們的界面將很好看所以讓我們繼續做這些改變
我將去到庫中 拿出一個按鈕
並將其拖到界面
如果你的手不那麼汗溼你可以拿住按鈕
來吧
各位 一秒內不許看
一秒後 這將不再有趣
好了
這不應該贏得最響亮的掌聲好的
讓我們繼續我將在此處刪除標題
我們繼續爲它設置圖像
我們將把它做成這個漂亮的羅盤圖標
而我們只需把它放在正確位置
現在 我將稍後連接這個按鈕
但確保得到了我們想要的界面
我將在配置欄中點擊完成
我們將橫向切換回iPhone 6S Plus
我們的按鈕出現了
當我切換到縱向預覽 這不
而這正是我想要的界面
Interface Builder現使得設計自適應佈局變得很容易
在配置欄中將會顯示iOS和watchOS設備
還顯示了tvOS一些有用的選項
我將談到應用程序的tvOS版本
你會看到在配置欄中現在向你顯示的選項
對於亮界面和暗界面
我甚至可以在此進行自定義
例如 讓我們添加羅盤圖標的特化
暗模式 使其彈出效果更好一點
我想給你看InterfaceBuilder的另一特性
你會看到tvOS Storyboard縮小
所以它覆蓋整個畫布
Interface Builder現支持任意縮放級別的畫布操作
因此 無論你想放大
獲得完美像素比對
或者你想要縮小回來在Overview模式上運作
你可以做到這一切
這就是我們給InterfaceBuilder配備的新特性
謝謝
設計Interface Builder現在感覺就像直接在設備上工作
編輯任何縮放級別意味着你不再受制於
設備的大小
在此發佈中我們還專注於工具的輔助性
我們尤其已讓Interface Builder
與語音輔助程序Voiceover一起協調運作
我們也完全改寫AppleScript字典
使得Xcode更容易融合於桌面自動化
現在 在每次發佈中 我們增加了尋找
診斷和修復問題的額外技術支持
藉於Xcode 8我們正跨出另一大步
在過去的一年 我們增加了100多個新的診斷方法
提供了極大的洞察力當你構建
以及當你編輯代碼碰到實時問題
我們已添加了三個新的靜態分析器
用於本地化 延展性和釋放
所有常用的可能在應用程序中引起問題的模式
我們繼續投資測試系統
提高穩定性 性能並增加一些新的選項
現在Xcode將捕獲和顯示崩潰日誌
在你的測試期間發生
這很棒 因爲你可以運行測試
收集這些日誌 比如崩潰日誌
你可以直接用調試器來查看診斷問題
我們還用一新選項來增強xcodebuild聯編以運行預建測試
哇哦 確實如此
這意味着這對合成可擴展測試而言是完美的
與自己的持續合成
Xcode比以往任何時候都更會幫助解決問題
當你構建 分析和測試自己的應用
但通常情況下
一些最有趣的 若非我們說的毒辣問題
當你運行代碼時發生
爲此 我們推出了新的東西叫做Runtime Issues
Runtime Issues與其他應用一樣
會在活動視圖提醒你
你會在問題導航關看到詳細信息
我們已在頂部添加了一個切換以使其醒目
現在 有三種運行問題
UI 線程和存儲器
讓我們先從UI開始
視圖調試器已是一個很棒的工具
用於你的界面可視化以及問題診斷
除了改進的準確度和視覺呈現
視圖調試器現將在運行時檢測佈局問題
每次捕獲 視圖調試器
能夠檢測到含糊的佈局視圖
而這些是由於遺漏和錯誤配置的限制而造成的
這些問題在導航器裏浮現出來
檢測將提供詳細信息幫助你解決這些問題
現在 線程問題往往難以預測
且可能難以調試可能出現問題的原因很多
比如 從錯誤的線程或數據爭用解鎖
爲了幫助你跟蹤這類問題
我們正把Thread Sanitizer整合到Xcode 8中
當你的應用啓動時
Thread Sanitizer檢測常見線程問題
並將其作爲運行問題呈現
你可在這些問題出現時中斷Xcode
或者你可以收集全部
在會話結束時審查
和綜合報告提供了這些問題的具體細節
給你提供任何爭用條件的詳細信息
並提供棧幀來幫助你導航
像——是的
現在 像線程 內存問題往往難以確定和修復
想要有效地進行調試
通常你得查看對象圖
看看它們是如何相互關聯的這就是我們建立的東西
Xcode 8的新特徵是工具條提供了一個內存調試器
這將幫助你可視化和導航運行應用時的
對象圖
你是否會更喜歡它如果我告訴你 它會自動查找泄漏呢？
這是調試內存問題一個很棒的新工具
我想在演示中向你們展示
好了 在此我們有Trailblazer應用
我要在模擬器中啓動它
我之前在調試
我想看一下之前注意到的內存問題
當我們正在做這的同時我將彈出內存報告
我會點擊步道
你會看到內存峯值
沒關係 我早調查過了
這還只是加載所有資源的步道
我注意到當我點擊每個評論
我們的內存峯值
我們不恢復內存
即使我們一路回到應用程序的起點
這預示存儲器管理問題
我們可以使用內存調試器進行調查
我將點擊工具欄中的內存調試器按鈕
當我們暫停你的應用時我們捕捉到對象圖
調試導航現在向我顯示
在我的應用程序中分配到的所有對象
有我創建的和系統創建的
我可以將其過濾只顯示我的項目中的相關條目
我還可以輸入字符串或地址來查找特定對象
我已經輸入了“控制器”
我有評論視圖控制器的三個實例
這令我感到詫異
當我選擇它們中的任何一個
我們會看到該對象圖表在右邊顯示
現在 你看到的都是該對象的參照路徑
存在內存裏
我在此看到的其中一個對象是Swift捕獲環境
這是代碼中我的視圖控制器的某處
已被捕獲閉包的一部分這是開始查看的一個好地方
我將用檢查查看更多的細節
其中一個細節是回溯追蹤
至捕獲發生的地點
當然 我可以直接點擊導航
至導致它的那一行代碼
我看到問題的根源
我已經爲這個視圖控制器建立了一個觀察器
被告知評級何時發生變化
此API返回的觀察令牌
當視圖消失 我已妥善上下清理
但我從來沒有保留它
這是一個常見和易犯的錯誤
也是內存調試器容易找到和修復的錯誤
現在 我之前提到的內存調試還能發現泄漏
並且它提醒了我在活動視圖有三個泄漏
我會點擊那個將被帶到問題導航
在那裏我看到泄漏的三種類型對象
陣列 用戶評論和用戶對象
我要點擊任一評論抱歉 點擊用戶
現在我們看到的是參照週期
用戶有書面評論的數組
每一個用戶評論都有一個參照返回給該用戶
如果所有參照都強行持有這將泄漏遍佈這些對象
現在 它看起來像是我一致泄漏它們
如果我想獲取這些對象中任何一個的詳細信息
我可以使用上下文菜單在控制檯打印出來
或只是彈出一個快速瀏覽看看更多的細節
在這種情況下 審查用戶關係
是我要進行調查的正如代碼一樣導航
我命令式點擊一下就可以了
就將被帶到產生參照源的代碼行
果然 我忘了聲明它是弱的
就這樣內存調試器能夠告訴我
我有的泄漏 以及幫我解決這些問題
這是Xcode 8的新內存調試器
今天我還有一個其他類型的問題想談談
這與配置有關
沒有什麼更令人沮喪的當你在做項目時
代碼簽名出了問題
其實 這並不完全真實
因爲在一些情況下 解決方案
比問題本身更令人沮喪
因此 我們在Xcode 8中解決了這個問題
我們已經完全重建了配置系統
我們開始通過創建更快更強大的新簽名行動
並考慮到新Xcode的工作流而建立
我們構建了新的用戶界面元素以清晰地想你展示
概況 團隊和你正使用的證書
並明確告訴你所有問題
我們完善了信息以確保其始終包括可操作的信息
同時我們也確保生成請求日誌
其結果是將所發生的任何事透明化
基此 我們有一個強大基礎
以供建立兩個新配置工作流
Xcode 8具有自動代碼簽名的選項
有了這個代碼簽名選項Xcode處理了所有的細節
通過專用信息
而此信息與你創建或管理的任何其他信息無關
我們將應對所有簽名請求
添加權利和再生新項
對於你希望對簽名設置有更多控制的情況下
您可以禁用此選項並使用自定義代碼簽名
有了這個 你可以指定
你想使用的確切的簽名資源
並且你可以在每個生成配置中指定
這是一個很好的選擇當你有各種各樣的簽名需要
自定義代碼簽名仍然利用了新基礎
對於任何問題給你很好的反饋和幫助
我們還想關注配置的另一點
就是開發證書
使用多臺機器工作時爲了使開發更容易
Xcode現支持多個開發證書
這意味着當你得到一臺新Mac你只需要添加Apple ID即可
你不再需要取消或分享證書
從你的其他開發
所以新的授權系統自動並且定製登錄
並且複製開發許可
Xcode 8總是使得授權變得容易
並且給你你需要的控制
在這個版本里我們把注意力集中在性能上
而且我們達到了一些了不起的成就
和我們一年前發佈的版本相比
你會發現Xcode的啓動速度提高了2倍
測試的索引速度甚至提高了50倍
所有的這些使得Xcode 8變得更快更好用
這是你將在Xcode 8裏找到特性和提升的一部分
請在這周來實驗室讓我們知道您的想法
接下來 邀請Sebastien Marineau-Mes
他將會和你們分享一些令人興奮的新平臺技術
Sebastien
謝謝Matthew
謝謝
讓我介紹一些關鍵的根本的技術的更新
我會從壓縮開始
如果你們記得 去年我們介紹了lzfse
作爲我們主流的壓縮算法
比zlib算法快3倍並且能量消耗少一半以上
這真是一個引人注目的技術並且獲得了廣泛的使用
現在我們宣佈 我們要開源lzfse 並且
現在你知道了
我們相信這會鼓勵lzfse獲得更多的使用
特別是多平臺以及離線壓縮這些使用案例中
接下來 我想要討論網絡
現在,我們知道一些應用的性能
取決於擁有一個好的網絡連接
但是如今的網絡
沒有好的辦法給最重要的通信優先級
比如說 人們在工作時下載YouTube上的貓的視頻
會影響你真正重要的視頻會議
所以我們和思科合作給網絡加入智能
現在網絡能夠識別被信任的設備
識別對你的工作最重要的應用
然後優先讓這些通信在網絡終端間傳輸
這將提供更好的性能
給那些對你最重要的應用
這就是網絡部分接下來
接下來 請我們討論記錄
如今 記錄是你們所有人都使用的一項技術
在開發 調試及現場診斷中
在傳統中 記錄是碎片化的
你們有很多人使用你們自己的方案
這個平臺已有的方案通常很慢
所以今年我們重新思考了記錄
並用我們提出一個我們認爲很吸引人的技術
它是統一的並且非常快
它在硬盤上記錄的數據很緊湊
它還給你足夠的靈活性來支持
跨應用 守護進程 系統服務的記錄
它有內存內追蹤的概念
你可以捕捉頻繁的記錄信息
只保存它們在硬盤中
當你的應用有錯誤時
最後 我們也加入了隱私
所以在開發時你可以捕捉非常多的記錄信息
並且使它們被自動編輯
當你向最終用戶發佈你的應用時
現在 和這個一起
我們重寫了控制檯應用它有了更多的功能
比如說 它能夠直播流媒體
通過開發設備高級過濾的能力
等級系統的內省能力
這就是新的記錄系統
接下來
接下來 我們來說說文件系統
好的
當然 如今HFS+是Mac上的主流文件系統
它是1998年發佈的
如今它被部署到所有的Apple產品
超過10億臺設備
當然 HFS+是18年前設計的
我認爲它證明瞭當初的設計相當優秀
它在今天仍然是一個優秀的文件系統
但是 在它設計的時候 Mac上還有軟驅
我們認爲現在可能是我們開始一個新的文件系統的時候
所以今天我們要宣佈一個全新的Apple File System
這就是它
我認爲你們會爲此感到興奮
Apple File System從我們最小的設備Watch擴展到
高端的擁有很大的存儲配置的Mac Pro
它還是現代的我們設計它首先
針對當今以及未來的存儲技術閃存和SSD
它是有彈性的
並且我們利用這個機會來統一iOS和Mac OS上的加密
使我們在未來有良好的靈活性
Apple File System有很多新的獨特特性
我想要重點展示其中的兩個
第一個是克隆爲什麼要克隆？
如果你看看一個運行了一段時間的系統
你會發現很多同樣的重複文件
到處複製是人的天性
這當然不高效這會浪費存儲空間
但是有了克隆 你可以複製文件只需要使用初始存儲空間
當文件被修改時
這很快並且你可以克隆文件 目錄 目錄結構
第二個我想要強調的特性是快照
什麼是快照？
他們是文件系統在一個時間點的內容的鏡像
爲什麼你們需要它？
好吧 假設你在開發一個備份應用
使用快照 你可以備份
文件系統在一個時間點的統一的視圖
另一個這很有用的好的例子是在教室
你可能會爲學生準備一臺設備
包括內容 配置文件 應用等等
在上課時使用
學生使用設備時
他們可能會修改內容或設置
你可以在課程結束時使用快照
使設備恢復到初始狀態
這樣它們就可以被下次課的學生使用
這就是新的AppleFile System的特性
Developer Preview會做爲Mac OS Sierra的一部分
在今天提供給你
我們希望你們都可以下載它使用它並向我們提供反饋
Apple File System會很快來到所有的Apple設備
好的
最後 讓我們來談談隱私
你們聽說了一個新的 強大的技術 叫做差分隱私
在今早的keynote中
我將向你們解釋它
我從差分隱私背後的數學開始
這看起來很複雜
但我保證這些數學很有效
我會用一些例子來解釋它
第一個例子是我們將用差分隱私來解決
一勞永逸地解決
最有爭議和最重要的問題之一
在現代計算機科學中
代碼格式
這當然是一個重要問題
我們將讓聽衆對問題的答案投票
你們會希望你們的結果保持私密
因爲讓我們來面對它
你的一些同事會對這很熱情
那麼我們怎麼利用差分隱私？
首先 你們每人提供你們的傾向
但是在我們把它發送給Apple產生調查結果前
通過差分隱私我們在每個答案里加入噪聲
在我們加入噪聲後
我們無法知道你的原始答案
我們把它發送給Apple差分隱私的優點
就是我們把來自很多人的數據集中在一起後
我們可以還原我們問題的答案
我不會對答案進行做判斷
看起來我們的意見還是很不同
但是當你通過編譯器運行你的代碼之後
這並不重要
所以
那就是
所以 現在我們怎樣在iOS X中使用差分隱私?
讓我來提供一個例子
在Spotlight中 我們爲深層鏈接提供建議
我們當然希望提供
最相關和最流行的建議給最終用戶
我們這樣做我們賦予每個深層鏈接
一個獨有的哈希值當用戶瀏覽它們的設備時
每當他們遇到一個深層鏈接我們獲取那個哈希值並加入噪聲
提取它們的片斷併發送給Apple
現在 任意單獨片斷都沒有意義
但是當我們把整個用戶羣整合到一起時
我們可以還原深層鏈接的流行度然後就可以使用它
使它們出現在Spotlight中並提升用戶體驗
這就是差分隱私背後的科學
我還想介紹它的另一方面
你可能會想 如果我們從用戶收集樣本
這通過從大量用戶中收集大量樣本實現
如果Apple從同一個用戶那收集大量樣本會怎樣?
你們難道不會發現我在做什麼?
這就是隱私預算起作用的時候
隱私預算限制我們可以獲得的樣本數量
從任何一個用戶並且它確保最終
我們永遠無法從任何用戶那恢復有意義的信息
這就是差分隱私
這個強大的技術允許我們從用戶那學習
提高用戶體驗的同時保護你的隱私
就這些了 接下來請Toby Paterson演講
Toby將會介紹iOS X的高層特性
謝謝 Sebastien
下午好
讓我們開始
所以 你知道的 非常感謝你們所有人
使得我們有一個如此好的iOS生態環境
我們一直在努力尋找使用戶找到新應用的方法
進入到他們喜歡使用的應用中並且整合你的應用
到其他操作系統中
你們之前已經看到你們的應用可以怎樣通過消息病毒式傳播
並且我們使告訴人們你們的應用變得相當容易
從主屏幕
我們在快速行動列表中新添加了一個分享按鈕
它會調出分享菜單
這樣你就可以向全世界Tweet你的應用
這在所有應用中都可以免費使用
現在 我們有很多方式來獲得用戶
在正確的時間進入正確的應用
我將要快速介紹它們請耐心等候
Handoff讓你可以把任務從一臺設備帶到另一臺設備
Spotlight可以直接和你的應用內容連接
一個通用鏈接
會把你帶到對一個平臺最合適的地方
你可以直接將一個應用和另一個應用連接起來
Siri會在今天的視圖以及Spotlight中推薦應用
我們可以只在正確的時間推薦應用
在主屏的任務切換器中
我們可以基於相同的數據類型連接應用
就像這個 這個 以及這個
我想你已經瞭解了這個主意
只有一件事我想你從中拿走
那就是NSUserActivity
這是很多的功能出入口
這是你的應用如何告訴操作系統人們在你的應用裏做什麼
並且讓我們能夠創造智能的建議和連接
在你的應用之間
在iOS X中 我們加入了2個重要的信息
現在 很多應用用多種方式使用地址
我們可以用它來在你的應用間建立連接
讓我用一個例子來說明
這是一家我最喜歡的餐廳的Yelp頁面
在舊金山
假設向NSUserActivity提供這個地址
這將使我能夠做類似於要Siri帶我到這來
我的手機知道我經常用Uber出行
這使得很容易
讓我叫車去餐廳
或者當我在期待獲得位置數據的文本域打字時
QuickType能建議一個我剛剛在看的地址
而且地圖可以在推薦列表裏包含這個地址
以及一個快速回到這個應用的方法
現在 我們也用多種方式和其他人互動
操作系統可以學習我用什麼應用和特定的人聯繫
要達到這點 你的應用需要提供3個信息
足夠的上下文這樣我們能找到一個入口
在該人的Address Book中
你提供的服務種類那是消息或者視頻聊天平臺
以及一個你將爲那個人使用的特定的標識符或處理者
這是新的Address Book卡
通過它我們可以在操作系統中實現很多功能
而且你將注意到我們可以自動包含
我們從你的應用學到的信息
現在 當我按任意一個快速通信按鈕時
在卡的頂部
我們還可以在選項列表裏包含你的應用
當我做出選擇時我們會記下來
所以下一次當我按這個按鈕時
我們可以把你直接打到那個應用
我需要指出所有這些學習
是用戶的私密只有他們的設備能訪問
現在 我們深深的相信跨操作系統的應用整合
提供更豐富的用戶體驗
擴展 當然 是你如何做那些
而且你早前已經聽說了新的iMessage Apps
地圖擴展和SiriKit
那麼 我想要告訴你們兩個擴展點的一些信息
我們加入到通知中
一個服務擴展在後臺運行
並且允許你修改推送內容
在我們向用戶顯示通知前
這使你可以做一些事比如下載圖片 視頻 音頻文件
在後臺並將之直接嵌入到通知裏
或者你可以在你的服務器上對推送內容加密
並用一個服務擴展在設備上解密
提供完全的端對端加密
我需要指出你可能想要使用一些更強大的
比我們在這提出的ROT13算法
我們會在明年改進ROT13來提供更多的安全性
現在如果你想要更豐富的用戶體驗
一個內容擴展可以提供一個任意的視圖
我們會用來擴展一條通知的界面
這使你能提供動態的互動的體驗
安全爲你的應用量身打造
今早你快速瀏覽了改進後的今日視圖
和它充滿活力的 擁有新外觀的小部件
一個小部件可以是任意大小只要在合理的限制內
但是我們還添加了一個新的緊湊的 固定大小
來優化信息密度
使我們感到興奮的是
使這些小部件在主屏上就可以使用
我將要告訴你使你的小部件工作需要做什麼
首先你可能想要更新它的外觀
並且支持新的緊湊大小這樣你的小部件不會看起來可笑
你需要用iOS X SDK構建它如此而已
不需要改變構建小部件的其他方面
你將免費獲得這個新功能
所以我們很興奮
我們認爲這將爲你的應用打開一個新的次元
好的 讓我們轉到Mac
Mac OS Sierra加入了本地化應用的全面支持
在從右到左的語言中
包括有意義的翻轉UI元素
Mac加入了iOS和watchOS
它們在今年早些時候悄悄加入了對這一功能的支持
在全世界有這麼多潛在客戶
這比以往更加重要
你的應用被正確的本地化和全球化
你可以在這獲得更多相關信息
你知道 當Sebastien首先談論製表符和空格符
我們很確定他會講到這
你今早看到人們怎樣把他們所有的窗口收集到一起
到一個分頁UI
AppKit將會在這爲你處理所有事
它聰明到知道不要將你的設置窗口配對
你的文檔窗口 等等
其實 若你使用NSDocument
你在你的應用中不需要做其他事
如果你沒有使用NSDocument
你需要採用一些API來支持創建新標籤頁
但是我強烈建議你看看NSDocument是否
不符合你的使用案例你看
我們今早還向你展示了我們如何使人們易於
把他們的文檔和數據遷移到雲上
並且我們相信那是文件存儲的未來
所以你的應用採用最佳做法非常重要
關於文件協調和元數據查詢
如果你在此使用NSDocument
它會爲你處理所有瑣事
就像iOS上的UIDocument那樣
現在我有一個iCloud的重要更新
如你所知iCloud API在我們的所有平臺上都可用
但是在Mac上 對這些API的使用受到限制
只有通過Mac App Store發佈的應用可以使用
在Mac OS Sierra中我們移除了這一限制
現在
你的應用仍然需要被有效的developer ID簽名
同時也會移除那些煩人的不受信任開發者警告
但是一旦你完成了這一步你可以使用所有的API
無論你怎樣分發你的應用給用戶
接下來CloudKit
我們2年前介紹了CloudKit
它是基礎 我們用來開發
所有我們的新雲服務
現在他的權限模型相當粗粒化
你的數據或者可以被任何人訪問
或者只能被一個用戶訪問
新的CloudKit分享特性允許你的應用
能夠絕對決定誰能訪問你的數據
新的CKShare類
使你能管理權限
誰能讀寫一個指定的數據集
這個API在所有的平臺上都可使用
在Mac和iOS上我們提供標準API
來處理邀請他人的機制
並且在你的應用中管理他人
我們用CloudKit分享來實現新的合作特性
我們把它加入了Notes
我鼓勵你們在今天developerpreview中看一看它們
接下來交給Josh Shaffer
他會向你們介紹watchOS的一些更新
謝謝
謝謝 Toby
如你們在keynote所知watchOS 3簡化了導航
並提升了性能
這些改進超過了系統層面
並且包含很多對應用的改進
這些改進聚焦在Watch應用的3個關鍵方面
首先是方便查看
和Apple Watch的單次互動都很短暫
所以需要呈現設計良好簡單的信息
給用戶只聚集最相關的信息
來確保容易消化
第二是易於操作
這包括簡化使用
對最常用的發生在Watch上的操作
比如 我們重新設計了健身應用
來減少開始一次健身所需的步驟
這也意味着簡化訪問關鍵信息
你的用戶將會希望按照它來行動
即使他們不會在Watch上採取這些行動
第三是保證你的應用的響應性
通過保持它們在被需要時狀態是最新的並且立即可使用的
當然 謝謝 我同意
所以 當你思考一個應用
首先想到的是全屏應用
它絕對是這個的一部分
但是在Apple Watch上重要的一點是記住你的應用可使用
另外2種界面complications和通知
這三種界面只是你同一應用的3種不同視圖
所以重要的一點是他們呈現一致的信息
當你更新它們中的一個你應當更新其他的
因爲如果他們顯示不同信息
你的用戶不會信任任何一個
你可能記得在watchOS 2中
有第4種界面叫做Glances
Glances簡化獲得
你最喜歡的應用的信息的摘要
在watchOS 3中新的Dock將提供這一功能
並且只要按一下側邊按鈕就可以從任何地方立即達到
若你watchOS 2使用Glance界面
這個分開的界面在watchOS 3中不再需要
但是它簡單的設計可以幫助你更新主界面
爲你的應用 來確保它看起來和使用起來都很好
當用Dock顯示時
在Dock裏的應用會立即響應來確保
Watch上最常用的任務
可以在幾秒內完成
現在 那很明顯是很短的時間
爲此努力可以成爲一個好的引導
幫助你爲你的應用設計頂級的特性
爲確保在Apple Watch上確實運行良好
儘管每一個單獨操作都很短
一些應用可能會在較長的一段時間裏被使用多次
比如我可能會多次查看購物清單
當我在一家商店時
在watchOS 3中每當我擡起手腕
我能馬上看到我要買的東西
並且刪除我已經拿了的東西
現在設計擁有這種交互模型的應用相當容易
因爲watchOS 3會返回你使用的最後一個應用
在你最後使用它之後長達8分鐘內
當你完成之後你會返回到Watch界面
當你的應用未被使用時
確保它保持響應意味着讓它在後臺保持最新
所以當你要使用它時它已經準備好了
要達到這非常容易
watchOS 3包括一系列新的後臺應用刷新API
後臺應用刷新是一個關鍵部分
來開發可響應的watchOS應用
週期性的在後臺更新你的應用
是一個巨大的改進
不管你開發何種應用
現在 如果你開發健身應用對這類應用
它們保持最新更加重要
在整個健身過程中
所以我們爲它們有一些額外改進
在一次健身中
這些應用將會持續在後臺運行
即使屏幕關閉時
確保他們能監視健身進度
並向用戶提供更新
當他們用觸真體驗技術達到里程碑
在健身中它們也保持立刻可用
即使你切換到另一個應用來完成其他任務
所以當我跳出到音樂應用裏切換音樂
我放下手腕後
我會很快回到我的健身
我們還加強了訪問
心率計和加速儀
所以現在它們提供連續的數據
在整個健身過程中
除了這些傳感器方面的增強
還有一系列新的硬件訪問API
Crown事件使你原始訪問來自Digital Crown旋轉事件
手勢識別使爲應用添加定製的觸碰操作更容易
觸摸操作 比如輕觸 滑動 拖移當然還有
除了加速儀 現在還可以訪問陀螺儀
來確保你可以通過這些硬件訪問API來做一些很酷的事情
我們還爲watchOS SDK帶來了一系列圖形圖像框架
SpriteKit和SceneKit給你很多自由
來增強你的應用和通知的外觀
AV Foundation使得用Watch的外放播放聲音相當容易
本着簡化應用瀏覽的精神
你現在可以在應用界面中播放視頻
當然 你也常常需要將數據傳入或傳出Watch
Toby已經提到 爲了簡化這方面
CloudKit是watchOS SDK一部分
因爲它基於NSURL會話
它甚至可以脫離手機運行
若你的Watch靠近已知Wi-Fi網絡
Apple Watch是在商店購買商品的方便途徑
在watchOS 3中你可以賣東西
在你自己的應用裏
只需雙擊側邊按鈕即可購買
開發一個Watch應用只是第一步
另一件重要的事是使用戶易於
發現和安裝你的應用
爲了幫助你實現這點
在iOS X新的Watch Face Gallery中
含有一整個部分專門用來顯示所有你的應用
只需幾個簡單的步驟就能創建一個complication bundle
使應用出現在錶盤圖庫中
當拿到新表時你第一眼就會看到錶盤圖庫
在成功配對之後顯示complications
來自你iPhone上每天經常使用的應用
這就讓安裝應用 變得非常簡單
並添加到他們的錶盤上
我們竭盡所能爲你提供所需要的全部工具 幫你創建
非常棒的、引人注目的、可控性強的、響應式的應用
並且我們迫不及待想看到你要如何利用它們
爲了讓你瞭解這將如何在watchOS中強化你的應用
Eliza Block會給我們展示一個Background App Refresh的演示
和一些新的圖形API Eliza
大家好 我這兒有一款基於watchOS 2創建的應用
展示了一位名叫Max的熊貓朋友
它能告訴我他在不同時間的不同心情
那麼現在 你可以看到他很高興
如果我掛起應用
可看到有complication仍然會告訴我他很高興
但這兒有個通知 說Max餓了
這個watchOS 2的應用
有一些問題 我現在要演示給你們看
首先 如果我不理會這個通知
我的complication就不會更新也不會體現出Max現在很餓
更糟糕的是 當我進入DockDock中的應用快照
也沒有更新 所以我不能演示出
在app中所有界面都享有一致的數據
現在讓我們看看代碼在watchOS 3中有一種
簡單新方法來處理該問題
在擴展委託中有一個單一點管道
叫做處理和後臺任務可以完美地更新
所有界面 當數據變化時
在快照刷新後臺任務中
我只需要添加兩行代碼就能處理這兩個問題
第一行代碼更新界面上的當前狀態
第二行代碼刷新complication
當查看快照的時候
好了 這就解決了我們之前的問題
既然說到這兒了
那咱們就把這個應用變得更有意思一些吧
顯然 你所看到的Max在watchOS 2中只是個靜態圖像
但在watchOS 3中可合成一個SceneKit場景
實現一些動畫
那麼我要切換到我的界面
這是我的應用界面 我要先刪除這個圖片
然後拖一個SceneKit場景進來
我之前寫好了少量的代碼
只是給這個場景填充一些SceneKit assets
然後創建一個出口現在我要把它連上了
把它拖到SceneKit界面
現在 不僅能在應用中添加SceneKit場景
還能在通知中添加場景
這可比文字通知有意思多了
我還要把一個場景拖到那兒去
我需要稍微調一下尺寸
鉤住出口
這就行了 我要再運行一下應用
這次 我們有希望能看到更多動態畫面
那麼 我們就有了一個更養眼的版本 因爲Max能跑了
我現在再掛起應用
等他變餓
我們看到一個非常沮喪的Max摸着肚子 這個版本更直觀
我覺得這好玩兒多了
當我掛起通知時
complication如我們希望那樣更新了 體現出了他的當前狀態
如果我在Dock中查看
你會看到快照也更新了
體現出他餓了 不高興了
這只是能實現的很小一部分新功能
用watchOS 3提供的新API
我們非常期待你們會創造出什麼
接下來 讓我們請Jim Young上臺來講一下tvOS
謝謝Eliza
自App Store在Apple TV上線以來我們一直很興奮
就在去年十月
因爲我們堅信TV的未來屬於應用
從那一刻起 你們就忙於
讓6000多個應用在App Store上架 其中包括娛樂應用、遊戲應用、
保健和健身應用、教育應用等等
現在讓我們談談這對於tvOS的開發意味着什麼
首先 你已經很熟悉它了
你可以使用你已經掌握的工具和語言
而且tvOS包含你已經熟悉的iOS的基礎框架
此外 我們還有一些針對tvOS創建的新框架
還有你創建很棒的應用時所需要的所有基礎支持
有豐富多媒體資源幫你創建音頻/視頻應用
當然 我們對遊戲應用的支持也非常出色
而且我們也將更多的特性引入到平臺中
現你可用PhotoKit創建
能在大屏幕中顯示用戶的圖片的應用
並且使添加明暗變化變得非常簡單—
請看一下明暗效果
這樣的技術相當豐富這個列表只列出了其中一部分
還有一大批沒有列出來
現在讓我們談談這些技術的使用
並把它們結合在一起 在tvOS中實現一種優秀的用戶體驗
我想先從Touch談起
在設計tvOS時 我們很清楚需要引入
一種優秀的Touch體驗 到客廳
現在 Touch必須讓人感到流暢和連貫
要精準和有趣
這在客廳裏是極具挑戰性的因爲TV就在10英尺之內
讓我們看看該如何解決這個問題
我們更新了UIKit
所以大屏幕上的所有控件和視圖看起來都很漂亮
我們添加UIFocus 可定義UI中的哪些元素可設定爲焦點
更新了UIMotionEffect可獲取聚焦引擎的輸入
以上這些都可以直接連接
在用戶遠程操作
和在大屏幕上看到的結果之間
好消息是我們已經幫你們做了大量的工作
你們的UIKit app可免費使用該成果
如果你現在還有基於服務器、用於提交內容的app
我們有很多不錯的應用 就像Showtime頻道顯示的這個一樣
我們有一種技術叫TVMLKit還有一個框架叫TVMLKit
TVMLKit是我們專門爲tvOS開發的一個新的高級框架
它建立在UIKit的基礎上
所以你能獲得我們剛剛展示的所有無縫Touch體驗
我們提供大量模板 你們甚至可以提供
自己的自定義模板和本地控件
TVMLKit允許團隊創建
漂亮的、高度程式化的、自定義應用
在短時間內
現在讓我們談談如何將這種體驗擴展到Apple TV之外
通過整合其他Apple設備
可以用CloudKit很方便地在雲中保存應用和遊戲狀態
用戶可以很方便地在Apple TV上開始遊戲
然後在iPhone或iPad上再繼續遊戲
我們還看到了一些不錯的應用可同時使用多個Apple設備
比如FreshPlanet中的SongPop Party
每個家庭成員都可以用自己的iPhone
來回答音樂相關的提問
爲了讓不同的設備更好地進行溝通
我們在平臺中引入了Multipeer Connectivity
只需要少量代碼
就能很容易地連接運行在多個設備上的應用
今天早晨 我們發佈了新的Apple TV Remote
現在 你的家人只要有iPhone
就相當於有Apple TV Remote了
你的apps無論看起來還是用起來都跟Siri Remote很像
並且我們還利用屏幕優勢增加了更多功能
Now Playing在屏幕上提供了一整套的
重播控制和媒體封面
就像iOS在鎖屏時顯示的畫報和控制一樣
使用Media Player Remote
我經常用Media Player RemoteCommand API
把信息添到Remote app中
這個應用還提供遊戲設定的佈局
在玩兒遊戲時 這個新應用可以當做微型遊戲手柄
就像Siri Remote一樣
要實現多個微型遊戲手柄
你需要設置一個Info.plist key
除了Siri Remote和新的Remote app之外
tvOS還支持MFi遊戲控制器
今年秋季
tvOS將同時支持多達四個遊戲控制器
但我們不想止步於此
我們想做出更出色的遊戲
我們想做出需要這種控制器的遊戲
因此我們很高興地宣佈我們將更新控制器政策
你可以限定你的遊戲必須使用控制器
tvOS會查看所需要的控制器是否存在
如果必要的話 會提醒用戶
這是tvOS的進步 我們非常高興能取得這樣的成績
我們會舉辦很多tvOS工程師參與的實踐活動和研討會
歡迎你們參加
接下來我們歡迎Geoff Stahl上臺
談一談圖形技術 Geoff
謝謝Jim
我要談談繪圖
我要談一下圖形學的幾個領域
今天我們要談一些了不起的技術
我要從色彩說起
我們爲最新的iPads和Macs打造了令人驚歎的新顯示器
可以完全還原色彩
其實DisplayMate展現的是
“色彩的精確程度是人眼不可辨別的”
那麼我們要如何實現 嗯這其實是色飽和度
絕大多數顯示屏都採用了sRGB色飽和度
範圍很窄
不能準確還原我們日常生活中能看到的所有色彩
比如花兒和畫兒的色彩
亦或是你穿的衣服的色彩
所以我們步入了範圍更廣的P3色飽和度的時代
可以真正實現色彩的精準還原
並把這些現實的對象渲染出來
但我們並沒有止步不前 我們將色彩做到極致
從系統API到系統應用
我們始終致力於顯示更深、更廣的色域
如果app採用了UIImageView或UIView
可以免費使用 自動獲取
如果你要自己控制範圍更廣的色彩
我們還提供API
當然 我們有一個很棒的色彩捕捉工具
我們最新的攝像頭支持捕捉更深、更廣的色彩
我們用API獲取原始圖像
而且現在還可以用API LivePhotos來獲取
以上說的是色彩
現在我要談一談技術
改變了產業走向 即Metal
我們在兩年前引入了Metal目前已被廣泛使用
請記住 當我們開發Metal時
我們優化它時 我們同時也考慮到了我們的設備
所以我們能很快地創新
用Metal細分曲面技術這樣的高質量的表面處理技術
來實現之前從未實現的渲染精確度
或Metal功能專業化
結合S碼 可以創建一套着色器
自動處理材質並照亮場景中的道具
對於低內存的渲染目標
可採用碎片兌現中的結構
來減少應用或源代碼中使用的內存
這就允許應用
有一種專門的算法在Metal應用中處理內存
Metal幾乎無處不在 成千上萬的設備都使用Metal
我們的關鍵圖形框架和主遊戲引擎
就建立在它的基礎上
所以 無論是用高級API 還是直接在Metal中編程
都能獲得我們創建的所有的性能優化
關於Metal的另外一點是
它是我們遊戲生態系統的基礎技術之一
因此讓我們來談一談遊戲
在過去幾年中 我們創建了偉大的遊戲生態系統
目的是創建API和工具
把你對於遊戲的想法付諸實踐
今天在這裏我想有重點地說幾個
第一個是上午說過的Replay Kit
我們去年引入了Replay Kit應用起來非常簡單
可以讓你的用戶錄製遊戲過程
編輯錄像 然後分享給他們的朋友
今年 我們會更上一層樓將推出ReplayKit Streaming
目前 Replay Kit可以現場直播
在支持ReplayKit StreamingExtension服務的設備上
這就允許用戶不僅僅是—
不僅僅是能和朋友分享還能通過Internet實時發佈
自動地 通過ReplayKitLive Streaming
並且——是絕對的
甚至更好
如果你已經使用了Replay Kit只需要添加三行代碼
非常簡單 可以真正擴展應用的社交覆蓋度
說到社交 讓我們談一談Game Center
我們將改變Game CenterMultiplayer工作模式
目前在最新版的OS中
只要能發信息就能邀請
所以你的用戶可以邀請任何通過信息能聯繫到的人
就是這麼簡單 發個信息就可以了
而且最酷的是
如果你已經在遊戲中使用了多玩家API
你甚至不需要做任何改動在最新版的OS中就可以這樣運行了
並且我們不會止步不前
我們將向Game Center中添加新API
Game Center Sessions
Game Center Sessions營造了一種堅挺的分享體驗
用戶可以隨意進出
意思是你要在設計遊戲時充分考慮到移動設備用戶
進入和離開應用的方式
這就需要一個移動設備的多玩家遊戲的新典範
最後 說一下GameplayKit
GameplayKit是一個基於組件的API
可以實例化和自定義這些組件
併爲遊戲對象構建模塊
把難題留給我們來解決吧
接下來我要邀請Norman Wang上臺
講解這些組件和Xcodegameplay工具的展示
謝謝Geoff
我想向你們展示在Xcode 8中創建一個遊戲有多快
這是一個我正在開發的遊戲項目
這是一款競技性遊戲 角色有英雄和敵人
互相投擲彩繪氣球
我現已使用了今年發佈的新API中的SpriteKit和GameplayKit
你可以看到 遊戲需要三個主要元素
一張地圖、一個英雄和遊戲設定
我已經實現了英雄的移動和動畫
但毫無疑問 缺失了小島邊界的衝突
那麼讓我們來解決一下
打開Xcode對象 看一下源代碼
我已經寫了一些遊戲設定行爲
使用了GameplayKit提供的GKComponent
比如這個戰鬥組件
在Xcode 8中 我可以公開任何一個類屬性
是在2D編輯器中定義的類
然後我可以自定義
在場景中這個行爲何時與一個實體相關聯
我用了新版的碎片地圖編輯器來創建小島地圖
因此在遊戲中
有三個不同的碎片集
分別是沙子、水和草
我不僅可以指定內部和外部的碎片
還可以引入差異
所以這裏的這個紅邊 比如說
對於這個獨立的碎片圖片如果我想添加一個新外觀
去掉小石頭
我只需要把它從Media Library中拽進來
現在這個碎片集就完成了
現在讓我來展示一下如何使用它
那麼我們再切換到小島地圖
小島是用新的碎片地圖功能創建的
由SpriteKit提供的
所以要修改它 我只需要選擇碎片地圖
雙擊
選擇激活的碎片
現在 我覺得小島看起來有點兒太單調
要進行更多修改 我只需要繪製各個遊戲關卡
Xcode會自動繪製正確的碎片
使相鄰的元素得以匹配就這麼簡單
現在我覺得我實現了我想要的小島的效果
讓我們看一下這裏的一些遊戲設定元素
要武裝我們的英雄讓他有一些動作和動畫
我已經關聯了玩家輸入組件
和動作組件
要讓玩家待在小島的邊界之內
我只需要添加一個衝突組件
這樣 它會自動創建一個實體
爲我們的英雄和小島
基於當前設置好的碎片集
要使玩家能投擲水球
我只需要添加戰鬥組件
請留意一下 戰鬥組件類是如何公開健康值的
現在是可見的了我可以給它一個自定義值
比如說 我可以設置它的值是2
而不是使用默認值1
另外 我設置了一個雄蜂投擲彩繪氣球
還有一個敵人 在場景中
要賦予敵人同樣的戰鬥力
撿起彩繪氣球並扔向我
我要添加同樣的戰鬥組件
要讓遊戲成爲一個公平的遊戲
我會給敵人設置同樣的健康等級 即2級
而不是使用默認值1
現在 我覺得這個關卡的設置非常棒
讓我們運行一下 看一下效果
雄蜂會隨機投下彩繪氣球
氣球戰鬥即將打響
那麼看起來所有的元素都齊了
因此在Xcode 8中 可以很輕鬆地實現遊戲關卡的設置
並關聯所有遊戲設置邏輯
相當迅捷
因爲我用了SpriteKit和GameplayKit
我的遊戲可以在所有Apple平臺上順利運行
謝謝大家 現在讓我們把舞臺交還給Andreas
謝謝Norman
好了 讓我們快速回顧一下我們剛談到的幾個重點
現在有四個Apple OS平臺
都有自己的App Store你可以在裏面發佈自己的想法
而且今天 我們增加了豐富的新擴展接口
可以更深層地連接我們的OS平臺
也許最重要的是
我們建議你考慮創建一個iMessage App
並把你的app與SiriKit整合在一起
但這只是今天我們要發佈的衆多API中的兩個
並且全部支持
都由新版Xcode IDE提供
Xcode 8的運行平臺包括Mac OS El Capitan
和Sierra
當然 也支持Swift 3的開發
現在 這些技術都可以下載了
今天 從WWDC Attendee Portal中
那麼你可以在今年下半年捷足先登
當我們發佈產品時
你就可以爲你的用戶創建更強大、更獨特的應用
同時 留意一下新版SwiftPlaygrounds app
我們將它納入了iOS XDeveloper Preview
我想你們一定會獲得很多樂趣
也許你會考慮創建額外的內容
爲剛開始學習如何使用Swift編程的孩子們
此次會議中有許多機會
來更多地瞭解我們今天所發佈的一切
有100多場研討會和很多實踐活動
你可以跟現場的每個工程師一對一地進行交流
他們會在這裏回答你的所有提問
我希望你們能盡情享受此次研討會 下半周再見