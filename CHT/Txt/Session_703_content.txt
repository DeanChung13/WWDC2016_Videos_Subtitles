在網頁中使用Apple Pay
大家好
歡迎回來參加去年Apple Pay會議的人
我是Nick
今天我與同事Anders會在這裏
我們將會講述一個新的特性
在網頁中使用Apple Pay
首先 我想先問大家一個問題
你們當中有多少人舉起你們的手或者對着屏幕喊出來
如果你在樓下或者在線觀看的話
你們當中有多少人嘗試過網上購物
但是發現過程太複雜然後放棄了購物
我看到了很多人舉手了
毫無疑問 這是一個大問題
這是我昨天訪問的一個網站非常的傳統
無視這名字Honest Bob他是一個很棒的傢伙
但他在結賬的時候遇到了一些困擾
爲了舉例我將我的名字改變一下
改成了Johnny Appleseed避免重名
然後我開始輸入卡號
獲得了令人迷惑的錯誤信息
提示說卡號必須是一連串的數字
這樣我就會心裏想我覺得沒有空格是錯誤的
並且我的卡上就是有空格的
於是我做了修改
然後我又得到了一個錯誤信息比較明顯 月份不符合
而不是提示我沒有選擇月份
這樣很令人困擾
希望大家不會遇到像這樣糟糕的場景
但是因特網支付真的還非常的落後
且我們希望能解決這種問題
認爲可通過Apple Pay解決這種問題
並且我們今天將會講述
如何解決這些問題
可以通過在網頁中使用良好的接口
及Apple Pay帶來的好處
我們將會講到很多內容讓我們首先開始做一個介紹
我們將會通過一些事例來講述Apple Pay
你們可能還不熟悉它還不瞭解它能做什麼
然後我們會講述一些具體的API
我們將這些新JavaScriptAPI添加進了Safari
然後我們會講述支付處理的過程以及如何獲得付款
最後是關於Apple Pay的設計
如何讓你的網站變的出衆而且實用
及擁有比較好的Apple Pay體驗
所以 讓我們開始吧
Apple Pay是什麼？
希望你們大多數人都比較熟悉Apple Pay
它是一種簡單安全以及私密的支付方式
你可以在商店中使用
也可以在iOS應用中使用
也許你們已試過了若沒有 請放心的去嘗試一下
有很多非常好的應用比如Lyft Uber DoorDash
即便在參加會議 你也可以使用它們
且應用中的Apple Pay提供了
一流的商業體驗
這些應用真的非常突出
現在已經有非常多的應用採用了Apple Pay
它們在世界範圍內得到了使用在中國 英國以及美國
這些應用有着良好的發展
它們看上去有着更高的轉化率
那些使用Apple Pay的用戶
有着更高的消費傾向
並且再次消費的概率也更高
在消費之外 他們也會花費更多的時間
在這些應用上
最後 這些用戶會感到更加快樂
Apple Pay用戶滿意度最高的
支付手段之一
它非常好用所以用戶喜歡它
Apple Pay在應用中表現優秀但我覺得應該需要注意的是
大量的電子商務
沒有發生在應用當中
應用是很好的我喜歡各種應用
但是部分人仍然會在網頁上進行支付
絕大部分情況下 在網頁上進行的支付是非常緩慢的
是很繁瑣的並且也不透明
每一個商戶的付款流程都不一樣
同樣 每個網站付款流程也不一樣
現在我們正在嘗試解決這個問題
我們正通過向更多的場景以及更多的人引入Apple Pay來解決這問題
我們稱之爲Apple Pay Everywhere
我們現在主要在三個地方引入Apple Pay
第一是WatchKit
你可能在昨天的主題中已經見過了
且Kevin已提到過把Apple Pay引入到WatchKit的應用中
當然我們也會在所有的新擴展中引入Apple Pay
就像你看過的那些：SiriKit地圖以及信息
但最大的場景也就是你們今天來這的理由
是網絡和Safari
我們稍後會討論WatchKit以及擴展
那將是下個會議的主題
若你喜歡我的嗓音待會繼續留在這裏就好了
現在讓我們關於Safari
讓我們關注在網頁上使用Apple Pay
前面我已經談論了當今的電子商務有多麼糟糕
然而非常多的商品都是通過網頁銷售的
但是支付流程卻很冗長它們太複雜了
以致於很難使用
手機上這個問題更嚴重
因爲屏幕更小但是繁瑣的流程並沒有減少
用戶會希望在網頁上有着與應用一樣的體驗
使用起來非常簡便
並且在安全與隱私方面也沒有區別
有多少人不得不去辦理一張新的卡片
因爲一封郵件告訴你你曾經在上面買過東西的網站
早在三年前就已經被黑掉了
我就有過這種經歷
然而Apple Pay可避免這種事情發生
且通過網頁上使用Apple Pay功能
已可支持任何帶Apple Pay的設備
也就是iPhone與iPad
並可通過Safari或者SafariViewController來使用它
它與現有的Apple Pay體驗是一樣的只不過形式是通過網頁而已
同樣的UI界面同樣的使用方式
若你熟悉應用中的Apple Pay
你會感覺有熟悉的感覺
但是需要注意的是
這些設備並沒有包括臺式機
現在在一些國家 比如中國手機電子商務
已是主流的電子商務方式了
但是在美國大部分人還是習慣於
通過臺式電腦來買東西
你可能是通過Mac電腦購買了 WWDC 門票
我們認爲Apple Pay應該可以在任何地方使用
我們在Mac OS Sierra中引入Apple Pay
你們可在Mac電腦上通過Apple Pay支付了
並且具有同樣的安全性
與在你的iPhone或者Apple Watch使用Apple Pay的情況相比話
你可以簡單的觸摸一下就可以進行授權了
這樣用起來非常的簡單與直接
它支持在任何使用Handoff的Mac上使用
並且操作系統需要是Mac OS Sierra
這對於四年內銷售的Mac電腦都不是問題
Safari瀏覽器是完全支持Apple Pay的
你可以在手機上通過授權來進行支付
在Apple Watch也是一樣
因爲Mac OS上使用Apple Pay是非常快速的
可能有人之前沒有看過我們昨天的演示
現在我來展示另外一個演示
不用擔心這次演示會很快
讓我們轉到這裏來
在左邊 我訪問了一個網站
在右邊是一部iPhone手機
現在Craig通過網絡預定了一些門票
好在週四去觀看海底總動員
讓我修改一下日期 改到週五我們會和他一起去
我會和十個工程師一起去他們是我的同事
好 向Craig打招呼
好了 讓我來點擊下Apple Pay來進行支付
這一切都是即時發生的
讓我們來再做一次這次我會取消它
可以看到 當我取消了之後在我的手機上也自動的取消了
當我點擊Apple Pay支付按鈕的時候
一切都是立刻發生的
它立刻出現了
然後在我的手機上進行了Touch ID的匹配
這樣就完成了
幾秒內完成了整個支付
在這兩個設備之間反應都是即時的
然後我獲得了一個消息告知我完成了一次支付
在Mac OS上使用Apple Pay就這麼簡單和快速
這個過程真的非常快速
希望我說服了你們Apple Pay是那麼優秀
讓我們講述一下在網頁上集成Apple Pay的細節
在我們討論網頁API之前
讓我們來簡單看一下Apple Pay的基本知識
因爲很多人還沒將Apple Pay集成到應用之中的經歷
可能有人是一個純粹的網頁端開發者
Apple Pay提供具有唯一性的支付token給你
你將這個token發送給網銀平臺比如Stripe
比如Braintree還有Chase Paymentech
對於一次交易來說token是唯一的
該token只能使用一次
若需多次交易同樣需請求相應數量token
無論你在應用或者網頁上使用Apple Pay
t對商家來說token都是唯一的
token經過加密
即便token被盜取了
比如用戶處於一個不安全的Wifi連接的時候
這個token仍然是安全的
因爲它使用了商戶的證書以及商戶的標識符進行了加密的編碼
商戶的標識符
以及商戶的證書能夠代表你是一個商戶
它們比較像標準的反向域名解析
如果你是一個iOS開發者你會非常熟悉這種格式
它們是通過我們的開發者中心生成的
並且是唯一的
因爲只有你能夠解碼這些tokens
只有你才能讀取用戶Apple Pay的token
讓我們來看一下在實際的應用中是什麼樣的工作流程
在一個iOS的應用中
當Apple Pay按鈕點擊後就開始了用Apple Pay的支付
當點擊了Apple Pay按鈕之後
iOS系統允許了這次支付
然後出現了Apple Pay表單頁面
然後用戶使用Touch ID或者密碼
這樣支付信息會通過手機的安全信息單元芯片產生
這些芯片專門爲Apple Pay打造
能夠安全持有你的銀行卡信息
然後你的手機會做什麼呢
它會把數據發送給蘋果的服務器
服務端重新包裝這些數據該處理過程爲Rewrap
也就到時候對於商戶來說這些數據是再次加密過的
該處理過程不會顯示在手機
當應用獲取再次加密的支付數據的時候它同時可以進行一個回調操作
然後你就可以連接商戶的服務器
或者網銀支付的服務器
只要交易完成了 表單就會關閉
在網頁上使用Apple Pay與此非常類似
稍有幾處不同
發生在與驗證商戶有關的地方
因爲在iOS中應用都是從App Store上獲取的
它們是已簽名二進制文件
在我們繼續討論這些之前先讓我們來看一下
Apple Pay的一些要求
任何網站都可使用Apple Pay
前提是需要擁有一個蘋果開發者帳號
並且站點需要支持HTTPS
最後 站點需要遵守Apple Pay的指導方針
這些指導方針都非常的明確
大多數的網銀平臺都有着相關的條款
關於那些商品可進行出售那些商品禁止出售
現在已經有一些電子商務平臺
已支持Apple Pay
我們還將會談到一些具體的電子商務平臺
的網銀支付處理
如果你已經加入了某個電子商務平臺
你就不需要一個開發者帳戶了
它可以幫你處理這些
假設你的站點符合所有的要求
那麼爲了使用Apple Pay首先需要爲你的站點註冊
爲你的站點註冊是非常簡單的
你只需要在開發者中心創建一個商戶標識符以及證書
然後註冊你的域名
並且讓它與商戶標識符對應
域名需要是全稱
比如store.apple.com
你想在哪站點支付就需要填寫相應的域名
當你通過域名註冊之後我們會前往該域名進行驗證
然後你會獲得一個證書
一個蘋果公司發行的TLS證書
我們稱之爲Session證書我需要重新說一下
在註冊Apple Pay中使用了三種信息
商戶表識符以及商戶證書
通過這兩項證明我們商戶的身份
然後還有Apple Pay的Session證書
代表了我們的域名
在開發者中心註冊Apple Pay非常簡單和直接
應該現在就已經可以註冊了就像這樣做
首先添加一個域名
然後我們會檢查這個域名上
是否有我們要求放置的文件
這樣就可以了
來看一下它爲什麼更適合使用
讓我們來看看在網頁上使用Apple Pay的流程
就像在應用中使用Apple Pay一樣
首先需要點擊進行Apple Pay支付的按鈕
在網頁上有一個關鍵的地方不同
當你創建了一個支付請求的時候
也就是通知我們你想對什麼收費
然後有一些額外的處理
需要進行一次驗證你創建了一個商戶的session
然後從你的網頁服務器發送到了Apple服務器
當Apple服務器有響應時
你再將這個支付請求發送給Apple服務器
這就是唯一的區別了
這是與在應用中進行Apple Pay相比
在網頁中進行Apple Pay的唯一的區別了
商戶有效性驗證
讓我們看下商戶驗證的細節
讓我們來談下爲什麼我們要這麼做
我在一分鐘前提過
那就是網頁與應用之間有一些不同之處
在iOS應用中
類似Apple Pay或位置安全性被簽署授權所保護着
如果你對此不是很熟悉
簽署授權就是 App Store中你應用的二進制文件部分簽名信息
簽署授權同時保護着用戶和開發者
以及Apple Pay中的商戶
我們需要注意的是在網頁上並不存在app store
所以我們並沒有這些簽署授權
我們使用了一個商戶驗證的處理用替代簽署授權
它保護了用戶也同時保護了像你一樣的商戶
舉例來說如果你的網站被攻破了
你可方便停掉該站點Apple Pay
商戶驗證非常的簡單和直接
它並不複雜
你拿到一個Apple Pay服務器的URL
這個URL是Safari提供的
你讓你的網頁服務器使用這個URL
在請求商戶的session中會用到
現在開始請求商戶的session
你需簡單提供一TLS證書這證書是我們之前爲網站域名得到的
這是個有挑戰的迴應
如果這個證書看上去很好是有效的
並且它與這個域名匹配
就是你提交支付請求網站對應的域名
我們會收到一個session
這個session中的內容無法獲得
你們不需要關注它的內容
它是一個具有唯一性的token
代表了一次Apple Pay的請求
它被用來確認你的網站依然是安全的
每一次的Apple Pay你都需要請求一次session
但是這種請求的開銷比較少
且這過程不會佔用太多的時間
在你會通過你的網頁服務器來請求它
你並不是從你的用戶那裏來獲得它
對於商戶效驗我有一些建議
首先 讓客戶端發出獲得session的請求
因爲請求速度可能會有比較大的差別
取決於用戶所在的國家
Apple Pay有很多服務器部署在世界各地
我們會使用
離用戶當前位置最近的服務器
對於有些人來說
需要預先知道這些服務器的IP地址
用來讓連接通過防火牆
我們會提供一份列表
放置在developmentalapple.com上這樣你們就能看到了
你應該只請求一次session
當用戶點擊Apple Pay按鈕時
別在加載頁面時就請求那樣是沒有必要的
只需在用戶點擊了相應按鈕後纔去請求session
當請求session時我們會展示Apple Pay表單
用戶會覺得這種情況是即時出現的
當他們點擊了Apple Pay按鈕後
他們會看到這個表單我們也會讓它處於加載狀態
直到效驗完成
在下個部分你們會看這些如何工作
即在我們講述JavaScript API時
最後一個建議 別在客戶端生成一個商戶的session
這是因爲你需要提供一個session證書
而這個證書與你的域名對應
你是不想把這證書也嵌入到你的網頁頁面中的
將這個證書保密是很重要的
因此你會在網頁服務端來進行這種驗證
好吧 讓我們來概述一下
我們先需建立個網站
我們需要保證我們的網站遵守Apple的要求
我們創建了虛擬的標識符以及商戶證書
我們將它與我們的域名相對應
然後我們瞭解到瞭如何進行驗證
如何爲每一個Apple Pay支付進行效驗
所以說這樣覆蓋了部分同樣的流程
這個部分是什麼？
就是我說過的與應用中使用Apple Pay相一致的部分
但顯然它們是不同的API
因爲我們無法在服務端調用Swift
所以接下來我們會談論到
如何用JavaScript API來支持這個新特性
下面請Anders來進行介紹
他是WebKit團隊中的一員
Anders
謝謝 Nick
今天在這裏我非常的興奮
我會告訴大家使用Apple PayJavaScript API多簡單
Nick已提到過Apple PayJavaScript API
已可以在iOS 10的Safari中
和那些通過SafariViewController的應用中使用
現通過Mac OS Sierra系統可讓你在Mac的safari中使用Apple Pay
同時需要使用AppleWatch或者iPhone
來進行實際的授權
這些API非常的簡單
它有一個單一的入口叫做ApplePaySession
它受到了PassKit API影響只是將場景切換到了應用中使用Apple Pay下
如果你熟悉PassKit API那麼你會發現兩者很類似
在我們進行深入的瞭解之前
我需要介紹一個朋友先
她經營了一個商店
售賣高端的衣服
這些衣服是給狗穿的
在幾個月之前她運行了一個網站
在上面可以買衣服
你可以在網上進行支付
然後店家就會發貨了
但是不幸的是現在這個生意有個困境
有很多人訪問這個網站
但是卻沒有多少訂單
讓我們來看下這個網站
找一下原因
這就是我們的網站了
比如我們想買一條可愛的圍巾
首先將它添加到購物車裏面
然後我需要去付款
這時候打開付款的頁面
輸入收貨地址
這時候到信用卡這一欄了
輸入信用卡號以及賬單地址
然後我就可以提交訂單然後我的圍巾也就會被運送了
讓我們看一下應該如何使用Apple Pay API
讓這個流程變得更加簡單合理
舉例來說如果我們爲購物車增加一個
Apple Pay的按鈕
那樣在產品頁面就可以下單了
現在我們想增加這個按鈕
但僅限那些能夠使用Apple Pay的用戶
爲了做成那樣
我們可以使用函數ApplePaySession.canMakePayments
這是一個用起來非常簡便的函數
在代碼中它看起來是這樣的
注意 我檢查了當前的window.ApplePaySession
在使用之前需要進行這樣的檢查
我不是檢查WebKit或者Safari的版本
我是在檢查window.ApplePaySession對象是否存在
如果它存在的話我就會調用它
它會返回一個Boolean然後我會檢查這個值
如果返回true我就調用showApplePayButtons
這樣顯示出相應的按鈕
值得注意的是
window.ApplePaySession只會告訴你
這設備是否支持Apple Pay
如果你使用的是iPhone或者iPad
它會返回是否存在一個安全部件的結果
如果你在Mac上使用
它會告訴你
是否存在一個iPhone或者Apple Watch能爲這次交易授權
它不會告訴你用戶是否已經爲Apple Pay添加過銀行卡
如果需要檢查這一點的話
我們可以使用
ApplePaySession.canMakePaymentsWithActiveCard
你需要傳遞你的商戶標識符給這個函數
然後它會向Apple Pay服務器驗證
這個商戶標識符是否正確
這個函數自身的屬性會關聯這個域名
因爲你從這個域名發送請求
鑑於此 它是異步執行的並且返回一個JavaScript promise
如你不知道一個JavaScriptpromise是什麼
你可以把它當成一個功能更強的
回調處理程序
你使用這個函數的時候還有一些限制
你只能在一些情況下才能使用如支付流程默認用Apple Pay
或者你想在產品頁面上就添加一個產品頁面按鈕
在我們的情況中我們想添加一Apple Pay按鈕
放在我們的產品頁面上所以我們可以使用這個函數
另外我們可能會使用ApplePaySession.canMakePayments
我們在這裏使用了這個函數
我又一次的檢查了Apple Pay session對象是否存在
然後調用canMakePaymentsWithActiveCard
我輸入了我的商戶標識符
然後我使用了這個promise當promise成功後就會執行相應的功能
在這個例子中promise成功後會得到一個BOOL值
我在promise中的代碼就會執行
如果canMakePayments返回true那麼就會展示ApplePay按鈕
現在我們就能看到每一個產品下面都有一個優美的按鈕了
下一步就是彈出支付表單
當用戶點擊了這些按鈕的時候
爲了做成這樣
我們需要創建一個新的ApplePaySessionJavaScript對象
ApplePaySession構造器有兩個參數
一個是API版本號
還有一個是我們自定義的
從而讓我們可以擴展ApplePaySession API
這樣可以向下兼容而不影響當前的用戶
這當前的API的版本號是1所以就一直保持1
將支付請求當成第二個參數傳入這個請求
如果你較熟悉PassKit API
你會發現這個JavaScript和PKPaymentRequest一樣
它會拿到所有必要的信息
來在表單中展示比如貨幣類型 國家
如何支付以及總金額
還有一些可選項比如收貨地址
可能會被要求
然後你就獲得了新的ApplePaySession對象
你只需調用Begin命令然後展示表單
就像這樣的JavaScript代碼
首先我們聲明一個paymentRequest對象
然後指明瞭貨幣碼和國家碼
這裏我指明瞭總金額和支持的卡片種類
還有商戶的經營範圍
最後我指明瞭需要一個完整的郵編
處於發貨的考慮
就我創建了新的ApplePaySession
我傳入了商戶號的參數這裏是1
還有支付請求
在得到返回結果之後我仍然會再次調用sessions
現在使用任何支付的API
我們都去要確保所有的細節是正確的
正因爲如此
在我們展示表單之前我們需要進行一系列的驗證
如果任何一步出現錯誤
我們會停止 然後拋出一個JavaScript的異常
正由於此 創建一個Apple Pay session
可能會拋出一個JavaScript異常
舉例來說如果你在一個不安全的頁面進行調用
比如這個頁面不是基於HTTPS的
沒有使用最好的編碼協議
實際上每個Apple Paysession API
都會拋出異常
如在一個不安全頁面上進行調用
創建Apple Paysession也會發生異常
在你沒有傳入一個有效的支付請求的時候
舉例來說你沒有指定一個支持的網絡列表
或者總金額是負的
或者輸入了什麼錯誤的數據我們無法識別
這樣都會拋出異常
此外 調用Begin也可能拋出異常
若你不是在一個點擊事件處理中調用它舉例來說
我們不會允許展示表單
除非用戶明確的
點擊了按鈕
如果已經存在了表單了然後我們又試圖去調用Begin
我們也會獲得JavaScript異常
因爲我們只允許同時只能出現一個表單
如果你看到了這些錯誤的話
你可以使用網頁檢查器的錯誤控制檯
來查看錯誤原因的細節
如果一切都正常
並且所有步驟也正確
那麼就會顯示這個表單
但是需要注意你現在還沒有完成支付
我們看到這裏還在加載
因爲還沒有完成商戶的效驗
Nick之前提到過這一點
所以在表單出現後
我們會立即發送一個驗證商戶的DOM事件
向ApplePaySession對象發送
這個DOM事件有一個屬性validationURL
你需要讓你的服務器能夠訪問這個URL
然後加載它來獲得商戶session
然後當你的服務器獲得merchantsession對象後
你需要調用completeMerchantValidation
來通過這次驗證然後就可以繼續了
一次商戶驗證事件處理就像這樣
這裏我調用了這個performValidation方法
它是我自己定義的
它返回一個promise這個promise
來獲得商戶的session
所以當promise成功後
我會調用completeMerchantValidation
傳入了商戶session的參數
這就是你在商戶驗證中所做的
現在 我們的商戶驗證就完成了
用戶可以用手機或者Apple Watch
對這次支付授權
當這次支付獲得授權之後
我們會向Apple Pay session對象發送一個支付授權通過的DOM事件
這個DOM事件包含了一個支付屬性
這個屬性含有所有必需的支付信息
它有着諸東西如收貨地址
以及其他一些在這次支付會用到的信息
然後它還有加密過的支付token
網銀平臺會用到這個token
一旦你向網銀平臺發送了token意味着這次支付就已經處理完畢了
獲得網銀平臺的反饋數據後調用completePayment方法
這個方法同時會讓表單在界面上消失就像這樣
這裏我們就會有一個授權後的事情處理
我調用sendPaymentToken
我將token傳入了
這樣就會返回一個promise
會通過一個BOOL值來代表
你的支付成功還是失敗
如果成功的話
我會將狀態設置爲ApplePaySession.STATUS_SUCCESS
如果失敗了假定這個支付沒有完成
那麼將狀態設置爲ApplePaySession.STATUS_FAILURE
 然後我會調用completePayment
我傳遞了status參數它會關閉sheet
然後我再調用showConfirmation
這樣會彈出一個美觀的訂單確認的頁面
調用completePayment傳入成功的狀態碼
你會看一個好看的確認的標記並且表單會從界面上消失
好了 現在讓我們來看一下演示
來看一下如何辦到這些
我們開始了
首先 我們進入了這個網站
同時讓我們看一下源代碼
在我們加入JavaScript之前關注一下這些
這裏我加了兩個觸摸用的圖標
舉例來說在SafariFavorites視圖中會用到
它們也可以在Apple Pay授權的表單中使用
我們稍後會看到
這裏我列舉了所有的產品
之前我們已經爲它們增加了Apple Pay按鈕
我也可以通過CSS來讓它們是否顯示
讓我們來看一下
這是我的CSS文件
這裏是關於Apple Pay按鈕的聲明
這裏我設置讓它們不顯示
對於它的圖片
我使用了WebKit-named-image特效
這樣我們可以使用系統自帶的Apple Pay的Logo
你並不需在你的服務器上放置這張圖片
好了 現在我們需要增加一些代碼
讓設備支持Apple Pay情況下顯示Apple Pay按鈕
這裏我已經寫過一些同樣的代碼了
我爲DOMContentLoaded事件創建了一個EventListener
這個事件會被執行
當主頁被加載的時候
但是在任何圖片加載之前
所以這個地方適合放置這些代碼
讓我們來添加一些代碼來完成這個功能
我們又檢查了ApplePaySession是否存在
然後我調用了canMakePaymentsWithActiveCard
並且在我的promise函數中我檢查了返回的值
若返回true調用showApplePayButton
現在讓我們保存後再回到這裏然後我們開始加載
現在我們就獲得了Apple Pay按鈕
下一個步驟是點擊按鈕的時候 彈出sheet
我已經寫了一個applePayButtonClicked函數
在用戶點擊按鈕的時候會執行
所以我們想在這裏讓用戶點擊按鈕之後就顯示錶單
所以我又聲明瞭paymentRequest對象
這裏的金額 我直接硬編碼了這畢竟只是個demo
但是在實際的場景中這個數據應該從別的地方獲取
我創建了一個新的ApplePaySession對象
然後調用Begin
讓我們保存後重新加載並且展示出表單
可以看到表單並沒有顯示
讓我們打開錯誤控制檯來找一下原因
好了 控制檯指出
“supportednetwork”並不是一個合法的屬性名稱
看起來這裏是我拼錯了"supported"
所以讓我們回頭解決掉這個問題
然後重新加載
現在表單就可以展示出來了
但是我還不能確認這次支付
因爲還沒有進行商戶的驗證
所以讓我們來進行這個步驟
我想加入validateMerchant事情處理
我會在這裏創建了session後再加入
但是我們會先調用Begin
再一次的調用performValidation
當這個promise獲得了處理結果的時候
它會調用completeMerchantValidation我會傳入商戶的session
然後我就能夠確認支付了
現在我們還需要做最後一件事情
那就是添加我們的支付授權代碼
我們會向服務器發送支付token
並且完成這次支付
如果我們成功了我會將狀態設爲SUCCESS
否則我將它設爲FAILURE
回調completePayment及showConfirmation
現在我想使用QuickTime
讓我們來看一下在真實手機上的表現效果
讓我們重新加載我點擊了支付按鈕
現在我就可以確認了
就像你們看到的那樣我還能看到這個網站的圖標
那是因爲我添加了鏈接圖標的屬性
現在我們可以進行支付了然後完成支付
商家會安排發貨了
所以爲網頁添加Apple Pay是非常簡單的
我相信如果那樣做的話
Canine服飾會在狗狗中流行
該讓Nick回到臺上了
大家都知道Anders他是WebKit團隊中的那位
跟狗天天在一起並且應該被丟進狗屋的人
好了 讓我們繼續
給我一根骨頭吧
我去當軟件工程師太浪費了
好了
我們已經看到了如何在網頁中支持Apple Pay
讓我們來討論一些可能對你們來說是比較重要的事情
那就是你們如何獲得付款
從Apple Pay中獲得付款
Anders講述了獲得支付數據的過程
後面會發生什麼
因爲擁有一個支付token你現在有兩個選擇
第一個是自己對這個token進行解碼
通過你自己的服務器
這是較好的選擇對你已使用了Apple Pay
或者你有一個非常大型的電子商務後臺
你會熟悉其中加密算法
在我們的開發者網站上有相關的文檔
另外一個選擇是
將這些加密的支付數據
發送到網銀平臺然後它們會幫你解碼這些支付數據
前提是你將密匙提供給了它們
這是一個比較方便的選擇
非常多的網銀平臺提供了應用內的SDK
我們非常相信這些平臺
也會提供類似的基於JavaScript的SDK
讓你們可以直接集成到網站中
實際上在歐美
現在超過40家網銀平臺支持Apple Pay
名單太多了所以就不一一列舉了
全部名單列表可在developer.apple.com上找到
就像我說的那樣 許多網銀平臺現在提供了應用內的SDK
將來它們也會提供網頁的SDK
這裏我想強調一下一些新的網銀平臺
大家都知道Apple Pay在中國可以使用了
這項功能在中國也同樣好用
像在歐洲或美國那樣
在中國有四家網銀平臺支持Apple Pay
它們是中國銀聯  連連支付首信易支付以及易寶支付
若你在亞洲轉發應用內或者網頁的請求
你同樣能獲得良好的支持
就像我前面提到過的電子商務平臺
很多站點並沒有獨立的電子商務系統
它們使用着電子商務平臺提供的服務
我們現已與很多電子商務平臺進行合作
我們主要有三個電子平臺合作方
它們是Demandware IBM以及Shopify
如果你沒有使用這三家中的一個
那麼你在使用Apple Pay時
在使用Apple Pay的時候
需要一個開發者賬號
使用這些平臺對你來說會更方便
它們會處理與Apple Pay深度集成的事情
現在你可能會想去試一試了
我希望你們都那麼想
我想多談一些關於測試的事情
測試你的網站:
我們來介紹一個新的測試環境
它爲Apple Pay打造名叫Apple Pay Sandbox
這是一種新的測試方式
在這個測試環境下默認網頁就是支付Apple Pay
如果你想獲得更多信息的話
這個會議我們沒有時間來談論這個問題
但是在下個會議我們會談到
我們會爲大家講述Sandbox
如果訪問我們的網站developer.apple.com
那裏會有Apple PaySandbox相關的更多的信息
作爲一個開始你將會能夠
測試網頁上進行Apple Pay
然後我們就可以將Apple Pay在生產環境上部署了
我們即將發佈iOS X以及Mac OS Sierra
所以當你們開始測試Apple Pay的時候
請給我們一些反饋來幫助我們解決錯誤
我們非常願意聽到你們反饋問題
及其它你們所見到的事情
如果你們願意表示祝賀之類的話我們也非常願意聽到
好吧 讓我們看看最後一個部分
Apple Pay的設計
如何爲網站建立一個能收到歡迎的體驗
這方面也同樣的適用於應用
在最開始的部分我提到了一點
那就是Apple Pay三個原則：
它們是簡單 安全 以及私密
你的設計需要能體現哪些
而不是設計的太複雜
Apple Pay不能設計得使用起來太複雜
Apple Pay也有三個主要階段
它們是預支付階段
在這一階段你還沒有看到Apple Pay表單
這種體驗發生在Apple Pay表單出現之前
然後是支付過程實際的支付使用
這時候表單已經出現了
你可以定製那個界面你還需要做什麼呢
讓我們來看看
然後還有發送支付的過程
那是表單消失後的體驗
讓我們來完整的看一下這三種階段
然後討論一下你如何設計Apple Pay的各個階段
預支付開始於用戶點擊了Apple Pay按鈕
在Cocoa Touch中也有同樣的Apple Pay按鈕
就像我剛纔展示的那樣
你也可在CocoaTouch中使用它
這種按鈕有很多種風格
這裏有很多種
Anders展示了使用CSS來改變但是需要重申的是
我們提供了WebKit-image-named的屬性你們可以使用它
你可以獲得一個Apple Pay的logo
就可在網頁的按鈕上使用了logo了
有些可以改而有些不能改
使用Apple Pay時
使用內建的資源
即使我們修改了logo你們也沒必要知道
你可能想確保你logo是最新的
並且放置到任何用戶想進行購買的地方
不用隱藏它
不要讓用戶對支付感到困難
但是支付操作卻很簡便
還有一些最好不要做的建議
不要修改按鈕的外觀或者它的行爲
對於用戶來說
他們點擊了Apple Pay按鈕就讓他們看到Apple Pay表單
我們希望有這樣的體驗
同樣不要讓這個按鈕無效
蘋果的標準規定你不能讓這個無效
你必須於其它的支付方式同等的對待它
讓我們討論一下什麼地方可以放置這個按鈕
 Anders的演示已向你們展示了
再開始支付流程之前就放置好這個按鈕
在產品的界面放置這個按鈕可以增加用戶的支付轉化率
我們從應用中看到了支持ApplePay後會帶來良好的數據
表明了支付轉換率的上升
他們只是在產品的界面放置這個按鈕就能產生這種結果
同樣明顯 你可將它放到常規的支付流程以及購物車中
讓我們來看一些例子
我們將Apple Pay API向一些網站開放了
並且要求它們遵守一些設計
和使用Apple Pay的經驗
其中一個是StubHub
現在StubHub決定將Apple Pay按鈕
放置在訂單流程當中
你選擇你需要的門票
然後使用Apple Pay
你也可以將Apple Pay提前
你可在快速支付的時候就使用Apple Pay
Warby Parker就這麼做
在你選擇了一個產品之後
你會看到兩個選項
W可以將它加入購物車然後繼續選購
或者直接通過Apple Pay來購買
最後你可將Apple Pay按鈕
直接放到產品的頁面
Lululemon是這麼做的
這裏在產品頁面就有一個按鈕
讓我們在iPad上看一下
你同樣能看到添加商品到購物車
如果我想像平常那樣創建一個購物車我可以做到
或者我可以直接購買它們
有一點在產品頁面得到了增強
那就是允許未註冊直接支付
要求註冊是一個非常主要的用戶門檻
我不知道你們如何看待
但是我不會去一個我不知道的網站購買東西
前提是它要求我進行註冊
所以Apple Pay能幫助減少抑制消費的情況
通過讓未註冊用戶的支付流程變得非常簡單
同時 你可以選擇利用
Apple Pay表單中的信息在用戶購買後爲他創建一個賬戶
我會來爲大家在支付後的部分來展示這一點
讓我們來關注一下實際支付過程Apple Pay表單
Apple Pay表單爲商戶提供了靈活的支付流程
這是高度定製化的
但是它同樣爲用戶提供了一種持續性的使用經驗
你可以決定顯示出哪些信息
但是用戶總是有着自己的期望
這裏是Apple Pay表單的例子
我使用的是Mac OS sheet
但是在iOS上 條目也是一樣的
若你在SafariiPhoneiPad的網頁上進行支付
第一個條目是選擇銀行卡
賬單地址也經常第一個被選
儘管賬單地址不是必需的
在處理支付流程的過程中
第二個條目是收貨地址
這個是你必須從用戶那裏獲得的信息
你可請求銀行卡信息 收貨地址若有需要 你還可以請求聯繫地址
你可以指明收貨地址的方式
你可以改變那些術語
若你不想用“shipping”你可用“delivery”或“pickup”
這對於拼車應用或者外賣服務來說非常好
現在你可以列出快遞費用的列表了
你可以用列表來描述它們我們馬上會講到這一點
但是當你收集了這些信息之後
請確保你有一個清晰的保密協議
如果你在應用中使用了Apple Pay
當你將應用上傳App Store時會被要求提供保密協議
現在你是在爲網頁做設計
很明顯沒那樣的方式來提供保密協議
所以我們要求你提供一個保密協議
放在你的網站上
且表明你如何使用這些信息
現在既然你們能使用寄送方式了
就是選擇郵寄之類的
就像選擇地址那樣這也是可以定製的
用戶可以從一個列表中選擇
如果地址更新的話這些方式也應該會更新
比如在你已經選擇了送到紐約的快遞方式的時候
你可以很容易的想到這一點
這些方式也可以是免費的如果你願意的話
就像收貨地址那樣
收貨人的姓名也可以按你的要求改變
儘管你會要求住址郵件地址 手機號碼
在同一個屬性中
但是在表單中 它們是分開的
這裏是聯繫信息的條目
是用來填寫信息而不是填寫郵政編碼之類的
我們現在支持收集手機號
我們也支持收集郵件地址
如果你沒有要求一個送貨地址
我們會允許你獲得用戶的名字
這對於拼車的應用或者網站會非常有用
及那些想獲得姓名的應用或者網站
但是卻不需要用戶的送貨地址
現在到了最重要的一個填寫區域它就是摘要信息
用戶獲得的金額會高亮
抱歉 是用戶支付的金額
並且你可以使用這個摘要
來簡潔的表明支付的用途
比如小記 快遞費 折扣
這裏並不是一個條目列表
它並不是一個銷售賬單
所以你需要讓它很簡潔
當然也需要清晰明白的表明你的收費
確保顯示的總金額
與用戶即將要扣除的金額保持一致
那就是說 這些情況下
你並不需要知道付出多少錢
有時候你不知道最終會支付多少錢
比如酒店預訂會出現這種情況它們是開放性的
租車或者的士服務也是如此
這時候你可以使用pending的條目類型
在摘要信息中表明這一點
所以需要注意  保持透明的計費
爲何我一直提到“作清晰預估”
你可以在剛纔的演示中看到
在通過Apple Pay付款後通常你會看到一個通知
這個通知來自銀行並且告知金額的變化
所以你想確保那個金額
與表單上顯示的相匹配
至少盡力讓兩者保持一致
你不需知道總費用時
摘要條目也支持免費或者折扣
條目上可以標記爲免費
摘要條目可以是負數但是總金額不能爲負數
總金額必須是一個正數
但是在那之前
如果你想指出哪個地方有折扣都是可以的
這裏是另外一個Mac OS表單
這裏是一個條目告訴你在什麼設備上確認
這讓我想起了Anders討論網站圖標的觀點
這是一個在iPhone的表單而此時你在你的Mac上進行着支付
在這裏你不能定製任何東西
我們會告知你銀行卡但是你無法改變
你需要在Mac上改變它
順便的說一下
若在Mac上改變任何選項價格都會更新
如果你改變了郵寄方式而使得費用增加
我們會直接進行同步
但是網站的圖標是從你的網站上下載的
你可以通過很多種方式來指定
它使用了Apple Touch的圖標
爲了使用Apple Pay你需提供180和120像素大小
最簡單的方式是提供一個鏈接
但是你也可以設定是域名的根目錄
選擇適合你的方式吧
我還想談談一些別的事情
那就是關於標記語言
你們當中很多人應該使用過標記語言
用來在你們頁面上指明產品類型
那樣可以被搜索排名所統計
我們同樣的有一個產品類型排名
在iOS的Spotlight中
你也可指明你的站點使用了Apple Pay
只要你使用了合適的標記語言
我們覺得那樣會更有利比如說對於搜索引擎
及想知哪些地方正用Apple Pay的人
若你想這樣做也會對你更加有利
現在讓我們來看最後一個部分確認支付
在你的確認信息中你想反映出合適的狀態
放置到Apple Pay表單中
比如說 失敗的時候就不要顯示一個成功的頁面了
那樣是非常愚蠢的
同時你可以利用Apple Pay收集的信息
來爲用戶提供一個新的賬戶我前面有提到過
我想展示Lululemon的例子
這裏就是例子了
當你已經做了一次支付後
你獲得了一個確認信息的頁面
然後你創建了一個賬戶
預置了從Apple Pay中獲得的郵件信息
所以同樣的我也可以自己創建一個賬戶
我也可以將賬戶關聯起來
這樣做是非常容易的
好了 我們今天講了很多內容
我們主要覆蓋了哪些呢
我們講述了網頁上Apply Pay的商戶驗證
我們學習了Apple Pay在網頁和應用的不同之處
Anders爲我們講述了Apple Pay session以及JavaScript API
然後我們還談到了設計者如何利用Apple Pay優勢
我們現對網頁上使用ApplePay已經有了很多瞭解
你可以在這裏獲得我們的開發頁面以及網站
以及相關的會議
首先 不用去其它地方
留在這裏不要離開
我在三點鐘會回來講述Wallet與Apple Pay中新的內容
我們會講述SandboxWatchKit以及擴展
以及其它一些新的事物
這些在Wallet and Apple Pay中發生並且與銀行以及零售商有關
這裏還有一個會議是針對網頁開發者的：
在你的應用中優化網頁內容
該會議將在週五4:00開始
我們已經講完了
歡迎各位前來
我已迫不及待想看到大家支持網頁上使用Apple Pay了
謝謝希望大家在 WWDC 度過好時光