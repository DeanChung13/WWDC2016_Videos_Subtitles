大家好歡迎來到“驗證HTTP直播流”會話
我是Eryk
是一名Apple的媒體工程師
現在就開始吧
驗證確定完善性或準確性
我們驗證流的目的是什麼
是要確保該流的正確性
至少是結構的正確
結構檢測並不能發現所有潛在問題
但可以消除大部分的
爲了更準確
首先要確保播放列表和片段的格式正確
那麼軟件可以解析流嗎
HLS驗證
第二 我要有些額外要求
例如 HLS規格不需信息幀播放列表
但我們需要
因爲想要改善用戶體驗
第三我們希望這些流來反映既定的最佳實踐
一切正常
最終都是爲了
確保流在設備上運行正常
現在讓我們談談規格
最重要的是HLS規格本身
如果你有過使用HLS的經驗
你可能看過這份文檔幾次
這是因特網工程作業推動（IETF） 網絡草案
搜索“draft pantos”就能找到
幾年前發佈了第一版
我們一年更新兩到三次
文檔詳細說明瞭播放列表結構
存在何種標籤 格式是什麼
並向客戶和服務器解釋職責
HLS編輯規範
這是我們最新推出的一個文檔
HLS編輯規範
可以在參考庫中找到
我們一開始在去年秋天推出tvOS版
在 WWDC我們已經升級覆蓋iOS和OS
這份文件試圖涵蓋構成HLS的內容
規範要求有幾個來源
一些來自HLS規範的回波規範
例如 不連續性點位置
播放列表持續時間
一些必須要有設備的支持
例如 你的視頻都需要是H.264
或者每秒內容不能超過60幀
其他一些來自期望的用戶體驗
例如我們期望的I-Frame間隔
或者我們希望大家來支持trick play
一些是根據我們過去七年的經驗和分析
我要說的是我們的傳送建議
我們推薦的比特率
我們對隱私和安全的建議
我列出來的要求僅僅只是幾個例子
讓大家對這個文檔有個概念
規範本身分成各種類別
例如視頻編碼
Trick Play
媒體分解
傳送等等
現在我們不會讓大家手動驗證
所以來看看我們提供的工具
但首先 你需要獲得工具
你能在開發人員流頁面developer.apple.com/streaming
找到所以關於HLS的重要信息
如果我們往下滾動
大概右邊一半的位置
有一個鏈接“工具”下載
請注意你必須註冊成爲開發人員激活Apple ID
才能進入頁面
但記住開發人員賬戶是免費的
一旦註冊了 就可以進入下載頁面
下載本身是個磁盤映像包含一個安裝包
現在截圖有點過時了
你應該看到一個2016年6月或更新的磁盤映像
我們一年會更新幾次工具
順便說句 若在 WWDC 期間查看
新版本可能還沒有發佈
運行安裝程序後
出現了服務器工具
我要提醒大家這些工具只在OS X上運行
HTTP直播流工具
頭兩個是驗證工具 會在後面介紹
接下來三個是文件流和字幕的分割工具
想要簡要介紹下字幕分割工具
對於分割大型網頁VTTT
非常有用
最後兩個
是Variant Playlist Creator用於創建主要播放列表
最後一個用於設置定時元數據格式
你可以插入使用分割工具
現在所有工具已經載入
你可以通過這些H選項獲得幫助
在我們介紹驗證工具前
我想簡單介紹下mediafilesegmenter
調用很簡單 只要傳到電影文件
就能生成媒體播放列表和片段
而這個工具有許多選項但並沒有看起來那麼複雜
選項可以分成幾類
選項必須進行命名文件
構建播放列表
如何進行加密等等
甚至不用使用該介紹
mediafilesegmenter可以很好進行交叉檢查
你對片段做的所有處理
進行驗證
媒體流驗證器是關鍵工具
你可以在主播放列表調用
在終端和json文件上生死輸出
json文件包含輸出所有的重要信息
還有更多數據
我想要調用幾個選項
首先你可以調整json文件的名字和路徑
還可以調整超時
那麼什麼是超時？
默認情況下 驗證器超時
就是 5分鐘後停止處理
現在可能時間不夠在要求流上處理一個大視頻
對於實時內容5分鐘足夠進行初步檢查
你希望在更長的時間段進行檢查
來確定流的基本正確性
這個就是媒體流驗證器輸出
我們調出媒體流驗證器的URL
首先顯示版本號
然後輸出一些下載播放列表和文件的痕跡
再輸出每個發現變量
複製和I-Frame變量的信息
現在很難進行
所以我們創建了HLS報告
這是個python腳本採用json並進行總結提取
再生成HTML文件作爲輸出
文件名與json文件相同
除了拓展名不同
我還想調用幾個選項
我們可以改變HTML文件的名字
dash I或dash ID選項很有用
在你想要匹配HTML輸出和json文件選項時
當我說到例子時會
更詳細介紹工作原理
現在Verbose選項非常有用
可以告訴你許多關於變量和複製的信息
很遺憾 今天沒足夠時間詳細介紹輸出
但我想調用演示下
提交到App Store
快速放在一邊
你可以在提交App Store前驗證流
也可以在提交時
在你的註釋域內要包括一個測試流URL
這樣查看人就有可以查看的流
嗯 這個演示
我要運行一些演示
但不是在屏幕上運行全部
大家要嘗試跟着理解這些小文本
我拿到輸出會帶着大家瀏覽
首先 一個小命令行實例
運行媒體流驗證器
注意我給json文件的命名
我剛纔拿到個假URL 大家來試試
現在我們之前看到了輸出 就跳過
但記住運行可能需要幾分鐘
一旦完成 我們就能運行HLS報告
傳到驗證器創建的json文件
如果HLS報告運行正常我們就不會有輸出
就只有HTML文件
如果我們查看當前目錄
就只有兩個文件
驗證器創建的json文件
和HLS報告創建的HTML文件
讓我們看一些示例報告
首先來看看有幾個常見問題的播放列表
這個就是報告
第一個要檢查的是流類型
一般會是VOD LIVE或EVENT
這些反應了三種HLS支持的基本流類型
但也有可能拿到值爲“UNKNOWN”
這就意味着我們無法識別播放列表
更糟的話 可能拿到混合值
現在這說明有一些未知因素
就是有些媒體播放列表無法識別
或者更糟 有發生衝突的類型
例如 有些變量爲EVENT
而一些卻是LIVE
現在報告下一項就是變量概覽表
有一個視頻變量條目
如果我們剛好有混合流
就會成爲表內的增加列說明播放列表類型
往右看就能
看到有更多的列
特別是
當我們要給VOD一個處理百分比列時
如果少於100％就說明超時設置不夠長
如果有實時內容就不會看到處理百分比
相反 會看到兩列
平均分段計數和平均播放列表時長
下一項要檢查的是差異百分比列
這列說明測量比特率相比
主播放列表顯示的值超過多少
現在這些值都太高了
注意變量超過了40％
現在這些值都應在-10％-+10％範圍內
如果值爲正
就說明你申報的值應該增加
如果值爲負
申報的值就應減少
現在請注意我們有兩個
原因是我們播放列表中申報了帶寬和平均帶寬
我們可以對比兩個的申報值和測量值
現在從百分比項很難
看出真正的區別
如果你添加--pl選項意味播放列表
到HLS報告命令行 將看到兩個新列
播放列表率和播放列表平均率
從這個 我們可以看到例如變量1
申報值是392kb每秒
但測量值是551kb每秒
現在我們切換回沒-p選項的版本向下滾動
有另一張表 複製概述
在主播放列表我們將音頻作爲獨立流
作爲複製 就在這兒報告
根據這張表 必須要修復的問題就是
要正確播放必須修復的問題
或者是我們認爲硬性要求的重要問題
請看項目#2和#4就是我們剛纔提的問題
申報和測量的最高和平均比特率
相互不匹配
後面再解決項目3
向下滾 發現必須修復的問題
對於必須修復的問題我們強烈建議修復
現在就是根據報告信息
可以對報告信息進行回溯
找到媒體流驗證器和HLS報告的版本
這對大家給我們發生錯誤報告和HLS報告輸出
很重要或者是讓大家在下載更新版工具後
可以返回查看老版本
現在是項目5
顯示我們的播放列表中沒有字幕或標題
我們在下一個示例中修復
讓我們看看項目7
項目7說默認視頻變量
不是我們建議的
說的是變量#8
讓我們返回到變量概述
可以發現項目8高亮了項目數字
說明這個就是默認變量
記住這個默認變量
就是客戶最初播放的第一個變量
也是主播放列表的第一個變量
請注意這個最大速率是每秒8M
作爲默認值太高了
好了 這些都是我們會遇到的常見問題
我們第二個例子
之前已經在第一個例子修復指出的問題
調整了申報值現在差異百分比是接近0
我們已經修復默認變量
變得更合理 在#4變量下
將不同的媒體播放列表移到主播放列表的第一位
再看右側
我們修復超時設置現在正在處理整個播放列表
現在我們已經修復了關於標題的問題
通過添加字幕播放列表修復的
現在注意字幕的複製 #12複製
沒有最大或平均率
原因是字幕播放列表沒有經過處理
我們把n/a放在已處理百分比欄上
提醒這個正在處理中
但還有個大問題要修復就是沒有I-Frame播放列表
當我們添加I-Frame播放列表時報告有哪些改變呢
第一部分看起來一樣
當往下滾動
除了其他的概述表外
還有個I-Frame變量概述
現在注意我們的差異百分比值有點不夠
但這些都在範圍內
記住範圍是+/-10％
現在看看這邊的兩列
比例平均數和乘數
比例平均數是I-Frame播放列表影響最大的平均數據
就是有點拗口
記住測量平均比特率
指的是數據速率爲1 X playback速率
但Trick Play的I-Frames整點
的播放速率大於1 X speed
現在乘數告訴我們最低的播放速率
在該速率下會達到最差情況值
值高些會有改善
原因是我們放慢幀速率是爲了
將實際顯示幀速率保持在一個固定值
對於這些值我們要做的
就是與這兒的比例平均數據進行對比
與分辨率相同的正常變量數據速率對比
應該要接近值
或者I-Frame變量低於值
否則 Trick Play可能會造成分辨率下降
在報告中 我已經有了一個新欄
這是因爲我在HLS報告中添加了——ID選項
正如我之前所說
能幫助你找到json文件中相同的數據
所以讓我們看看第一個數據ID 16
哪個是我們分辨率最低的I-Frame播放列表呢
在json文件找找
這是json的簡短文本視圖
json 的最高級別是字典
我們對變量值感興趣
哪個是字典的數組呢
那些字典中某一個會有數據ID 16
我想說這裏並不是按照數據ID排列的
這個有數據ID 16
那個是json變量條目其數據與報告中的行匹配
那是最低的I-Frame變量
現在 我們已經跳過許多的數據
信息比這張幻燈片上顯示的多得多
用自己喜歡的工具在json文件周圍尋找
或者自己編寫一些特殊工具
這些json可以變得很大
它們超過100,000行是很正常的
我們最後一個例子
我們選擇播放列表再添加不同類型的音頻
頂部看起來很類似
往下滾動
看看我們的複製
現在 不再只是單一的立體聲音頻
我們添加了兩個多聲道音頻複製
一個是AC-3的杜比數字
叫做aud2
另一個是EC-3的杜比數字升級
叫做aud3
讓我們去看看變量部分
注意到因爲AE-3和EC-3無法替代
也不能替換AAC
每個都有自己的默認變量
也就是說一旦選擇了AC-3的aud3 就默認變量#12
原因是該變量是aud2組中第一個
出現在主播放列表中的
同樣 如果選擇EC-3默認變量爲#20
注意aud2和aud3變量之間的比特率差異
例如變量#9和變量#17
這是因爲音頻不同的比特率
我們看到的變量比特率
是包括複製的組合比特率
好了 以上就是我舉的例子
那麼在哪兒可以找到自己想看的示例呢
HTTP直播流示例
好 這個直播流網頁上有三個現成的例子
如果前往developer.apple.com/streaming
可以看到示例網頁指示
你可以找到該網頁的URL
或者也可以閱讀幻燈片上的內容
頭兩個在你驗證的時候會有意見
原因是這些流是在很久以前創建的
我們決定不對其進行升級
但第三個變量是新的 幾乎完美
示例流
好了 該結束了
總結
有三件事希望大家能記住
服從編輯規範
驗證 驗證 再驗證媒體流
包括在提交應用時測試流URL
更多信息
請前往 WWDC 網站使用該會話編號510
相關會話“HTTP實時總結的新特性”
今年在HTTP直播流有許多新改變
我建議大家參加或觀看會話
“HTTP直播流的新特性”
謝謝 祝大家在會議中有所收穫