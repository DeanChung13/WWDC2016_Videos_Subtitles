用Safari app extensions來擴展你的應用
大家好
我是Brian Weinstein
我是Safari團隊的一名工程師
今天我將與Zach和Damian在這給大家演示
如何基於Safari app extensions來擴展你的Mac應用
在macOS Sierra El Capitan系統的Safari 10瀏覽器裏
我們要引進一種新方法
可以編寫 打包以及發佈Safari Extensions
這些擴展涵蓋
網絡技術和Swift原生技術
他們與Mac應用捆綁可以通過App Store發佈
這種新途徑叫做Safari app extensions
Safari app extensions可以自定義網絡頁面的內容
通過使用JavaScript和CSS
他們也可以中斷加載頁面特定資源和元素
他們可以添加工具類按鈕到Safari的UI
這些工具類按鈕可以
爲使用純原生技術展示這些視圖
最後Safari app extensions可以添加右鍵菜單項目到網絡頁面
Safari app extensions是基於app extensions的
應用擴展由代碼和資源組成
在你的應用裏也打包了這些提供用戶訪問
通過macOS訪問應用的功能和內容
這也意味着需要使用Xcode
以及其他開發工具你們已經熟悉的工具
這意味着Safari app extensions可以運行原生應用
使用Mac應用上的API
另一個主要的優點是關於這些基於app extensions
發佈自你的應用
意味着它們可通過Mac App Store購買
這也意味着你的用戶不必單獨下載你的擴展
在安裝了你的應用之後
對於你們中需要
的應用和擴展間通訊功能的人
Safari app extensions主要的一個優點是
你的擴展總是和你的應用綁定
因爲它們是打包在一起的
所以 你的用戶總是會有匹配版本
的應用和擴展
擴展平臺最厲害的部分
是構建多類型擴展的能力
今天我們要擴展三種擴展
第一種是內容攔截器
可以攔截加載頁面上的特定資源和隱藏元素帶
第二種是
可以修改網絡頁面的通訊過程
發生在JavaScript代碼中即你的應用
代碼和原生擴展之間通訊的擴展
第三種類型將展示怎麼擴展Safari的UI
來添加你的應用的功能直接和Safari交互
我們開始介紹內容攔截器
爲了構建一個內容攔截器
我要邀請Zach上臺
Zach？
講下內容攔截器吧
謝謝Ryan
大家好 我是Zach Li
我也是Safari團隊的一名工程師
去年在Safari我們引入了新的內容攔截模型
除了開發擴展的代碼來在運行時攔截加載和隱藏元素
我們構建了一個模型你可以聲明提前攔截哪些內容
而且WebKit優化了這樣的攔截機制
來提高運行速度和內容使用率
最好的一點是 這個模型保護用戶隱私
資源攔截時 無需過問主機應用
至此 已看到了許多你們所寫出色的內容攔截器
這些真正提高了瀏覽體驗
用戶也喜歡
我很高興向大家宣佈
我們很輕鬆地把現有iOS內容攔截器遷移到macOS
對於之前沒寫過內容攔截器的開發者
開發變得更加簡單了
你們可以看看去年WWDC演講developer.Apple.com上就有
我們來看看內容攔截器可以做哪些事情
我很喜歡甜點
我基本上一直在吃好吃的
顯然 我有一個美食博客專注寫我想要嘗試的甜點
但是不幸的是 額 確實不幸
我會參加我好朋友的婚禮在下個月以伴郎的身份參加
我還得保持身材
至少我需要不至於穿不下禮服
因此 我開發了個iOS內容攔截器
會攔截所有來自我網站的甜點
即使我餓暈了 我到美食博客找東西
我也不會看到一個甜點
我來演示下甜點攔截器怎麼工作的
這是我的源代碼
我的甜點攔截器已經在運行了
打開Safari
甜點展示出來了
我們重寫加載頁面開啓甜點阻塞器
所有的甜點都消失了
太棒了
我還是會想念它們的
我是一個iOS開發者開發了這個內容攔截器
我也很想把它遷移到Mac平臺並且通過App Store發佈出去
事實上這很簡單
因爲內容攔截器的API在這兩個平臺是一樣的
我們先打開Xcode
創建一個新的Mac應用目標
叫做Mac甜點攔截器
我們快速切換到Mac應用主題
因爲我們現在在構建一個Mac應用
創建一新的Mac應用擴展目標
使用內容攔截器擴展模板
叫做Mac攔截器擴展
當用戶從App Store獲取應用的時候
他們不必運行應用
爲Safari找到app extension就可以了
但是除了App Store
應用必須運行在Safari裏找擴展
因此 在這種狀況下我想要
繼續使用應用方案
我只要點擊取消按鈕
這個模板可以正確的設置一切需要的東西
這就導致了一個簡單的內容攔截規則
爲了創建自己的內容攔截器你只需要修改曾JSON文件
這真的很方便
在我們的例子裏 我們可以和iOS應用分享資源
因此我們可以不管這個JSON文件
和Swift文件
我們可以使我們已經有的東西
對Mac應用、Mac app extension對象可見
爲了實現這個功能 我們看這個實用側邊欄
在對象會員資格這裏勾選Mac應用擴展目標
那些我們希望分享的資源
真棒 現在一切順利
在此之前 我想要我的甜點攔截器更加文雅
需要換一個更好的名字和描述
在Safari Extensions偏好裏配置
爲了實現這個功能 我們看下app extension信息列表
不叫它Mac甜點攔截器擴展了
我們勾選下 就重命名叫甜點攔截器
我要提供描述的內容是
該內容攔截器攔截了我美食博客的甜點圖片
另外 我想要提供一個更好的圖標給我的這個擴展
我們移走這個默認的資源目錄
然後拖動已經設計好的冰淇淋圖標到我的Xcode項目
好了 我們來運行和瀏覽這個Mac應用
應用運行了
我們轉到Safari
你可以看到 它顯示在了擴展偏好裏了
像所有其他的Safari Extensions一樣內容攔截器默認是關閉的
我們開啓這個甜點攔截器
刷新頁面
真棒所有甜點都消失了
酷斃了
現在我吃甜點的慾望完全被攔截了
我已經準備好做新郎了
如你所見 我們不用寫代碼就可把iOS內容攔截器遷移到macOS
提前聲明一點我們已經收到你們的反饋
可以最好讓人知道你的內容攔截器是否開啓了
因此我們引入一個新的API
就是getStateOfContentBlocker(identifier
有了這個API 舉個例子
如果你回一下我應用不怎麼好的UI
我可以爲用戶提供一個更好的體驗
只要通過說明怎麼開啓內容攔截器
如果我偵測到內容攔截器是關閉的
該API和其他API將由我的同事Brian和Damian介紹
如果用戶安裝了Safari 10這些API已在Sierra和El Capitan裏了
因爲El Capitan的API是依賴於Safari 10
我們提供給你了一個方便的Swift API
你們可以在運行時確認
Safari ServicesAPIs是否可用
我們來看看Swift代碼的API
如果SFSafari服務可用會返回真
你可以安全的使用API
如果不是 轉向其他處理行爲
這些都是內容攔截器帶的新特性
要講下其他有用的特性你可以看下Safari app extensions
我要把講臺交給Brian
Safari App Extensions
謝謝Zach
因此 下一個擴展類型我要展示的是
可以修改頁面的內容
也可以與原生代碼通訊
通過你的應用擴展
我們要構建一個應用
可以在網絡裏取代一個單詞使用另一個單詞
它可以獲得要取代的單詞和取代的單詞內容
通過Swift代碼的應用擴展
有兩種方法可以給Safari app extension修改網絡頁面的內容
擴展可以注入CSS樣式表和JavaScript內容腳本到頁面上
我們來看看怎麼注入樣式表
樣式表可以通過指定注入在
應用擴展Info.plist文件裏這文件在NSExtension部分
樣式表通過指定使用SFSafari樣式表部分
Info.plist文件檢查一個數組
這個數組包含了每個樣式表的字典定義
每個樣式表由鍵值對組成
值是指到相關樣式表的路徑
關於這個資源字典的擴展包
你之前已經寫下的任何一個樣式表
Safari擴展只會與Safariapp extensions工作
下一步是注入腳本
這幾乎是一模一樣的只是有不同兩個鍵
腳本由SFSafari指定的字典裏的內容腳本鍵
這個鍵表示腳本的路徑而不是樣式表的
你所有的擴展腳本都在他們自己的執行環境下運行
這也意味着永遠沒有命名衝突
不會和網絡頁面裏的腳本變量衝突
這也使得Safari可以提供特殊的JavaScript API
到應用擴展的內容腳本
對於所有的網絡頁面不可見
比如 你的擴展可能需要通信
和你的應用裏的原生代碼通信讀取偏好
或者執行只能在原生代碼裏做的操作
爲了實現這個功能 我們已經添加了一個消息傳遞API
所以你的應用擴展的JavaScript代碼
和Swift代碼可以相互通信
所以 來看看這個圖
你可以看到我們擁有Safari和你的應用擴展
這個盒子代表Swift代碼在你擴展的進程裏運行了
這當然就是沙盒啦
擴展已經注入腳本到了Apple.com
腳本會問這個應用擴展
應該替換哪個單詞
爲了實現這個 它只需要調用Safari.extension.dispatch
然後傳遞消息名稱
我們來看看Swift代碼監聽這個消息的代碼
響應返回的是應該替換掉的單詞
每個Safari app extension有一個基類
這個類會被Safari調用方法
當用戶和Safari交互的時候
當消息分發自腳本到應用擴展的時候
消息會收到調用的userInfo頁面的名字
一旦這個方法調用了我們的擴展的主要對象
我們要確認的第一件事情是消息名稱 然後在上面操作
要操作我們的擴展會發送回去一個消息
給SFSafari頁面代表Apple.com
要替換的單詞及以什麼單詞替換
我們在構造這個東西就在字典裏
每個鍵代表我們要替換的單詞
指表示我們的替換內容
所以 當應用擴展調用
dispatchMessageToScript(withName,userInfo方法時
消息從擴展進程發出回到內容腳本
腳本以及注入到Apple.com
我們看看腳本是怎麼監聽
這些消息並且在上面操作
爲了在內容腳本里實現監聽
我們先添加個事件監聽器到Safari.self
因此 腳本可以監聽這個應用擴展的消息事件
如果你之前寫過Safari Extension
這看起來是不是很熟悉
接受消息的API在這個內容腳本里
幾乎是一樣的
當我們事件監聽器開啓的時候
因爲我們獲得了一個消息來自我們的應用擴展
我們首先要做的事情還是卻消息名稱
最佳實踐是然後纔在上面操作
爲了操作這個消息我們想要遍歷我們的字典
我們已在userInfo指定Swift代碼裏的消息
作爲event.message暴露於JavaScript代碼
到這裏 我們已經拿到單詞詞典和替換內容
我們要開始遍歷它們
然後在我們的腳本里調用方法執行替換
單詞替換擴展我們已經討論了的
已經可以在每個網站上工作
但是一些擴展只針對一些特點的網址起作用
Safari app extensions支持豐富的系統
通過指定特定的目標網站
另外Safari 10新增加了功能用戶可以看到
你的Safari擴展需要訪問哪些站點
像內容腳本和樣式表
你的擴展的網站可以訪問的在擴展的Info.plist裏有描述
以SFSafariWebsiteAccess/key的形式
這是一個由兩部分組成的字典
第一部分是網站訪問級別
這個擴展指定了所有的訪問級別
意思是它要訪問用戶打開的每一個網頁
你看到了Safari的擴展偏好
警告用戶相關信息當用戶打開這個擴展的時候
在這個例子裏這個擴展的訪問級別是some
當訪問級別是some的時候
擴展指定了一個列表包含了它想要訪問的域名
在字典的允許訪問域名部分
如果一個允許訪問的域名以星標起始
它被通配符標示可以訪問所有的子域名
我們已經討論了你的擴展我們可以修改哪些頁面
通過注入腳本和樣式表
和這些腳本怎麼和你的擴展Swift代碼通信
你如何指定你的擴展可訪問的網站
我要把所有這些要點集合到一個演示裏
然後編寫我們之前一直在討論的單詞替換擴展
Safari Extensions有趣的一點是
從代碼開始和基於JavaScript的網頁交互開始
很容易就可以把你寫的代碼挪過來
到一個不同的瀏覽器的擴展裏然後直接指向Safari
我要做的事情是舉個Chrome擴展的例子
這個擴展也可以實現單詞替換
我要基於現在的代碼創建一個Safari app extension
我會擴展這個代碼以便於我們獲取要替換的單詞
以及使用Swift代碼替換內容
所以我已有了一個應用帶有一個圖標
我要新建一個Safari Extension
因此 我在Xcode創建了一個目標
然後選擇macOS Application Extension再選擇Safari extension
我們就叫它Animalify
因爲我們通過使用表情符號替換動物Animalify網頁
Zach之前也提到了我們要運行這個應用
因此我準備激活這個擴展的方案
因此我們現在的擴展我們調到Info.plist部分
然後打開NSextension部分
你可以看到模板自動爲我們創建了
我們有了內容腳本 一個工具欄項目
而要求訪問網站就是我們的擴展要求訪問的
我準備丟棄這個工具欄項目因爲我們的擴展不需要它
然後改變訪問級別爲all
然後丟棄運行的域名列表
因爲我們希望這個擴展可以在任何一個頁面上運行
下一件事是打開我們的腳本
然後我要引入
我已大量爲Chrome擴展寫的腳本
你可以看到當腳本注入頁面的時候
它會調用我們的替換函數然後替換熊爲熊的表情符號
現在 我希望我的應用可以被替代爲
我希望它展示一個列表羅列了各種動物 用戶可以選擇
他們希望替換掉的動物種類
現在我準備設計一個UI
爲了實現這一點我們需要一個替換列表
從應用擴展獲得該列表
因此 我沒有通過直接的替換
而是通過發送JavaScript消息實現
通過發送給app extension詢問替換的單詞和要替換的內容
所以有趣的一點是Safari Extensions
的內容腳本在DOM加載之前就注入了
這是爲了更好的彈性支持你的擴展
但是 一個單詞替換器什麼也不會做直到dom加載完成
我們要等待dom加載後再發送消息
因此 我們來看看我們的主要類
你可以看到我們已經有了一個實現
實現那些收到userInfo網頁的具名消息
然而 我們準備丟棄這個
然後替換爲some級別 通過我們之前幻燈片裏講過的代碼
它做的事情只是檢查消息名稱
然後發送迴響應給內容腳本
我們在這有兩個替換只是因爲我們可以
我們回到腳本然後監聽消息然後響應
再次 這又是之前已討論過了的代碼
我們在開始時添加一個針對Safari.self消息事件的事件監聽器
當消息事件觸發的時候我們檢查消息名稱
然後從event.message獲取替換內容
我們通過遍歷所有這些替換內容來操作
然後調用同樣的替換方法
這個方法就在之前腳本的起始部分
所以 現在我要創建和運行一個應用了
Safari可以發現這個新的擴展
你可想象這裏有一長串動物名稱而我已經勾選了其中的一些
這是我第一次試試該Safariapp extension
我還沒有註冊這個應用
我也沒註冊參加AppleDeveloper Program
意味着我沒有開發者認證
默認的Safari只會顯示
允許用戶啓用
已簽署開發者認證的擴展
但是對於那些只是想要試用的人來說
我們已經增加了一個途徑可以使你能夠測試你沒有註冊的擴展
爲了實現這個我準備打開“高級設置”
然後展示你們菜單工具欄的Develop菜單
在這個菜單裏
我要選擇允許未簽署擴展選項
我要輸入我的密碼
然後這個動物擴展就顯示在我們的擴展列表裏了
我要開啓它在每個人獲得它之前
我之前在研究灰熊的食譜
我要重新加載頁面就像你看到的那樣
熊已經被替換爲熊的表情符號
鮭魚已經被替換爲美味的壽司表情
這可以使得網頁在瀏覽時更加有趣
這都說明瞭一個Safari應用擴展如何實現修改頁面內容
你的擴展如何指定允許訪問的網站
我們將要展示的最後一種擴展類型是
一種可以擴展Safari的UI並且增強
原生代碼的功能並且可以直接引入到Safari
爲了給大家演示我想邀請Damian上臺
Damian ？
擴展Safari的UI
謝謝
大家好
我是Damian Kaleta是Safari團隊的一個工程師
Brian已告訴大家SafariApp Extensions的基礎性知識
現在我要在此之上構建一個應用
我要告訴給怎麼實現擴展Safari的UI
好 我們開始
我已寫好了這個簡單的macOS應用
這是一個筆記本應用
你們可以從截圖上看到這個圖標傾注了設計者的愛
不幸的是應用本身沒有
但是沒關係這個應用可以讓我添加筆記
保存之後可以之後再閱讀
但是我想要從網頁上直接抓取筆記內容
然後在Safari上修改筆記
而且有了新的Safari app extension模型
我有了一整套工具可以極大簡化我構建擴展的過程
我需要完全不同的兩個東西
我想要可以選擇文本然後可以保存它
因此我需要一個上下文菜單
其次 我希望可以展示我最近的筆記
而且還可以修改它
因此我需要一個彈出框
在用戶點擊工具欄按鈕時彈出框會顯示
我們先來談談
工具欄按鈕
工具欄按鈕默認在智能搜索框下面
這樣子用戶可以快速而方便找到
擴展提供的功能
你可能期望如果你是一個事件用戶
你當然可以簡單的移動它
那麼我怎麼添加我的按鈕呢？
我到了我的擴展Info.plist
我添加了SFSafariToolbarItem
以及四個不同的鍵值對
標識符 標籤 圖片和活動
且和所有系統工具欄上面的項目在一起
請注意 我在這使用的一個PDF文件
好的 Safari現在展示的是我的工具欄按鈕
但在用戶點擊這個按鈕時我的擴展會有什麼反應？
Safari發送窗口工具欄的點擊元素給你principal對象
提醒下你的principal對象是
可以處理所有Safari和你擴展之間通信的對象
而且如果你想要你的按鈕根據加上下文的情況變灰
Safari提供了驗證方法
並且你也可以批量設置你的按鈕的文本
這通常表示爲一個數值類型的值比如 紅細胞計數
我們已經給自己設計了一個按鈕
但是現在我要展示一個彈出框
當用戶點擊按鈕的時候展示
這個彈出框讓我在其中插入任意的NSview
這很棒 因爲你之前已寫了一些macOS應用代碼
你會複用這些代碼而且過程很簡單
讓我給大家看看這如何工作
你現在有一個基於principal對象的擴展
然後你希望定義一個popoverViewController方法
在你的principal對象裏面
此方法裏你希望返回自定義視圖控制器
這個控制器代表一個視圖你希望在彈出框裏插入的視圖
另一方面 還包含有Safari進程
Safari進程可以調用遠程視圖
遠程視圖可以簡化你抓取回顧的過程
以及在彈出框展示的內容
如你們所期望的 我們會向你們提供
所有的事件 比如點擊事件
有一種展示彈出框的方法是僅僅指定彈出框行爲
而不是通過SFSafariToolbarItem裏的命令
就是這些
現在Safari知道你們希望展示一個彈出框
你們會使用自定義視圖控制器
彈出框也帶來了一些方便實用的API
你們看這裏
兩個方法是popoverWillShow和popoverWillClose
他們可以幫助你做一些啓動配置和清理的工作
第三個方法我們已經談過了
這個方法可返回給你自定義視圖控制器
好的 我們添加了這個按鈕
我們可以展示一個彈出框了
我們現在來討論下上下文菜單項
你們通常想要使用上下文菜單項的場景是
當你們想要操作頁面的一部分內容時
但在我的例子裏 我要能夠選擇文本然後保存它
我又去修改我擴展的Info.plist代碼
然後添加了SFSafariContextMenu
這是一個字典數組保存了兩個不同的鍵值對
文本和命令
然後當用戶按下或者點擊你的上下文菜單項的時候
Safari會發送contextMenuItemSelected對象
給我們的principal對象
請注意我們也在同時發送userInfo信息
這可以簡單代表任何額外信息
你可能希望包括進你注入的腳本
比如在我的例子裏 我希望一同發送selectedText值
因此在我的注入腳本里 我添加了上下文菜單的事件監聽器
然後在方法裏我調用setContextMenuEventUserInfo方法
Safari擴展對象上
注意 我實際上一同發送了selectedText
好 我很興奮地給大家演示macOS應用如何擴展到Safari
我們開始
在我展示代碼前
這是簡易的macOS應用
你可以看到我只有兩個便籤
我可以在這插入我的便籤刪除上一個便籤等
我們轉到Xcode
我要給大家看的是三個不同的東西
第一個是Info.plist
請注意我在此處添加上下文菜單項
這是我的文本和命令
我也添加了我的工具欄項
現在我有了不同的四個字段
你們可以看到我在使用PDF文件
第二件 我要展示給你看的是我的principal對象
讓我把它做成那樣
我已重載了principal對象的兩個不同方法
第一個方法是popoverViewController
這個方法可以返回我的視圖控制器
代表了彈出框增加和移走的視圖
第二個是
contextMenuItemSelected(withCommand方法
你看到我從這裏獲取我的userInfo
可以在這裏分配便籤
第三個我要展示的是我怎麼複用
和分享macOS應用和我的擴展間的代碼
當然通常你們不會使用簡單的文件
你們使用會帶來啓發的框架
這是我的便籤管理器
它會讀取和保存用戶的默認設置
它有一些簡單的方法
比如removeAllNotesremoveLastNote等等
請注意我的目標設定是
我的筆記本應用可以設置所有的目標即macOS應用和擴展程序
好了 我們來到Safari
可以看到 我的擴展就在智能檢索字段的旁邊
我可以單擊它 然後我最近的便籤就會顯示出來
讓我帶上筆記本應用
對比下
比如我在瀏覽博客的一些帖子
我們選這個
我們打算要將便籤保存下來
所以我選擇了這個
我命令 CTL點擊它
然後我添加片段到筆記本上
你看到了我的便籤也添加到這裏了
我可以打開擴展就在這裏
我現在要修改它
因爲假設我不想要最後一個句子
我只要簡單一刪點擊修改 瞧
在macOS應用裏也反應出來了
因此 分析代碼就這麼簡單
在你的macOS應用和擴展之間
我演示給大家看怎麼添加一個按鈕
我給你們看了怎麼顯示彈出框然後添加多個上下文菜單項
我現在要把講臺交給Brian
感謝Damian
除了把遙控器落在這了
總結下 今天我們展示了三種擴展
都是基於新的擴展模型而成爲可能
我們展示了把你的內容攔截器
從iOS遷移到Mac是多簡單
我們引入了新的API獲取你的內容攔截器狀態
也是我們對大家反饋的迴應
同樣簡單的是把
修改網頁內容的Chrome擴展遷移到Safari並且使其
在你的應用擴展裏和原生Swift代碼通信
最後我們看到了它強大的功能
你的應用是如何直接影響Safari
記住Safari app extension都是基於app extensions的
意思是可以利用那些原生的技術和API
擴展的代碼以及你的JavaScript和CSS代碼
用來修改和改善網頁
因爲Safari app extensions和Mac應用一起發佈
爲你們的用戶提供了簡單的安裝體驗
你可在 Mac App Store銷售你的擴展了
欲瞭解更多本場演講和有用鏈接的信息
請訪問這個頁面
Safari app extensions是大勢所趨
我們需要你們的幫助使它越來越完美
若你們發現了任何漏洞或API缺陷請向我們提供反饋
在詳情頁面你會發現有個鏈接
可以留下反饋並且發郵件給John Davis
他是Safari和WebKit佈道者
相關的演講
我推薦大家去找一下往年的關於app extension的演講
非常感謝