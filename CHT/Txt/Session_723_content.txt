你好 我的名字是Tanya
歡迎參加第二部分
關於開發CarPlay系統
第一部分的視頻已經準備好了
所以如果你還沒有看過它你一定要去看看
在這一部分我們會覆蓋更多細節
在CarPlay是如何集成
到一個典型的汽車信息娛樂系統裏的
我們從一個系統的概覽開始
然後談論音量和資源管理
最後以討論應用狀態管理結尾
現在讓我們進入系統概覽
如果你觀看了第一個視頻
你會記得要實現一個CarPlay接收器所需的軟件組成部分
總之你需要和主機之間有一個基於IP的連接
不管是USB或者Wi-Fi
IP是爲了交換數據
CarPlay通訊插件的一個實例
實現控制協議
音頻框架用來播放和錄製聲音
視頻框架用來渲染視頻流
然而這些組件只是一個子系統
在一個典型的車載主機中
除了CarPlay的功能
主機還有自己的原生界面音頻資源和邏輯
兩者一起構成完整的主機
然後你添加
車裏所有的硬件資源
麥克風 音響 顯示屏 傳感器用戶輸入設備
然後你就有了完整的系統
好的 這樣我們就有了整個系統
現在的問題是
怎樣讓那些看起來互相競爭的子系統互相協同工作？
讓我們來理解這個問題
首先讓我們來看看傳感器的數據是怎樣被交換的
我們會用位置數據舉例
位置信息包括GPS接收器獲得的數據
或者傳感器數據比如輪胎速度
數據通過iAP2傳輸給設備
並且要一直可用
並且在手機需要時會被查詢
接下來讓我們來看看儀表組
也就是擡頭顯示
這個輔助顯示
被用來顯示設備提供的元數據
這些元數據可能包含當前播放的音軌
正在進行的通話或者從iOS 10開始
路線規劃導航
數據還是通過IP協議發起
以及根據需要交換
現在讓我們來看看主顯示發生了什麼
當然要控制在顯示屏上顯示的內容
用戶必須用一個觸摸屏
一個應用控制器或者兩者都用
所以我們可以認爲
顯示器和用戶輸入設備都是存在的
當CarPlay UI活動時
設備在主顯示屏上渲染視頻流
屏幕和用戶輸入都被設備使用
但是如果原生用戶界面顯示在屏幕上
那麼顯示屏和用戶輸入都
被轉到原生子系統
然而方向盤上額外的用戶控制器
比如語音識別按鈕下/上一個單軌
可能與CarPlay相連
即使屏幕上顯示的是原生UI
這樣總是可以打開Siri
或者播放下一個單軌
我們已經看過用戶界面集成
讓我們來談談音頻
車載音頻可以被粗分成3類
第1類提供對音響和麥克風的使用
這被用來通話和進行語音識別
然後我們有音頻播放
對任何媒體內容比如收音機 音樂
最後我們有警告類別
被用作導航提示
或者其他更高優先級的警告
在原生子系統中
這三種類別會被重新發現
在CarPlay中我們有一個主音頻通道
它包括通話 語音識別
和音頻播放
還有另一個音頻通道被保留
給高優先級提示和聲音
比如導航提示或者新消息通知
那麼媒體通道
可以播放來自手機的音樂
或者播放來自原生音頻資源的媒體
現在我們看過了媒體播放
我們來看看發生了什麼
當CarPlay接到電話時
通話需要音頻通道提供
麥克風和音響
所以媒體播放被中斷並且通道被切換了
音頻被切換到一個通道
這個通道提供對麥克風和音響的訪問
除了切換到音頻通道
屏幕被切換到CarPlay來顯示通話UI
儀表組上的元數據信息
也會更新
當然
如果原生系統也支持通話
那麼通話會使用原生系統來播放和顯示
但是在原生系統中通話時
用戶可以用Apple Maps導航
所以每當接近轉彎時
Apple Maps會播放一個聲音
通過公告通道來通知用戶
通話繼續被轉到汽車的音響上
但是路線規劃導航通知也被顯示
它們和通話音混合在一起
當然在這種情況下
我們不希望用戶聽到手機的導航提示
只是一個警告音提醒前方有轉彎
如果用戶希望看到下一個轉彎在哪
主顯示可以顯示Apple Maps
最後當通話結束後
音樂繼續通過原生子系統播放
就像用戶在通話前正在聽的一樣
現在導航公告
將包括所有的導航語音因爲用戶不再進行通話
好的
如你所見 集成CarPlay是一個很複雜的任務
特別是在共享硬件資源方面
但是在我們進行這些細節前
讓我們看看音量控制
音量管理
你們可能知道
一個普通的車載主機顯示音量指示
當用戶操作音量旋鈕時
然後那個音量旋鈕
控制當前播放的音頻的音量
CarPlay音頻也有相同原理
但是有一個不同的音量設置
對每一個主要的CarPlay應用
讓我們看看它們
當播放Siri時
音量旋鈕只對語音互動設置音量
當有來電時來電鈴聲的音量被控制
當用戶在通話中時通話音量被控制
如果靠近下一個轉彎導航提示被播放
那麼用戶可以改變導航音量
請記住媒體可以在後臺播放
但是它的音量會在有那些提示時自動降低
而且不能被改變
一旦提示音結束並且音樂音量恢復正常
這個旋鈕就會控制媒體音量
好的現在讓我們來看看資源管理
我們來看看哪些資源被管理
談論他們怎樣被管理
並討論一些典型的例子
我們看到有很多硬件資源
但是讓我們理解它們中的哪些被管理了
只有2個
mainScreen是汽車的主顯示
以及mainAudio
因爲這個資源提供對車載音頻系統的訪問
這些資源可以被佔有或借用
當你佔有一個資源時
它在無限的時間內屬於你
它基本上就是你的
當你借用一個資源你可以使用它一段時間
但是使用完後你要還回去
我們讓原生用戶界面永久佔有顯示
用戶可以使用原生導航
或者聽收音機
或者修改一些汽車設置
怎樣永久切換到原生UI？
原生UI可以在用戶按硬件按鈕時佔有屏幕
或者切換到原生UI
在CarPlay UI裏的入口
或者用原生語音識別來啓動一個原生應用
現在假設用戶選擇
主菜單裏的Apple CarPlay圖標
這種情況下
CarPlay接管屏幕因爲用戶明確的要求這樣
是什麼導致的這個永久切換？
任何和CarPlay有關的硬件按鈕
或者如我們所見
原生UI中的任何CarPlay按鈕
或者通過Siri例如通過說打開地圖
現在有其他應用需要借用資源
請記住它們只需要使用一會然後會還回來
我們在談論哪些應用？
通話 話音互動
通知 警告
讓我們來看一個例子
原生UI佔用主屏幕資源
並且永久在屏幕上顯示
現在用戶在CarPlay裏接到電話
CarPlay UI借用屏幕
並顯示通話時間
一旦通話結束
我們回到原生UI
並保持這樣直到有其他用戶活動
接下來讓我們看看主音頻資源
主音頻可以被分爲四個主要類型
每個類型被不同CarPlay應用使用
因爲它提供對不同硬件資源的訪問
媒體僅有音頻輸出被用來播放所有媒體
警告僅有輸出
被用來播放鈴聲和定時器警告
Siri使用語音識別
因爲它加入了對麥克風的使用
對用來通話的電話類型同樣如此
對用作未定義音頻的默認類型也是如此
但是不要忘記第二個音頻通道它用作導航公告
alternateAudio沒有被管理它基本上總是可用
所以不需要佔用或借用它
在mainAudio通道里
alternateAudio與所有的音頻類型都是混合在一起的
它總是可以被訪問
就這些了
我要交給Tom來談談資源管理
謝謝Tanya
大家好 我是Tom我也在CarPlay組裏工作
我們已經知道了哪些資源被管理
而且你知道可以佔有或借用資源
讓我們談談怎樣管理它們
要在兩個子系統中分配資源我們需要仲裁者
我們把這個仲裁者叫做資源管理器
資源管理器是幹什麼的？
它主要有三個任務
首先它知道整個系統的當前狀態
其次它根據一些嚴格的規則來決定
哪個系統獲得資源
第三根據當前狀態和一系列規則
它把資源分配給一方或另一方
讓我們看看實際中 它是如何工作的
假設原生UI和CarPlay都需要在屏幕上顯示一些信息
它們都發出申請要求獲得屏幕的所有權
那麼資源管理器查看內部狀態
並決定它們中的哪個應該獲得屏幕
我們假設在這個情況下原生UI的請求
有更高優先級那麼屏幕被分配給它
資源管理器發送通知
屏幕現在可以被原生UI使用
只有原生UI可以在屏幕上顯示內容
必須要注意到狀態並沒有改變
直到資源管理器發送更新
那麼資源管理器是在哪運行？
它是原生系統還是CarPlay的一部分？
當我們設計CarPlay時我們問了自己同樣的問題
我們考慮了交換資源的詳細信息的複雜性
我們考慮了未來
如果那些規則要調整該怎麼辦？
如果CarPlay上出現新應用該怎麼辦？
如果車上沒有已有的設計需要處理該怎麼辦？
哪種方案帶來最大的靈活性
在接下來的五年？
所以我們決定實現一個系統
在原生系統中的複雜度更低更易於升級
當消費者擁有車輛一段時間後
所以資源管理器在iOS裏實現
因爲資源管理器是
與原生系統互動的組件
我們讓iPhone作爲控制器
讓主機作爲附件
但不要忘了
所有iPhone應用請求同樣的資源
用和原生UI同樣的方式
接下來
你可以用什麼命令和資源管理器互動？
很簡單
你只需要兩個命令
changeModes命令用來請求或釋放資源
modesChanged命令用來描述當前狀態
changeModes是主機發出的通知
在這個情況下主機是附件向作爲控制器的資源管理器
changeModes命令表明
附件想對資源做什麼
它聲明它爲什麼需要這個資源
以及誰可以佔有或借用這個資源當它被傳遞後
modesChanged是控制器傳遞迴主機的通知
modesChanged提供當前狀態
它描述誰擁有這個系統資源
它發送這些信息所以附件知道一個資源是否被傳遞
所有者是否更換了
我們來談談資源管理器如何工作的更多細節
我們從一個簡單活動開始切換iOS音頻到收音機
然後我們會談論原生語音識別
再接下來是怎樣處理倒車雷達
這個情況下你不想iPhone應用來打擾你
最後我們會看一個Siri觸發音樂播放的例子
讓我們來看播放收音機音頻
假設iPhone正在通過車載音響播放音樂
然後用戶在原生系統中想聽收音機
這是收音機按鈕
主機發送changeModes請求獲得音響的所有權
而且它獲得這個所有權
因爲用戶可能會繼續聽很長時間的收音機
控制器把音頻交給主機
且發送modesChanged通知
主機就是音頻資源的新的所有者
它可以開始播放收音機
mainAudio資源在這時被永久賦予主機
總之這個例子向我們展示了
什麼時候要求一個資源
以及原生系統不應該使用該資源
在它擁有這個資源前
讓我們看下一個例子使用原生語音識別
在我們的上個例子裏收音機仍然在播放
讓我們看看用戶啓動原生語音識別時會發生什麼
這個單元請求暫時擁有顯示和音頻
所以transferType應該設置成借用音頻和屏幕
mainScreen和mainAudio傳遞給附件
然後原生語音識別開始
一旦語音對話結束
主機把借用的資源交還通過發送unborrow命令
因爲單元在之前正在播放收音機
資源被重新賦予給主機
收音機可以繼續
現在你可能想知道
爲什麼附件已經擁有資源還要借用資源？
這是一個很好的問題
當資源管理器評估請求時
要變更一個資源的所有權控制器要知道系統的當前狀態
資源管理器需要知道你爲什麼在使用這些資源
這樣它才能進行正確判斷
如果其它部分晚些時候需要資源
我們來看下一個例子
顯示倒車雷達
若CarPlay正播放音頻
屏幕上正顯示原生UI
當用戶掛倒車檔倒車雷達借用屏幕
然而請注意它也告訴資源管理器
屏幕不可被再次借用
資源管理器把屏幕分配給原生UI
並且注意到這個限制
現在顯示倒車雷達
CarPlay音頻繼續播放
但是現在用戶接到來電
iPhone不能在屏幕上顯示任何內容
因爲主機限制了對屏幕的訪問
但是鈴聲能過音響播放
這是怎麼發生的？
changeModes命令中這個單元告訴資源管理器
它擁有的資源使用哪些規則
通過在任何時間設置borrowConstraint
這個單元允許應用借用資源
通過把它設置成user-initiated只有用戶發起的事件可以借用
永遠沒有應用可以使用這些資源
在這個例子中
如你所見這個限制對系統的行爲有個很大的影響
所以它們必須被正確使用
只有需要用戶立即注意時才限制訪問
有CarPlay連接時不要限制永久所有權
這就是使用倒車雷達
最後一個例子當Siri播放音樂時發生了什麼
我們又一次從播放收音機開始
用戶啓動Siri
Siri在手機上運行
資源管理器告訴原生系統
資源被分配給Siri
Siri出現然後用戶說“Siri播放音樂”
Siri交還顯示和音頻資源
但是現在音樂應用需要音頻資源播放音樂
所以資源管理器通知主機
手機擁有mainAudio
但是屏幕還給附件
主機不再繼續播放收音機
所以在車裏能聽到iPhone音頻
我們從中看到什麼？
在兩種場合資源管理器
在沒向主機發送請求的情況下改變了狀態
這是完全可以的
因爲手機上的應用也會請求資源
如果它們得到資源單元收到了通知
怎麼處理這種情況
在每個modesChanged之後你要檢查你是否是所有者
如果你是繼續你的活動
否則你需要得到CarPlay來處理
第二 不要忽略
手機發起的把資源切換給手機
至此我們已經看過了資源交換的例子
但是還有一種情況兩邊
都想完成同樣的任務
讓我們看看應用是怎麼被管理的
我們要管理原生和CarPlay應用它們有相似的特點
但是關於那些應用呢？
他們導航 通話 語音識別
我們通過appState來實現什麼是appState？
我們用不同的appState記錄誰現在參與了
共享的應用這些應用只能活動
在附件上或者控制器上在任一個時刻
所以這三個不同的appState是TurnByTurn
PhoneCall和Speech
讓我們來看看
導航appState是怎麼被管理
當導航在附件上啓動時
它用一changeModes命令
來更新要激活的TurnByTurn appState
在這個例子中是最後的會獲勝的情況
控制器把TurnByTurnappState交附件
返回一個modesChanged命令 顯示附件
是當前運行的導航
現在讓我們來看看用戶用Apple Maps設置一個新目的地時會發生什麼
當原生系統已經在導航時
用戶說 “Siri帶我去最近的咖啡店”
現在iPhone開始了導航
控制器更新TurnByTurn appState
這是對附件的指令要停止它自己的導航
現在iPhone開始導航控制器更新TurnByTurn appState
這是對附件的指令要停止它自己的導航
現在Apple Maps的導航
顯示在了屏幕上並且公告通過音頻播放
並且和原生導航系統不會衝突
所以現在Apple Maps的導航
顯示在了屏幕上並且公告通過音頻播放
並且和原生導航系統不會衝突
關於導航就這麼多了
接下來讓我們看看通話
如果主機支持通過Bluetooth來使用第二個電話
並且有一個正在進行的通話
這個通話獨佔mainAudio
通話不能被打斷
那用戶在CarPlay設備上收到來電會發生什麼？
CarPlay只能在這臺設備上響鈴
因爲不能打斷正在進行的通話
被PhoneCall appState管理
最後來看看語音互動
如果主機有原生的語音識別
當它運行時借用了資源
並獨佔音響 麥克風和屏幕資源
但是它能在任何時候被用戶發起的事件打斷
所以用戶啓動Siri
原生語音識別結束Siri繼續出現在車載顯示上
Speech appState被用來實現這個
總之
CarPlay和你的原生系統依賴相同的資源
被設計成和原生用戶體驗共存
爲了優秀的CarPlay體驗
考慮每一種使用情況的資源處理
遵守CarPlay設計建議
CarPlay的詳述可以通過MFi Program獲得
若你還沒有觀看開發CarPlay系統的第一部分
我鼓勵你去看一下
關於這次討論的更多信息
請訪問屏幕上的網址