發揮HealthKit最大價值
早上好 歡迎來到“發揮HealthKit最大價值”
我是MattHealthKit團隊軟件工程師
稍後這個舞臺會交給我的同事Jeff
本場演講 我們會講一些很棒的新功能
是iOS 10和watchOS 3中HealthKit API的新拓展
與此同時我們也會講到一些主要的新特性
核心概念和重要的工作流程以確保
你真正可以充分利用HealthKit的價值
希望你已經對HealthKit有所瞭解
若你在此觀看這場演講
如果不是我們會列出之前的演講
在這場演講最後
供你日後參考來快速瞭解這些內容
但是現在我們開始講今天的內容
在座的都知道Apple的健康與健身生態系統
在我們的用戶中大受好評
人們越來越健美也越來越健康
這歸功於我們將HealthKit
ResearchKit和CareKit
在iPhone和Apple Watch上與你的應用和設備結合在一起
我們想保證你們可以
一直創造這些很棒的有關健康和健美的用戶體驗
讓我們的用戶有所期待並享受其中
那麼今天我們就來看看你都要做哪些事情
來確保這些體驗正確而且理想
首先來講授權
這是HealthKit所有其他功能的基礎
然後是Activity Rings API在iOS 9.3下引入的
還有健康記錄今年在iOS 10系統下發布的
這兩個都會產生一些重要的影響
與授權相關
最後在剩下的時間裏
我們會講解各種處理數據的好方法
在你與HealthKit互動時
現在就開始講吧
首先就是授權
若你使用HealthKit一段時間
那麼這裏大部分內容對你來說可能就是回顧
但我們建議你重點關注一些細節
因爲它們很重要對我們過會兒要講的內容而言
我們也會講到一些最佳操作所以豎起耳朵聽
iOS讓用戶能完全掌握他們的健康數據
以及哪個應用可以訪問哪一部分數據
在與HealthKit互動前
你的應用需要請求許可通過HK Health Store訪問正確的類型
Health Store反過來會顯示
一個正確的授權UI給用戶如果有必要的話
注意 用戶可以隨時更改給你應用的權限
在開發應用的時候一定要記住這一點
同樣重要的是讀授權和寫授權
完全獨立不相干
最後這點是有點複雜
所以我們來講的更細一點
這裏看到的是讀和寫的授權如何運行
如果用戶同時授權你
讀和寫的許可給一個指定的HealthKit類型
那麼你的應用可以如你所願地查詢並保存
這個HealthKit類型的數據
如果用戶只給你讀某個類型的權限
那麼你的應用可讀
但是不可改寫這個HealthKit類型的數據
到目前一切都好
現在 如果用戶給你改寫某個類型的權限
那麼你的應用可以改寫HealthKit中這個類型的數據
但不能從HealthKit回讀這個類型
有寫的權限不意味有讀的權限
但是這有一個很重要的例外
如果你的應用可改寫HealthKit類型
那麼你可以回讀你的應用所寫的內容
只是不能讀其他來源的數據
最後 如果用戶拒絕
對某個類型所有讀和寫的權限
那你就既不能查詢也不能保存這個類型
最後這一點會產生重要的影響
如果用戶拒絕了之前授權給應用的許可
那麼你的應用就無法再讀取任何
這個HealthKit類型的數據
即便是你的應用之前寫的數據一定要牢記這一點
以上就是所有的技術回顧
但是這裏iOS X的授權有個重要的變化
它與使用說明相關
iOS X及以後版本的應用必須爲用戶提供一個說明
說明他們爲什麼要訪問健康數據
這也是再次強調了我們的原則就是用戶控制數據
使用說明應當在應用的info.plist文件中聲明
爲NSHealthShareUsageDescription驗證碼
這是讀取數據的時候
或者聲明爲NSHealthUpdateUsageDescription在改寫數據的時候
換個畫面來看看你如何請求授權
第一件事是保證HealthKit
可用於當前設備
比如說iPad上的應用就不行
建好這個之後
我們列舉一些類型是我們想要讀取和改寫的
最後調出requestAuthorization
在HK Health Store裏傳遞我們感興趣的類型
然後處理反饋並回調
watchOS應用怎麼辦？
授權可以共享於你的iOS應用
和匹配的watchOS應用
請求授權可以隨時進行
通過iOS代碼或者watchOS代碼
但是 系統授權UI
只能顯示於用戶的手機上
因此這就造成了重要的可用性問題
比如用戶準備開始鍛鍊
他們可能已經把手機綁在了臂帶上
如果是這樣
他們很難允許你的應用發出的授權請求
所以這就不是請求初始授權的好時機
但是還有一個更麻煩的情況
如果用戶使用Watch應用手機可能根本不在身邊
這樣的話
請求表單甚至都無法顯示
因此我們建議你實際考慮一下這些問題
在開發Watch應用的時候
同樣要記住請求授權調令的反饋時間
沒有保證
所以在等待反饋的時候一定不要阻礙任何UI
現在重要的是提供給用戶正確的授權體驗
在此之上
應用可能會請求訪問一些或者很多HealthKit數據類型
所以就出現了一個很重要的問題
什麼時候應該請求訪問一些或者所有的數據類型？
以下是我們的一些建議針對這個問題
首先我們建議你請求訪問
合理的類型集合
它們要對應應用的邏輯活動
比如說你的應用允許用戶監測
食物攝入量和身體指標比如BMI
要是這樣
你要考慮請求訪問營養數據類型
在第一次用戶記錄食物攝入的時候
然後請求訪問身體指標的數據類型
在用戶每次要記錄它們的時候
這個規則也有一個例外
就是當應用有加載流程的時候
如果是這樣你實際上就要
請求訪問所有應用要提前使用的數據類型
因爲你現在已經可以清楚地向用戶解釋
你的應用要用這些類型做什麼
無論你選擇哪個類型我們必須要建議你
在開發過程中常常測試授權
你可以簡單的重設初始授權流程
通過刪除應用從你的設備或者模擬器上
在建立和運行之前
這樣HealthKit就顯示給用戶
初始授權流程從頭開始
這時一定要測試
授權有沒有延遲或者被用戶完全拒絕
應用在這些情況下如何運行？
還有更多能力嗎？
最後 如果要用一句話總結授權那就是
時刻考慮用戶體驗
不要在不合適的時間顯示問題
並保證你的流程有意義
我們已經花了很多時間瞭解授權
現在我們來講一些新特性
是去年以後HealthKit新出的從活動環開始吧
Apple開發了一個很棒的健康與健美的追蹤體驗
在Apple Watch上
用戶喜歡它能簡單地追蹤主要的活動規律
改善他們的生活
在iOS 10和watchOS 3
用戶甚至可以跟其他人分享他們的活動環
可以比賽
我們提供給你一個很棒的方法
來融合這個活動環體驗
到你的應用裏通過iOS 9.3的Activity Rings API
首先我們要開始一個HKActivitySummary對象
HKActivitySummary代表的是
在某一天的時間內用戶的活動總量
這包括了他們的熱量消耗鍛鍊分鐘數和站立小時數
以及他們設定的每個目標
HKActivitySummary是授權的一種獨特類型
它不是HKObject更像是一個特殊的只讀類型
是你單獨從組件類型請求的授權
最後這一部分十分重要
HKActivitySummary包含了一些HealthKit信息
與HealthKit類型相同：活動能量
鍛鍊分鐘數和站立小時數
但這些都是以天爲單位累加
所以如果你想要做得
更具體些 比如...
更改用戶的Move ring通過改寫活動能量的數據類型
或者顯示精細糧食數據
給這一天的活動
這樣的話你就需要請求
單獨訪問每個成分類型
由於ActivitySummary對象代表的活動
是某一天內的活動
它可能 或許不能對應24小時的時間段
所以我們要指定對應活動小結的日期
通過使用DateComponents對象
那要怎麼做就看下面這個例子
假設我們想要獲取今天的活動小結
那麼就要使用HKActivitySummaryQuery
首先讓日曆
對應今天創建DateComponents對象
使用規定的組件時代 年 月 日
接下來用這些組件創建一個predicate對象
這將我們的查詢控制在活動小結裏
日期與今天對應
最後創建query傳遞給predicate
之後在這種情況下處理單一的活動小結
這會返回一個值
以上就是如何獲取活動小結數據
但是最有意思的部分是顯示環本身
要做這個 我們要使用iOS的HKActivityRingView
或watchOS上類似的WKInterfaceActivityRing
外觀是這樣
就像你想的那樣它們用漂亮的動畫來顯示
調出setActivitySummary就能動了
下面講幾個使用HKActivityRingView和WKInterfaceActivityRing的技巧
首先就像iOS和watchOS上的健康和活動的應用那樣
這個環在黑色背景上最好看
所以我們建議你的應用也用類似的顯示
第二 如果你的應用有分享和交流的功能
可以使用HKActivitySummary的可寫屬性
來架構你自己的對象
並提供給HKActivityRingView或者WKInterfaceActivityRing
這樣就會顯示另一個用戶的環形圖
緊挨當前用戶的環形圖在你自己的應用裏
最後 當你使用HKActivitySummaryQuery
記住要使用規定的DateComponents
時代 年 月 日在你的HKActivitySummaryQuery裏
時間映射有時十分複雜
所以如果你有任何使用日曆或DateComponents的問題
請參考上一次會議的精彩演講
講了很多關於授權和Activity Rings的信息
現在來實際操作通過快速的演示
在右邊有一個越來越流行的應用
是給醫療小組用的叫做LoopHealth
這個應用有不一樣的功能
但主界面都是dashboard裏面有些很有用的信息
比如說你的醫生名字
最近的預約以及一些健康知識
LoopHealth希望他們的病人每天生活得更健康
所以他們看到了一個好機會就是能把Apple的Activity Rings
帶入他們的界面
這裏你看到我們已經把
一個HKActivityRingView融入了應用的storyboard裏
但是我們還沒有寫一個代碼來鏈接到這個數據
讓我們看看這有多簡單
在Xcode裏有個DashboardViewController
這個視圖控制器是我們剛剛
在LoopHealth裏看到的
現在這裏很空
但是我們的確有些有用的信息可填
你看到這裏有一個IBOutlet
被設置連接到應用裏已有的activityRingView
這裏我們導入HealthKitUI
這是一個新的框架
可在iOS的HKActivityRingView裏找到
最後在這個下面
LoopHealth在應用代理中設置了適用於全應用的HKHealthStore
所以我們只要設置一個簡單的計算屬性
能方便我們檢索需要的東西
好的 如果我們想要在應用中顯示活動小結
第一件事就是請求可讀許可
給HKActivitySummary
鑑於我們在讀取健康數據
所以我們需要包含一個使用說明
那麼就讓我們去info.plist文件
添加一個新的key
我們需要的這個key叫做NSHealthShareUsageDescription
這裏用簡易英語寫着Privacy Health Share
很好 然後只要加入一個簡單的使用說明
設置全部完成
現在就可以回到DashboardViewController
再寫代碼實際請求授權
由於我們想讓這個初始畫面能立刻顯示給用戶
而每次用戶轉到dashboard的時候都要更新環形圖
要做這個最好是在viewDidAppear方法裏
那麼我把它拉到這裏
在調出super後
注意我們在HKHealthStore上調出RequestAuthorization
傳遞進activitySummaryType
然後作爲返回調出updateActivitySummary
是爲了真正獲取並更新數據
現在就來執行這個代碼吧
這就是updateActivitySummary的基本構成
我們這裏要做的
是創建一個HKActivitySummaryQuery
請求今天的活動小結
然後把這個活動小結定義到HKActivityRingView
在收到這個小結後
首先 對應今天 創建一個DateComponents對象
由於DateComponents只作用於一個特定的日曆
我們就要把需要的日曆對象
放回組件對象
呃 好了
下面來創建predicate通過那個組件對象
一旦有了這個predicate就可以創建query
傳遞給predicate然後在返回中
獲取今天的活動小結
現在只要有了這個小結
我們要做的就是調度回主隊列更新UI
然後調出setActivitySummary讓活動環變成動畫視圖
現在有了query剩下的就是去執行
就這麼多
那麼讓我們來運行看看怎麼樣
很好那麼你看到的第一個東西
是我們在請求訪問活動小結
Health正請求用戶允許授權
我們允許它讀取活動數據類型
這個時候注意下屏幕底部
有個使用說明是爲讀取健康數據時添加的
現在就在這裏顯示給用戶了
值得注意的是在一個真正的應用裏
我們要確保這個說明已經本地化
所以我們要把它放進info.plist.strings文件
我要在這裏允許授權
就像這樣我們看到這個活動環
就在合適的地方漂亮的動起來
就是這麼簡單
就將活動環加入了你的應用
一定要檢查API
下面 我把舞臺交給我的同事Jeff
他會爲你們講述一個 iOS X最棒的新功能
謝謝你 Matt
大家早上好
我是Joefrey Kibuule
與Matt是同事
我是iOS軟件工程師在Health團隊工作
今天我很感到很自豪來爲你們介紹
iOS 10的一個新功能
健康記錄
健康記錄提供了一個簡單便攜的方法
讓你的私人信息能隨你而動
就在你的手機上
由現在的經驗來看
如果用戶去看醫生
並要健康記錄的話拿到的是這個
一大疊文件這會很麻煩
如果你想從中找一個特定的信息的話
再近一點的時間
健康機構會給病人提供這個
存有電子信息的光盤使用起來不直觀
但現在iOS有了健康記錄我們就能解決這個問題
通過我們的努力推出的這個功能
爲你的應用開啓了新的可能
尤其是與健康記錄的交流與互動
事實上在美國使用這些API
可以幫助健康機構遵守新的規定
就是要求他們給病人更多權利掌握他們自己的健康數據
首先做個概述
iOS健康記錄是一個涵蓋性術語
代表的是各種不同病人就診信息
由健康機構生成
今天我們特別爲健康檔案添加了支持
用標準的機器可讀的XML代表特定的病人就診信息
這些包括
病人就診總結
持續護理記錄
以及手術記錄還有很多
我們支持國際HL-7 CDA標準
來完成與大量不同提供者的互操作
這些文件可以在病人的在線健康門戶裏找到...
並且能通過Safari和郵件導入現在所有應用都可以導入了
這些文件的保存跟其他HealthKit數據一樣
安全的加密在你的iOS設備上
接下來我們講講許可
由於每份健康文件裏都包含着大量的信息
相比於HealthKit的其他數據類型我們給用戶更多的控制力
訪問許可是基於每個文件的
不僅僅是健康文件數據類型
在右邊你看到
我們顯示的這個UI可以讓用戶
在授權你的應用之前瀏覽和選擇文件
這個UI會出現在任何你想查詢文件的時候
以及有新文件可用的時候
如果要查詢文件
並且沒有任何更改
我們就不會顯示這個UI給用戶
那麼你的查詢就會立刻返回結果
如果查詢文件是在
應用在後臺運行的時候
我們永遠不會彈出UI來授權新文件的許可
HealthKit確保了用戶總是知道
他們何時授予你的應用訪問文件的權限
在第一次需要授權的時候
下面來講講如何在HealthKit創建文件
要保存文件到HealthKit你可保存一個原始XML
到新的HKCDADocumentSample類型
我們會驗證創建以保證它符合標準
並且會在失敗的時候報錯
我們會自動提取標題 病人 監護人和作者名字
無論何時文件被保存到HealthKit
以便更快的查詢這些區域
而不需要讀取整個文件
我們來看看這個例子的代碼
我們要用documentData並轉換爲Data對象
通常這個XML的來源
是一個健康機構的服務器
接着就要創建一個新的HKCDADocumentSample
傳遞到Data對象
定義合適的日期
和任何附加元數據跟其他HKSample一樣
之後我們要保存這個文件到healthStore
完成了
現在你的健康文件就保存到HealthKit裏了
並可以在其他應用上使用
或者直接讓用戶用Health應用瀏覽
現在 我們來講講如何在HealthKit裏查詢文件
鑑於HKCDADocumentSample是HKSample的子類
現有的查詢對象對你來說已經很熟悉
它們會繼續運行跟你想的一樣
但是 你要使用新的HKDocumentQuery
去獲取原始的XML
獲取原始XML成本很高
我們只在有明確要求時 才這麼做
我們提供predicate支持
以便查詢自動提取的域
最後 要記住
由於HKDocumentSamples不可更改
對之前樣本的更改信息被看作新的樣本
現在我們看個例子
如何查詢HealthKit裏的文件
在這個例子裏我們要查詢
用戶保存的所有文件
首先我們要獲得documentType
我們要傳遞CDA identifier給
HKObjectType上的forIdentifier方法
再創建HKDocumentQuery
你要留出額外字段用來篩選和排列文件
讓它們按照你想要的順序返回
然後執行查詢
以便獲取HKCDADocumentSamples
從HealthKit返回
我要強調一點在這個特定的例子裏
就是includeDocumentData定義爲假
要定義爲真
只能在你需要完整原始XML文件數據的時候
現在我們來講一些最佳的操作
在處理HealthKit健康文件時
首先 檢查驗證錯誤
在每次創建KCDADocumentSample的時候
這個報錯告訴你我們爲何不能轉換
原始XML到可用樣本
下面 你要用Health應用驗證
你導入的文件是否正確保存
以及自動提取的域是否存在
這樣你就知道
基於這些自動提取域的查詢
所返回的正確樣本是否符合你的預期
最後請求原始XML數據只能在必要的時候
不發出請求的查詢包括文件數據
會返回自動提取的域
這可能是所有你和你用戶所需要的
用來唯一識別HealthKit文件的工具
要了解更多HL-7 CDA標準的信息
請訪問屏幕上的這個鏈接
現在我們來換個話題
給大家一些處理數據的基本指南
你知道 HealthKit實際上是個中央存儲庫
在這裏你的應用和其他應用可以幫助用戶
管理他的健康記錄數據
你在雲服務上的應用
也許能直接連接到雲服務上的其他應用
這時就需要一些特別的考慮
這裏我主要探討三點
有關數據處理的問題
第一 同步數據
第二 追蹤更改的數據
第三 數據遷移
先看第一點 數據同步
你要一直使用HKAnchoredObjectQuery
以便用戶處理新樣本和已刪除的樣本
從而與HealthKit更新一致
Anchor像一個書籤來標記
最後一次請求查詢以獲取數據
你可以保存這個anchor
方便下一次創建新的HKAnchoredObjectQuery
你可以給每個樣本類型開放一個查詢
只要你感興趣
然後傳遞一個備選的更新處理器
以便持續處理新樣本和刪除的樣本
不需要重複查詢HealthKit
但是 要是爲了更好的用戶體驗
爲了在應用第一次啓動時能顯示新的UI
或者是爲了讓你的雲數據保持同步
那麼應用必須也要處理新樣本和刪除的樣本
即使當前不在運行狀態
這就是HKObserverQuery
和HKAnchoredObjectQuery一起發揮作用的地方
我們來看一個圖表例子
那麼這裏有四個主要步驟
來處理後臺更新
分爲兩個階段
設置和執行
第一步
註冊後臺更新
這要用於每個你要操作的樣本類型
第二步打開ObserverQuery
設置完成後
ObserverQuery同時監測
HealthKit裏的新樣本和刪除的樣本
當新樣本生成時你就要開始第三步
你會從observerQuery收到一個回調
然後執行HKAnchoredObjectQuery
來獲取新樣本和已刪除的樣本
那麼第四步
調出observerQuery的完成處理器
以便告訴HealthKit
你已經完成對後臺更新的處理和傳送
接着你會繼續循環第三步和第四步
以便與HealthKit保持更新
現在 我們來一步一步看代碼
第一步要註冊後臺更新
每次啓動應用的時候都必須這麼做
所以我們建議你在應用中寫didFinishLaunchingWithOptions
然後你從HKObjectType獲取step的quantityType
然後傳遞給HK Health Store的enableBackgroundDelivery
以便傳遞stepsType以及你想要更新的頻率
請注意後臺傳輸時間沒有保證
應用要選擇它能處理的最長頻率
以便保護用戶的電池壽命
還要注意的是這個API是iOS特定的
後臺更新在watchOS上不可用
第二步
傳遞step的quantityType
創建HKObserverQuery
這裏有自定義的updateSteps方法
我們可以用它來獲取
HealthKit檢測到的新樣本和刪除的樣本
之後就要執行這個查詢
就這樣設置階段完成了
HealthKit就可以監測HealthKit中的新樣本和已刪除的樣本
那麼...
在我走過舞臺生成健康樣本
是步數樣本的時候
我們深入瞭解一下updateSteps方法
好讓我們知道要如何做
才能獲取新樣本和刪除的樣本
首先來創建一個HKAnchoredObjectQuery
傳遞給stepsType
同樣有一個predicate是額外字段
讓你能篩選出你想要的那個樣本
然後調出handleSteps方法
以處理新樣本和刪除的樣本
更新anchor
以便下一次創建HKAnchoredObjectQuery
然後調出completionHandler
宣佈獲取新數據進程已完成
之後執行查詢
最後 第四步
調出completionHandler這是observerQuery給我們的
是爲了讓HealthKit知道我們已經收到
並且處理了後臺更新
就是這樣
現在你的應用啓動時就會有新的UI
然後同步雲數據
按照這些步驟
下面來講講追蹤更改數據
你要使用UUID
來追蹤唯一的HKObjects
獨特的識別符要定義在每次創建對象的時候
而且要一直存在於這個樣本的生命週期
將UUID記錄到你的個人數據庫
或者...
同時存到本地設備和雲端
這樣你就能知道哪個樣本是一樣的
當樣本被刪除的時候以Health應用的鍛鍊爲例
你要一直監測這些更改
以確保那些相同樣本也會被刪掉
同樣也是在本地設備和遠程雲端
還要保證以後的同步操作不會重新添加這些已經刪除的樣本
這可能會產生兩個問題我要重點講一下
關於如何避免重複
第一個就是預填充數據
預填充數據是抱歉 加載
預填充數據是一個好方法讓你在加載過程中
節省用戶的時間通過拉取那些
已存在HealthKit裏的信息
用戶可以驗證數據
在HealthKit裏需要的話也可更改
但是問題在於如何保存未更改的值
要保證再次保存數據是用戶的意願
另外一個潛在的問題就是數據攝取
無論從其他應用還是HealthKit
記住只能選擇同一個來源的信息
並且最適合你的應用
HealthKit有很棒的隱私性這是我們的用戶已經認可的
但是隻有你知道哪個來源對你的應用最好
一定不要保存其他應用的數據
以他們的名義
只寫一遍你自己的數據避免重複數據
通過明確哪個應用有權編寫
這個規則有一個特別的例外
有時候複製是有意的
比如數據來自多個來源的時候
步數數據不僅由用戶的手機生成
還會由Apple Watch生成
你可以使用HKStatisticsQuery和HKStatisticsCollectionQuery
來自動消重
按照Health應用中首選數據來源排列
這樣的話用戶體驗就會連貫流暢
健康數據視圖在整個生態環境裏都一致
現在我來講講數據遷移
假設你發起了一個新的Bluetooth體溫計
和可把數據寫入HealthKit的應用
你的應用上架App Store已經幾天了
但是用戶發現了一個問題
在某些情況下
本來要保存98華氏度
實際卻存的是98攝氏度
這溫度有點高
這種情況下
我們就知道如何遷移數據來解決這個問題
我們首先要找到舊的樣本
寫一個新樣本
一定要更新存在別處的UUID
然後刪除舊樣本
現在有幾個新事項關於數據流動
在iPhone和Apple Watch之間
從iOS 9.3開始用戶手機產生的數據
現在會同步於所有與之匹配的Apple Watch
Apple Watch現在反映的是
存在HealthKit裏的最新的健康數據
爲了實現這個任務
樣本會定期修整
基於其在Apple Watch上的結束日期
所以一定要保存樣本
特別是HKHealthStore最早許可之後的樣本數據
這是爲了保證你的樣本能正確地保存
並同步到用戶的設備
最後同步的時間沒有保證
所以你的數據要保存在iPhone或Apple Watch上
不能兩個都存
我現在把舞臺交還給Matt
由他來最後總結一下這場演講
謝謝大家好好享受 WWDC 吧
謝謝你 Jeff
在總結之前
我想再着重講一個很棒的輔助特性
這是iOS 10和watchOS 3中全新的特性
輪椅輔助
輔助功能是Apple十分看重的部分
所有的用戶都應當享受我們的產品
和最極致的體驗
這樣強大的活動追蹤體驗在Apple Watch也不例外
iOS 10和watchOS 3就包括了這種強大的運動跟蹤功能
它可以自動記錄數據對輪椅使用者十分有用
現在你就可以使用並記錄這些類型
在與HealthKit互動的時候
首先這是個新的特性數據類型
HKWheelchairUse
它定義了用戶是否使用輪椅
它的值可以是是 否或不確定
然後我們有一些新的數量類型專門針對輪椅使用者
其中包括輪椅移動距離和推動次數
你可想象成是步數
最後我們具備對輪椅使用者十分有用的新的鍛鍊類型
這些包括輪椅的步行速度和跑動速度
當輪椅使用者佩戴Apple Watch時
watch會自動記錄推輪椅的次數
並寫入新的推動次數類型
另外
站立環形圖中對應站立小時數的數據類型
變成了轉動小時數
要注意 輪椅走的距離只能在
輪椅運動時 自動記錄
還要注意
用戶的輪椅狀態會隨着時間改變
這十分重要尤其當你要查詢歷史數據的時候
這種情況下你要保證同時查詢
輪椅類型和非輪椅類型
這樣就不會遺漏大段的
用戶歷史信息
總的來說我們一直努力保證
我們所有的產品和體驗能爲所有人服務
你也是
我們強烈建議你
去考慮這一十分重要的用戶羣
通過在你的應用裏支持並提供這種輪椅數據類型
我們今天講了很多
現在回顧一下
授權十分重要對保護用戶隱私而言
但是保證好的用戶體驗絕對是重中之重
時刻記得授權
在開發應用時而且一定要經常測試
然後我們講瞭如何應用Apple的健康與健身生態系統
通過把活動環帶入你的應用
通過Activity Rings API
不管何時與HealthKit互動都要仔細處理所有情況
正確的同步刪除 複製這些數據
以保證用戶的數據始終精確
並始終符合你的預期
最後不要忘了好好利用這些新出的好功能
就在今年發佈的iOS 10和watchOS 3中
特別是輪椅輔助
這是我們認爲十分有意義的功能
如果要了解更多關於我們今天所講的話題
又或者你有任何問題請訪問這個網站
這裏有更多資源可用
也不要忘了瞭解下其他相關的演講
還有往年的精彩演講
會讓你更快了解HealthKit
感謝你們創造了這些出色的應用
讓我們的用戶生活更加健康
希望你喜歡WWDC的其他演講