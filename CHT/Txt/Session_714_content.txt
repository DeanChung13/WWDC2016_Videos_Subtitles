現代互聯網的網絡系統
下午好女士們和先生們
看到這麼多人在場我感到非常高興
有多少人是第一次來WWDC？
哇！這令人難以置信
歡迎
我希望你們在WWDC一切順利
現在我們要來談一些網絡系統的話題
我今天有五個內容要講
我們將向你們介紹顯式擁塞通知的最新進展
我們去年談論過（顯式擁塞通知）
我們要告訴你關於IPv6進展的最新動態
我們要談論一點點國際化文本
它正變得日益重要
我們要來探索下你如何控制網絡接口的訪問權
來避免你的用戶收到天價流量賬單
我們會以一些關於網絡服務質量探討進行收尾
你可能聽說過AppleCisco Fastlane聲明
我們就它將如何適用於你的應用這一話題加以談論
我們先從ECN說起
簡單地回顧下去年講的內容
我們展示了Smart QueueManagement和標記而非丟棄數據包
如何在重新發送過程中降低延遲 減少延時
來提高所有應用程序的用戶體驗
特別是對串流影像這類情況
在iOS 9上面我們對TCP連接沒有啓用ECN
但是在一個不相關的改動裏
VPN軟件會關注ECN標記
我們發現德國的一個ISP把所有的數據包都標記了
“經歷了擁塞”這對VPN是不好的
好消息是他們在幾個星期內修好了網絡
我們沒接到世界其他地方發來的任何錯誤報告
這告訴我們的是我們在世界各地推出了iOS
發現了一個問題並修好了
現在互聯網對ECN來說安全了
也正因爲這樣 在iOS 9.3和OS X El Capitan上
隨機5%的TCP連接使用了ECN
我們用這個來收集性能數據
然後檢查確認互聯網對ECN來說是持續安全的
在你已有的Developer Seed中
100%的Wi-Fi連接和100%的
這三個網絡運營商的連接現在都在用ECN
去年 我報告說Alexa上56%
排名前百萬的網站支持ECN
這是一個還挺令人驚訝的支持數
對於一個沒人用的技術來說
我和我在ETH的好朋友Zurich和Brian談了下
Brian Trammell和Mira Coolwind還有他們的同事
爲我們重新跑了下測試
今年的百分比上升到了70%
而且如果你只看IPv6的網站都到了83%
所以
這是在號召ISP、網絡運營商
和賣給他們設備的供應商們行動起來
客戶端在使用ECN
網絡服務在支持ECN
是時候讓中間的網絡開始標記數據包
而不是丟棄他們
它給你更好的用戶體驗它減少了因爲重新傳輸而產生的延時
而且它更有效的利用了網絡
因爲你避免了重新傳輸包裹而浪費帶寬
我們的下一個話題是IPv6
全球啓用IPv6計劃是四年前的上個星期
它現在還在增長
我看了各種各樣的數據統計
現在來給大家展示其中的一小部分樣本
我看了通過IPv6訪問Apple主頁的比例
在比利時 這個比例現在到了39%
在美國T-Mobile這個比例到了54%
在Verizon上 這個比例到了74%
很清楚的一點是 在這些運營商上IPv6的通信是主流
原因很簡單
IPv6更簡單、更可靠操作起來也更便宜
所以運營商想轉用IPv6原因很清楚
但對於開發者和用戶來說代價是什麼？
IPv6欠成熟嗎？
它更慢嗎？
分給IPv6的容量更少嗎？
這些是很重要的問題
內容提供商和開發者密切關注着這個
他們用收集自網頁瀏覽器的數據
測量一些東西像其用戶每人瀏覽網頁時的加載時間
然後把這個信息發送回來
這樣他們就能知道自己的產品
在世界各國
不同的ISP不同的運營網絡上運行如何
LinkedIn報告他們現10%的通信是通過IPv6
他們發現頁面平均加載時間比通過IPv4快10%到40%
他們推理這可能是因爲較少的額外開銷
通過大規模超載的NAT建立連接
Facebook發現了相似的結果
他們現在通信的45%是IPv6通信
這是他們最近根據數據的平均情況做出的報告
ATP通過IPv6的GET請求要快15%
若你只看數據集合中iPhone部分
結果發現其中30%通過IPv6
所以IPv6對網絡操作者來說更好
他對用戶和內容提供商也更好
這也是爲什麼Apple100%支持IPv6
你們上個月肯定都已經看到了這個聲明
我們去年宣佈了我們將要求所有的應用
兼容IPv6網絡
我們還說將在自己的IPv6網絡上用NAT64 Gateway測試所有應用
從這個月起我們開始強制執行那個要求
還仔細的尋找任何
這個行爲會導致應用程序拒絕率升高的證據
因爲如果是這種情況的話
我們將不得不研究並找到解決的辦法
但是好消息是我們盡全力監測
沒有發現應用程序拒絕率的任何變化
這個真正告訴你的是你們中99%有應用
在IPv6支持下能正常工作
這是我們意料之中的
但是最好還是能確認下
若你已有一個應用被拒絕了而且你認爲可能和IPv6有關係
那麼今天或者明天來一下實驗室吧
你可以在WWDC這裏用NAT64網絡測試你的應用
我們可以幫助你檢測下哪裏可能出問題了
我們的建議仍然是也一直會是
使用高層級兼容地址族的API
如果你非得使用低層級的BSD API
那麼你將會有額外的工作要去做
這就是爲什麼我們誠摯建議使用高層級API來爲你做那些額外工作
另一條重要建議是使用主機名而不是IPv4地址
因爲IPv4地址是IPv4內置的一部分
讓我給你看個小圖片告訴你爲什麼
這是幾年前的一個典型情況
你有一個客戶端在用IPv4你有一個服務器在用IPv4
數據包在NAT Gateway繞了點圈子
這就是你如何連接到服務器
現如今 很多運營商開始使用帶NAT64 Gateway的IPv6網絡
數據包仍然在NAT Gateway繞點路
然後連接到互聯網上那個老的過時的IPv4服務
如果你們數據中心的人提出雙棧服務
但是你的應用還在用v4字面值
那麼數據包還是會繞同樣的路
通過NAT到達服務的v4接口
但是如果你通過主機名查找
並且他們把IPv6的配額記錄放入DNS
那就是你如何直達數據路徑
不用通過NAT Gateway
我談了字面值地址
我們現對選定的API支持IPv4字面值地址
如果你使用其中的一個地址
我們實際會爲你在本地設備上做DNS64綜合體
創建一個臨時IPv6地址
與你因特網上v4服務相對應
然後通過NAT64 Gateway進行連接
請記住 使用字面值v4地址
一定會阻止你的應用連接到一個ATV6服務器
但話又說回來如果那是你應用程序的需要
這裏是一個例子教你如何去做
如果你編程語言用的是Swift和高層Cocoa API
這些會爲你自動生成
但是如果現在你用的是UDP代碼而且你用的是BSD socket
你需要用到的API是getaddrinfo
你把要連接的地址用字面值傳進去
傳入你想要的端口號
這裏https是443端口的同義詞
你對得到的地址進行循環
記住 不要只用第一個
你會得到一個數組包含多個地址你需要去試
當然 在你結束時釋放內存
連接在Local Link的設備
我們從開發者那裏收到的另一個問題是關於物聯網的
有的開發者寫的應用
和不是他們製造的設備進行互動
其中一些設備還不是很先進
我們希望那些設備去支持IPv6
如果不行的話
我們建議他們起碼支持IPv4 link-local地址
所以即便在一個只支持v6的網絡上
那些設備間可使用v4與link-local地址互相交流
如果這個設備兩樣都做不了 也可以
當你提交應用時 通知應用審查
那不能成爲拒絕你應用的理由
但很可能是在這個設備上貼上這個標籤的理由
要記住所有的線下鏈路通信
仍然要兼容IPv6和NAT64
總結一下我們推薦你支持IPv4和IPv6
在兩端都要支持即在客戶端和服務器
我們推薦你使用主機名、
這樣你可在v4的網絡上獲得一個v4地址
在v6網絡上獲得v6地址
如果你確實需要使用字面值地址一些選定的API現在支持他們
只要你設置合適
但是記住
插入v4字面值以後會阻礙和v6服務器的通信
這就引入了我們要講的下一個部分國際文本
你可能已經開始見到像這樣的東西
如果你的母語是英語這可能看起來挺難懂也挺嚇人的
但我今天想談的是 它到底有多簡單
國際支持在你的應用中不需要成爲一個艱鉅的任務
事實上 其實它不比支持ASCII難
所以儘管這部分標題是國際文本和網絡
我們其實可以把網絡劃去
眼下 我只想談談通常來說你如何支持國際文本
我要從一些背景知識說起
並不是因爲你們中很多人每天可能會遇見它
而是我想揭開它一部分神祕的面紗讓它不那麼可怕
因爲它真的不再比ASCII複雜了
我們的第一個概念是Unicode
Unicode是一大串數字
與之相對應的是人們能看懂的字符
它就像一個大電話本事實上 它可以書的形式出現
它是一本又大又厚一頁一頁寫滿了數字和字符的書、
那就是個抽象概念
你有整數和它代表的字符
想在我們的電腦裏用這些整數
我們需要代表這些數字的方法
在內存裏 在硬盤上在網絡上
代表他們的一種方法是UTF-32就是一個32位的數字
像其他32位的數字一樣
你需要關心它到底是大尾數還是小尾數
它需要佔用的空間是ASCII的四倍
UTF-16就更簡潔些它用的是16位的數字
它仍有同樣的問題小尾數還是大尾數
因爲它是16位它只能代表65000個值
所以你得用代理對來代表超出範圍的值
因此那就有點累贅
UTF-8是一個8位面向字節的編碼
因此不存在字節的順序問題
這也正是用它來編碼很理想的原因
那就讓我們深入研究下UTF-8
它發明於1992年新澤西的一個深夜
它是計算機科學天才的罕見作品之一
當我第一次聽說它的時候我立馬知道了 這就是答案
這解決了國際文本的問題
所以我想告訴你們一些關於它是如何工作的
那樣你就理解他到底有多簡單了
UTF-8的語法
Unicode的代碼點 從0到7F和ASCII的值是完全一樣的
UTF在內存中用完全一樣的字節代表他們
它的意思是如果你有一個硬盤裏裝滿了明文ASCII文件
我就能魔杖一揮 然後說我宣佈你現在是UTF-8
硬盤裏沒有任何一個字節需要改變
文件的意義也沒有改變
你對那些傳統的ASCII有自動的向後兼容性
這個東西好極了
UTF-16和UTF-32以及其他編碼沒有這樣的屬性
對於ASCII範圍以外的值
他們會表示成多字節序列
但所有那些多字節序列只用字節值大於128的
所以在ASCII字符和
大數值Unicode代碼點的多字節編碼之間是沒有重疊的
這個屬性不適用於其他
那些重新使用高碼字節代表其他東西的編碼
UTF-8有3種類型的字節
它有明文ASCII字節
UTF-8多八位序列
如果一個字節從最顯眼的0開始
那就告訴你它是明文ASCII
如果前2、3或者4位是1
那就告訴你它是一個兩、三或者四字節序列
如果前兩位是10
那就告訴你它是多字節序列
我來聯繫語境展示一下
獨立的ASCII字符
前兩位是1的字節意味着它是兩字節序列
開頭3個1的是三字節序列
開頭4個1的是四字節序列
這個賦予了它一個絕妙的屬性
你可跳到UTF-8文件中間任何地方
通過看任何老字節你能分辨出來你看到的是什麼
這個是獨立的ASCII嗎？
這是一個多字節序列的開始嗎
我處在一個多字節序列的中間
是向前還是向後跳幾位才能找到字符的邊界？
所以這對於插入和刪除錯誤來說是非常非常魯棒的
這是個效率高到精簡的編碼
但它又恰有足夠的多餘度使自身可靠
它另外一個有用的屬性是在一個字符串的UTF編碼裏
是沒有0字節的
而C語言把0看成是一個字符串的結尾所以這個屬性非常有用
UTF-16字符串到處都是0
UTF-8的屬性
另外一個不錯的屬性
是若你在UTF字符串上做一個無腦簡單的字節檢驗碼的字符串排序
他們的排序和你直接對Unicode代碼點排序的結果是一樣的
這真是一堆絕妙的屬性
這就是爲何Ken Thompson發明它之後 僅僅時隔六年
IETF發佈文檔 要求從那時起
所有新互聯網標準協議必須能使用UTF-8
這個理念也在網路被接受了
四年前 Google做了個問卷調查
發現80%的網頁都是UTF-8
包括了一小部分老式的明文ASCII
當然也是UTF-8的兼容子集
UTF-8網頁的百分比
上個月那個數字增長到了87%
正因爲這樣 W3C和IETF一樣
同樣推薦我們只用UTF-8
這相當棒
但是有一個問題
出於某種歷史發展中遺失了的原因DNS界決定不這麼做
他們發明瞭一個不同的編碼方法被叫做Punycode
Punycode重新使用已有ASCII字節值來代表不同的東西
那些字節值對應的是字母、數字和連字符
這個的結果是如果我們有一段字節
我可把這些字節當成ASCII值處理
然後得到這樣的東西
或者我可以把它們當成Punycode編碼來處理
然後得到他們真實的內容
那個對於相同字節的雙重解釋可能會出現問題
因爲你想給用戶看的內容並不明確
或者不是用戶想要的
如果用UTF-8來做對比
你注意到的第一件事是編碼變得簡潔
它用了更少的字節
而且只有一個有效的解釋
所以不會出現模棱兩可的情況
對你們來說好消息是你們不需要關心這些
因爲我們會爲你處理
在iOS 9和OS X El Capitan上
如果你試圖在命令行ping一個UTF-8的主機名 那會失敗的
你輸的是UTF-8
那些字符通過了工具檢測被API接受併到了網絡上
但那名字沒以UTF-8輸入到DNS中 所以失敗了
從現在開始的iOS 10和macOS Sierra
同樣的ping指令在命令行輸入同樣的UTF-8字符
我們現會把它翻譯成Punycode
運行查詢它將會成功
這裏ping指令會使用Punycode
把它以ASCII形式展示
所以你看到的是屏幕上這些亂碼而不是你原本輸入的實際名字
這也是對同一字符有雙重翻譯問題的一部分
但是好消息是所有的Bonjour和DSA API
現在會接受以UTF-8格式輸入的國際文本
謝謝
因爲Punycode格式有非常嚴格的限制
它甚至不支持像名字中有空格這樣簡單的東西
對於Bonjour搜索發現我們用的是DNS
我們不想有那麼嚴格的限制
因此 運算法則的工作方式是RFC 6763裏記錄的
我們首先嚐試UTF-8
如果DNS管理員把UTF-8放在他們的區域文件裏
這做起來很簡單人們在90年代在做的
我們運行查詢 我們成功了我們得到了結果 一切都很正常
現在不同之處在於若我們失敗了 我們沒有放棄嘗試
而是用Punycode進行再次嘗試看看是否奏效
所以我們在同一個API中支持這兩種
Email地址
Email地址當今也變得國際化
這個做起來也不難
但是用戶卻碰到問題了因爲一個愚蠢的小原因
很多app 當你註冊一個賬戶時
或者你去網頁上註冊一個賬戶時
他們試着驗證這個email地址是否有效
他們檢查它是否以.com結尾或者類似的格式
但有着絕對有效email地址的用戶
卻不讓註冊賬戶
因爲他們的email地址被拒絕了
所以我們需要移除那些出問題的驗證器
說實在的 對於email地址唯一你能檢驗的東西
是它是否有一個@字符
如果有的話它就可能是個有效的email地址
如果你想知道它是否有效發送一封確認郵件
讓用戶迴應以確認它是有效的
如果你在寫一個email客戶端或者email服務器
會有一堆RFC你需要去看一下
但是對於剩下的人來說你不需要去擔心它
讓用戶以UTF-8格式輸入email地址
把它存在你客戶端的數據庫中讓郵件服務器把它
以email標準編碼正確發出去
國際文本的範例
來對這個部分進行一下收尾我們推薦你把UTF-8用到每個地方
讓一切變得那麼簡單
不要擔心Punycode我們來爲你處理
對於接受用戶的輸入要自由靈活
這是個新的多語言國際世界
下面到了接口部分
Wi-Fi Assist是我們去年引入的
說真的 這不新
自第一個iPhone起就一直這樣
如果我有Wi-Fi我希望我的手機使用它
如果我沒有Wi-Fi那就是我爲什麼得花錢買蜂窩數據流量
這樣出門在外我也有網絡
第一個iPhone就這樣做了
我們去年做的改變是我們做的更好了
我們對於做的那個決定更明智了
因爲在Wi-Fi網絡的前沿總是會有這樣的一個灰色區域
移動因素也在此之內
我們有個情況我們稱之爲停車場問題
它發生於一天的結束當你要下班的時候
你離開了辦公室你拿出了手機 你有Wi-Fi
你走出大樓去開車然後你要查看地圖
或者天氣預報或查找電影什麼的
你的手機以爲它有Wi-Fi
它一小會兒前是有Wi-Fi
但是你剛好走出了Wi-Fi的範圍它還沒意識到
有了Wi-Fi Assist我們會去做這個決定
我們嘗試使用Wi-Fi
如果不管用我們就會轉而使用蜂窩數據
但就像任何新功能有時候會存在傾向性
讓新事物成爲人們問題的替罪羊來遭受責備
所有人會恨它當有些app使用了大量的流量
然後出乎意料地收到了天價賬單
人們的本性就是責怪新功能
但其實若你去看Wi-Fi Assist的流量
你很可能會發現那部分非常少
Wi-Fi Assist通常不是問題所在
應用有那個開關
如果你不想那個應用使用太多流量你可以把它關掉
但那非常殘忍 更像是一種要麼全要 要麼全不要的開關
很多應用想做一些有點狡猾的事情
比如你有個視頻流應用
你可能想讓用戶能瀏覽目錄
看到指甲蓋大小的小圖片讀簡介 而這些全通過移動數據
不會花費太多
但是你可能想要應用程序的設置不讓使用移動流量來緩衝視頻
因爲用戶可能不想花費太多錢到移動流量上
如果你有那個設置的話你會想要能夠辨別
接收指甲蓋大小的圖片是允許的
而緩衝視頻是不允許的
很多開發者做過這樣的事情
他們用可達性API來問我在用手機流量？
是還是否？
如果沒在用手機流量那就開始去下載吧
但是 網絡的事情不是一直不變的
事情每一秒都可能發生變化
在你檢查
是否在用手機流量和實際上去連接之間
用戶可能正穿過停車場
所以這不是做檢查的正確方法
正確方法是把你的意圖在網絡層表達
我們會尊重你告訴我們的內容
第一步是不要管那個“飛行前檢查”
如果你想做個網絡傳輸就去試一下
如果那是一個你不想用蜂窩流量的傳輸
那麼你可以把它在網絡層表達
CoreMedia API的使用
你使用NSURLSession來設置allowsCellularAccess關鍵字
若把allowsCellularAccess設爲假
那麼我們就不會使用蜂窩數據進行連接
簡單又好用
如果連接失敗你可以詢問用戶
你想用移動流量還緩衝視頻嗎
或者你可以等 訂閱更好途徑的提示
當手機恢復Wi-Fi連接時你就會被告知
然後你就可在Wi-Fi再次可用時重試你的連接
總結一下不要假設因爲你現在有Wi-Fi
你在一秒以後仍然有Wi-Fi甚至半秒以後
情況一直在變
把你想要的在網絡層表達我們會遵從的
網絡服務質量（QoS）
我們最後一個話題是網絡服務質量
去年夏天 我們宣佈了Apple和Cisco的合作關係
我來告訴你們一些關於新API的內容
你就可以在網絡層來表達你的需求了
實際中存在不同種類的網絡通信
我們所做99%的事情是好的標準的因特網盡力而爲流量
我們想要能得到的最大吞吐量並且我們最好能降低延時
但是我們一定想要吞吐量越大越好
用來滿足瀏覽網頁、發送email
我們做的另外一件事是聯機備份把圖片上傳到iCloud
這也想要好一些的吞吐量
但不像高優先級的東西需要的那麼大
我們想把所有圖片上傳到iCloud
讓這個過程在後臺完成還不打擾看Netflix TV興致
圖片上傳應該在我們睡覺時進行
俗稱清道夫級別的流量
它用的是網絡其他時候空閒的流量
不然那些就被浪費了
但第二類通信是發送email 瀏覽網頁
以及任何人們頻繁參與的活動
第三類通信是電話語音交互式語音和視頻
我說交互式是因爲它是關鍵部分
當我們在談話時
我說一句話 你聽到了 你要做回答你回了我一句話 我也聽到了
如果這個來回需要幾百毫秒
人們的通信就被打斷了
當人們談到語音和視頻時
意識到一點很重要 就是看的YouTube視頻可能是個視頻
但它不是交互的
它不需要那200毫秒往返時間的附屬條件
聽的播客節目可能是語音但是它不意味着播客服務是聲音通信
它不是互動的
這就是爲何我把圖表這部分標註爲電話語音
因爲這是交互式語音和視頻
對這類通信你想要儘可能低的往返時間
而且它的吞吐量非常小
每秒只有幾千比特你不需要50兆比特的語音
所以把你的通信標記爲電話語音會告訴網絡保持低延遲
但是你也不要把隊列弄大
若你試圖把語音類做任何形式的批量傳輸
你將會丟掉大部分的數據包
因爲只有很少的網絡流量
被分給了這類通信
人們問的一個常見問題是Fastlane會讓我的應用變快嗎？
答案是 不會的它不會讓你的應用變快
它會減低語音通信的延時
你可能會好奇 這個和
Smart Queue Management還有Explicit Congestion Notification
就是之前談過的那兩個有什麼關聯
答案是 那些技術全面改善了
所有通信的延時
但是電話語音可能還會是個極端個例
它想要非常非常低的延遲
不惜犧牲吞吐量來達到
網絡服務類型API
從iOS 5開始我們就有了網絡服務類型API
它讓你能向網絡表達你的一些需求
但很多開發者寫的諸如Skype和Facetime
是通過UDP來做這類電話語音通信的
在現在的iOS上要使用UDP你需要使用BSD套接字
所以我們現在有一個套接口選項用來公開相同的功能
這樣你的UDP客戶端可以從中受益
我們知道一些開發者過去一直在一次嘗試中設置
服務的IP類型位系統來達到同樣的效果
問題是那些服務類型位系統沒被很好地定義
他們沒在任何地方被詳細說明
一些Wi-Fi芯片供貨商會看服務類型位系統
然後把它當作設置
Wi-Fi通信類型爲語音、視頻或後臺的提示
但是問題是沒有對這些位系統進行標準定義
詮釋起來就會不一致
所以你可能在你辦公室測試過了認爲一切正常
但是對於一個客戶卻是另外一回事
這就是爲何我們有了新的套接口選項
會在任何設備上給你提供可靠的、一致的行爲
如果你在用Swift編程
你可以設置網絡服務類型屬性爲語音、視頻或後臺
或者你根本不去設置那麼它就是傳統的盡最大努力傳輸
如果你在使用套接口選項我們有同樣的選項
我們有其他大概多於七個的選項
多於你們中大部分人需要的
這些是四個有意思的
鏈路層QoS標記
當你設置這些選項時會發生一些事
在設備自身有一些帶外隊列
你爲通信設置的服務類型控制它使用哪個隊列
在Wi-Fi接口它也會設置無線多媒體訪問類
在iOS和OS X上所有的設備都支持這個
而且帶外隊列選擇同樣適用於Ethernet和Wi-Fi
現在 若你的設備在這些新的Cisco Fastlane網絡上
我們會識別也會設置
IP層區分服務代碼點
這樣你就能得到想要的處理方式
不只是在它離開設備的第一跳
而是在企業網絡上併發跳越
我想強調的是這不是你們所有人都需要的
不必感覺你得走開對代碼進行改動
如果你在寫一個在線備份的應用一定設置後臺通信類
如果你在寫下一代的Skype那就設置成語音類
但是對於剩下的人來說
標準的盡最大努力傳輸幾乎可以確定就是你需要的
還有一些其他事情你們應該記住
帶外隊列選擇和Wi-Fi層
服務質量標記被所有設備支持
但是記住只適用帶外數據包
進來的數據包必須被另一端的發送者標記
IP層的標記也只針對帶外數據包
現只被Cisco網絡的兼容設備支持
只被iOS支持
不被Mac和Apple TV或其他設備支持
而且目前 只被Wi-Fi支持
絕大多數人在iPad上不用Ethernet
但若你插入了Ethernet適配器
服務質量不被Ethernet支持
最後一點 如果管理員選擇安裝
一個管理配置文件在設備上
那麼管理配置文件可以限制
那個應用可以使用這類服務選項
只有在配置文件列表的應用纔能夠設置服務類型
對於其他應用來說將是個無操作
概況來說這個部分
你們大多數人的通信應該繼續是盡最大努力
網絡服務類型的最佳實踐
如果你要做大型的批量傳輸且時間並不那麼重要
後臺通信是一個讓你少受打擾的方法
讓你在網絡上成爲一個更好的公民
記住 它沒有優先級這一說
沒有所謂的高優先級到低優先級的排序
它是一個web表達你是否想要小吞吐量和低延遲
還是大吞吐量和中等延遲
今天的演講就到這裏
謝謝你們的到來
我們談了SmartQueue Management
這對所有ISP和運營商以及網絡供貨商是一個號召行爲
客戶端開始支持ECN
服務器開始支持ECN
如果你開始在你的網絡上標記數據包
而不是丟棄他們你會讓你的用戶更開心
對在做的開發者的一句話
是IPv6現在對於很多網絡運營商在很多網絡上是主流的通信方式
在你的應用程序中支持IPv6
在你的服務器上支持IPv6和IPv4
對於你的文本UTF-8是新的ASCII
不比ASCII難
用起來實在非常簡單
我們現在所有的設備都良好地支持
所有的Unicode字符的文字
這樣那就沒任何疑慮支持UTF-8了
最後 我們有新方法讓你在網絡層表達意願
你可以控制什麼時候你不想使用蜂窩流量
你現在也可以更好地控制
數據吞吐量延遲的特性
就是這些了
這裏有個鏈接 你可以找到更多信息
我們有其他講座你可以觀看它的視頻
你可能會感興趣
我們有關於網絡和安全的講座 很重要
我們還有幾個其他講座是關於國際化的
我們有一些講座關於高層級網絡應用程序的 像HomeKit
那就這樣吧感謝來到WWDC