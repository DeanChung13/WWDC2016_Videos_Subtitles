Apple File System介紹下一代存儲的快照
好了 歡迎各位
我叫Eric Tamura旁邊是Dominic Giampaolo
我們會向各位講一下Apple File System
這是關於今天展示內容的一些流程圖
我會稍微講一下介紹與動機
爲什麼我們決定去構建它
我們添加了一些新功能作爲Apple File System的一部分
我們簡短地展示這些新功能
然後在結尾我們會
談談你可以在應用中使用的一些新API
我們開始吧
就像Sebastian提過的
Apple File System可用在macOS Sierra的 WWDC 版本
你們昨天都得到了
並且它會作爲開發者預覽版技術
於秋季macOS Sierra的發佈之後 在其上面使用
什麼是Apple File System？
它是我們下一代文件系統是我們爲Apple產品所構建的
你可能會關心這個
因爲它會在watchOSiOS tvOS和macOS上運行
對於預期的受衆
我們預計你們要麼在這些平臺上是初來乍到
或者是一位長期開發者
但我們打算涵蓋
新文件系統中所有高級功能的足夠細節
這樣你能跟得上
該產品的一個特點是我們想從
從Apple Watch一路擴展到Mac Pro
我們也想利用閃存和SSD存儲
因爲幾乎我們所有的產品都使用SSD
最後 其構建有加密作爲主要功能
從最開始到現在我們將這個想法變爲現實
你可能會想那HFS+怎麼辦
我們目前把HFS+作爲主文件系統發佈
但其最初設計到目前幾乎有30年之久
你們當中有多少人希望我們再發布30年的HFS+？
很好 所以HFS+設計於
軟盤和硬盤代表最新技術水平的時代
自此世界改變了很多
現在我們使用SSD 而且其它下一代存儲技術也不斷髮展
HFS+的數據結構相對來說也是單線程的
所以B-trees要依靠大分塊來訪問或改變它們
並且數據結構也相對死板
我們的意思是 像是HFS+中的文件記錄或目錄記錄
差不多相當於其他文件系統的索引節點
是固定的 這是爲了添加新的字段來擴展文件系統
加入新的功能我們必須付出代價
那就是向後不兼容的卷格式改變
我們的意思是如果我們給HFS+添加新功能
回到10.5版本 然後附加那個相同的文件系統
這會發生什麼？
所以如果我們關心向後兼容
以及向前兼容我們開始考慮
也許打造完全嶄新的東西是有意義的
所以我們考慮出新的東西
我們想要的是爲Apple產品專門設計和優化的東西
其他文件系統良好地執行着其他目的
尤其 文件管理器或者企業級別存儲服務器有很多的功能
對於Apple產品沒有太大意義
我們通常在所有產品上使用單個存儲設備
而且我們的規模廣泛
在Apple Watch上你有更少的DRAM和存儲空間
與Mac Pro相比Mac Pro有數十GB的
潛在DRAM以及數TB的存儲空間
所以我們想要靈活動態的東西
而且在那些平臺上運行
我們想打造的其它東西
我們想新加並增強安全功能
我們現在已經在iOS上發佈了HFS+的一個版本
使用每文件加密
所以在存儲空間上每個文件都是不同加密的
不同於這個文件系統上的其它任何文件
我們想更進一步
我們會在稍後的展示中深入談談這些功能
最後 我們想加入一些新的通用文件系統功能
是應大家要求而且我們認爲是十分重要的
對於我們平臺的未來
在我們講這些新功能之前
我想給大家簡短介紹一下
Apple存儲軟件的樣子
在文件系統和存儲方面我們會談論HFS+
但我們涉及的範圍不止是HFS+
這裏實際上有很多輔助技術
構成了我們的存儲軟件
在一開始我們有HFS標準
這幾乎至今有30年之久
若干年後我們添加了HFS+
不過我們加入了死機防護
我們還加入了區分大小寫變體的日誌
我們還增加了CoreStorage這給了我們全盤加密
以及Fusion Drive這將SSD的速度與
硬盤的容量相組合
我們不能忘記所有針對iOS的變體
我們有針對iOS的HFS+變體以及支持
剛纔談到的每文件加密的變體
所以我們的目的是所有這些技術
都被一樣東西所取代那就是Apple File System
我來稍微談談Apple FileSystem中的一些新功能
這個簡明的視圖囊括了我們現有內容
我們有一些改進的文件系統底層技術
HFS兼容性 空間分享克隆文件和目錄
快照和快照恢復
一項我們稱之爲目錄大小快速調整的功能
原子級安全存儲基元以及加密
你不必把它們都記下來
我們會在下面的幻燈片中進行深入講解的
首先來談談一些改進的底層技術
改進的文件系統底層技術
首先閃存和SSD優化
在我們所有的設備上在我們所有的iOS設備上
而且很多Mac上是內置有SSD的
我們想盡可能地對固態硬盤進行優化
其還有死機防護功能APFS或Apple File System
採用嶄新的寫入時複製元數據方案
所以每個元數據寫入都寫入到穩態存儲上的新位置
我們將其與事務處理子系統相組合
這保證瞭如果斷電如果機器死機
或糟糕的事情發生你會看到一致視圖
關於之前的磁盤內容或者什麼變更都看不到
我們有現代64位原生字段
所以索引節點號擴展成了64位
我們有時間戳現在也是64位
我們支持納秒時間戳粒度
我們也支持Sparks Files在Apple File System上是首次
所有指向磁盤上分塊實際位置的
文件和目錄記錄也擴展成了64位
我們的數據結構也是可擴展的而且允許未來擴展
所以我們討論HFS+的一件事是
其數據結構相對死板
在APFS或AppleFile System上
代表核心索引節點的數據結構現在是靈活的
所以字段是可選的或我們可能尚未將其創造出來
所以我們在過程中可能選擇添加的新字段
會被正確識別成不支持
或是我不清楚你是否將那個存儲
附加到當前版本的macOS Sierra
這樣我們可以添加新功能
不需要擔心會破壞掉向後兼容
這還允許我們擁有可選字段
在一些系統上單是文件的存在
就足夠傳遞出一些信息
如果你有0字節的文件你不一定需要
所有機器指向哪個分塊在磁盤上
因爲它們不需要所以這些字段是可選的
這也優化於AppleSoftware生態系統
我們想添加功能並優化API
這對我們平臺的向前發展極其重要
我們也有低延遲設計
在文件系統中 延遲通常是延遲與吞吐量之間的折衷
我們選擇傾向延遲這一邊
這麼做是因爲我們想讓你的應用
當用戶在桌面上點擊應用或在手機上按下應用時
你想讓應用快速出現響應迅速
而且有非常明快的動畫
這個的原因是當你進入文件系統
我們想確保你會盡快得到你想要的回答
最後我們有原生加密支持內置於系統內部
我們提過了 在HFS+上使用的是每文件加密
不過它們是通過擴展屬性存儲在磁盤上的
在Apple File System上並非如此它們現在就如頭等公民一般
是文件系統內部的一級對象
這就是底層技術的略微介紹
HFS兼容性
如果你們的應用在HFS+上運行良好
我們打算讓它們繼續運行
不需要你那邊進行任何更改
Apple File System會支持並替換HFS+的功能
這裏有個星號
因爲有三個功能我們不會繼續支持
一個是交換數據另一個是Search FS
然後第三個是“時間機器”的目錄硬鏈接
不過其他剩下的API和行爲都會得到支持 和HFS+一樣
現在我想稍微講講空間分享
這是Apple File System上新添加的一項功能
我快速調查一下在座的有多少人
有Mac或者在Mac上使用一個以上的分區？
非常好 我們也是在內部我們做的一件事
是我們想讓開發版本的OS在一個分區上
我們想讓穩定發佈版本在另一個分區上
或你可能選擇將主目錄放在一個分區上
其他你不在意的不同數據放在另一個上面
不過我們得知了一件事通過分析
來自用戶選擇性輸入的數據收集
以及向Apple設備報告的統計數據
大多數終端用戶不這樣做他們只有一個分區
他們不做的原因是這很困難
你必須清楚知道如何給磁盤佈局
在你設置的時候而且更換它是比較昂貴的
此外 一個分區上的空閒空間如你所知
不會轉換成另一分區上的可用空閒空間
所以我們使用名爲空間分享的功能來解決該問題
我們看看這個例子
我們會在流程中說明這項功能
假設你在下載最新最棒的貓咪視頻
從朋友那裏得來的在網絡上用AirDrop下載
假設文件變大越來越大
事實上大到你的空間都被佔滿了
在你運行的那個分區上
這種情況下你做不了多少事情
若空間佔滿那就是佔滿了
你可以做的一件事是之後馬上完全銷燬
那個分區然後擴張分區1
我們來看看
我們可以銷燬分區2分區1擴張
現在你有足夠的空間來繼續下載貓咪視頻了
但這也很不靈活而且會帶來一些問題
如果你下載的文件不在分區1上
而實際上是在分區0
這種情況下你會下載文件
越來越大就算你有空閒空間
或者願意銷燬分區2上的內容
我們可以銷燬它不過這樣分區0不會擴張
因爲它並不靠近任何我們剛纔
騰出來的空閒空間
所以我們認爲這是可以使用空間分享解決的問題
在Apple File System中我們想出了這一基本概念
我們稱其爲容器很合適的名字
因爲它包含了卷或單個文件系統
在這個實例中Apple File System的容器
代表了最低級別的功能
這個封裝了我們的塊分配器
以及我們的死機防護子系統
假如說我們有分區0在分區中佔有一定
數量的空閒空間
卷可以擴張或縮小
但在所有這些情況下空閒空間會動態地調整成
在你進行請求時可用的大小
還可在容器中創建一個以上的卷
這會逐漸佔用更多空間
如果你想在這個時候
擴張卷0你就能做到
如果你詢問系統中還剩多少空間可用
綠色長方形底部的區域就是
開發者們 要注意
這個東西稍微不同於
你之前計算空閒空間的方法
如果你使用一些範例例如使用總共存儲大小
減去已用空間來得出空閒空間
這不會再起作用了因爲容器上的
其他卷也在參與空間分享
此外 你也沒有必要將所有已用空間加起來
接下來 我請Dominic上臺
它會給大家講講克隆文件和目錄
嗨 我叫Dominic我將講解一些
我們在APFS中有的其他高級功能
首先 我們來談談克隆文件和目錄
這裏我們有一個文件TOP_SECRET_APFS.key
這在Eric的主目錄中
它引用了兩個數據快
現在如果Eric想做這次展示的檔案
它在這一時刻中存在着他可以複製數據
通過全部讀取然後再寫出來
這很明顯會消耗CPU電力以及磁盤空間使用
相反 在APFS上你可以克隆文件
通過克隆文件你複製了數據的引用
而不是實際數據
所以很明顯會更快而且如果是大文件
你不會使用兩倍的空間
你使用的是大小完全一樣的空間
外加用於數據額外引用少量遞增空間
克隆在文件系統中能保證
如果在原件或克隆上進行修改
文件系統會將那個數據寫入新的位置
所以克隆原封不動
所以這一點要着重記住
當你有克隆時你在克隆的時候
你沒在使用任何額外空間
隨着你繼續進行修改你會開始使用越來越多的空間
此外 因爲APFSiOS和macOS
支持應用程序捆綁包中的文檔
APFS還會允許你克隆整個目錄層級
文檔捆綁包是一個目錄
其內部包含着一套文件
APFS可以原子級別地克隆它
接下來我們談談快照
這裏我們有文件系統的另一個代表 其中有兩個文件
BikeRacing和CoffeeOrigins
BikeRacing有兩個數據塊CoffeeOrigins是一個
如果我們捕獲文件系統的快照我們現在有一個分離的
可獨立掛載的只讀的文件系統副本
這代表在捕獲快照的那一時刻文件系統中的數據
跟克隆很相似 如果在活動的文件系統中進行寫入
文件系統會將那個數據放入新的位置
保留快照的完整性
同樣的 如果我們刪除CoffeeOrigins.key
嘗試清空一些空間文件系統無法回收那些數據塊
因爲如你所見快照的文件系統
繼續引用這那些數據塊
這是一個很重要的考慮
開發者在快照上工作時需要留意
因爲當一個文件被刪除如果它存在於
快照捕獲的時刻那數據塊就無法回收
所以快照可以致使你使用所有的磁盤空間
如果你不定期回收它們
我們預計開發者可能會將快照
用於獲取穩定只讀的數據副本
將其用於備份不過我們也想知道來自
開發者的其他反饋關於快照的其他可能用途
所以請在12:30到實驗室和我們見面
讓我們知道你會如何使用快照
現在我們談談快照恢復
這是APFS支持的另一項功能
我們有相同的文件系統狀態
不過我們決定不要這樣
我們想恢復這基本上是全局撤銷
我們想回到之前捕獲這個快照
那一時刻的文件系統
你可以標記文件系統恢復到快照狀態
下一次掛載的時候
文件系統會返回到捕獲這個快照的那一時刻
之後允許你繼續從那時開始進行更改
你能看到CoffeeOrigins.key回來了
而且在其他文件上做出的更改也被丟棄了
快照會繼續存在
而且你可以無限次數進行恢復
好了 我們來談談目錄大小快速調整
這項功能回答了一個問題
那就是目錄層級會使用多少的空間
應用程序會經常需要計算這個大小
用於操作大小調整給用戶提供進程
這樣做的一個明顯方式是打開目錄層級
遞歸性地迭代所有的內容
然後查看所有項目的大小加在一起
當然 用戶會非常樂意更快一點得知那個答案
在下一張幻燈片上
如果你把注意力集中在屏幕的左邊
當Get Info面板顯示出來你會看到上面寫着 計算大小
幾秒鐘之後就會填充上大小
這是我們想提升的地方
文件系統可以跟蹤它
很明顯 你可以保存目錄層級的大小
外加目錄本身不過這有一個主要問題
如果安全地在鏈上更新父目錄以及父目錄的上級？
我們深入到了文件系統的內部
不過當你在修改時鎖定了子目錄
你無法再鎖定父目錄應爲這會違反鎖定順序
文件系統總是會從父目錄向子目錄鎖定
從來不是從子目錄到父目錄
如果你反着來做就會出現死鎖
而APFS繞過了這個問題
如果問題是將大小和目錄一起保存
那我們將大小保存到別的地方
所以通過分隔保存大小
我們可以使用原子級操作來將大小更新在
由文件系統所維護的單獨記錄中
而且不會違反任何鎖定順序
額外的大小記錄會帶來少量增量成本
不過這基本與IO一起可忽略不計
好了 接下來我們要談談原子級安全存儲基元
第一個例子只是一個基本文件
這是當今安全存儲怎樣在普通文件上起作用的
這裏我有MakeMoneyFast.key
我想出了一些聰明絕頂的新方案
能快速賺錢
當應用程序保存那個數據時
它會被寫入邊下的一個臨時位置
當應用程序得知一切都寫好
並安全存在磁盤上它會請求文件系統進行重命名
文件重命名一直都是原子級的
文件系統保證要麼完全發生
而且是安全的要麼根本不發生
此外 文件系統會負責刪除
文檔先前的版本
這對普通文件來說非常好但如果你有
文檔捆綁包該怎麼辦？
我們這裏有一個文檔捆綁包ClutchConcertReview.rtfd
這是一個目錄其中包含着文檔的資源
今天會發生的是假如我去看Clutch表演
他們的表演十分出色然後我更新我的評論
這個改變寫出來了但現在發生的是無法
將一個目錄在另一個目錄上面進行原子級重命名
因爲POSIX語義不允許這樣
如果有東西在目的地內部
我們開始玩一個脫殼遊戲
首先 將文檔移動開活動的文檔
這時如果出現什麼差錯然後應用程序崩潰
或者系統斷電用戶數據就消失了
之後 應用程序將數據移動到位
最後 它要負責刪除目錄的先前版本
文檔捆綁包
所以這不是原子級而且不安全
這個問題困擾我們
很長時間而且我們想改進它
在APFS上我們推出了新的系統 叫做renamex_np
用於非POSIX 這允許目錄的原子級安全存儲
現在當應用程序將數據寫入其臨時位置時
並請求執行重命名操作APFS會原子級地負責交換
並刪除文檔的先前版本
所以現在是原子級的並且安全
當然 作爲開發者你可能不會藉助於
這種低級的系統調用
因爲已經爲大家在Foundation中採用好了
所以你會在APFS上享受到這個改進行爲的益處
接下來 我將談談加密
就如Eric所說有了HFS+
在Mac上 我們使用叫做CoreStorage的層 位於HFS下層
提供全盤加密以及其他內容
這是一個相當複雜的層而且功能很多
在iOS上我們有不同的變體
保存加密密鑰和有效擴展屬性
這些加密密鑰會與
iOS設備上的加速AES硬件一同協作
來提供每文件加密
這是個有點複雜故事有兩個非常不同的代碼庫
在APFS上 我們想嘗試提供更完成的故事
在我們所有的產品上
APFS支持多種級別的文件系統加密
不過首先最簡單的級別
我們一開始就做好了那就是沒有加密
所有的數據都是以純文本寫成
所有數據和元數據都是以純文本寫入磁盤中的
下一級別是每個卷配有一個密鑰
所有敏感的元數據和數據都是使用相同的密鑰加密
這基本上相當於全盤加密
我們支持的最複雜級別是多密鑰加密
這裏 所有敏感的元數據是由
單個密鑰加密密鑰不同於用於加密
單個文件的每文件密鑰
此外 由於快照和克隆的工作原理
APFS支持每盤區加密
所以文件的每個區域都可以使用自己的密鑰加密
這是獨一無二的 而且沒有其他文件系統支持此類功能
此外 這允許我們統一我們的加密故事
在我們所有的平臺之間
好了 之後我將交給Eric
好了 現在我將快速展示
WWDC 版macOS Sierra上的Apple File System
可能最簡單最快速的試驗Apple File System的方法就是
使用磁盤鏡像我們首先那樣做
你能看到在命令行上輸入了hdiutil create-fs APFS
這會指定 給我創建APFS類型的磁盤鏡像
我們指定大小然後進行稀疏束
這會出現警告因爲這是尚在開發中的項目
我們希望你清楚
你使用的東西目前並非是100％完成的
這時它會提醒我我說是
你這就創建出磁盤鏡像了如果我附加
你可以在桌面上檢查它進行Get Info
你能看到文件系統的類型確實是APFS
這可能是最簡單的方式如果你只想
得出某個東西來嘗試
接下來 我想展示一些其他
我們加入的更高級功能
關上它
這裏我有兩個優盤它們只是普通的優盤
你可以從任何標準辦公用品商店買到
我插入一個
其中一個是HFS+格式另一個是Apple File System格式
在這兩個上面都進行Get Info
這樣在操作過程中你能看到空閒空間
這個時候我有意大利旅行的一些演示照片
這兩個的目錄層級中都有不少存儲空間
首先我們開始複製HFS卷中的
最新版iTunes然後在APFS中也是同樣
開始複製 進行中
你能看到這裏的進程條不過APFS已經完成了
因爲它在後臺使用克隆
Finder已經採用了所有新的克隆行爲
所以如果你進行復制Finder會自動替你
在後臺進行克隆
然而HFS還沒有完成
好了 我可以用演示照片做同樣的事
你在這裏能看到這裏有幾張照片
它們全是幾MB的大小
注意這裏的空閒空間3.35GB空閒
如果我進行復制這實際上會替我克隆
你會看到空閒空間根本沒有減小
接下來我將展示捕獲快照
這用叫做SnapshotUtil的工具
這會在公測版發佈之後供大家使用
抱歉 這個要作爲根運行
好了 現在我創建了一個快照我能用SnapshotUtil-s檢查它
你能看到它現在識別出APFS_Snap
我在這次演講之前創建了一個掛載點
我會掛載這個時候的快照
你能看到這個快照出現在桌面上了
這包含系統文件的只讀視圖
與捕獲快照時候的樣子相同
現在 在APFS卷中我將創建一個臨時文件
大家好 我是臨時文件
保存 關閉你能看到它在這裏顯示
在APFS卷中這是掛載的讀寫
但在快照中不存在
相應地 我還能刪除一些演示照片
將它們移到垃圾箱 然後刪除
空閒空間實際上還是沒有減小
因爲現在它們被快照的存在所固定
如果我想刪除它們我還要刪除快照
好了 這簡短展示了AppleFile System的實際效果
好了 我們來談談一些新的API
我們爲支持AppleFile System而添加
首先 我們預計可能大家會熟悉這一個
如果你使用Foundation或FileManager
這兩者都得到Swift增強如果你用copyItem或replaceItem
它們會採用克隆或安全存儲語義
我們剛纔自動給你描述了
你不需要做任何事不費任何功夫
它會自動弄清你使用的文件系統是HFS+
還是Apple File System而且只有在合適時使用行爲
但是 如果你斷定Foundation或FileManager
無法提供你所要的確切內容
你可以到下面 我們有一個叫做libcopyfile的庫
這個支持深層級的複製
我們在有克隆功能之前
已經用它很多年了
複製文件支持新的位叫做COPYFILE CLONE
這與其下方的5或6個位相同
我們決定將其選擇性加入
因爲如果你使用像這樣的專門庫
你未必想要ACL和擴展屬性
以及剩下的內容完完全全地複製過來
而克隆會隱式地複製所有那些東西
這個庫也會自動爲你調用克隆
如果後端文件系統支持
如果不支持 那它就會繼續像往常一樣運行
這些就是新的安全存儲API
renamex Np和renameatx Np是新的系統調用
支持安全存儲基元
你可以在Man Pages上使用在macOS Sierra版本中
如果你想去看一下Man Page它們就在這裏
這些也是克隆API
所以克隆文件及其變體支持克隆文件和目錄
說一下兼容性我們認爲最簡單的方式
訪問Apple File System鏡像就是使用我給你展示的hdiutil
目前只在macOS Sierra上的
命令行中可用作爲開發者預覽版技術
還並未特意地完全爲Disk Utility做優化
所以最快的方法是使用hdiutil create-fs APFS
你可以得到磁盤鏡像然後附加它
你還可用diskutil APFS增加容器
創建容器添加捲 刪除卷
任何你想對容器本身進行的低級操作
最後 我們還有FS檢查這是我們在研發的功能
這個能夠驗證文件系統
也可以進行修復
所以還會繼續開發該功能
macOS Sierra中APFS上目前的一些限制
這隻會在數據捲上支持
現在不支持從AppleFile System啓動
現在Apple FileSystem不支持“時間機器”備份
FileVault和Fusion Drive支持還尚需等待
當前的卷格式只能是區分大小寫的
如果你不確定你的程序是否需要不區分大小寫
請試一下創建磁盤鏡像或設置在
Mac上的分區裏試着證實它並將你的應用
在Apple File System中運行然後告訴我們它的效果
其他對兼容性的備註
Apple File System無法通過AFP分享
如果你想使用文件分享我們建議你使用SMB代替
作爲未來首選的文件分享機制
OS X Yosemite或更早版本
將無法識別AppleFile System卷
所以請不要把AppleFile System實例
帶回到OS X Yosemite或更早版本
你必定會碰到你不想回應的對話
所以macOS Sierra會有開發者預覽版的
Apple File System
這會是開發者預覽版技術
一旦macOS Sierra於今秋髮布
現在你可能會好奇我們有什麼樣的推出計劃
各位如何在你們設備上獲取AppleFile System？
我們會討論這個的
升級到Apple File System
你想要這些我們展示過的出色的新功能
那你怎樣獲得它們？
一個可能方法是要求所有人
所有用戶備份系統保存起來
確保所有東西都絕對安全
然後擦除卷擦除設備
還原 放入新的OS然後從備份中還原
這個過程會花數小時
然後期盼所有東西在還原後
都完好如初
我們不會這樣做
相反 Apple會提供就地升級路徑
從HFS+到Apple File System
在此期間 用戶數據仍保持在其原來位置
Apple會將嶄新的APFS元數據
寫入HPF+空閒空間我們這麼做是爲了死機防護
這個操作可能會耗時幾秒或者幾分鐘
在這段期間如果設備斷電 死機
任何發生的糟糕事情我們想要設備上的數據
安然無恙彷彿什麼都未發生過一樣
所以Apple File System Converter會盡可能以原子級別執行操作
這不是完全瞬時完成的
但隨着操作持續進行
如果設備死機
我們的打算是使其完好如初 歸於原樣
Apple File System 將於2017年在所有設備上以默認程序發佈
總而言之
Apple File System會是默認的文件系統
用於2017年的所有Apple產品
它超現代 有死機防護支持空間分享
我們支持克隆和快照增強的數據安全功能
像我們剛剛討論的多密鑰加密
它也專門優化和設計
用於我們所有設備裏的Apple生態系統
你可以得到更多關於Apple File System的信息
在我身後的URL中
那裏會有開發者指南以及一些示例代碼
這樣你可以看到克隆文件和目錄的實際演示
給在座各位說一些要點
Apple File System即將到來 2017年將在轉眼間來臨
我想請大家將你們的應用在Apple File System上測試
用你們昨天獲得的macOS版本
試着在Apple File System上運行你們的應用
請告訴我們這一過程的進展如何
如果你要報告任何錯誤請使用Bug Reporter報告
通過傳統的手段這樣我們可以調查
我們都希望大家會像我們一樣喜歡它
還有一些相關演講
如果你有興趣學習更多關於安全功能的內容
在我們的平臺上特別是iOS
我們建議你可以看看iOS Security實際工作原理
將於今天4點鐘在本會議廳開始
至此 這就是Apple File System
我們迫不及待想知道各位會如何使用它