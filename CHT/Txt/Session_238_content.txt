測量值和單位
嗨 我是Daphne Larose
我是Foundation團隊的軟件工程師
歡迎來到我的講座
謝謝仍然堅持在這的你們
我知道現在已經晚了
當我想到應用
我們通常和測量值關聯的
我不知道你們但是我首先想到的
是轉換應用
講得通 把一個單位轉換成另一個
但是我想知道是否有其他應用
也使用測量值但是是用不那麼明顯的方式
我不知道 但當我思考 測量值
這很有趣 對嗎因爲我們一直在用它們
我們只是一般不會明確地想到它們
它們會以一種意料之外的方式出現
其中的一種方式是它們不以單位的形式出現
這很普遍不管環境是什麼
假設我在法國 我在用一個應用
是計算路程長度
我期待這個測量值會顯示公里
但是它顯示英里
這就像 嗯
這是不和諧的不是很好的用戶體驗
所以在這次演講中我們會向你介紹
一系列可以幫助你確保這不會在你的應用中發生的API
如果我們再次思考這個問題關於其他應用
我們和測量值相關聯的應用
我提到過轉換應用這還是真的
但是其他例子可以是遊戲 對嗎？
所以今天我們會談談我在工作的遊戲
它叫做Jammin' in the Streetz有一個z
因爲z很酷我想要我的遊戲酷
這個遊戲的假定
是讓我們的玩家從一關跳舞到另一關
我爲這個遊戲設定了一些目標
一 我希望這個遊戲很有趣
像是有史以來最有趣的一個遊戲
二 大量表情符號 因爲我愛表情符號
三 需要在世界範圍內可用我想要它出現在每個地方
當我們思考一些遊戲可能包括的內容
每一輪會被稱爲一個jam會話
在jam會話裏 它追蹤
玩家從一關到另一關所花的總時間
他們移動的距離
他們進行的舞蹈移動
甚至像是移動的速率
但是讓我們想想我剛剛提到的事
注意到什麼嗎？
它們都是可測量的它們都是可量化的 對嗎？
如果我們現在停止這次演講
突然拿出電腦嘗試寫代碼
我們怎麼表現這？
我們可以用雙精度浮點來表示它們
這是對的
簡單 這樣做的問題是
如果我們在這麼做的時候漏掉了一些上下文
讓我們看一個例子
我們有我們的角色
我告訴過你 很多表情符號我很喜歡
我們的角色有月球漫步因爲爲什麼不
他們月球漫步了一段距離
如果我們儲存距離爲5
就像 嗯 好吧但是5究竟是什麼意思？
這帶來這個問題5什麼？
但是如果我們說5英尺這就像是 好的
這是有意義的
現在它在物理空間中有了語境
所以讓我們談談
Foundation引入的方法 或者說API
來精確的表示整個語境
你有一個新的結構
叫做測量值 它在單位類型上是通用的
我們會講一下什麼是單位類型
包含一個單位和一個值以及一個初始化函數
它酷的地方是你可以
有一個完整的語境來表達一個測量值
如果我們返回到我們的角色
假設在遊戲中
我們不只是追蹤移動的距離
我們還追蹤角色的剩餘距離
我們怎麼用新API這麼做？
現在我們可以把移動距離表達爲5英尺
我們還可以把剩餘距離表達爲
一個測量值 讓我們假設是6英尺
等等 你可以用它做些很酷的事
你可以把它們加起來得到總距離
是一個11英尺的測量值
你可以乘以它們得到你想要的值
你可以除以他們得到一個類似的值
這很好
如果我們返回來思考單位
什麼是我們想和單位關聯起來的？
首先 每個單位有一個符號 容易地
單位有量度
一個例子是對於長度量度
可以用 像是 英尺是長度單位對嗎？
單位間可以互相相等
1英尺大約等於0.3米
我們現在有API來表示一個單位對象
如果你注意的話
之前我說每個單位有一個符號
在API中我們在這表示符號
我們沒有在這顯示量度和相等
因爲不是每個單位都能等於另一個
而且不是每個單位都是有尺寸的
但是至少每個單位都有符號
所以我們在這它表示它
但是如果我們返回到量度的概念
什麼是量度？這是什麼意思？
量度是單位的種類
可以被不同單位表示
當我們想到長度時做爲一個例子
長度可以用公里 英尺 英里等表示
量度還有基本單位
回到長度的例子長度的基本單位是米
你還可以在量度內進行轉換
在單一的量度內
你可以把公里轉換成英尺或反過來
米到英里 等等
現在我們有API來表示一個量度
你看到在這量度是單位的子類
這表明它通過繼承獲得符號屬性
我們有一個轉換器屬性
我會深入地看一下單位轉換器
但是基本上它定義這個單位
和它的基本單位之間的轉換
我們有初始化函數 需要符號和轉換器實例
我已經提到過每個量度有一個基本單位
所以我們有一個類屬性會返回那個單位
一件重要的事需要記得
每個量度實例 屬於一個單位並且自身是一個單位
有了這個我們引入的新API
酷的事是
我們提供170多種單位
你可以立即使用
你甚至無需自己定義它們
你只需要使用它們
像是 在這次演講之後
大部分單位是依照國際單位系統
所以它們使用你已經習慣的單位這很酷
讓我們看一個例子
我們有長度量度它有一系列的單位
是類屬性表示這些量度
如果我們返回這裏
量度實例實際上是單位
任何時候你調用這些屬性
你獲得一個長度單位的實例
這些實例的區別是
第一 它們的符號不同
第二 轉換器的定義不同
一個我們提供給你的所有類的概述
所有不同的單位類型
記得我說過有170多種
試着用一用它們
但是我們有一些很酷的一些常用的單位類型
像是面積 質量 溫度 長度
但是也有一些不常用的像是光照度和電流
但是聽起來真的很有趣 若你玩一玩它們
讓我們返回到我們的移動距離和剩餘距離的測量值
這是我們已經見過的代碼
現在我們要註釋最後兩行
因爲我們要重新定義它們
我們只剩已移動距離
但是我們定義剩餘距離使用相同的值6
但是不是傳遞英尺作爲單位
我們傳遞公里
現在事情開始變得危險
因爲我們要把已移動距離和剩餘距離加起來
但是一個是英尺 一個是公里
這對總距離說明什麼？
它的單位是英尺還是公里？
講臺會在5秒內爆炸嗎？
我不知道
但是 不 它不會
其實發生的事是結果的單位是基本單位
也就是米
關於測量值酷的事情
是暗中爲我們處理了一切
你完全不需要爲此擔心
你可以用這些操作符就像普通的標量值一樣
你獲得期待的結果
現在讓我們再次假設我想要追蹤角色
因爲某些原因 因爲是在演示
我們只是打印字符串但是我想做些更時髦的事
同時更有功能性
但關鍵是我希望能夠
比較這些測量值現在你可以
測量值支持比較操作符使你能夠這麼做
如果我們要打印距離標記
我們會得到我們想要的剛剛開始
因爲測量值可以正確推斷
已移動距離比剩餘距離小
讓我們談談更多關於定義一個單位
因爲我們還沒有深入研究它
之前提過
單位總是以它們的基本單位定義的
有一個方法來描述這種轉換
和基本單位之間的轉換
我們會在進入單位轉換器的時候談論更多
重要的事是記得
轉換隻能發生在單一量度中
比如當你想到長度
你可以把公里轉換成英尺
但是你會嘗試把公里轉換成秒嗎？
在概念上這並沒有意義
在這個情況下如果你試着對測量值這麼做
會拋出
一個Objective-C或者Swift中的致命錯誤
記得我提過我們提供
170多種單位給你立即使用
有可能你不需要定義你的定製單位
但是如果你需要 只有在這時
你需要思考如果定義它們這很酷
你實際上可以用它們
那些已經提供給你的單位
但是如果你創造定製的單位
你要思考如何建立轉換器
酷的是
測量值可以幫你暗中處理轉換
即使是你定製的單位
它就是能自動地工作
讓我們談談定製單位
我們要爲遊戲定製一些單位
我們有jamz單位因爲我想
計算一個jam會話中的總時間
用叫做jamz的單位來計算
我覺得秒太無聊了
但如果你看看這裏 我們有UnitConverterLinear對象
它是什麼？我們還沒有說過它
讓我們返回來說說更多關於轉換的事
和基本單位之間的轉換
UnitConverter是根類它定義兩個方法
描述這個轉換
baseUnitValue(fromValue)和value(fromBaseUnitValue)
UnitConverterLinear覆蓋這兩個方法
併線性地定義它們
對這裏所有懂數學的人
它的形式是AX+B
A是係數 B是常數
如果我們返回到jamz單位
我們看到係數是30 一個標量值30
我們是說一個jamz單位等於30秒
在我們的線性函數中
無論jamz爲何值我們把它乘以30
所以一次jam會話共是4個jamz4個jamz
如果我們想把它轉換成秒
會是4乘以30等於120秒
你也可以反過來做
120除以30來得到jamz值
耶
假設我要定義其他定製單位比如長度
因爲我不想用英尺和米計算移動距離
我想用一些更有趣的東西比如hopz
所以這裏 相同的概念
1 hopz等於0.75米
我們在這定義方程
其他我需要的定製單位也是一樣
你現在知道怎麼做了
如果你還記得當我談到jam會話
我命名了一個測量值
是所進行的舞蹈移動的次數
不幸的是國際單位系統沒有一個量度
用來識別舞蹈移動
我不確定爲什麼
但是這是一個我們今天要自己定義的東西
我們有UnitDanceMove類
有一個基本單位wackyArmMovements
你在這看到
一個wackyArmMovement等於另一個wackyArmMovement
它的意思是另一種定義單位的方式
是多少個基本單位組成一個特定單位
這裏是一對一所以係數是1
假設我們想定義一個機械移動
我認爲它就相當於大概4個wackyArmMovements
CabbagePatch是3個wackyArmMovements
是的
當然沒有jazzHands的舞蹈動作的量度是不完整的
它等於2個wackyArmMovements
我認爲這是精確的我們會堅持這樣
現在讓我們返回並創建jam會話
我在早前已經概述過的
移動的距離 也就是已經進行的步數
會用我們創造的單位hopz
jamTime的單位自然是jamz
舞蹈移動的單位將會是機械
我們的角色當然會一直跳機械舞
舞蹈速率實際上會是米每秒
但是如果你記得
我們的測量值沒有用米或者秒的
所以我們要怎麼獲得那個值？
我們可以把已移動步數轉換成米
我們還可以把jamTime轉換成秒
現在我們可以返回一個測量值
是按照米每秒的
酷的事是隻需要幾行代碼
我們就可以完全定義我們的jam會話
現在我們知道怎樣表示測量值
和單位做爲模型對象這很酷
但是我告訴過你
我想要這個遊戲在每個地方可用
要這麼做我們需要格式化這些測量值
事情在這變得棘手一點
如果我們有我們的角色
我們不說跳舞了5英尺
而是說跳了5公里機械舞
硬核
如果我們想在全世界顯示這些那看起來會怎樣？
在加拿大 我們可以這麼寫
它以前被寫成5公里
然而如果我們用中文顯示這些
我們需要翻譯單位
在阿拉伯語裏我們需要翻譯單位並改變數字的顯示
來確保從右到左的正確順序
這些都是我需要手動在我的應用裏進行的邏輯
最後在美國 我們會說 公里？
那是什麼？那是什麼東西？
所以我不光需要處理轉換
在我的計算過程中
我還需要僅僅爲了格式處理轉換
這是我需要加進應用的額外邏輯
那這裏的解決方案是什麼？
你可以讓Foundation爲你做所有的事
我們有新的格式器叫做MeasurementFormatter
它格式化測量值和單位並且知道地區
所以你不需要擔心
讓我們看一看它
它是格式器的子類
如果你對其他格式器熟悉是一樣的概念
它有unitOptions屬性
我們稍後會談到更多unitOptions
它還有unitStyle
如果你熟悉其他格式器
短 中 長
它有一個可設置的地區
現在你可能默認使用
用戶的當前地區
這就是這個地區永遠的默認值
但是如果你需要明確設置它你可以這麼做
它還接受一個定製的numberFormatter
假設你想要你的測量值中的值
被用科學計數法顯示
你可以提供一個定製的numberFormatter來爲你這麼做
它還有方法接受一個測量值對象和一個單位對象
讓我們多談一下單位選項
酷的事是它開箱可用 根據默認
這個格式器使用你的用戶所在地區偏愛的單位進行格式化
所以你甚至不用思考這些
它還考慮其他事比如目的
如果你在計算一個長度
關於路程距離而不是身高
你會想要根據語境用不同的單位
所以我會看看一些MeasurementFormatter提供的選項
一個是providedUnit假設我們有一個情況
我們想傳入5公里的測量值
但是我們的地區是美國
通常在美國我們會爲路程
把它轉換成英里因爲我們通常用英里
但若你設置providedUnit
它會保證不論你傳入什麼單位
都會被格式化成你設置的這個單位
還有一個動作叫做自然比例尺
這對UI相關的東西很有用
如果你的應用是在watch上運行
你很擔心屏幕尺寸
那麼不是放1000米
會需要很多你的屏幕
你實際上可以把它格式化成1公里
另一個是不帶單位的溫度
假設你有個測量值顯示90華氏度
但是你不想要顯示華氏度單位
你可以這麼設置得到你想要的結果
讓我們用一些例子來玩一玩
我們有我們的格式器
我們有我們的原始距離測量值
那是5公里因爲這是我們的角色跳舞的距離
現在我們想從中獲得一個結果字符串
我們會看到結果的單位是英里
最酷的事是隻用了三行代碼
我們不但得到了想要的結果
而且不需要對格式器做任何事
開箱即用不需要任何設置
它知道應該做什麼
現在假設我們給它我們的定製單位hopz
以及測量值 MeasurementFormatter它沒概念
它不知道hopz實際上是一個單位
但是我們創建了hopz距離
我們把它傳遞給格式器
它實際上還可以爲我們暗地裏進行轉換
我們不需要做任何事
現在讓我們假設我們有定製單位
我們要人們看到它所以設置providedUnit
我們會給它一個測量值這會有我們的hopz單位
現在結果會使用那個單位
這個情況是個很有趣的情況
因爲我們不但提供一個定製單位
我們還提供定製量度中的定製單位
在這一點
這就像 不是很確定MeasurementFormatter會做什麼？
好吧 它做的正是我們期待的這很好
現在我要把講臺交給Foundation團隊的另一成員
他會展示如何使用測量值
並且可以在遊戲的高分功能中使用和格式化它
謝謝
謝謝Daphne
我是Peter Hosey
我也是Foundation團隊的一名工程師
像Daphne說的這是我們的高分列表
我們在這顯示遊戲的關卡列表
當你點擊一個時你看到基本事實
關於關卡 名字 它的一個圖片
你看到一些關於玩這關的重要信息
你需要知道的事
並且你還會看到你的統計關於你在遊戲中的表現怎樣
你看到一些東西 比如你的高分做了多少wackyArmMovements
你能看到你跳了多遠多快
但這些都只是數字
他們缺少量度
所以我們不知道像是6811是多遠？
現在你自己可以實現一整個單位系統
你最開始可以只追蹤一個單位
直到最後追蹤所有這些數字
你可以再構造更多比如一個單位轉換系統
能理解不同地區
並自動翻譯單位名
這有很多工作不是嗎？
像Daphne說過的讓Foundation爲你工作
我們現在有測量值和單位
以及在Foundation中的MeasurementFormatter類型
讓我們在我們的遊戲裏用它們
我們要創建定製單位
Daphne向你們展示過像是這樣
我們有一些長度單位和速度單位
我們有4個定製的舞蹈移動
並不來自Foundation
我們有我們的定製單位
我們能把這些帶到我們的模型中它是這個關卡結構
有我們關於這個關卡的一些基本事實
幷包括角色的統計 這只是些數字
讓我們把它們轉成測量值
現在我們有舞蹈移動的測量值一個長度的測量值
還有一個速度的測量值
因爲我們改變了屬性我們也改變初始化函數
現在可以用測量值來創造一關了
我們想在列表視圖控制器裏做這些
這裏 針對這個視圖的控制器這是列表
我們的列表視圖控制器的請求是一個同步的API 它返回
一個JSON字典列表每關一個
包含所有信息
特別是包括角色的統計做爲數字
我們想要圍繞這些數字創造測量值
這是wackyArmMovements的數字
這是Hopz的數字
這是hopzPerJamz的數字
現在這些信息在我們的模型中
我們把它作爲測量值創建在我們的列表視圖控制器中
這是我們在列表視圖控制器中要做的唯一改變
現在我們可以看看詳情視圖控制器
它在這裏顯示這個視圖
並且爲每一關顯示這些
我們還可以在這用我們的新測量值
我們已經有了一個格式器
這是一個NumberFormatter它所做的是填充
到6個數字 用0來填充我們想保持它
但是我們想在其上開發
我們想讓它顯示單位
所以我們要再加兩個格式器
我等下會解釋爲什麼要這麼做
現在我們已經創建了它們
我們來到同樣的地方我們已經配置了數字格式器
是在我們的viewDidLoad方法中
這是從UIViewController繼承的我們在這覆蓋它
我們配置highScoreNumberFormatter
用我們的最少整數位數
現在我們要配置MeasurementFormatter
用我們的providedUnit它是wackyArmMovements
你在這看不出來 不是嗎？
用我們的NumberFormatter我們可以繼續填充到6位數字
我提到過我們新建了兩個新的MeasurementFormatters
讓我們配置另一個
這一個我們想用標準的數字格式器
所以我們不設置這個NumberFormatter
但是我們仍然設置它使用providedUnit
現在如果我運行它
歐
我配置了格式器
我現在需要使用它們給我的字符串
我們已經談過了一個格式器我們說從這個值得到的字符串
當它是一個數字時工作得很好但現是一個測量值
所以我們談談MeasurementFormatter
這隻需要修改一個單詞
其他的都完全一樣
對任何格式器都同樣工作
另外兩個我們直接從數字獲得字符串
你可以想象這不利於你的本地化
這裏我們也希望用一個格式器
所以我們會用我們其他的格式器這還是一樣的東西
這個情況下我們從測量值得到字符串
這返回一個字符串我們把它傳遞給標籤
現在我們可以運行應用
我們看到我們的定製單位顯示了出來
這是一個開始
但是我們還是沒有真正提供真實世界的語境
這是我們開始的目標
我們需要用真實世界的單位顯示這些
所以我們可以進行一些我們自己的轉換邏輯
但是MeasurementFormatter可以爲我們做這些
我們要創建另一個MeasurementFormatter
因爲我們有定製單位MeasurementFormatter
我們還要有能識別地區的MeasurementFormatter
我們創建它 和我們配置它一樣
除了我們實際上不需要做任何事
因爲MeasurementFormatter可以立即使用
自動轉換成玩家想要的針對他們地區的單位
這裏會變得有點棘手請對我有點耐心
我們正在調用一個格式器要求得到一個字符串
並把它直接傳給標籤
我們要做的
是我們將首先調用customUnitsMeasurementFormatter
得到距離的字符串
然後調用localeAwareMeasurementFormatter
得到它的距離字符串
然後用一個Swift字符串填寫
把這兩個放一起生成一個字符串
我們把這個字符串傳給標籤
我們爲距離這麼做了我們也爲舞蹈速率這麼做
這就是我們需要做的全部工作
用來顯示我們的兩個定製單位
和玩家希望的針對他們的地區的單位
真實世界中的距離
但是我們不需要停在這
因爲目標是讓這個遊戲到達全世界的每個國家
英里在美國很好我們在美國
我們看到英里
但是我們想確保它在每個國家都工作
所以我要用到一個Xcode功能
這是你方案的一部分我要在這編輯我的方案
我要複製方案
當複製方案時
會問我它的名字
我會給我的方案一個有特色的名字
現在給我的方案命名了
我要做一個簡單的改變在運行的裏面
選項標籤 應用地區
我要把我們的測試移動到外國
像是加拿大
現在我要運行這個方案
不需要改變應用代碼沒有模擬器的配置改變
只是改變方案
我們看到在加拿大它顯示公里
這就是我們要讓它工作所需的全部工作
有了我們新的測量值和單位
和在Foundation中MeasurementFormatter類型
謝謝
謝謝 Daphne
非常感謝 Peter
顯然這個遊戲會很流行
我很喜歡它
讓我們很快總結一下
我們看了這整個演講和演示
測量值和單位怎麼是模型對象
我們可以在應用中使用這很棒
我們還看到很容易格式化它們
只需要我們進行少量工作這很酷
最好的部分是我們免費得到所有的這些強大的本地化
不需要定義任何對象或選項
開箱即用
所以現在你不需要突然變成知道多國語言
或者改變你應用的任何邏輯和代碼來支持這些
你只需要直接使用它
如果你想要知道更多信息你需要訪問這個鏈接
這些會話已是過去式了
但是如果你們超感興趣我建議你們下載視頻
非常感謝