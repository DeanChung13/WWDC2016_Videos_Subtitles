設計出色的Apple Watch體驗
大家好
我是Mike Stern
我是Apple的用戶體驗推廣
今天很高興見到你們我要談談Apple Watch設計
在今天的研討會中我們要討論如何應用設計最佳範例
以及如何用watchOS 3新功能
來設計Apple Watch快速、精準、愉悅的體驗
但在此之前 我要先說一下基礎技術
畢竟你們中有些人從來沒做過watchOS應用的設計
Apple Watch應用有三個基本組成元素
分別是complication、通知和應用
complication就像小工具人們可以把它顯示在錶盤上
complication這個詞來自於傳統的製表業
是指鐘錶的功能除了顯示小時和分鐘以外
complication使設計、製造 和修理手錶
變得更昂貴、更復雜
可以說是名副其實
你們很幸運complication變得簡單了
在Apple Watch的開發上也更強大了
Apple Watch上的complication提供最快速的方法
讓人們獲取信息
並提供快速打開應用的方法
通知會告訴人們 重要事件他們可能會忽視的
因爲通知也是交互式的
所以它們能促進使用應用的人們之間的交互
最後 應用可以爲你的產品或服務提供更深層次的體驗
要提供complication或創建手錶專用的通知
你要先有一個應用
這三個基本組成元素是必不可少的
每個元素都起到一部分作用
在watch應用的整個用戶體驗中
那麼 比如說假如我用watch訂了晚餐
我可能得先按一下外賣應用的complication
打開應用
然後用應用下訂單
再然後 我很可能會收到一條通知
顯示預計送達的時間
在我等待外賣送達的過程中
我會時不時查看一下complication
看還要等多久
當訂單即將送達時
我可能還會收到另一條通知
最後 如果我還沒有給配送人員付小費
我可能也會收到一條通知問我是否願意付小費
這就是組成元素的基本功能
今天這個報告會幫助你瞭解如何設計每一個組成元素
但在此之前
還有一些更基本、更根本的內容我想和你們一起討論
即時間的概念
Apple Watch設計巧妙可以支持輕量級的互動
意思是人們能接收信息
並在短時間內執行
我以爲這是一個顯而易見的事實
但很容易被忽略
互動需要有多快 當你設計comps
或在模擬器裏測試你所開發的功能時
在設計應用時 你總想
發現一種更快、更簡單的用戶流
總能有一種優化方法
比如 很多內嵌應用就能很簡單、很迅速地導航
以前 在你開始健身之前 你要
先進入主屏幕 找到並啓動應用
選擇一個健身類型再選擇一個目標或重新使用
上次的目標 然後按開始
新流程就更簡單了
尤其對於使用健身complication的人來說
只需按complication
然後點開始 就可以了
現在快速啓動使人們不需要在屏幕上
選擇健身目標 並且移除了
獨立的開始按鈕
現在 絕大多數人都採用了這樣的健身方式 日復一日
所以 對這些人來說只需要按兩次就可以開始健身了
而且在健身過程中會顯示UI
這個UI也被優化了可以更快地進行交互
以前 人們要滑動七次屏幕
一是控制 一是各種健身指標
在這些屏幕之間進行跳轉要花很長時間
在watchOS 3中只有兩個屏幕控制和指標
幾乎不需要跳轉 除非你已經完成健身
或者你想休息一下
這就讓人們有時間關注其他更重要的東西
當跑步或騎車時
更關注你的節奏、步伐和呼吸
小心汽車和行人
可以欣賞風景 並讓自己看起來更酷
Apple Watch設計和工程師團隊在watchOS 3
這個版本中共同提出了三個重要主題
我覺得跟我們每個人都息息相關
這些主題都是方便查看的、可執行的、響應式的主題
方便查看說的是信息呈現可以立即理解
通訊必須清晰 不能受幹擾
應該只顯示最相關的信息
最好應用顯示的信息也是可執行的
意思是鼓勵人們採取物理行動來響應
你的應用所傳達的或更方便地讓人們
從應用或通知中使用功能
並且應用應該是響應式的
啓動時間和屏幕加載應該儘可能短
內容和數據應該總是最新的
並且UI反饋要及時
現在要讓你的應用更方便查看、可執行力更強、響應更及時
就要對watch OS中的導航模式和核心架構進行大幅度調整
新版Dock提供一個可瀏覽的集合
包含他們經常使用的具有實效性的、情景關聯的時刻
Dock中的應用仍然在內存中
可定期執行後臺更新
意思是能很快從Dock導航到應用...
且人們不用花很長時間等應用更新內容
一旦打開了應用
就可以直接在各屏幕之間跳轉
很大程度上縮減了跳轉時間
這些變更可以顯著減少整體交互時間
事實上 在watchOS 3中內部目標交互時間
已經從5秒縮減到了2秒
毫無疑問 當我第一次聽到這個消息時 我想
“這相當了不起”
我的意思是 我實際上還要花2秒鐘
來說“2秒鐘”這個詞
但真相是 執行任務
如查看遊戲分數、查看天氣情況、
或查看股票都可以而且都應該像那麼快
現在你可能不只花幾秒鐘來
查看天氣、遊戲分數或股票
但每次互動都應該只需要幾秒鐘而已
而且操作也應該很快
簡單的操作只需要單一的決策
就能在Apple Watch上順利運行了
人們應該設置一個計時器
或打開警告
或檢查提醒列表上的事項
在2秒鐘內或更短時間內
現在就算你不能把互動時間縮減到2秒
這種嘗試也會幫你發現工作流程中低效的地方
並找到解決方案
好了 現在讓我們談一下具體內容
關於如何開發優秀的應用、通知和complications
依我個人所見
complication是Apple Watch上最簡單、
最方便操作的交互
查看complication跟
擡起手腕看一眼一樣簡單
不需要額外的交互
這種交互無疑只需要2秒或更短
我們在watchOS 3和iOS 10中做出了重大變更
提高complication的關注度...
使complication的安裝更簡便並賦予它們更多功能
對於初學者來說 你們現可在iOS上用Apple Watch應用
瀏覽和配置complication了
這很有意義 因爲很顯然這種交互
至少需要2秒鐘
現在配置UI會顯示 精確預覽
complication在錶盤上的外觀
人們很容易明白complication是做什麼的
也能看到所提供的價值
Apple Watch應用也有錶盤圖庫
是用complication預設的
並且有一個專用的第三方complication部分
如果你已經做好了一個complication bundle
而且Apple Watch也已經安裝了你的iOS應用
Apple Watch用戶就會在此看到你的complication
若你的complication看起來很有用
人們只需要按一下就能安裝
將在後檯安裝你的watch應用
complication功能真是一種很不錯的方式
來提高對watch應用的關注
現在人們更容易瞭解
你的complication了
另一個重要變更是性能的變更
任何應用只要有complication
安裝在用戶當前錶盤上它就將一直在內存中
並在後臺定期更新
意思是 啓動時間將更快
而且應用數據應該也不會那麼陳舊
complication是一種很出色的應用啓動方式
而且它們所顯示的信息
會經常吸引人們想要了解更多
因此 這個過程得快
也就是說 看到現在的氣溫你可能會想
瞭解下週的天氣預報
或者 看到你的原始股正在盈利
你可能會想了解整個市場的狀態
complication的最後一個重大變更是更新頻率
在watchOS 3中你的應用可實現
每天更新50次complication
你可以控制更新的頻率和時間
因此一個旅行complication更新最頻繁
在航班出發和抵達前後
而運動complication可能會更新最頻繁
在你關注的比賽進行時
通過控制更新時間
必要時你的complication可以保持當前狀態
開發complication時請考慮到外在因素
和用戶活動模式會對實效性產生何種影響
complication更新的
所以 如果你要創建一個Apple Watch應用
你應該做個complication
這東西 這麼流行 肯定是有原因的
在手錶用戶和手錶製造商之間
雖然很複雜 但也值得我們付出努力
我希望我說的很得體至少是推銷給你們
製作complication的想法
如果是這樣的話 我想跟你們談一下
製作優秀的complication的必要條件
在設計complication時最重要的是考慮
選擇顯示哪些信息
優秀的complication會對那些問題作出回答
人們在日常生活中經常問自己的
幾乎每天開始工作之前我都會去跑步
所以前一天晚上 我可能會查一下
日出的時間
然後才定鬧鈴
起牀後 我想知道戶外的溫度
我就知道該穿什麼衣服去跑步
我還會查我第一個工作會議的時間
以便我有足夠的時間用來跑步
還會查一下交通狀況
確定我不用早點出發去上班
現在 這些問題的答案會直接影響我一天的計劃
如果就能得到答案
只需要擡起手腕
那麼complication會對我的生活提供真實和即時的價值
而且complications可以作爲一個很強大的動力
鼓勵你行動起來
執行力更強
比如活動complication
顯示我的健身進度 朝着我的目標努力
我能看到我是否一直在堅持完成目標
或是否要在下班以後帶着我的狗來一次超遠距離的散步
WaterMinder的complication顯示出我的進度
朝着我制定的日常攝水量目標
看起來似乎我有點兒落後了
所以我要抓住這個機會喝點兒水
請稍等
那麼 如果你只選擇一件事通過complication
與用你應用的人進行溝通
應該是什麼呢？
他們最想了解什麼
在日常生活中？
那個信息是否頻繁更新來保持趣味性？
有時候 這個問題的答案並不是很明確的
如果你不能完全縮減爲一條信息
你可以考慮讓人們自己做出選擇
CARROT Weather應用就如此
它讓你配置來你想看到的天氣信息
氣溫、溫溼度、風力、紫外線指數、
降水、降水概率或溼度
加利福尼亞的夏季幾乎從不下雨
所以完全沒必要查看降水概率
今天的概率是0％ 真是太驚人了
順便插句 我今早看了天氣預報
明天應該會下雨
所以要注意防雨
很及時
但在夏季的同一時期
紫外線指數是個非常相關的信息
讓complication自定義
是個很不錯的功能
CARROT Weather還實現了一個很棒的功能
就是使它的complication方便查看
每個元素 除當前氣溫之外
都使用了簡單而有意義的圖標來標記所顯示的值
而且並不會勉強塞入太多信息
因爲會增加更多的文本和圖標
文本和圖標太小了 很難看清
若你從未做過complication
你得了解一下complication元素
圓形、小模塊、大模塊、小實體和大實體
在watchOS 3中又增加了超大模塊和超大實體
我原來打算做一個音響效果但我沒時間
complication家族的每個元素
都由一個或多個complication模板組成
並對應指定的錶盤
顏色錶盤使用圓形complication元素
模塊化錶盤使用大模塊complication元素
和小模塊complication元素
簡單實體和精密計時錶盤
使用小實體complication
而實體和米奇錶盤
則使用大實體complication元素
全新的超大表盤要用
有人想猜猜看嗎？
對了
超大表盤用超大complication元素
你們反應很快
我希望你能把這些記下來
因爲你查不到這些信息
哦 我只是開個玩笑
所有信息都能 查到
從watchOSHuman Interface Guidelines中
這裏可以找到 所有信息
手錶應用設計相關的
我強烈推薦先看一下這個
重要的是你要嘗試做一些東西
使用每一個complication元素
這樣人們就可以在錶盤上用complication了 他們可能會很喜歡
當然 一定要用佔位數據
在complication中那是人們能看到的樣子的實例
當他們實際使用你的complication時
如果沒有佔位數據 人們就不可能會期待
你的complication有什麼功能
好了
你們看到了有些complication會提供更多空間
給更詳細的信息
在模塊化錶盤上
如果某人把你的complication放於中心
他們一定是經常關注你的應用所傳達的內容
你可以抓住這個機會再多提供點兒信息
他們可能會覺得有用
事實上 你可能想顯示完全不同的信息
基於complication元素
如果天氣信息對你來說真很重要的話
你沒有理由不裝兩個
CARROT Weather complication的實例在你的錶盤上
也許你會使用大模塊來顯示當前氣溫和天氣情況
用小模塊來顯示降水概率
即使你還沒想好要 顯示什麼信息
在你的complication中
你也可以做一個應用啓動器
Just Press Record這個complication
一個記錄語音備忘錄的應用其實就是一個應用啓動器
按它當然可以啓動應用但是還能開始新錄音
超級方便和快捷
這再清楚不過了 我們喜歡complication 很喜歡
我們認爲戴Apple Watch者
越瞭解complication作用
越想更多的complication
爲了更方便地獲取這些complication
在watchOS 3中 人們可以很簡便地切換錶盤
只需要輕輕滑一下就從工作日complication
切換到健身錶盤
並從健身錶盤切換到週末錶盤
現在想一下
我們日常生活中的各種事兒
對吧？事情多得令人吃驚
哦 我是認真的
我們健身、我們約會、我們運動、我們旅行、
我們做體育運動、我們做其他各種活動
現在 更容易匹配錶盤
和所安裝的complication根據你正在做的事情
這樣人們應該在Apple Watch上
會使用更多的complication
你也做一個這樣的complication吧
好了...以上說的是complication
現在 我們繼續探討通知的最佳範例
通知應該有用、及時
並且要精心設計
來表達精確、清晰的信息
換句話說 應該方便查看
請記住 收到通知的人
可以在任何地方 正在做任何事
他們可能正在吃飯、正跟朋友約會、
正搭乘地鐵、正在喝水、
或正在開會討論一些很重要的事
很多時候 人們正聚精會神地
忙自己手頭的事兒或正全神貫注地欣賞這個世界
所以你的通知要
表達清晰、扼要
幸運的是 使通知方便查看並不困難
首先 你要提供一個有意義的標題
人們看通知分兩種 瞥一眼和仔細看
就像這兩個詞所暗示的那樣瞥一眼是
快速提供通知內容的概要
而你提供的標題將會顯示在這兒
有時候標題可能會提供所有
需要從通知中瞭解的信息
其次 只顯示必要信息
我必須要強調這一點
通知裏顯示的信息越多
人們越難抓到重點
比如你正在 做一個登記入住通知
給一個旅行應用
通知可能包含 各種各樣潛在有用的信息
跟遊客航班相關的
但在一條通知裏 像航班號或你自己的名字這樣的
信息並沒有那麼重要
所以我們要去掉這樣的信息
第三 先顯示重要信息
可以把最重要的信息顯示在頂部
人們很可能會快速讀取信息
而不需要往下滾動
這非常有幫助 若某人手裏正拿着東西
不能騰出手來滑動屏幕
或查看Digital Crown
所以 對於登記入住通知
我們要把航班號 這樣的內容
和登記時間 挪到通知的最後
第四 改變尺寸和外觀
創建清晰的視覺層次
你的通知應該讓人們
首先去關注最重要的信息
這個通知的信息很全、很對
顯示的順序也對
但每一條的視覺權重都一樣
Apple Watch的通知定製性很強
你可以完全控制字形、佈局、
背景和邊框顏色
這個功能可以幫助人們迅速找出最重要的通知
這個設計真正把重點放在
像幾等票、座位號、出發時間和路線這樣的信息上
且這個通知的目的是讓你現在辦理入住
表達的很清晰
最後
精心設計的通知經常使用圖標、
圖形和動畫來進行快速地表達
圖形表達更迅速、
比文本更清晰
圖標可以節省空間 讓你的通知
在屏幕上全部顯示出來
但需要注意的是 有些圖標並不是通用的
或可能產生誤解
所以你要採用被 廣泛使用的圖標
各種族和文化
或你瞭解 圖標的象徵意義
使用你應用的人能明白
簡短、有意義的動畫是一種優秀方式
補充文本並引起人們注意的
圖形和其他可視化數據不僅能提供
更有趣的可視化體驗
還能表達更多的意思
但在設計通知時還要考慮一點
你要認真思考爲何以及何時發送
在錯誤的時間收到通知
只會分散注意力或讓人討厭
如果你現在收到了一條通知你會覺得很惱火
除非 更重要
比現在的事
這是絕對不可能的
因爲 Apple Watch會在手腕上震動
收到通知時 所以很難錯過某個通知
如果你的應用給人們發的通知
並不那麼有用 信息量也不大而且也不及時
人們很可能會完全關閉你應用的功能
通知發送
那麼...
如何瞭解爲何以及何時發送通知呢？
嗯 最好的方法是確定什麼是最相關的
對於使用你應用的人來說
以及他們什麼時間最可能去執行
我有兩個很出色的應用
我有兩個很出色的例子
第一個是非常了不起的天氣應用叫Dark Sky
Dark Sky會在天氣突變時通知人們
比如要下雨了或雨要停了
在Dark Sky這個示例中相關性是由情景因素
決定的
通知會基於用戶的地理位置或用進行發送的
距離氣象系統遠近獲得的定位
通知要提前發送
這樣 有時間去拿傘
在傾盆大雨之前
因爲這些通知都是情景相關的是及時的
所以執行力更強
如果知道雨要停了 我可能會
準備去跑步
如果知道要下雨了 我可能會
躺在沙發上打個盹兒
除了情景因素 用戶偏好
和模式能提供出色的洞察力
瞭解人們想知道什麼以及什麼時候想知道
具體地 讓我們看一下另一個示例
Streaks是一個幫人們養成好習慣的應用
剛剛獲得了Apple設計大獎
人們每天最多能選擇六個任務
如該應用名字所表示的
這裏的目標是一條一條的
因爲每天都做某事就能變成一種日常習慣
所以 如果你想養成 的習慣
每天要做強化訓練
我要做的是學吉他或彈吉他
或記得給狗盆填滿水或遛狗
Streaks會提醒你去做這些事兒
我的狗從來沒這麼健康過攝水量也從來沒這麼充足過
雖然他們並沒意識到但實際上他們很喜歡這個應用
當然 這裏的重點是這些事是
人們想定時去做但可能會忘記做的
所以Streaks用通知來提醒人們
但只有在正確的時間收到提醒纔有效
人們應該在最可能去做的時候收到提醒
或者 換句話說 在他們最有空的時候
但Streaks是如何知道具體時間的？
嗯 首先 它並不知道
關於它是怎麼操作的讓我們先來看個具體的例子
現在我正試着養成彈吉他的習慣
在一天結束之前的某個時間
我會收到一個彈吉他的提醒
不會太晚 那樣我就沒時間彈吉他了
或者我已經睡着了
但也不會太早 比如說我還在工作時就收到了
那麼 爲簡單起見
比如說我在晚上7:00收到通知
這稍微早點兒
那麼我可以按一個30分鐘的止鬧按鈕
一直拖 一直拖直到我能彈吉他爲止
當我彈吉他時
我會在應用中將那個任務標記爲完成
Streaks會記下該時間
日復一日 我每次都會標記完成那個任務的時間
這樣 Streaks就會越來越精確地瞭解
我一般在什麼時間彈吉他
Streaks會用那個時間來制定給我的提醒
並在正確的時間自動發送給我
這是個簡單的啓發
實際發送時間會提前30分鐘
因爲很明顯我不會立刻放下所有事
一看到通知就開始彈吉他
然而 自動調整時間和通知有時候並不合適
你可能想就在一個特定的時間完成某些任務
Streaks也可以做到
或者也許你不想逐個收到通知
只想每天收到一次提醒
而Streaks也能做到
你可以禁用單一任務通知
或關閉所有通知
所以 通過明智地選擇通知發送的時間
和爲用戶提供爲什麼以及什麼時候收到通知的完全控制
Streaks發送的提醒不太可能會打擾用戶、
被忽略或被嫌棄
Streaks發送的通知都在可執行的範圍內
因爲它一般會提醒人們執行一項身體力行的任務
但使通知可執行的字面意思也是
給通知添加行爲
我鼓勵你們探索如何讓你推送的通知執行力更強
要從手腕上迅速進行分類
是一件很厲害的事
通知可促進使用你應用的人之間的交互
而且會毫不吝嗇地在日常生活中
激勵人們
一條通知 最多可以執行四種動作
一定要只顯示真正相關的動作
與通知內容
確保把動作標記地清晰、簡潔
並使用面向動作的動詞
請嘗試關注那些按一下就能完成的操作就一下
然而 有時候可能會需要一個或兩個額外的步驟
多步流程會把人們帶入你的應用中
一般來說會有點兒痛苦
因爲應用需要時間加載
但在watchOS 3中當顯示應用的通知時
會在後臺啓動你的應用
這就確保應用的數據是最新的
並且提前加載應用 方便人們查看
所以不要回避這個問題要讓人們進入你的應用
如果必要的話
現在 談到把人們帶入你的應用
我們正好可以談談應用
watchOS 3將完全改變人們使用應用的
體驗和互動
讓我們看一下最重要的幾個變更
以及這些變更產生的意義
讓我們從新版Dock說起
人們最多可以在Dock中放10個應用
並且Dock中的每個應用都在內存中
以便能從Dock快速進入應用
Dock中顯示的是每個應用的快照
這些快照應該包含豐富的信息並方便查看
應用的快照要定期更新保證數據是最新的
Dock中的應用在後臺每小時至少啓動一次
這就就能取到新數據更新應用的UI
並請求系統創建一個應用的新快照
如果必要的話
當在Dock中查看應用時會喚醒應用
如果內容有變化 會更新應用的快照
如果有人把你的應用放在Dock中
你應該爲此感到高興
因爲放在Dock中就意味着你的應用包含的信息
正是人們想隨時瞭解的內容
正因爲如此 重點是應用的快照
不僅得是最新的 還得是相關的
在某些情況下 顯示人們最後一次查看的屏幕
上次使用應用時
可能就不是很相關
幸運的是 watchOS 3會提供一個API 可以跳轉
到不同的屏幕而非停留在最後一次瀏覽過的屏幕上
那麼 比如說 有一個棒球應用
顯示了當前比賽和即將進行比賽的列表
當然 按每個列表項都能進入
比賽相關的詳情頁面
好了
現在 假如你自己是這個應用的用戶
你最後一次看該應用時看的是這場比賽
退出後 在Dock中看這個應用時
你很可能會希望繼續得到那場比賽的詳細信息
如果比賽結束了 巨人隊贏了
你很可能仍然希望在詳細視圖中查看這場比賽
但是過一會兒
這場比賽的信息變得
越來越不相關
你可能 瞭解了最後的得分情況
從應用發送的通知中、從朋友那兒、
從Twitter上或新聞裏
在某一時刻 這個內容就變得完全不相關了
你不再對那場比賽感興趣了
也許你正期待看到第二天的賽程
或者如果你鍾愛的球隊正在打一場新的比賽
並且已經開始了 你就不想瞭解那場比賽的信息嗎？
這些就是你需要問的問題
關於應用的
同時 我希望你能考慮一下以下這些最佳範例
第一 也是最重要的一點
你的目標是主動瞭解用戶的興趣和需要
要站在他們的立場上思考
把事件放在一個時間軸上是一種非常有效的技巧
及時提取重要事件 然後問自己
“這些事件會對什麼人產生什麼影響？”
在我剛剛舉出的棒球應用示例中
我猜測人們可能會想在比賽開始前後 瀏覽比賽信息
或在比賽期間
而在其它時間 同樣也是這些人可能想要了解
整個聯賽的日程表
然而 很可能是一個很簡單的日程表
個人偏好可以 產生重大影響
對最相關的信息內容
比如 誰贏就支持誰的人怎麼會去關心
某一個球隊 他們可能希望看到完全不同的內容
而忠實的棒球迷則想關注每場比賽
對於其他的應用 有其他情景因素比如時間
和地點可能對人們想看到的內容產生巨大影響
一般情況下 人們並不總是喜歡看到
一個app產生出人意料的變化而不保存當前狀態
那樣人們會感到困惑或迷惑
所以 如果你選擇把人們跳轉到一個不同的視圖
你要以一種有邏輯的、可預見的方式來進行
最好是人們一點兒都不會意識到有什麼變化
就算他們感覺到了變化 他們也應該能做出一些 的準確猜測
關於應用的UI狀態爲什麼總是在變化
我並不推薦
把應用的快照做得跟應用完全不同
這樣會使應用難以識別
而且更不容易找到
只提供部分信息 完全沒問題
或隱藏某些不相關的內容
當應用在Dock中顯示時
但是 如果你想提高某些內容的易讀性
那樣也是可以的
但不要做得完全不一樣
接下來是避免 顯示警告、
確認對話或異常狀態 在快照中
情景完成之後
這種內容可能就沒什麼大用了
事實上 這種內容很容易被人誤解
或毫無意義
所以 根據不同的情況
可以考慮 用程序屏蔽這些內容
在一定時期之後
最後是優化應用顯示界面
在微型表單中的
在Dock中 應用會等比例縮小
這就像 一個相似數值
是原UI尺寸的62.4851％
你一定希望避免文本和圖形
在這麼小的尺寸時變得難以辨認
正因爲如此 狀態欄的字體粗細
嵌入應用和大量文本都從常規變成了加粗
小尺寸時 粗字體看起來更清楚
而且對於非常關鍵的信息
可以試試用大字體
這就需要從界面上去掉一些東西來獲得更多空間
但無論怎麼樣 都不是件壞事
現在 按照這些指南
你的應用在Dock中看起來會盡可能地方便查看
說到方便查看
你們中有些人可能會想到快捷視圖
快捷視圖會 收集
及時的、情景相關的瞬間從用戶經常使用的應用中
無獨有偶 實質上Dock的目的也一樣
在簡化整個平臺體驗時
在某種程度上說 Dock是由快捷視圖演變而來的
反過來說 在Dock中快捷視圖似乎沒什麼用
所以就把它從watchOS中移除了
這就表示 你要投入到快捷視圖設計中去的時間和想法
完全可以應用到考慮如何設計
應用使它在Dock中看起來更出色上
好了
那麼 應用在watchOS 3上的另一個重大變更是
一個很簡單 但很強大的改進就是人們如何在應用內跳轉
絕大部分現有Apple Watch應用的結構都是分層結構
一般來說就是一份頂級列表和一些詳情頁面
這一點兒都不意外因爲我們傾向於分層組織數據
遺憾的是 在這些頁面之間跳轉
會很慢因爲你每次都要先返回頂級視圖
比如說 如果我想查看某些詳情視圖
我選擇其中一項 打開 返回
再選擇另一項 再打開 再返回
以此類推
這就像你在一棟房子的其中一間屋子裏
你想進入隔壁房間
但是 要進入隔壁房間你得上一段樓梯
然後再下另一段樓梯
應該更快捷
就像進入隔壁房間只需要打開一扇門就可以了
那麼在watchOS 3中我猜我們現在有“門”了
現在可以 直接從一個詳情視圖跳轉到
另一個詳情視圖 通過上下滑動或使用Digital Crown
可以想象成是縱向分頁從一個詳情頁面到下一個詳情頁面
如果你的應用已經採用了分層結構
那你應該好好考慮啓用這個功能
但有一點要特別指出這種行爲只能
當詳情頁面比顯示屏尺寸短時才起作用
所以在老版本的Weather中
未來10日天氣預報的頁面看起來就有點兒高
從今日預報頁面上向下滾動來查看未來10日天氣預報
在新版Weather中信息被推送到
一個子視圖 這樣所有內容都能一下子適應頁面
所以 如果你想這樣做你可能得先重構你的設計
使一切都跟屏幕尺寸匹配
如果是分頁應用
現在是時候切換到分層
或考慮切換到分層應用了
用Digital Crown導航效率更高
比從一個頁面水平地滑動到另一個頁面
而且分頁應用也不支持分層
顯而易見 這裏並不是一個限制
包含大量詳情的頂級列表視圖是很有幫助的
從分頁結構變成分層結構以後
我們的Weather應用可同時顯示
多個城市的溫度最高值和最低值
這很方便
好了
應用在watchOS 3上的第三個重大變更跟粘性有關
聽起來很有意思
粘性描述了一個應用能在前臺停留的時間的長短
在watchOS 3中應用可以停留約8分鐘
比以前長多了
當人們在用你的Watch應用時
放下手腕
當他們再擡起手腕時首先看到的就是你的應用
只要放下和擡起手腕的時間不超過8分鐘
事實上 每次擡起手腕計時器都會重新設置一個8分鐘
應用粘性劑真的是一個非常重要的變更
Apple Watch應用本意就是幫助
記錄可以持續數分鐘甚至數小時的活動
但在此期間 Watch顯示屏可能會休眠一段時間
我們可以用購物單應用來舉例
購物時 你的絕大部分時間花在看價格、讀標籤、查看產地、
避免扔到其他人的購物車中
及讓自己看起來更酷
還有很多諸如此類的活動
我們叫做會話活動或基於會話的活動
做晚飯、做體育運動、健身、問路
這些事兒都要持續一段時間
在此期間 人們會時不時地看一下手錶 做任務
如果粘性夠大會立即把你吸引到應用中
你最後一次看的這就節省了很多時間
好了
現在說應用在watchOS上的第四個重大變更
包括告知用戶何時可以放下手腕
當人們在你的應用中發起某個任務時
他們期待獲得確認反饋
任務是否成功？
遺憾的是 到底是成功或失敗
或確定成功或失敗是需要時間的
網絡慢、Wi-Fi信號弱、
超遠程藍牙可能會導致通訊延遲...
或遠程延遲
一些允許人們控制物理設備的應用
像車庫門或遮光簾
就不能提供完成反饋
除非這些設備被完全打開或關閉
而且有些服務 比如外賣
或訂車應用就涉及與他人之間的通訊
衆所周知 人們並不總能立即給你反饋
在iPhone或Mac上
通常會讓人們在你的應用中等待
當試着給他們返回確認反饋時
進度指示是保留人們注意力的一種方式
給人們提供了有希望的反饋
一般是這樣 “請稍等我馬上就來”
但是 可能會等上一段時間
而正在用應用的人會一直擡着手腕等
他們的肩膀開始酸了
過一秒鐘就像過一分鐘那麼久
時間似乎變得很漫長
那麼 爲了在Apple Watch上避免發生這種情況
你可以用NSURL後臺下載任務
來跟服務器進行通訊
有兩個作用
第一 確保能
跟服務器通訊 在應用被掛起之前
第二 服務器響應後Apple Watch會喚醒應用
然後 反過來 你可以在後臺快速反應
採取一些行動 比如發送本地通知
這也是watchOS 3的新功能
給使用應用的人提供反饋
比如說 假如你正在做一個外賣應用
人們點餐後 應用需要確認
餐廳可以完成訂單 並提供一個預計的送達時間
你一定不希望人們在應用計算這些時一直乾等着
相反 你可以立刻給出反饋
告訴他們餐廳已經收到他們的訂單
你還可以 也應該告訴他們
一旦餐廳接受訂單並給出預計送達的時間
你就會給他們發一條最終確認的信息
這樣纔算順利處理了這個訂單
如果你的處理方式合適的話
人們就會覺得沒必要擡着手腕等着了
他們相信應用一定是在很努力地計算
來完成分配給它的任務
如果一切順利
你要給人們發一個本地通知
告訴他們 訂單已經收到
並且正在處理
如果有問題 要明確指出到底是哪兒的問題
並幫助人們修正問題儘可能少地進行額外互動
一切的關鍵是信任
人們要信任你的應用正在運行而且不會崩潰
而你也要確保通知他們
任務是否成功
既然關係到信任問題你一定不希望讓人們誤會
任務已經全部完成了
而實際上還在進行中
這是撒謊 這對於建立信任是很不利的
好了 這些都是應用相關的新功能
還有很多要說的
但我想先到這兒讓我們回顧一下剛纔的內容
我們談到了新Dock UI和如何使應用
儘可能地方便可見和可執行
我們也談了Digital Crown
如何使詳情頁和分層應用間的切換更有效
我們也瞭解了基於會話的應用將如何受益於
應用粘性的變化
而且我們剛纔也談瞭如何制定本地通知
當應用在後臺運行時
能讓使用應用的人們放心地放下手腕
並保持一種快速的交互
我們認爲watchOS的這些改進
會激勵你們創建流暢的用戶流
並縮短用戶交互時間
若Apple Watch團隊止步於此
這將是一次意義非同尋常的發佈
那我今天應該也會談很多內容
但他們並沒有止步不前
他們就像一羣超凡的成功者
就是那種讓我在高中時顯得非常爛的人
在watchOS 3中 有一些很酷的新API和框架
你可以用它們做出一些不錯的東西
對於初學者來說 watchOS 3現在提供SpriteKit和SceneKit
就是我們的2D和3D圖形框架
SpriteKit和SceneKit可以渲染圖形並讓圖形動起來
可以使元素響應手勢
或者用程序控制元素 讓它動起來
你可以實施一些物理現象
我的意思是 這很瘋狂
力場、碰撞檢測等等
你可能認爲這些都是遊戲裏才能用到的技術
但是你仍然可以應用到應用中
而且watchOS 3也支持手勢
直到現在 觸摸輸入的處理都是間接的
你應用上的控件和視圖會響應
觸摸事件 以你的名義
現在你可以完全自定義了
你可以自定義按、滑動、
搖動、
或長按
長按需要按一會兒好了
在watchOS 3中 你現在有未經處理的Digital Crown事件權限了
你可以用這個數據改變 顏色、尺寸
和其他可視化屬性 UI元素的
你可用Digital Crown
變更選擇或修改值
那麼 你們能用這些做什麼呢？
嗯 對於初學者 很多人都想
用一個環形或弧形將數據可視化
你可以用SpriteKit用程序畫出這樣的元素
這樣你可以方便地使任何兩個任意值動起來
你可以用默認的加速曲線
是一種非常棒的加速然後減速的效果
或者 你可以給加速曲線做一些自定義
比如活潑的動畫或你想實現的任何動畫
我們有大量的開源加速曲線
是由SpriteKit開發者團體中很慷慨的人設計的
你甚至可以修改環形的填充顏色
來反映當前的值
數據可視化 如圖表和圖形
可以用動畫的形式表現出來
通過用程序畫這個圖表
我們可以讓內容動起來增加視覺效果
或者我們可以用動畫來吸引人們去關注
圖表的指定部分
SpriteKit屬性是可變的
所以你可很簡便地把一個圖表的意圖修改爲
顯示不同的屬性 基於用戶輸入
或者 也許你想 來讓人們檢查圖表中不同的值
用一個搖動手勢
就是這樣
或者再好點兒讓人們用Digital Crown
來做同樣的事
或者可以允許人們縮放圖表
或者可以讓人們滾動查看
通過Digital Crown控制所有這些
在瞭解圖表如何響應之後你可以控制響應式旋轉的快慢
現在 我繼續往下說
只要想起這個東西來就覺得非常有意思
但它可能會剝奪你所有的樂趣
我鼓勵你們學習SpriteKit和SceneKit
並嘗試使用這些技術
創建更豐富、更有意義的體驗
但請記住一點
自由越多 責任越大
如果讓東西動起來只是因爲看起來很酷
這真的不是一個很好的動力
如果使用得當
動畫可以把意思更快地表達出來從而縮短交互時間
同樣的 圖形交互
應該提供更豐富信息量更大的用戶體驗
最好能減少更復雜或更稠密的UI
好了
那麼 我們今天說了很多內容
最後我還想留給你們一個思考
跟設計watch應用有關
設計優秀的Apple Watch體驗需要保證流程簡單化
但是保持簡單 卻並不是一件簡單的事兒
如果你知道怎麼做會給你的應用加不少分
保持簡單涉及到要做出一些艱難的選擇
即應用要做什麼
意思是 要拒絕許多聽起來很有意思的想法
但是你能做並不意味着你應該做
保持簡單的另一層意思是深入地思考
人們的日常生活
人們會在很長時間內使用你的應用
而應用的設計方式應該是使用時間長短的真實反映
要少考慮一些靜態屏幕多考慮一些用戶流
事實是這些用戶流並不是連續的、
不間斷的體驗
人們會在任意時間使用應用
當他們用應用時他們總是期待應用有新數據
並與他們經常變化的需求相關
你的應用應該提前假設人們想幹什麼
在任何一個指定的時間段
並嘗試主動地提供這些信息...
和功能 這就是情景相關和實效性
要實現這個目的並沒有那麼簡單
設計Apple Watch與設計iPhone
iPad、Apple TV或Mac不一樣
我們瞭解這些設備應用的設計和開發
並且已經限定了我們 的觀念對應用的複雜程度
如何跳轉
願意花多長時間來用你的應用
試着識別和挑戰你自己根深蒂固的假想
當然我知道說起來容易做起來難
但這是製作優秀watch應用的至關重要的一步
關於Apple Watch
也許我能給你的最好建議
是考慮功能 而不是應用
優秀的Apple Watch應用可能只提供一個功能
比如說Press Record實際就只有一個功能
它的complication就是錄音按鈕而應用就是錄音界面和停止按鈕
很好用
即使我只用了一句話來描述這個應用
剎那間就過去了兩秒鐘
設計這種簡潔的交互絕不簡單
但我希望我們今天所討論的概念和方法
可以激勵你們去嘗試
而且我很期待看到你們取得新的成果
用watchOS 3的新功能
爲該新版本很多人都付出了非同尋常努力
而我們的努力就是爲了幫助你們
打造更創新、更賞心悅目、平臺可定製性更強的體驗
好了 如果想更多地瞭解我們今天討論的內容
你們可以看一下視頻頁那兒有許多附加資料
再說一次 一定要看watchOSHuman Interface Guidelines
那裏真的有很多非常棒的資料
我們會在這個夏季持續更新
所以請定期查看
我們還有許多很不錯的Watch工程研討會
我強烈建議你們去參加SpriteKit研討會
再看一些已經實現的相關視頻
今年 我們有很多不錯的設計研討會
以後還會有更多
我強烈建議你們參加“內嵌式應用設計”研討會
可以讓你們的設計更人性化
這對於用戶們來說相當實用
我還推薦今天早晨的關於“排印與字體”的這個視頻
還有一場設計研討會
講的是互動式UI設計你可以總結自己的想法
提煉一些精華然後做出一些非常出色的東西
好了非常感謝你們來參加這場研討會