高級測試和持續集成
大家下午好
我叫Zoltan
等下我的同事Eric也會上臺
我們都是Xcode組的工程師
如今的軟件開發很像指揮管絃樂隊
你和我維護一系列測試
如果它們中的一個運行不正常
我們需要快速理解和糾正它
可能你是個測試大師有成百上千個測試
Xcode有工具和技術來指揮即使是最大型的測試程序組
今天我們將向你展示
首先我們要介紹一些概念
在之前的演講裏還沒有被介紹
然後我們會介紹一些Xcode中的新特性
以及Xcode Server
尤其是可配置集成用戶
然後我們會以xcodebuild的新特性做爲結束
讓我們開始吧
做爲測試的簡要重述
測試有4個特徵
XCTest
你用來測試的框架
針對Objective-C和Swift
你的測試被編譯成一些束
Xcode是編寫測試的IDE
你還可以在開發時運行單獨的測試
你還可以在Xcode裏查看報告
來自本地運行和Xcode Server的測試
關於Xcode Server
是你的測試的連續集成解決方案
你設立bot來週期性的運行測試
Xcode Server會爲你生成報告
如果發生錯誤它會通知你
這是你追蹤項目的一個好方法
Xcode Server是在xcodebuild的基礎上建立的
可在命令行使用xcodebuild
你可以在終端運行測試並查看結果
Xcodebuild是構建部件
對於我們在後面會看到的定製連續集成系統的構建部件
你可以在我們之前的演講裏瞭解更多關於這4個特徵的信息
但是今天我們想看一些之前沒有涉及的概念
我們想把你帶到幕後
向你展示你的測試是怎樣運行的
要這樣做最好想象一個時間線
當你的測試被編譯後它們必須被託管
這使得測試首先被運行
一旦這些測試在運行
你可以看到詳細的測試進展
用一個叫監視的技術
我們來看看這2個概念託管和監視
讓我們首先來看看託管
根據你是否有單元測試或UI測試
託管的故事不同
你的測試束被直接載入到你的應用中
在這種情況下我們稱你的應用爲寄主應用
但是對於你的UI測試你的測試束將被載入UI測試運行器
和你的應用是分離的
在這種情況下你的應用被稱爲
目標應用
這裏有一些暗示
單元測試中你可以直接訪問
你的應用數據結構和API
但是在你的UI測試中
你通過輔助功能和發送事件來訪問應用
就像用戶一樣從外部來觀察應用
對於單元測試你的所有測試都將被運行
在寄主應用的同一次運行中
所以在測試之中你需要注意清理工作
但是對於UI測試你的測試可以結束並重新啓動應用
所以這利於測試你的應用怎樣啓動
這就是託管
這就是你的測試是怎樣被啓動的
一旦你的測試在運行中
你可以用被稱爲監視的技術
查看你的測試的詳細進展
讓我們放大這條時間線
在這裏你可以看到2個測試用例一個接一個運行
這些測試用例屬於一個測試組
一個測試組對應你寫的一個測試類
如果你在測試束中有多個測試組
你可能想要做一些設置工作
爲任何會運行的測試
或者也許在測試完成後
做一些析構工作
或者在測試中做一些定製的記錄
你可以用XCTestObservation協議來做這些
你編寫一個符合這個協議的對象
在和一個共享的監視中心註冊它後
你的對象會接收到回調
比如在任何測試開始前
你得到這個束將會開始的回調
那麼在組開始前
你會得到一個組將會開始的回調
對每一個要運行的測試用例
你會得到一個用例將會開始的回調
和測試用例結束的回調
如果出錯了
你會得到用例失敗的回調
因爲測試結束了
你會得到測試組結束的回調
以及你進行任何工作的最後機會
在這裏測試束結束的回調
這是一個例子
這個對象遵守XCTestObservation協議
在這個對象的初始化函數裏
我和共享監視中心進行註冊
隨着測試的進行
我記錄事件比如這個
測試出錯時 我記錄這個
我也會記錄測試結束
一個理想的設立監視器的地方
是你的測試束的info.plist文件
你通過使用Xcode的Info.plist編輯器來這樣做
你添加這個NS主類入口
這是你的監視器專門針對測試的初始化
它是和類載入初始器獨立的
這就是託管和監視
他們是有用的概念來幫助理解
你的測試是怎麼在幕後運行的
還幫助你診斷測試中出現的問題
讓我們看看Xcode 8中的新特性
崩潰是測試失敗的一個常見原因
崩潰可能發生在宿主應用
和目標應用中
通常Xcode會重啓宿主應用
來完成你的測試組
這需要你自己來收集解決崩潰所需的診斷信息
我很高興的宣佈
今年Xcode會幫助解決這個問題
我們會在測試報告中幫你收集崩潰記錄
對UI和單元測試
對本地和在服務器上運行的測試
崩潰記錄會被收集到測試報告中
你會在那看到用文本呈現的崩潰
或者你選擇查看崩潰的上下文
我想現在向你展示
Eric和我最近都在夜間活動
我們在空閒時間開發tvOS應用
現在我通過按運行按鈕來啓動它
這個應用是用一些測試的奇怪的樂隊名稱
來尋找附近的音樂會
我可以通過鍵盤上的鍵進入模擬器
Eric和我爲這個應用加入新特性
來支持禁用了位置服務的用戶
讓我向你演示這對那些用戶是怎樣的
我會進入主菜單
在隱私選項裏
我將禁用位置服務
我將進入Xcode
在這我們爲那些用戶添加了一個視圖控制器
這允許他們輸入一個郵編
讓我爲這個視圖控制器再添加個測試
我希望那些單元測試在它們自己的方案中運行
我會向上來到方案菜單
我將複製這個已有的方案
並給它取一個有意義的名稱
然後在這個方案的測試行動裏
我禁用調試器
這是一個技術它允許我運行我的測試
不會有東西來打斷測試組
它不會進入調試器
與你的測試如何在Xcode Server上運行很類似
我還會禁用和位置服務不相關的測試
我將分享該方案
我用Command-U運行測試
這是給禁用位置服務用戶的新視圖控制器
他們可以選擇輸入郵編
現在 測試是輸入郵編
那是出乎意料的崩潰
當下 Xcode聚集了崩潰日誌
報告測試失敗
讓我們看看
這是失敗的測試
我可以點擊跳到測試報告
我將展示測試抄本
這裏是測試輸入郵編時的事件
此處最底部是崩潰
現在我可以點擊查看該崩潰的文本顯示
但這情況下我想向你展示崩潰的上下文源碼
所以 我將點擊此處的箭頭
這就是崩潰發生的那一行
你可以在左上角看見調試導航中的棧幀
現在我就能看見上下文源碼中的崩潰並且診斷問題所在
我恰巧發現引用了錯誤的視圖控制器
應該是presenting ViewController而不是parent
所以 我將做個修改
我將通過去測試導航來重新運行測試
點擊此處的圖標
之前我向你們展示過本地測試運行的測試報告
但那個報告將看上去與出自Xcode Server的完全一致
現在測試是重新輸入郵編
太棒了 這些測試通過了
我們現在登記測試並...
在支持禁用位置服務用戶這方面建立信心
但 現在 讓我們回到幻燈片
你已經看過Xcode怎樣收集崩潰記錄
並在測試報告中包括它們
你可以選擇查看那些崩潰的文本呈現
或者你可以查看崩潰的上下文源碼
這是診斷問題的一個好方法
並且在你的源碼上下文中修正問題
我們在Xcode Server中有一些新特性
爲了向你們展示更多歡迎同事Eric Dudiak上臺
下午好我是Eric Dudiak
我將和你們談論Xcode Server
及Xcode 8中有哪些新特性
讓我們看一下概述關於我們要談到的
Xcode 8和Xcode Server
我們有定製的環境變量你可以設置它來集成
我們有高級觸發器編輯流程我們在Xcode 8中改進了它
我們還有一些對追蹤和歸責的改進
來確保bot中出現問題時你被通知
我們還會看到那將怎樣和升級集成一起工作
這是我們爲你提供的一個新特性
最後我們將看到可配置的集成用戶
也是Xcode 8新加入的
讓我們開始討論定製環境變量
有點像作弊
實際上它在Xcode 7.3中出現
它讓你配置環境
這個環境在bot傳遞給Xcodebuild
這將控制你的集成將被怎樣運行
你可以配置任意多你想要的設置
爲你在服務器上運行的bot
有可能和在本地運行的不同
定製你的服務器怎樣運行你的集成是有利的
不需在你的項目中新建很多方案就可以完成這個是很好的
現在來到Xcode 8的新特性
我們顯著改進了編輯觸發器的體驗
我們有兩種觸發器腳本和電子郵件
首先讓我們談談腳本觸發器
他們在你的集成前或後運行
他們就是普通的shell腳本
我們改進了編輯器給你更多的空間來查看腳本
並且你可以看到它們裏面有什麼
你可以看到更多
這些行還允許你給觸發器命名
如果你在組裏工作這些有幫助
你的其他組員可以看到每個觸發器應該做什麼
如果你有一個很長的腳本
那是你集成觸發器的一部分
你可以看到它是在Xcode正在集成時被喚起的
當你在狀態UI裏看產品的集成過程時
你實際上可以看到哪個腳本正在運行
最後如果你後來又有一個新腳本
你想在其他腳本之前運行這個新腳本
你可以在這個UI裏重新對觸發器排序
只需要添加一個新的腳本觸發器並把它拖到頂端
它會成爲在bot中第一個運行的
現在讓我們看看其他各類的觸發器
我們有電子郵件通知
在Xcode Server歷史中
總是一封郵件對應一個集成設置
這會造成大量垃圾郵件
爲了減少在你的收件箱中的郵件數量
我們把這類觸發器分成2種不同類型
我們仍然有報告觸發器或者報告郵件觸發器會出現
在每次你運行集成
雖然現在你可以調試它們
每天或每週只運行一次
不管你的bot運行多頻繁
不會產生大量的郵件
你的收件箱不會被大量郵件淹沒
我們認爲這對管理者很有利
管理者希望持續檢查bot的健康狀態
但不想收件箱充滿了郵件
此外我們還允許你定義郵件裏的某些域
這樣你就可以配置抄送和回覆域
使你能更多控制
你要發送的郵件類型
我在之前提示過
我們現在有兩種不同的電子郵件觸發器
另一類是問題觸發器
當有問題發生時
我們會給你發一封電子郵件
給對這個問題感興趣的人
我們會在接下來談談這個
但是如果你有更多的提交者
是你要集成的代碼的參與者
那你當然想要發郵件給他們
我們允許你在這過濾接收者
來確保你只給你想要的人發郵件
讓我們看看這個
如果你有多個倉庫你可以選擇只發郵件
給來自特定倉庫的提交者
或者你知道哪個域名所有你想要發送郵件的郵件地址
都會來自那個域名
你可以在這添加那些
讓我們花一些時間來談談問題
或者構建問題
沒有人是完美的也不會每次都寫出完美代碼
這是我們有連續集成的原因
這是我們有單元測試的原因
我們有單元測試因爲我們知道它們不可避免的會失敗
所以我們首先寫它們
我們偶然也提交無法構建的代碼
我們中的一些人不會在提交前檢查
事情就是這樣的
連續集成利於捕捉
在這些情況下Xcode會給你發郵件
通知你你破壞了構建
但除此之外還可能發生其他問題
有時候即使你寫的代碼是完美的
你周圍的事情會改變
可能是你安裝新的Xcode
你得到很多新特性
你得到新的SDK可能有些東西在其中被新棄用了
可能因爲語言的改進產生問題
我們希望確保每次發佈的Xcode
都比以前發佈的Xcode更聰明
所以你可能看到我們以前沒發現的問題
它們一直在那只是Xcode現在追蹤它們
比如靜態分析問題
當你看到郵件時重要的事
是我們想確保它是可操作的
並讓你知道你收到這封郵件是因爲出現問題
一是因爲出現了一些問題
並且你可以處理這些問題
第一類是如果你導致了一個問題
是因爲你損壞了它
所以這會聯繫你像你在郵件中看到的這樣
你會看到像這樣的說是你導致了這個問題
我們知道這是因爲問題出現在一行或一行附近
你最近修改過的一行
我們還可能知道在2次集成中
問題出現時只有你提交過代碼
這種情況下猜測你造成了損壞是合理的猜測
但情況並不總是這樣
比如 一個應用基於一個框架
框架裏的一個改變
可能造成應用的損壞
沒有任何人對應用提交代碼
在這種情況下你會看到一封郵件更像這樣
它會更少地譴責你的工作
並且會說你可能可以在bot裏解決這個問題
現在我們知道這是因爲你經常在出問題的範圍內提交代碼
我們對各種範圍賦予所有權
並且考慮到這是更模糊的匹配
和直接把責任歸於某些人相比
所以郵件會發送給更大的範圍
會形成一個很寬的網絡
當試着找出誰可能對特定問題感興趣
這對你的代碼中出現的問題有利
但是有時候問題
並不是代碼的改變引起的
最簡單的重現它的方法是重新設置你的bot
所以Xcode 8或者Xcode Server現在會追蹤修改
對你的bot的配置的修改並把它們調出
任何我們有可能把新出現的原因
歸咎於配置的改變時
比如說你啓用測試或靜態分析
也許這類問題一直存在於你的代碼中
但是我們實際上把它們歸咎於
特定的bot配置的改變
而不是代碼的改變
我們還在下一次的集成包含這些信息在郵件裏
這樣當你看到一封這樣的郵件時你知道其中的一些改變
可能因爲你進行了一些配置的修改
讓我們回到之前談論的一些事
安裝新Xcode獲得一系列新特性
當那發生在Xcode 8中的Xcode Server時
實際上會重新集成你的整個項目
我們稱之爲升級集成
我們會用和之前集成完全相同的版本
然後重新運行所有測試
重新構造所有東西重新運行靜態分析器
當這發生時我們知道
問題發生在你在項目裏在這個時候
任何新的問題都是由升級引起的
因爲我們使用完全相同的代碼
這節省了你追蹤源代碼改變
所需的大量時間問題並不是
由你對代碼的修改引起的
這就是一些新特性和問題的責任歸咎
我想談談Xcode Server和Xcode 8中
我最喜歡的新特性
那就是可配置集成用戶
我們給你將運行你的集成
的Mac OS用戶完全的控制
這給你很多增強的可視性
關於你的集成是怎樣運行的
此外它還允許你配置
你的集成究竟怎樣運行
Xcode Server中有一個隱藏的Mac OS用戶
在後臺運行所有的集成
你無法訪問密碼
你無法用它們登錄
這就是說你得到一個用戶
你不能進行任何修改
現在你自己擁有並管理這個用戶
你會得到密碼
這個用戶就是一個普通的Mac OS用戶
可以是系統上的任何用戶
可以是你想要的任何用戶
我們建議用一個新用戶
但它在登錄窗口和快速切換用戶中可用
所以你可以用其他用戶登錄
你會注意到你在使用這個用戶
通過一個菜單顯示Xcode Server集成圖標
我們會馬上看到
讓我們看看怎麼建立這個用戶
在這我打開服務器應用來到Xcode服務面板
爲了啓用Xcode Server
我需要選擇Xcode
我會選擇我已經安裝的新的Xcode 8
我會看到這個對話框
要求我建立我想使用的集成用戶
我新建一個
只用來運行集成的用戶
給它一個名字和密碼
和普通用戶一樣的一些事情
我將視其爲基本用戶
當我按新建用戶按鈕
Xcode將在後臺做一些工作
當它爲運行集成做準備時
一旦用戶被設立好
我們被要求用它們登錄
現在我們被要求用它們登錄因爲我們要繼續
運行建立助手
請記住這是一個真正的普通Mac OS用戶
所以我可以登錄比如 登錄一個測試iCloud賬戶
我可以保存用來集成的數據
任何此類
當Xcode準備好運行集成時
你會看到一個通知像右上角這個
以及在菜單欄的右上角
你會注意到有一個錘子表明
是Xcode Server集成用戶
當這些都完成後我可以切換回去
我會回到服務器應用我會看到指示符
提示用戶已經可用
登錄後集成可以開始運行
我們已看過怎樣建立該用戶
讓我們看看一些我們訪問集成用戶
可以做的事
讓我們來到演示的機器
我們有早前看到的那個相同的項目
我們看到有一個問題它崩潰了
因爲它無法訪問位置
我們需要手動進入模擬器
並關閉位置訪問來在本地測試它
但是因爲我們在開發應用我們可能不想這樣做
我們可能想要保持啓用位置服務
在我們的Apple TV和模擬器中
這是我們的用戶多多少少會遇到的情況
我們希望怎麼看到應用
但是現在我們已經解決了早前看到的問題
我們不希望它再出現
如果它出現我們希望收到通知
所以碰巧我現在在用的機器
是我的服務器機器
要進入我的服務器
我只需要來到快速用戶切換菜單
我看到我有一個
可配置集成用戶名叫Xcode Server
我選擇它
輸入我的只有4位的密碼
我們就會作爲這個用戶登錄
我修改桌面背景
所以我知道這是構建服務用戶
在這我們看到Xcode的錘子圖標
它表明這是Xcode Server
它已經啓動並在等待集成
已經配置好了
我想要進入Xcode
我可以爲這個用戶在Xcode中配置任何我想要的本地設置
它們會在我的集成中被使用
我會用一些小技巧
如果我來到設備菜單
我看到了插入這臺電腦的所有設備和模擬器
現在Apple很慷慨我們提供我們生產過的所有設備
如果這還不夠多
你可以按這個增加按鈕來獲得更多模擬器
Apple TV 1080p模擬器在我安裝Xcode時就已經內置了
我會新建一個沒有位置服務的Apple TV
它已經啓動了
我雙擊進入
它實際上已經禁用了位置服務
如果我來到設置 一般隱私
位置服務被關閉了
所以模擬器已經配置好可以使用
而另一個也可以在我想要啓用位置服務時使用
讓我們快速切回
並登錄我通常使用的用戶
通常我需要穿過房間
到我實際用來工作的電腦所以這快一些
這裏我們看到所有的UI測試
現在我已經有一個bot正照常進行集成
但我想新建一個bot用來集成
在沒有位置數據的情況下
所以我來到產品新建Bot
在這個服務器上使用無位置的方案
我會給它位置 對不起是我的倉庫
這樣我就可以取得我的項目
和我的普通bot一樣我禁用歸檔活動
我不關心那個但是我想要運行測試
讓我們保持啓用靜態分析
我想要在我破壞它時馬上收到通知
但是每天一次就可以了
所以如果我們又破壞了它我會在24小時內知道
UI測試會在server上捕獲它
我們會在每天凌晨1點運行它
在這我選擇設備
默認情況下 每次集成在那個操作系統的所有設備上運行
這是一個tvOS項目
所以它將在所有tvOS設備和模擬器上運行
但是讓我們選擇特定設備
我將只選擇Apple TV沒有位置
這是我們早前談過的環境變量視圖
我不需要任何變量
我將繼續確保我收到郵件
當一個問題在特定用例裏出現時
然後繼續新建這個bot
它將繼續開始一次集成
我們在這可以看到它在運行它正在導出構建
我們看到UI測試進行了一部分
讓我們來看看
我早先準備好的一個集成
若我們去測試
我們可以看到所有測試都被運行了包括郵編測試
如果我查看一些屏幕截圖
它實際上運行了那個位置
因爲它打開了我們早前看到的視圖控制器
我們可以看出我們顯著提高了可視性
關於你的用戶怎樣運行
你可以登錄它們看到正在發生的一切
我們看到了你可以定製不同的設置比如模擬器
運行你想要在集成中運行的操作
我們看到這是普通的Mac OS用戶
我可以在快速用戶切換中切換到它
我也有密碼
我們看到菜單的額外圖標
顯示集成狀態的信息
在集成用戶中
現在隨着這些新特性而來的是一些責任
所以我們爲你們準備了一些最佳實踐
首先我們強烈推薦你新建一個用戶
讓他儘量和你的客戶有相同的體驗
你不想要你的設置
影響你的bots
我們還建議你避免使用管理員賬號
請記住所有能在服務器上新建和編輯bot的人
將可以通過觸發器來訪問那個賬戶
對任何私有或定製數據也是這樣
避免在那個用戶裏儲存這些數據
如果你想在後臺保持登錄那個用戶的狀態
使用快速用戶切換
集成可以繼續運行在後臺就像它們一直做的那樣
但是如果你想要做爲最前臺用戶運行集成
確保關閉了鎖屏
就像iOS屏幕鎖定bot測試Mac OS屏幕鎖定也會這樣
最後確保你對你的所有需要都這樣設置
包括我們前面看到的任何模擬器
如果你在集成中需要
特定網絡配置
你想要在UI測試中使用任何保存的用戶數據和設置
去配置它們
最後如果你有高級供應
比如你的管理員給你一個供應配置文件
然而你可以在Xcode上配置
你實際上現在可以在可配置集成用戶中配置它
來確保代碼簽署正常工作
我要請回Zoltan
來談談xcodebuild的一些新特性
謝謝你Eric
你們已看過Xcode的Xcode Server新特性
現在要向你展示xcodebuild的新特性
xcodebuild有測試活動
針對定製連續集成系統
你給它一個工作區一個方案和一個目標
一個xcodebuild就會盡職的構建你的源碼
它會在設備上安裝所需的構建產品
它會運行你的測試然後在命令行向你報告結果
今年我們爲這一行爲引入了2個選項
只測試選項
讓你可以有效的
限制將被運行的測試
你可以指定測試用例或測試組或測試束被運行
並排除其他測試
你還可以使用跳過測試選項
來指定測試用例被排除在測試中
而其他測試會被運行
今年的大新聞是
xcodebuild有兩個新行爲
我們可以有效的把測試分成2個
這些功能已經在Xcode IDE中
但我們要把它們帶到xcodebuild中
讓我們一個個來看
爲測試構建是測試活動中的構建部分
你已經給了它一個工作區一個方案和一個目標
它會構建你的源碼
可能會使一些符號可見
然後它會把構建好的產品輸出到導出數據
它還產生XCTestRun文件
它是一種清單規定你測試要運行的一切
我們晚點會回到這
不構建測試是第2部分
像之前一樣給它一個工作區一個方案和一個目標
xcodebuild在輸出數據裏找到已構建好的產品
它會把它們安裝到所需的設備上
然後像之前一樣運行你的測試並報告結果
但是酷的事是你不再需要提供工作區
你只需要提供XCTestRun文件
Xcode會從二進制文件運行你的測試
它會使用XCTestRun文件
它會找到和這個文件相關的二進制產品
它會運行測試並報告結果
i和之前一樣
但是不需要訪問你的源碼
這對分佈式測試環境很理想
你可以在爲構建優化的電腦上構建你的測試
然後把構建好的產品
轉移到爲測試優化的電腦上
然後你可以並行的收集測試報告
XCTestRun讓這一切成爲可能
它是測試的清單指定哪些測試要被運行
哪些要在哪個測試電腦上被跳過
它向測試提供環境變量和命令行參數
關於主頁面的格式你可以用這個命令來查看
我們今天覆蓋了很多
我們首先回顧了測試的4個特徵
然後我們看了Xcode的一些新概念
它們幫助你診斷測試中的問題
然後我們介紹了Xcode的新特性
Xcode Server和xcodebuild
我希望這些新特性的介紹
能幫助你開發運行良好的測試組
並最終幫助你開發優秀的應用
你可以在這個網址獲得更多本場演講的信息
謝謝